// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// TODO: " u s e   s t r i c t ";


// *** Environment setup code ***
var arguments_ = [];

var ENVIRONMENT_IS_NODE = typeof process === 'object';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  print = function(x) {
    process['stdout'].write(x + '\n');
  };
  printErr = function(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');

  read = function(filename) {
    var ret = nodeFS['readFileSync'](filename).toString();
    if (!ret && filename[0] != '/') {
      filename = __dirname.split('/').slice(0, -1).join('/') + '/src/' + filename;
      ret = nodeFS['readFileSync'](filename).toString();
    }
    return ret;
  };

  arguments_ = process['argv'].slice(2);

} else if (ENVIRONMENT_IS_SHELL) {
  // Polyfill over SpiderMonkey/V8 differences
  if (!this['read']) {
    read = function(f) { snarf(f) };
  }

  if (!this['arguments']) {
    arguments_ = scriptArgs;
  } else {
    arguments_ = arguments;
  }

} else if (ENVIRONMENT_IS_WEB) {
  // Warning: We do not override print here, so that you can define it before
  //          this code runs. However, if you do not define it and it is actually
  //          called, it will try to print to a printer, and/or give odd errors.

  printErr = function(x) {
    console.log(x);
  };

  read = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (this['arguments']) {
    arguments_ = arguments;
  }
} else if (ENVIRONMENT_IS_WORKER) {
  // We can do very little here...

  load = importScripts;

} else {
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}

if (typeof load == 'undefined' && typeof read != 'undefined') {
  load = function(f) {
    globalEval(read(f));
  };
}

if (typeof printErr === 'undefined') {
  printErr = function(){};
}

if (typeof print === 'undefined') {
  print = printErr;
}
// *** Environment setup code ***


try {
  this['Module'] = Module;
} catch(e) {
  this['Module'] = Module = {};
}
if (!Module.arguments) {
  Module.arguments = arguments_;
}

  
// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 1;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else {
      return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
    }
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (/^\[\d+\ x\ (.*)\]/.test(type)) return true; // [15 x ?] blocks. Like structs
  if (/<?{ [^}]* }>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type, quantumSize) {
    if (Runtime.QUANTUM_SIZE == 1) return 1;
    var size = {
      '%i1': 1,
      '%i8': 1,
      '%i16': 2,
      '%i32': 4,
      '%i64': 8,
      "%float": 4,
      "%double": 8
    }['%'+type]; // add '%' since float and double confuse Closure compiler as keys, and also spidermonkey as a compiler will remove 's from '_i8' etc
    if (!size && type[type.length-1] == '*') {
      size = Runtime.QUANTUM_SIZE; // A pointer
    }
    return size;
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    type.flatIndexes = type.fields.map(function(field) {
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = size;
      } else if (Runtime.isStructType(field)) {
        size = Types.types[field].flatSize;
        alignSize = Types.types[field].alignSize;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      alignSize = type.packed ? 1 : Math.min(alignSize, Runtime.QUANTUM_SIZE);
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (!struct) struct = (typeof Types === 'undefined' ? Runtime : Types).structMetadata[typeName.replace(/.*\./, '')];
      if (!struct) return null;
      assert(type.fields.length === struct.length, 'Number of named fields must match the type for ' + typeName + '. Perhaps due to inheritance, which is not supported yet?');
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  stackAlloc: function stackAlloc(size) { var ret = STACKTOP; STACKTOP += size; return ret; },
  staticAlloc: function staticAlloc(size) { var ret = LAST_STATICTOP = STATICTOP;STATICTOP; STATICTOP += size; if (STATICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function alignMemory(size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 1))*(quantum ? quantum : 1);; return ret; },
  QUANTUM_SIZE: 1,
  __dummy__: 0
}



var CorrectionsMonitor = {
  MAX_ALLOWED: 0, // XXX
  corrections: 0,
  sigs: {},

  note: function(type, succeed, sig) {
    if (!succeed) {
      this.corrections++;
      if (this.corrections >= this.MAX_ALLOWED) abort('\n\nToo many corrections!');
    }
  },

  print: function() {
    var items = [];
    for (var sig in this.sigs) {
      items.push({
        sig: sig,
        fails: this.sigs[sig][0],
        succeeds: this.sigs[sig][1],
        total: this.sigs[sig][0] + this.sigs[sig][1]
      });
    }
    items.sort(function(x, y) { return y.total - x.total; });
    for (var i = 0; i < items.length; i++) {
      var item = items[i];
      print(item.sig + ' : ' + item.total + ' hits, %' + (Math.ceil(100*item.fails/item.total)) + ' failures');
    }
  }
};





//========================================
// Runtime essentials
//========================================

var __globalConstructor__ = function globalConstructor() {
};

var __THREW__ = false; // Used in checking for thrown exceptions.

var __ATEXIT__ = [];

var ABORT = false;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;

function abort(text) {
  print(text + ':\n' + (new Error).stack);
  ABORT = true;
  throw "Assertion: " + text;
}

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type[type.length-1] === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': IHEAP[ptr]=value; break;
      case 'i8': IHEAP[ptr]=value; break;
      case 'i16': IHEAP[ptr]=value; break;
      case 'i32': IHEAP[ptr]=value; break;
      case 'i64': IHEAP[ptr]=value; break;
      case 'float': FHEAP[ptr]=value; break;
      case 'double': FHEAP[ptr]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.

function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type[type.length-1] === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return IHEAP[ptr];
      case 'i8': return IHEAP[ptr];
      case 'i16': return IHEAP[ptr];
      case 'i32': return IHEAP[ptr];
      case 'i64': return IHEAP[ptr];
      case 'float': return FHEAP[ptr];
      case 'double': return FHEAP[ptr];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

// Allocates memory for some data and initializes it properly.

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;

function allocate(slab, types, allocator) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, 1));

  var singleType = typeof types === 'string' ? types : null;

  var i = 0, type;
  while (i < size) {
    var curr = zeroinit ? 0 : slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }


    setValue(ret+i, curr, type);
    i += Runtime.getNativeTypeSize(type);
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr) {
  var ret = "";
  var i = 0;
  var t;
  var nullByte = String.fromCharCode(0);
  while (1) {
    t = String.fromCharCode(IHEAPU[ptr+i]);
    if (t == nullByte) { break; } else {}
    ret += t;
    i += 1;
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

function Array_stringify(array) {
  var ret = "";
  for (var i = 0; i < array.length; i++) {
    ret += String.fromCharCode(array[i]);
  }
  return ret;
}
Module['Array_stringify'] = Array_stringify;

// Memory management

var FUNCTION_TABLE; // XXX: In theory the indexes here can be equal to pointers to stacked or malloced memory. Such comparisons should
                    //      be false, but can turn out true. We should probably set the top bit to prevent such issues.

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return Math.ceil(x/PAGE_SIZE)*PAGE_SIZE;
}

var HEAP;
var IHEAP, IHEAPU;
var FHEAP;

var STACK_ROOT, STACKTOP, STACK_MAX;
var STATICTOP;
var LAST_STATICTOP;
function enlargeMemory() {
  // LAST_STATICTOP is the previous top, TOTAL_MEMORY is the current size of the actual array, and STATICTOP is the new top.
  while (TOTAL_MEMORY <= STATICTOP) { // Simple heuristic. Override enlargeMemory() if your program has something more optimal for it
    TOTAL_MEMORY = alignMemoryPage(TOTAL_MEMORY*1.25);
  }
  var oldIHEAP = IHEAP;
  HEAP = IHEAP = new Int32Array(TOTAL_MEMORY);
  IHEAP.set(oldIHEAP);
  IHEAPU = new Uint32Array(IHEAP.buffer);
  var oldFHEAP = FHEAP;
  FHEAP = new Float64Array(TOTAL_MEMORY);
  FHEAP.set(oldFHEAP);
}

var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 150000000;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
  assert(!!Int32Array && !!Float64Array && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
         'Cannot fallback to non-typed array case: Code is too specialized');

  HEAP = IHEAP = new Int32Array(TOTAL_MEMORY);
  IHEAPU = new Uint32Array(IHEAP.buffer);
  FHEAP = new Float64Array(TOTAL_MEMORY);

var base = intArrayFromString('(null)'); // So printing %s of NULL gives '(null)'
                                         // Also this ensures we leave 0 as an invalid address, 'NULL'
for (var i = 0; i < base.length; i++) {
  IHEAP[i]=base[i]
}

Module['HEAP'] = HEAP;
Module['IHEAP'] = IHEAP;
Module['FHEAP'] = FHEAP;

STACK_ROOT = STACKTOP = alignMemoryPage(10);
var TOTAL_STACK = 1024*1024; // XXX: Changing this value can lead to bad perf on v8!
STACK_MAX = STACK_ROOT + TOTAL_STACK;

STATICTOP = alignMemoryPage(STACK_MAX);

function __shutdownRuntime__() {
  while(__ATEXIT__.length > 0) {
    var atexit = __ATEXIT__.pop();
    var func = atexit.func;
    if (typeof func === 'number') {
      func = FUNCTION_TABLE[func];
    }
    func(atexit.arg === undefined ? null : atexit.arg);
  }

  // allow browser to GC, set heaps to null?

  // Print summary of correction activity
  CorrectionsMonitor.print();
}


// Copies a list of num items on the HEAP into a
// a normal JavaScript array of numbers
function Array_copy(ptr, num) {
  // TODO: In the SAFE_HEAP case, do some reading here, for debugging purposes - currently this is an 'unnoticed read'.
  return Array.prototype.slice.call(IHEAP.subarray(ptr, ptr+num)); // Make a normal array out of the typed 'view'
                                                                   // Consider making a typed array here, for speed?
  return HEAP.slice(ptr, ptr+num);
}
Module['Array_copy'] = Array_copy;

function String_len(ptr) {
  var i = 0;
  while (IHEAP[ptr+i]) i++; // Note: should be |!= 0|, technically. But this helps catch bugs with undefineds
  return i;
}
Module['String_len'] = String_len;

// Copies a C-style string, terminated by a zero, from the HEAP into
// a normal JavaScript array of numbers
function String_copy(ptr, addZero) {
  var len = String_len(ptr);
  if (addZero) len++;
  var ret = Array_copy(ptr, len);
  if (addZero) ret[len-1] = 0;
  return ret;
}
Module['String_copy'] = String_copy;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull) {
  var ret = [];
  var t;
  var i = 0;
  while (i < stringy.length) {
    var chr = stringy.charCodeAt(i);
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(chr);
    i = i + 1;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
  // TODO: clean up previous line
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// === Body ===




function __ZN6b2BodyD2Ev($this) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN11b2TransformC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2TransformC2Ev($this1);
  ;
  return;
  return;
}


function __ZN7b2SweepC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN7b2SweepC2Ev($this1);
  ;
  return;
  return;
}


function __ZN6b2Vec2C1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN6b2Vec2C2Ev($this1);
  ;
  return;
  return;
}


function __Z9b2IsValidf($x) {
  ;
  var __label__;

  var $retval;
  var $x_addr;
  var $infinity;
  $x_addr=$x;
  var $0=$x_addr;
  var $1=$x_addr;
  var $cmp=($0) != ($1);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$118: do { 
    if (__label__ == 1) {

      $retval=0;
      ;
    }
    else if (__label__ == 2) {

      $infinity=Infinity;
      var $2=$infinity;
      var $sub=(-($2));
      var $3=$x_addr;
      var $cmp1=($sub) < ($3);
      if ($cmp1) { __label__ = 3;; } else { var $6 = 0;__label__ = 4;; }
      $land_rhs$$land_end$121: do { 
        if (__label__ == 3) {

          var $4=$x_addr;
          var $5=$infinity;
          var $cmp2=($4) < ($5);
          var $6 = $cmp2;;
        }
      } while(0);

      var $6;
      $retval=$6;
      ;
    }
  } while(0);

  var $7=$retval;
  ;
  return $7;
  return null;
}


function __ZN16b2BlockAllocatorD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  var $i;
  $this_addr=$this;
  var $this1=$this_addr;
  $i=0;
  var $0=$i;
  var $m_chunkCount=$this1+1;
  var $1=IHEAP[$m_chunkCount];
  var $cmp1=($0) < ($1);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 3;; }
  $for_body_lr_ph$$for_end$17: do { 
    if (__label__ == 1) {

      var $m_chunks=$this1;
      ;
      $for_body$19: while(1) { 

        var $2=$i;
        var $3=IHEAP[$m_chunks];
        var $arrayidx=$3+($2<<1);
        var $blocks=$arrayidx+1;
        var $4=IHEAP[$blocks];
        var $5=$4;
        __Z6b2FreePv($5);
        var $6=$i;
        var $inc=($6)+1;
        $i=$inc;
        var $7=$i;
        var $8=IHEAP[$m_chunkCount];
        var $cmp=($7) < ($8);
        if (!($cmp)) { __label__ = 3;break $for_body_lr_ph$$for_end$17; }
      }
    }
  } while(0);

  var $m_chunks2=$this1;
  var $9=IHEAP[$m_chunks2];
  var $10=$9;
  __Z6b2FreePv($10);
  ;
  return;
  return;
}


function __ZN16b2BlockAllocator4FreeEPvi($this, $p, $size) {
  ;
  var __label__;

  var $this_addr;
  var $p_addr;
  var $size_addr;
  var $index;
  var $block;
  $this_addr=$this;
  $p_addr=$p;
  $size_addr=$size;
  var $this1=$this_addr;
  var $0=$size_addr;
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 8;; } else { __label__ = 1;; }
  $return$$if_end$50: do { 
    if (__label__ == 1) {

      var $1=$size_addr;
      var $cmp2=0 < ($1);
      if ($cmp2) { var $2 = $1;__label__ = 3;; } else { __label__ = 2;; }
      $cond_end$$cond_false$52: do { 
        if (__label__ == 2) {

          ___assert_func(__str, 164, ___PRETTY_FUNCTION____ZN16b2BlockAllocator4FreeEPvi, __str2);
          var $_pr=$size_addr;
          var $2 = $_pr;;
        }
      } while(0);

      var $2;
      var $cmp3=($2) > 640;
      if ($cmp3) { __label__ = 4;; } else { __label__ = 5;; }
      $if_then4$$if_end5$55: do { 
        if (__label__ == 4) {

          var $3=$p_addr;
          __Z6b2FreePv($3);
          ;
        }
        else if (__label__ == 5) {

          var $4=$size_addr;
          var $arrayidx=__ZN16b2BlockAllocator17s_blockSizeLookupE+$4;
          var $5=IHEAP[$arrayidx];
          var $conv=($5);
          $index=$conv;
          var $6=$index;
          var $cmp6=0 <= ($6);
          var $7=$index;
          var $cmp7=($7) < 14;
          var $or_cond=($cmp6) & ($cmp7);
          if ($or_cond) { __label__ = 7;; } else { __label__ = 6;; }
          $cond_end10$$cond_false9$58: do { 
            if (__label__ == 6) {

              ___assert_func(__str, 173, ___PRETTY_FUNCTION____ZN16b2BlockAllocator4FreeEPvi, __str3);
              ;
            }
          } while(0);

          var $8=$p_addr;
          var $9=$8;
          $block=$9;
          var $10=$index;
          var $m_freeLists=$this1+3;
          var $arrayidx11=$m_freeLists+$10;
          var $11=IHEAP[$arrayidx11];
          var $12=$block;
          var $next=$12;
          IHEAP[$next]=$11;
          var $13=$block;
          var $14=$index;
          var $m_freeLists12=$this1+3;
          var $arrayidx13=$m_freeLists12+$14;
          IHEAP[$arrayidx13]=$13;
          ;
        }
      } while(0);
    }
  } while(0);

  ;
  return;
  return;
}
__ZN16b2BlockAllocator4FreeEPvi["X"]=1;

function __ZN16b2BlockAllocator5ClearEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $i;
  $this_addr=$this;
  var $this1=$this_addr;
  $i=0;
  var $0=$i;
  var $m_chunkCount=$this1+1;
  var $1=IHEAP[$m_chunkCount];
  var $cmp1=($0) < ($1);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 3;; }
  $for_body_lr_ph$$for_end$63: do { 
    if (__label__ == 1) {

      var $m_chunks=$this1;
      ;
      $for_body$65: while(1) { 

        var $2=$i;
        var $3=IHEAP[$m_chunks];
        var $arrayidx=$3+($2<<1);
        var $blocks=$arrayidx+1;
        var $4=IHEAP[$blocks];
        var $5=$4;
        __Z6b2FreePv($5);
        var $6=$i;
        var $inc=($6)+1;
        $i=$inc;
        var $7=$i;
        var $8=IHEAP[$m_chunkCount];
        var $cmp=($7) < ($8);
        if (!($cmp)) { __label__ = 3;break $for_body_lr_ph$$for_end$63; }
      }
    }
  } while(0);

  var $m_chunkCount2=$this1+1;
  IHEAP[$m_chunkCount2]=0;
  var $m_chunks3=$this1;
  var $9=IHEAP[$m_chunks3];
  var $10=$9;
  var $m_chunkSpace=$this1+2;
  var $11=IHEAP[$m_chunkSpace];
  var $mul=(($11)<<3);
  for (var mspi = 0; mspi < 2*($mul/8); mspi++) {
  IHEAP[$10+mspi]=0; FHEAP[$10+mspi]=0
  };
  var $m_freeLists=$this1+3;
  var $arraydecay=$m_freeLists;
  var $12=$arraydecay;
  for (var mspi = 0; mspi < 14; mspi++) {
  IHEAP[$12+mspi]=0; FHEAP[$12+mspi]=0
  };
  ;
  return;
  return;
}


function __ZN6b2Vec27SetZeroEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $x=$this1;
  FHEAP[$x]=0;
  var $y=$this1+1;
  FHEAP[$y]=0;
  ;
  return;
  return;
}


function __ZN16b2BlockAllocatorC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  var $j;
  var $i;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_chunkSpace=$this1+2;
  IHEAP[$m_chunkSpace]=128;
  var $m_chunkCount=$this1+1;
  IHEAP[$m_chunkCount]=0;
  var $m_chunkSpace2=$this1+2;
  var $0=IHEAP[$m_chunkSpace2];
  var $mul=(($0)<<3);
  var $call=__Z7b2Alloci($mul);
  var $1=$call;
  var $m_chunks=$this1;
  IHEAP[$m_chunks]=$1;
  var $m_chunks3=$this1;
  var $2=IHEAP[$m_chunks3];
  var $3=$2;
  var $m_chunkSpace4=$this1+2;
  var $4=IHEAP[$m_chunkSpace4];
  var $mul5=(($4)<<3);
  for (var mspi = 0; mspi < 2*($mul5/8); mspi++) {
  IHEAP[$3+mspi]=0; FHEAP[$3+mspi]=0
  };
  var $m_freeLists=$this1+3;
  var $arraydecay=$m_freeLists;
  var $5=$arraydecay;
  for (var mspi = 0; mspi < 14; mspi++) {
  IHEAP[$5+mspi]=0; FHEAP[$5+mspi]=0
  };
  var $6=IHEAP[__ZN16b2BlockAllocator28s_blockSizeLookupInitializedE];
  var $tobool=((($6)) & 1);
  var $conv=($tobool);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 10;; }
  $if_then$$if_end15$2: do { 
    if (__label__ == 1) {

      $j=0;
      $i=1;
      var $7 = 0;;
      $for_body$4: while(1) { 

        var $7;
        var $cmp7=($7) < 14;
        if ($cmp7) { __label__ = 5;; } else { __label__ = 4;; }
        $cond_end$$cond_false$6: do { 
          if (__label__ == 4) {

            ___assert_func(__str, 73, ___PRETTY_FUNCTION____ZN16b2BlockAllocatorC2Ev, __str1);
            ;
          }
        } while(0);

        var $8=$i;
        var $9=$j;
        var $arrayidx=__ZN16b2BlockAllocator12s_blockSizesE+$9;
        var $10=IHEAP[$arrayidx];
        var $cmp8=($8) <= ($10);
        var $11=$j;
        if ($cmp8) { __label__ = 6;; } else { __label__ = 7;; }
        $if_then9$$if_else$9: do { 
          if (__label__ == 6) {

            var $conv10=((($11)) & 255);
            var $12=$i;
            var $arrayidx11=__ZN16b2BlockAllocator17s_blockSizeLookupE+$12;
            IHEAP[$arrayidx11]=$conv10;
            ;
          }
          else if (__label__ == 7) {

            var $inc=($11)+1;
            $j=$inc;
            var $13=$j;
            var $conv12=((($13)) & 255);
            var $14=$i;
            var $arrayidx13=__ZN16b2BlockAllocator17s_blockSizeLookupE+$14;
            IHEAP[$arrayidx13]=$conv12;
            ;
          }
        } while(0);

        var $15=$i;
        var $inc14=($15)+1;
        $i=$inc14;
        var $cmp6=($inc14) <= 640;
        if (!($cmp6)) { __label__ = 9;break $for_body$4; }

        var $_pr=$j;
        var $7 = $_pr;;
      }

      IHEAP[__ZN16b2BlockAllocator28s_blockSizeLookupInitializedE]=1;
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN16b2BlockAllocatorC2Ev["X"]=1;

function __ZN16b2BlockAllocator8AllocateEi($this, $size) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $size_addr;
  var $index;
  var $block;
  var $oldChunks;
  var $chunk;
  var $blockSize;
  var $blockCount;
  var $i;
  var $block41;
  var $next45;
  var $last;
  $this_addr=$this;
  $size_addr=$size;
  var $this1=$this_addr;
  var $0=$size_addr;
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$23: do { 
    if (__label__ == 1) {

      $retval=0;
      ;
    }
    else if (__label__ == 2) {

      var $1=$size_addr;
      var $cmp2=0 < ($1);
      if ($cmp2) { var $2 = $1;__label__ = 4;; } else { __label__ = 3;; }
      $cond_end$$cond_false$26: do { 
        if (__label__ == 3) {

          ___assert_func(__str, 104, ___PRETTY_FUNCTION____ZN16b2BlockAllocator8AllocateEi, __str2);
          var $_pr=$size_addr;
          var $2 = $_pr;;
        }
      } while(0);

      var $2;
      var $cmp3=($2) > 640;
      var $3=$size_addr;
      if ($cmp3) { __label__ = 5;; } else { __label__ = 6;; }
      $if_then4$$if_end5$29: do { 
        if (__label__ == 5) {

          var $call=__Z7b2Alloci($3);
          $retval=$call;
          ;
        }
        else if (__label__ == 6) {

          var $arrayidx=__ZN16b2BlockAllocator17s_blockSizeLookupE+$3;
          var $4=IHEAP[$arrayidx];
          var $conv=($4);
          $index=$conv;
          var $5=$index;
          var $cmp6=0 <= ($5);
          var $6=$index;
          var $cmp7=($6) < 14;
          var $or_cond=($cmp6) & ($cmp7);
          if ($or_cond) { __label__ = 8;; } else { __label__ = 7;; }
          $cond_end10$$cond_false9$32: do { 
            if (__label__ == 7) {

              ___assert_func(__str, 112, ___PRETTY_FUNCTION____ZN16b2BlockAllocator8AllocateEi, __str3);
              ;
            }
          } while(0);

          var $7=$index;
          var $m_freeLists=$this1+3;
          var $arrayidx11=$m_freeLists+$7;
          var $8=IHEAP[$arrayidx11];
          var $tobool=($8)!=0;
          if ($tobool) { __label__ = 9;; } else { __label__ = 10;; }
          $if_then12$$if_else$35: do { 
            if (__label__ == 9) {

              var $9=$index;
              var $m_freeLists13=$this1+3;
              var $arrayidx14=$m_freeLists13+$9;
              var $10=IHEAP[$arrayidx14];
              $block=$10;
              var $11=$block;
              var $next=$11;
              var $12=IHEAP[$next];
              var $13=$index;
              var $m_freeLists15=$this1+3;
              var $arrayidx16=$m_freeLists15+$13;
              IHEAP[$arrayidx16]=$12;
              var $14=$block;
              var $15=$14;
              $retval=$15;
              ;
            }
            else if (__label__ == 10) {

              var $m_chunkCount=$this1+1;
              var $16=IHEAP[$m_chunkCount];
              var $m_chunkSpace=$this1+2;
              var $17=IHEAP[$m_chunkSpace];
              var $cmp17=($16)==($17);
              if ($cmp17) { __label__ = 11;; } else { __label__ = 12;; }
              $if_then18$$if_end28$38: do { 
                if (__label__ == 11) {

                  var $m_chunks=$this1;
                  var $18=IHEAP[$m_chunks];
                  $oldChunks=$18;
                  var $m_chunkSpace19=$this1+2;
                  var $19=IHEAP[$m_chunkSpace19];
                  var $add=($19)+128;
                  IHEAP[$m_chunkSpace19]=$add;
                  var $m_chunkSpace20=$this1+2;
                  var $20=IHEAP[$m_chunkSpace20];
                  var $mul=(($20)<<3);
                  var $call21=__Z7b2Alloci($mul);
                  var $21=$call21;
                  var $m_chunks22=$this1;
                  IHEAP[$m_chunks22]=$21;
                  var $m_chunks23=$this1;
                  var $22=IHEAP[$m_chunks23];
                  var $23=$22;
                  var $24=$oldChunks;
                  var $25=$24;
                  var $m_chunkCount24=$this1+1;
                  var $26=IHEAP[$m_chunkCount24];
                  var $mul25=(($26)<<3);
                  for (var mcpi_s=$25,mcpi_e=$25+2*($mul25/8),mcpi_d=$23; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
                    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
                  };
                  var $m_chunks26=$this1;
                  var $27=IHEAP[$m_chunks26];
                  var $m_chunkCount27=$this1+1;
                  var $28=IHEAP[$m_chunkCount27];
                  var $add_ptr=$27+($28<<1);
                  var $29=$add_ptr;
                  for (var mspi = 0; mspi < 256; mspi++) {
                  IHEAP[$29+mspi]=0; FHEAP[$29+mspi]=0
                  };
                  var $30=$oldChunks;
                  var $31=$30;
                  __Z6b2FreePv($31);
                  ;
                }
              } while(0);

              var $m_chunks29=$this1;
              var $32=IHEAP[$m_chunks29];
              var $m_chunkCount30=$this1+1;
              var $33=IHEAP[$m_chunkCount30];
              var $add_ptr31=$32+($33<<1);
              $chunk=$add_ptr31;
              var $call32=__Z7b2Alloci(16384);
              var $34=$call32;
              var $35=$chunk;
              var $blocks=$35+1;
              IHEAP[$blocks]=$34;
              var $36=$index;
              var $arrayidx33=__ZN16b2BlockAllocator12s_blockSizesE+$36;
              var $37=IHEAP[$arrayidx33];
              $blockSize=$37;
              var $38=$blockSize;
              var $39=$chunk;
              var $blockSize34=$39;
              IHEAP[$blockSize34]=$38;
              var $40=$blockSize;
              var $div=((16384/($40))|0);
              $blockCount=$div;
              var $41=$blockCount;
              var $42=$blockSize;
              var $mul35=($42)*($41);
              var $cmp36=($mul35) <= 16384;
              if ($cmp36) { __label__ = 14;; } else { __label__ = 13;; }
              $cond_end39$$cond_false38$41: do { 
                if (__label__ == 13) {

                  ___assert_func(__str, 140, ___PRETTY_FUNCTION____ZN16b2BlockAllocator8AllocateEi, __str4);
                  ;
                }
              } while(0);

              $i=0;
              var $43=$i;
              var $44=$blockCount;
              var $sub2=($44)-1;
              var $cmp403=($43) < ($sub2);
              var $45=$chunk;
              var $blocks424=$45+1;
              var $46=IHEAP[$blocks424];
              var $47=$46;
              var $48=$blockSize;
              if ($cmp403) { var $50 = $47;var $49 = $48;__label__ = 15;; } else { var $_lcssa = $47;var $_lcssa1 = $48;__label__ = 16;; }
              $for_body$$for_end$44: do { 
                if (__label__ == 15) {
                  $for_body$45: while(1) { 

                    var $49;
                    var $50;
                    var $51=$i;
                    var $mul43=($51)*($49);
                    var $add_ptr44=$50+$mul43;
                    var $52=$add_ptr44;
                    $block41=$52;
                    var $53=$chunk;
                    var $blocks46=$53+1;
                    var $54=IHEAP[$blocks46];
                    var $55=$54;
                    var $56=$blockSize;
                    var $57=$i;
                    var $add47=($57)+1;
                    var $mul48=($add47)*($56);
                    var $add_ptr49=$55+$mul48;
                    var $58=$add_ptr49;
                    $next45=$58;
                    var $59=$next45;
                    var $60=$block41;
                    var $next50=$60;
                    IHEAP[$next50]=$59;
                    var $61=$i;
                    var $inc=($61)+1;
                    $i=$inc;
                    var $62=$i;
                    var $63=$blockCount;
                    var $sub=($63)-1;
                    var $cmp40=($62) < ($sub);
                    var $64=$chunk;
                    var $blocks42=$64+1;
                    var $65=IHEAP[$blocks42];
                    var $66=$65;
                    var $67=$blockSize;
                    if ($cmp40) { var $50 = $66;var $49 = $67;; } else { var $_lcssa = $66;var $_lcssa1 = $67;__label__ = 16;break $for_body$$for_end$44; }
                  }
                }
              } while(0);

              var $_lcssa1;
              var $_lcssa;
              var $68=$blockCount;
              var $sub52=($68)-1;
              var $mul53=($sub52)*($_lcssa1);
              var $add_ptr54=$_lcssa+$mul53;
              var $69=$add_ptr54;
              $last=$69;
              var $70=$last;
              var $next55=$70;
              IHEAP[$next55]=0;
              var $71=$chunk;
              var $blocks56=$71+1;
              var $72=IHEAP[$blocks56];
              var $next57=$72;
              var $73=IHEAP[$next57];
              var $74=$index;
              var $m_freeLists58=$this1+3;
              var $arrayidx59=$m_freeLists58+$74;
              IHEAP[$arrayidx59]=$73;
              var $m_chunkCount60=$this1+1;
              var $75=IHEAP[$m_chunkCount60];
              var $inc61=($75)+1;
              IHEAP[$m_chunkCount60]=$inc61;
              var $76=$chunk;
              var $blocks62=$76+1;
              var $77=IHEAP[$blocks62];
              var $78=$77;
              $retval=$78;
              ;
            }
          } while(0);
        }
      } while(0);
    }
  } while(0);

  var $79=$retval;
  ;
  return $79;
  return null;
}
__ZN16b2BlockAllocator8AllocateEi["X"]=1;

function __ZN6b2BodyC2EPK9b2BodyDefP7b2World($this, $bd, $world) {
  ;
  var __label__;

  var $this_addr;
  var $bd_addr;
  var $world_addr;
  $this_addr=$this;
  $bd_addr=$bd;
  $world_addr=$world;
  var $this1=$this_addr;
  var $m_xf=$this1+3;
  __ZN11b2TransformC1Ev($m_xf);
  var $m_sweep=$this1+7;
  __ZN7b2SweepC1Ev($m_sweep);
  var $m_linearVelocity=$this1+16;
  __ZN6b2Vec2C1Ev($m_linearVelocity);
  var $m_force=$this1+19;
  __ZN6b2Vec2C1Ev($m_force);
  var $0=$bd_addr;
  var $position=$0+1;
  var $call=__ZNK6b2Vec27IsValidEv($position);
  if ($call) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$69: do { 
    if (__label__ == 1) {

      ___assert_func(__str5, 27, ___PRETTY_FUNCTION____ZN6b2BodyC2EPK9b2BodyDefP7b2World, __str16);
      ;
    }
  } while(0);

  var $1=$bd_addr;
  var $linearVelocity=$1+4;
  var $call2=__ZNK6b2Vec27IsValidEv($linearVelocity);
  if ($call2) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end5$$cond_false4$72: do { 
    if (__label__ == 3) {

      ___assert_func(__str5, 28, ___PRETTY_FUNCTION____ZN6b2BodyC2EPK9b2BodyDefP7b2World, __str27);
      ;
    }
  } while(0);

  var $2=$bd_addr;
  var $angle=$2+3;
  var $3=FHEAP[$angle];
  var $call6=__Z9b2IsValidf($3);
  if ($call6) { __label__ = 6;; } else { __label__ = 5;; }
  $cond_end9$$cond_false8$75: do { 
    if (__label__ == 5) {

      ___assert_func(__str5, 29, ___PRETTY_FUNCTION____ZN6b2BodyC2EPK9b2BodyDefP7b2World, __str38);
      ;
    }
  } while(0);

  var $4=$bd_addr;
  var $angularVelocity=$4+6;
  var $5=FHEAP[$angularVelocity];
  var $call10=__Z9b2IsValidf($5);
  if ($call10) { __label__ = 8;; } else { __label__ = 7;; }
  $cond_end13$$cond_false12$78: do { 
    if (__label__ == 7) {

      ___assert_func(__str5, 30, ___PRETTY_FUNCTION____ZN6b2BodyC2EPK9b2BodyDefP7b2World, __str49);
      ;
    }
  } while(0);

  var $6=$bd_addr;
  var $angularDamping=$6+8;
  var $7=FHEAP[$angularDamping];
  var $call14=__Z9b2IsValidf($7);
  if ($call14) { __label__ = 9;; } else { __label__ = 10;; }
  $land_lhs_true$$cond_false17$81: do { 
    if (__label__ == 9) {

      var $8=$bd_addr;
      var $angularDamping15=$8+8;
      var $9=FHEAP[$angularDamping15];
      var $cmp=($9) >= 0;
      if ($cmp) { __label__ = 11;break $land_lhs_true$$cond_false17$81; } else { __label__ = 10;break $land_lhs_true$$cond_false17$81; }
    }
  } while(0);
  $cond_end18$$cond_false17$83: do { 
    if (__label__ == 10) {

      ___assert_func(__str5, 31, ___PRETTY_FUNCTION____ZN6b2BodyC2EPK9b2BodyDefP7b2World, __str510);
      ;
    }
  } while(0);

  var $10=$bd_addr;
  var $linearDamping=$10+7;
  var $11=FHEAP[$linearDamping];
  var $call19=__Z9b2IsValidf($11);
  if ($call19) { __label__ = 12;; } else { __label__ = 13;; }
  $land_lhs_true20$$cond_false24$86: do { 
    if (__label__ == 12) {

      var $12=$bd_addr;
      var $linearDamping21=$12+7;
      var $13=FHEAP[$linearDamping21];
      var $cmp22=($13) >= 0;
      if ($cmp22) { __label__ = 14;break $land_lhs_true20$$cond_false24$86; } else { __label__ = 13;break $land_lhs_true20$$cond_false24$86; }
    }
  } while(0);
  $cond_end25$$cond_false24$88: do { 
    if (__label__ == 13) {

      ___assert_func(__str5, 32, ___PRETTY_FUNCTION____ZN6b2BodyC2EPK9b2BodyDefP7b2World, __str6);
      ;
    }
  } while(0);

  var $m_flags=$this1+1;
  IHEAP[$m_flags]=0;
  var $14=$bd_addr;
  var $bullet=$14+12;
  var $15=IHEAP[$bullet];
  var $tobool=((($15)) & 1);
  if ($tobool) { __label__ = 15;; } else { __label__ = 16;; }
  $if_then$$if_end$91: do { 
    if (__label__ == 15) {

      var $m_flags26=$this1+1;
      var $16=IHEAP[$m_flags26];
      var $conv=($16);
      var $or=($conv) | 8;
      var $conv27=((($or)) & 65535);
      IHEAP[$m_flags26]=$conv27;
      ;
    }
  } while(0);

  var $17=$bd_addr;
  var $fixedRotation=$17+11;
  var $18=IHEAP[$fixedRotation];
  var $tobool28=((($18)) & 1);
  if ($tobool28) { __label__ = 17;; } else { __label__ = 18;; }
  $if_then29$$if_end34$94: do { 
    if (__label__ == 17) {

      var $m_flags30=$this1+1;
      var $19=IHEAP[$m_flags30];
      var $conv31=($19);
      var $or32=($conv31) | 16;
      var $conv33=((($or32)) & 65535);
      IHEAP[$m_flags30]=$conv33;
      ;
    }
  } while(0);

  var $20=$bd_addr;
  var $allowSleep=$20+9;
  var $21=IHEAP[$allowSleep];
  var $tobool35=((($21)) & 1);
  if ($tobool35) { __label__ = 19;; } else { __label__ = 20;; }
  $if_then36$$if_end41$97: do { 
    if (__label__ == 19) {

      var $m_flags37=$this1+1;
      var $22=IHEAP[$m_flags37];
      var $conv38=($22);
      var $or39=($conv38) | 4;
      var $conv40=((($or39)) & 65535);
      IHEAP[$m_flags37]=$conv40;
      ;
    }
  } while(0);

  var $23=$bd_addr;
  var $awake=$23+10;
  var $24=IHEAP[$awake];
  var $tobool42=((($24)) & 1);
  if ($tobool42) { __label__ = 21;; } else { __label__ = 22;; }
  $if_then43$$if_end48$100: do { 
    if (__label__ == 21) {

      var $m_flags44=$this1+1;
      var $25=IHEAP[$m_flags44];
      var $conv45=($25);
      var $or46=($conv45) | 2;
      var $conv47=((($or46)) & 65535);
      IHEAP[$m_flags44]=$conv47;
      ;
    }
  } while(0);

  var $26=$bd_addr;
  var $active=$26+13;
  var $27=IHEAP[$active];
  var $tobool49=((($27)) & 1);
  if ($tobool49) { __label__ = 23;; } else { __label__ = 24;; }
  $if_then50$$if_end55$103: do { 
    if (__label__ == 23) {

      var $m_flags51=$this1+1;
      var $28=IHEAP[$m_flags51];
      var $conv52=($28);
      var $or53=($conv52) | 32;
      var $conv54=((($or53)) & 65535);
      IHEAP[$m_flags51]=$conv54;
      ;
    }
  } while(0);

  var $29=$world_addr;
  var $m_world=$this1+22;
  IHEAP[$m_world]=$29;
  var $m_xf56=$this1+3;
  var $p=$m_xf56;
  var $30=$bd_addr;
  var $position57=$30+1;
  var $31=$p;
  var $32=$position57;
  IHEAP[$31]=IHEAP[$32]; FHEAP[$31]=FHEAP[$32]; ; IHEAP[$31+1]=IHEAP[$32+1]; FHEAP[$31+1]=FHEAP[$32+1]; ;
  var $m_xf58=$this1+3;
  var $q=$m_xf58+2;
  var $33=$bd_addr;
  var $angle59=$33+3;
  var $34=FHEAP[$angle59];
  __ZN5b2Rot3SetEf($q, $34);
  var $m_sweep60=$this1+7;
  var $localCenter=$m_sweep60;
  __ZN6b2Vec27SetZeroEv($localCenter);
  var $m_sweep61=$this1+7;
  var $c0=$m_sweep61+2;
  var $m_xf62=$this1+3;
  var $p63=$m_xf62;
  var $35=$c0;
  var $36=$p63;
  IHEAP[$35]=IHEAP[$36]; FHEAP[$35]=FHEAP[$36]; ; IHEAP[$35+1]=IHEAP[$36+1]; FHEAP[$35+1]=FHEAP[$36+1]; ;
  var $m_sweep64=$this1+7;
  var $c=$m_sweep64+4;
  var $m_xf65=$this1+3;
  var $p66=$m_xf65;
  var $37=$c;
  var $38=$p66;
  IHEAP[$37]=IHEAP[$38]; FHEAP[$37]=FHEAP[$38]; ; IHEAP[$37+1]=IHEAP[$38+1]; FHEAP[$37+1]=FHEAP[$38+1]; ;
  var $39=$bd_addr;
  var $angle67=$39+3;
  var $40=FHEAP[$angle67];
  var $m_sweep68=$this1+7;
  var $a0=$m_sweep68+6;
  FHEAP[$a0]=$40;
  var $41=$bd_addr;
  var $angle69=$41+3;
  var $42=FHEAP[$angle69];
  var $m_sweep70=$this1+7;
  var $a=$m_sweep70+7;
  FHEAP[$a]=$42;
  var $m_sweep71=$this1+7;
  var $alpha0=$m_sweep71+8;
  FHEAP[$alpha0]=0;
  var $m_jointList=$this1+27;
  IHEAP[$m_jointList]=0;
  var $m_contactList=$this1+28;
  IHEAP[$m_contactList]=0;
  var $m_prev=$this1+23;
  IHEAP[$m_prev]=0;
  var $m_next=$this1+24;
  IHEAP[$m_next]=0;
  var $m_linearVelocity72=$this1+16;
  var $43=$bd_addr;
  var $linearVelocity73=$43+4;
  var $44=$m_linearVelocity72;
  var $45=$linearVelocity73;
  IHEAP[$44]=IHEAP[$45]; FHEAP[$44]=FHEAP[$45]; ; IHEAP[$44+1]=IHEAP[$45+1]; FHEAP[$44+1]=FHEAP[$45+1]; ;
  var $46=$bd_addr;
  var $angularVelocity74=$46+6;
  var $47=FHEAP[$angularVelocity74];
  var $m_angularVelocity=$this1+18;
  FHEAP[$m_angularVelocity]=$47;
  var $48=$bd_addr;
  var $linearDamping75=$48+7;
  var $49=FHEAP[$linearDamping75];
  var $m_linearDamping=$this1+33;
  FHEAP[$m_linearDamping]=$49;
  var $50=$bd_addr;
  var $angularDamping76=$50+8;
  var $51=FHEAP[$angularDamping76];
  var $m_angularDamping=$this1+34;
  FHEAP[$m_angularDamping]=$51;
  var $52=$bd_addr;
  var $gravityScale=$52+15;
  var $53=FHEAP[$gravityScale];
  var $m_gravityScale=$this1+35;
  FHEAP[$m_gravityScale]=$53;
  var $m_force77=$this1+19;
  __ZN6b2Vec27SetZeroEv($m_force77);
  var $m_torque=$this1+21;
  FHEAP[$m_torque]=0;
  var $m_sleepTime=$this1+36;
  FHEAP[$m_sleepTime]=0;
  var $54=$bd_addr;
  var $type=$54;
  var $55=IHEAP[$type];
  var $m_type=$this1;
  IHEAP[$m_type]=$55;
  var $m_type78=$this1;
  var $56=IHEAP[$m_type78];
  var $cmp79=($56)==2;
  var $m_mass=$this1+29;
  if ($cmp79) { __label__ = 25;; } else { __label__ = 26;; }
  $if_then80$$if_else$106: do { 
    if (__label__ == 25) {

      FHEAP[$m_mass]=1;
      var $m_invMass=$this1+30;
      FHEAP[$m_invMass]=1;
      ;
    }
    else if (__label__ == 26) {

      FHEAP[$m_mass]=0;
      var $m_invMass82=$this1+30;
      FHEAP[$m_invMass82]=0;
      ;
    }
  } while(0);

  var $m_I=$this1+31;
  FHEAP[$m_I]=0;
  var $m_invI=$this1+32;
  FHEAP[$m_invI]=0;
  var $57=$bd_addr;
  var $userData=$57+14;
  var $58=IHEAP[$userData];
  var $m_userData=$this1+37;
  IHEAP[$m_userData]=$58;
  var $m_fixtureList=$this1+25;
  IHEAP[$m_fixtureList]=0;
  var $m_fixtureCount=$this1+26;
  IHEAP[$m_fixtureCount]=0;
  ;
  return;
  return;
}
__ZN6b2BodyC2EPK9b2BodyDefP7b2World["X"]=1;

function __ZNK6b2Vec27IsValidEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $x=$this1;
  var $0=FHEAP[$x];
  var $call=__Z9b2IsValidf($0);
  if ($call) { __label__ = 1;; } else { var $2 = 0;__label__ = 2;; }
  $land_rhs$$land_end$114: do { 
    if (__label__ == 1) {

      var $y=$this1+1;
      var $1=FHEAP[$y];
      var $call2=__Z9b2IsValidf($1);
      var $2 = $call2;;
    }
  } while(0);

  var $2;
  ;
  return $2;
  return null;
}


function __ZN5b2Rot3SetEf($this, $angle) {
  ;
  var __label__;

  var $this_addr;
  var $angle_addr;
  $this_addr=$this;
  $angle_addr=$angle;
  var $this1=$this_addr;
  var $0=$angle_addr;
  var $call=_sinf($0);
  var $s=$this1;
  FHEAP[$s]=$call;
  var $1=$angle_addr;
  var $call2=_cosf($1);
  var $c=$this1+1;
  FHEAP[$c]=$call2;
  ;
  return;
  return;
}


function __ZN12b2FixtureDefC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN12b2FixtureDefC2Ev($this1);
  ;
  return;
  return;
}


function __ZN10b2MassDataC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN10b2MassDataC2Ev($this1);
  ;
  return;
  return;
}


function __ZNK7b2World8IsLockedEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_flags=$this1+102517;
  var $0=IHEAP[$m_flags];
  var $and=($0) & 2;
  var $cmp=($and)==2;
  ;
  return $cmp;
  return null;
}


function __ZN6b2Body19SynchronizeFixturesEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $this_addr;
  var $xf1=__stackBase__;
  var $ref_tmp=__stackBase__+4;
  var $ref_tmp3=__stackBase__+6;
  var $broadPhase;
  var $f;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2TransformC1Ev($xf1);
  var $q=$xf1+2;
  var $m_sweep=$this1+7;
  var $a0=$m_sweep+6;
  var $0=FHEAP[$a0];
  __ZN5b2Rot3SetEf($q, $0);
  var $p=$xf1;
  var $m_sweep2=$this1+7;
  var $c0=$m_sweep2+2;
  var $q4=$xf1+2;
  var $m_sweep5=$this1+7;
  var $localCenter=$m_sweep5;
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp3, $q4, $localCenter);
  __ZmiRK6b2Vec2S1_($ref_tmp, $c0, $ref_tmp3);
  var $1=$p;
  var $2=$ref_tmp;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ;
  var $m_world=$this1+22;
  var $3=IHEAP[$m_world];
  var $m_contactManager=$3+102518;
  var $m_broadPhase=$m_contactManager;
  $broadPhase=$m_broadPhase;
  var $m_fixtureList=$this1+25;
  var $4=IHEAP[$m_fixtureList];
  $f=$4;
  var $tobool1=($4)!=0;
  if ($tobool1) { __label__ = 1;; } else { __label__ = 3;; }
  $for_body_lr_ph$$for_end$47: do { 
    if (__label__ == 1) {

      var $m_xf=$this1+3;
      ;
      $for_body$49: while(1) { 

        var $5=$f;
        var $6=$broadPhase;
        __ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_($5, $6, $xf1, $m_xf);
        var $7=$f;
        var $m_next=$7+1;
        var $8=IHEAP[$m_next];
        $f=$8;
        var $tobool=($8)!=0;
        if (!($tobool)) { __label__ = 3;break $for_body_lr_ph$$for_end$47; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN6b2Body8SetAwakeEb($this, $flag) {
  ;
  var __label__;

  var $this_addr;
  var $flag_addr;
  $this_addr=$this;
  var $frombool=($flag);
  $flag_addr=$frombool;
  var $this1=$this_addr;
  var $0=$flag_addr;
  var $tobool=((($0)) & 1);
  var $m_flags=$this1+1;
  var $1=IHEAP[$m_flags];
  var $conv=($1);
  if ($tobool) { __label__ = 1;; } else { __label__ = 3;; }
  $if_then$$if_else$53: do { 
    if (__label__ == 1) {

      var $and=($conv) & 2;
      var $cmp=($and)==0;
      if (!($cmp)) { __label__ = 4;break $if_then$$if_else$53; }

      var $m_flags3=$this1+1;
      var $2=IHEAP[$m_flags3];
      var $conv4=($2);
      var $or=($conv4) | 2;
      var $conv5=((($or)) & 65535);
      IHEAP[$m_flags3]=$conv5;
      var $m_sleepTime=$this1+36;
      FHEAP[$m_sleepTime]=0;
      ;
    }
    else if (__label__ == 3) {

      var $and8=($conv) & -3;
      var $conv9=((($and8)) & 65535);
      IHEAP[$m_flags]=$conv9;
      var $m_sleepTime10=$this1+36;
      FHEAP[$m_sleepTime10]=0;
      var $m_linearVelocity=$this1+16;
      __ZN6b2Vec27SetZeroEv($m_linearVelocity);
      var $m_angularVelocity=$this1+18;
      FHEAP[$m_angularVelocity]=0;
      var $m_force=$this1+19;
      __ZN6b2Vec27SetZeroEv($m_force);
      var $m_torque=$this1+21;
      FHEAP[$m_torque]=0;
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN9b2Contact11GetFixtureAEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_fixtureA=$this1+12;
  var $0=IHEAP[$m_fixtureA];
  ;
  return $0;
  return null;
}


function __ZN9b2Contact11GetFixtureBEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_fixtureB=$this1+13;
  var $0=IHEAP[$m_fixtureB];
  ;
  return $0;
  return null;
}


function __ZNK9b2Fixture11GetMassDataEP10b2MassData($this, $massData) {
  ;
  var __label__;

  var $this_addr;
  var $massData_addr;
  $this_addr=$this;
  $massData_addr=$massData;
  var $this1=$this_addr;
  var $m_shape=$this1+3;
  var $0=IHEAP[$m_shape];
  var $1=$0;
  var $vtable=IHEAP[$1];
  var $vfn=$vtable+7;
  var $2=IHEAP[$vfn];
  var $3=$massData_addr;
  var $m_density=$this1;
  var $4=FHEAP[$m_density];
  FUNCTION_TABLE[$2]($0, $3, $4);
  ;
  return;
  return;
}


function __ZN6b2Vec2pLERKS_($this, $v) {
  ;
  var __label__;

  var $this_addr;
  var $v_addr;
  $this_addr=$this;
  $v_addr=$v;
  var $this1=$this_addr;
  var $0=$v_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $x2=$this1;
  var $2=FHEAP[$x2];
  var $add=($2)+($1);
  FHEAP[$x2]=$add;
  var $3=$v_addr;
  var $y=$3+1;
  var $4=FHEAP[$y];
  var $y3=$this1+1;
  var $5=FHEAP[$y3];
  var $add4=($5)+($4);
  FHEAP[$y3]=$add4;
  ;
  return;
  return;
}


function __ZmlfRK6b2Vec2($agg_result, $s, $a) {
  ;
  var __label__;

  var $s_addr;
  var $a_addr;
  $s_addr=$s;
  $a_addr=$a;
  var $0=$s_addr;
  var $1=$a_addr;
  var $x=$1;
  var $2=FHEAP[$x];
  var $mul=($0)*($2);
  var $3=$s_addr;
  var $4=$a_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $mul1=($3)*($5);
  __ZN6b2Vec2C1Eff($agg_result, $mul, $mul1);
  ;
  return;
  return;
}


function __ZN6b2Vec2mLEf($this, $a) {
  ;
  var __label__;

  var $this_addr;
  var $a_addr;
  $this_addr=$this;
  $a_addr=$a;
  var $this1=$this_addr;
  var $0=$a_addr;
  var $x=$this1;
  var $1=FHEAP[$x];
  var $mul=($1)*($0);
  FHEAP[$x]=$mul;
  var $2=$a_addr;
  var $y=$this1+1;
  var $3=FHEAP[$y];
  var $mul2=($3)*($2);
  FHEAP[$y]=$mul2;
  ;
  return;
  return;
}


function __Z5b2DotRK6b2Vec2S1_($a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$b_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $mul=($1)*($3);
  var $4=$a_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $6=$b_addr;
  var $y2=$6+1;
  var $7=FHEAP[$y2];
  var $mul3=($5)*($7);
  var $add=($mul)+($mul3);
  ;
  return $add;
  return null;
}


function __Z5b2MulRK11b2TransformRK6b2Vec2($agg_result, $T, $v) {
  ;
  var __label__;

  var $T_addr;
  var $v_addr;
  var $x;
  var $y5;
  $T_addr=$T;
  $v_addr=$v;
  var $0=$T_addr;
  var $q=$0+2;
  var $c=$q+1;
  var $1=FHEAP[$c];
  var $2=$v_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $mul=($1)*($3);
  var $4=$T_addr;
  var $q2=$4+2;
  var $s=$q2;
  var $5=FHEAP[$s];
  var $6=$v_addr;
  var $y=$6+1;
  var $7=FHEAP[$y];
  var $mul3=($5)*($7);
  var $sub=($mul)-($mul3);
  var $8=$T_addr;
  var $p=$8;
  var $x4=$p;
  var $9=FHEAP[$x4];
  var $add=($sub)+($9);
  $x=$add;
  var $10=$T_addr;
  var $q6=$10+2;
  var $s7=$q6;
  var $11=FHEAP[$s7];
  var $12=$v_addr;
  var $x8=$12;
  var $13=FHEAP[$x8];
  var $mul9=($11)*($13);
  var $14=$T_addr;
  var $q10=$14+2;
  var $c11=$q10+1;
  var $15=FHEAP[$c11];
  var $16=$v_addr;
  var $y12=$16+1;
  var $17=FHEAP[$y12];
  var $mul13=($15)*($17);
  var $add14=($mul9)+($mul13);
  var $18=$T_addr;
  var $p15=$18;
  var $y16=$p15+1;
  var $19=FHEAP[$y16];
  var $add17=($add14)+($19);
  $y5=$add17;
  var $20=$x;
  var $21=$y5;
  __ZN6b2Vec2C1Eff($agg_result, $20, $21);
  ;
  return;
  return;
}
__Z5b2MulRK11b2TransformRK6b2Vec2["X"]=1;

function __Z7b2CrossfRK6b2Vec2($agg_result, $s, $a) {
  ;
  var __label__;

  var $s_addr;
  var $a_addr;
  $s_addr=$s;
  $a_addr=$a;
  var $0=$s_addr;
  var $sub=(-($0));
  var $1=$a_addr;
  var $y=$1+1;
  var $2=FHEAP[$y];
  var $mul=($sub)*($2);
  var $3=$s_addr;
  var $4=$a_addr;
  var $x=$4;
  var $5=FHEAP[$x];
  var $mul1=($3)*($5);
  __ZN6b2Vec2C1Eff($agg_result, $mul, $mul1);
  ;
  return;
  return;
}


function __ZN6b2Body7SetTypeE10b2BodyType($this, $type) {
  ;
  var __label__;

  var $this_addr;
  var $type_addr;
  var $f;
  $this_addr=$this;
  $type_addr=$type;
  var $this1=$this_addr;
  var $m_world=$this1+22;
  var $0=IHEAP[$m_world];
  var $call=__ZNK7b2World8IsLockedEv($0);
  var $conv=($call);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$2: do { 
    if (__label__ == 1) {

      ___assert_func(__str5, 115, ___PRETTY_FUNCTION____ZN6b2Body7SetTypeE10b2BodyType, __str7);
      ;
    }
  } while(0);

  var $m_world2=$this1+22;
  var $1=IHEAP[$m_world2];
  var $call3=__ZNK7b2World8IsLockedEv($1);
  var $conv4=($call3);
  var $cmp5=($conv4)==1;
  if ($cmp5) { __label__ = 8;; } else { __label__ = 3;; }
  $for_end$$if_end$5: do { 
    if (__label__ == 3) {

      var $m_type=$this1;
      var $2=IHEAP[$m_type];
      var $3=$type_addr;
      var $cmp6=($2)==($3);
      if ($cmp6) { __label__ = 8;break $for_end$$if_end$5; }

      var $4=$type_addr;
      var $m_type9=$this1;
      IHEAP[$m_type9]=$4;
      __ZN6b2Body13ResetMassDataEv($this1);
      var $m_type10=$this1;
      var $5=IHEAP[$m_type10];
      var $cmp11=($5)==0;
      if ($cmp11) { __label__ = 5;; } else { __label__ = 6;; }
      $if_then12$$if_end16$8: do { 
        if (__label__ == 5) {

          var $m_linearVelocity=$this1+16;
          __ZN6b2Vec27SetZeroEv($m_linearVelocity);
          var $m_angularVelocity=$this1+18;
          FHEAP[$m_angularVelocity]=0;
          var $m_sweep=$this1+7;
          var $a=$m_sweep+7;
          var $6=FHEAP[$a];
          var $m_sweep13=$this1+7;
          var $a0=$m_sweep13+6;
          FHEAP[$a0]=$6;
          var $m_sweep14=$this1+7;
          var $c0=$m_sweep14+2;
          var $m_sweep15=$this1+7;
          var $c=$m_sweep15+4;
          var $7=$c0;
          var $8=$c;
          IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
          __ZN6b2Body19SynchronizeFixturesEv($this1);
          ;
        }
      } while(0);

      __ZN6b2Body8SetAwakeEb($this1, 1);
      var $m_force=$this1+19;
      __ZN6b2Vec27SetZeroEv($m_force);
      var $m_torque=$this1+21;
      FHEAP[$m_torque]=0;
      var $m_fixtureList=$this1+25;
      var $9=IHEAP[$m_fixtureList];
      $f=$9;
      var $tobool1=($9)!=0;
      if (!($tobool1)) { __label__ = 8;break $for_end$$if_end$5; }
      $for_body$11: while(1) { 

        var $10=$f;
        __ZN9b2Fixture8RefilterEv($10);
        var $11=$f;
        var $m_next=$11+1;
        var $12=IHEAP[$m_next];
        $f=$12;
        var $tobool=($12)!=0;
        if (!($tobool)) { __label__ = 8;break $for_end$$if_end$5; }
      }
    }
  } while(0);

  ;
  return;
  return;
}
__ZN6b2Body7SetTypeE10b2BodyType["X"]=1;

function __ZN6b2Body13ResetMassDataEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 16;
  var __label__;

  var $this_addr;
  var $localCenter12=__stackBase__;
  var $f;
  var $massData=__stackBase__+2;
  var $ref_tmp=__stackBase__+6;
  var $oldCenter=__stackBase__+8;
  var $ref_tmp55=__stackBase__+10;
  var $ref_tmp59=__stackBase__+12;
  var $ref_tmp60=__stackBase__+14;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_mass=$this1+29;
  FHEAP[$m_mass]=0;
  var $m_invMass=$this1+30;
  FHEAP[$m_invMass]=0;
  var $m_I=$this1+31;
  FHEAP[$m_I]=0;
  var $m_invI=$this1+32;
  FHEAP[$m_invI]=0;
  var $m_sweep=$this1+7;
  var $localCenter=$m_sweep;
  __ZN6b2Vec27SetZeroEv($localCenter);
  var $m_type=$this1;
  var $0=IHEAP[$m_type];
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $if_then$$lor_lhs_false$16: do { 
    if (__label__ == 1) {

      var $m_type2=$this1;
      var $1=IHEAP[$m_type2];
      var $cmp3=($1)==1;
      if ($cmp3) { __label__ = 2;break $if_then$$lor_lhs_false$16; }

      var $m_type10=$this1;
      var $7=IHEAP[$m_type10];
      var $cmp11=($7)==2;
      if ($cmp11) { __label__ = 5;; } else { __label__ = 4;; }
      $cond_end$$cond_false$19: do { 
        if (__label__ == 4) {

          ___assert_func(__str5, 284, ___PRETTY_FUNCTION____ZN6b2Body13ResetMassDataEv, __str11);
          ;
        }
      } while(0);

      var $8=$localCenter12;
      IHEAP[$8]=IHEAP[(_b2Vec2_zero)]; FHEAP[$8]=FHEAP[(_b2Vec2_zero)]; ; IHEAP[$8+1]=IHEAP[(_b2Vec2_zero)+1]; FHEAP[$8+1]=FHEAP[(_b2Vec2_zero)+1]; ;
      var $m_fixtureList=$this1+25;
      var $9=IHEAP[$m_fixtureList];
      $f=$9;
      var $tobool1=($9)!=0;
      if ($tobool1) { __label__ = 6;; } else { __label__ = 10;; }
      $for_body_lr_ph$$for_end$22: do { 
        if (__label__ == 6) {

          var $mass=$massData;
          var $m_mass16=$this1+29;
          var $mass17=$massData;
          var $center=$massData+1;
          var $I=$massData+3;
          var $m_I18=$this1+31;
          ;
          $for_body$24: while(1) { 

            var $10=$f;
            var $m_density=$10;
            var $11=FHEAP[$m_density];
            var $cmp13=($11) == 0;
            if ($cmp13) { __label__ = 9;; } else { __label__ = 8;; }
            $for_inc$$if_end15$26: do { 
              if (__label__ == 8) {

                __ZN10b2MassDataC1Ev($massData);
                var $12=$f;
                __ZNK9b2Fixture11GetMassDataEP10b2MassData($12, $massData);
                var $13=FHEAP[$mass];
                var $14=FHEAP[$m_mass16];
                var $add=($14)+($13);
                FHEAP[$m_mass16]=$add;
                var $15=FHEAP[$mass17];
                __ZmlfRK6b2Vec2($ref_tmp, $15, $center);
                __ZN6b2Vec2pLERKS_($localCenter12, $ref_tmp);
                var $16=FHEAP[$I];
                var $17=FHEAP[$m_I18];
                var $add19=($17)+($16);
                FHEAP[$m_I18]=$add19;
                ;
              }
            } while(0);

            var $18=$f;
            var $m_next=$18+1;
            var $19=IHEAP[$m_next];
            $f=$19;
            var $tobool=($19)!=0;
            if (!($tobool)) { __label__ = 10;break $for_body_lr_ph$$for_end$22; }
          }
        }
      } while(0);

      var $m_mass20=$this1+29;
      var $20=FHEAP[$m_mass20];
      var $cmp21=($20) > 0;
      var $m_mass23=$this1+29;
      if ($cmp21) { __label__ = 11;; } else { __label__ = 12;; }
      $if_then22$$if_else$30: do { 
        if (__label__ == 11) {

          var $21=FHEAP[$m_mass23];
          var $div=1/($21);
          var $m_invMass24=$this1+30;
          FHEAP[$m_invMass24]=$div;
          var $m_invMass25=$this1+30;
          var $22=FHEAP[$m_invMass25];
          __ZN6b2Vec2mLEf($localCenter12, $22);
          ;
        }
        else if (__label__ == 12) {

          FHEAP[$m_mass23]=1;
          var $m_invMass27=$this1+30;
          FHEAP[$m_invMass27]=1;
          ;
        }
      } while(0);

      var $m_I29=$this1+31;
      var $23=FHEAP[$m_I29];
      var $cmp30=($23) > 0;
      if ($cmp30) { __label__ = 14;; } else { __label__ = 18;; }
      $land_lhs_true$$if_else43$34: do { 
        if (__label__ == 14) {

          var $m_flags=$this1+1;
          var $24=IHEAP[$m_flags];
          var $conv=($24);
          var $and=($conv) & 16;
          var $cmp31=($and)==0;
          if (!($cmp31)) { __label__ = 18;break $land_lhs_true$$if_else43$34; }

          var $m_mass33=$this1+29;
          var $25=FHEAP[$m_mass33];
          var $call=__Z5b2DotRK6b2Vec2S1_($localCenter12, $localCenter12);
          var $mul=($25)*($call);
          var $m_I34=$this1+31;
          var $26=FHEAP[$m_I34];
          var $sub=($26)-($mul);
          FHEAP[$m_I34]=$sub;
          var $m_I35=$this1+31;
          var $27=FHEAP[$m_I35];
          var $cmp36=($27) > 0;
          if ($cmp36) { __label__ = 17;; } else { __label__ = 16;; }
          $cond_end39$$cond_false38$37: do { 
            if (__label__ == 16) {

              ___assert_func(__str5, 319, ___PRETTY_FUNCTION____ZN6b2Body13ResetMassDataEv, __str12);
              ;
            }
          } while(0);

          var $m_I40=$this1+31;
          var $28=FHEAP[$m_I40];
          var $div41=1/($28);
          var $m_invI42=$this1+32;
          FHEAP[$m_invI42]=$div41;
          __label__ = 19;break $land_lhs_true$$if_else43$34;
        }
      } while(0);
      $if_end46$$if_else43$40: do { 
        if (__label__ == 18) {

          var $m_I44=$this1+31;
          FHEAP[$m_I44]=0;
          var $m_invI45=$this1+32;
          FHEAP[$m_invI45]=0;
          ;
        }
      } while(0);

      var $m_sweep47=$this1+7;
      var $c48=$m_sweep47+4;
      var $29=$oldCenter;
      var $30=$c48;
      IHEAP[$29]=IHEAP[$30]; FHEAP[$29]=FHEAP[$30]; ; IHEAP[$29+1]=IHEAP[$30+1]; FHEAP[$29+1]=FHEAP[$30+1]; ;
      var $m_sweep49=$this1+7;
      var $localCenter50=$m_sweep49;
      var $31=$localCenter50;
      var $32=$localCenter12;
      IHEAP[$31]=IHEAP[$32]; FHEAP[$31]=FHEAP[$32]; ; IHEAP[$31+1]=IHEAP[$32+1]; FHEAP[$31+1]=FHEAP[$32+1]; ;
      var $m_sweep51=$this1+7;
      var $c052=$m_sweep51+2;
      var $m_sweep53=$this1+7;
      var $c54=$m_sweep53+4;
      var $m_xf56=$this1+3;
      var $m_sweep57=$this1+7;
      var $localCenter58=$m_sweep57;
      __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp55, $m_xf56, $localCenter58);
      var $33=$c54;
      var $34=$ref_tmp55;
      IHEAP[$33]=IHEAP[$34]; FHEAP[$33]=FHEAP[$34]; ; IHEAP[$33+1]=IHEAP[$34+1]; FHEAP[$33+1]=FHEAP[$34+1]; ;
      var $35=$c052;
      _llvm_memmove_p0i8_p0i8_i32($35, $34, 2, 4, 0);
      var $m_linearVelocity=$this1+16;
      var $m_angularVelocity=$this1+18;
      var $36=FHEAP[$m_angularVelocity];
      var $m_sweep61=$this1+7;
      var $c62=$m_sweep61+4;
      __ZmiRK6b2Vec2S1_($ref_tmp60, $c62, $oldCenter);
      __Z7b2CrossfRK6b2Vec2($ref_tmp59, $36, $ref_tmp60);
      __ZN6b2Vec2pLERKS_($m_linearVelocity, $ref_tmp59);
      __label__ = 20;break $if_then$$lor_lhs_false$16;
    }
  } while(0);
  $if_then$$return$43: do { 
    if (__label__ == 2) {

      var $m_sweep4=$this1+7;
      var $c0=$m_sweep4+2;
      var $m_xf=$this1+3;
      var $p=$m_xf;
      var $2=$c0;
      var $3=$p;
      IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
      var $m_sweep5=$this1+7;
      var $c=$m_sweep5+4;
      var $m_xf6=$this1+3;
      var $p7=$m_xf6;
      var $4=$c;
      var $5=$p7;
      IHEAP[$4]=IHEAP[$5]; FHEAP[$4]=FHEAP[$5]; ; IHEAP[$4+1]=IHEAP[$5+1]; FHEAP[$4+1]=FHEAP[$5+1]; ;
      var $m_sweep8=$this1+7;
      var $a=$m_sweep8+7;
      var $6=FHEAP[$a];
      var $m_sweep9=$this1+7;
      var $a0=$m_sweep9+6;
      FHEAP[$a0]=$6;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN6b2Body13ResetMassDataEv["X"]=1;

function __ZN6b2Body13CreateFixtureEPK12b2FixtureDef($this, $def) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $def_addr;
  var $allocator;
  var $memory;
  var $fixture;
  var $broadPhase;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $m_world=$this1+22;
  var $0=IHEAP[$m_world];
  var $call=__ZNK7b2World8IsLockedEv($0);
  var $conv=($call);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$59: do { 
    if (__label__ == 1) {

      ___assert_func(__str5, 153, ___PRETTY_FUNCTION____ZN6b2Body13CreateFixtureEPK12b2FixtureDef, __str7);
      ;
    }
  } while(0);

  var $m_world2=$this1+22;
  var $1=IHEAP[$m_world2];
  var $call3=__ZNK7b2World8IsLockedEv($1);
  var $conv4=($call3);
  var $cmp5=($conv4)==1;
  if ($cmp5) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then$$if_end$62: do { 
    if (__label__ == 3) {

      $retval=0;
      ;
    }
    else if (__label__ == 4) {

      var $m_world6=$this1+22;
      var $2=IHEAP[$m_world6];
      var $m_blockAllocator=$2;
      $allocator=$m_blockAllocator;
      var $3=$allocator;
      var $call7=__ZN16b2BlockAllocator8AllocateEi($3, 44);
      $memory=$call7;
      var $4=$memory;
      var $new_isnull=($4)==0;
      if ($new_isnull) { var $6 = 0;__label__ = 6;; } else { __label__ = 5;; }
      $new_cont$$new_notnull$65: do { 
        if (__label__ == 5) {

          var $5=$4;
          __ZN9b2FixtureC2Ev($5);
          var $6 = $5;;
        }
      } while(0);

      var $6;
      $fixture=$6;
      var $7=$fixture;
      var $8=$allocator;
      var $9=$def_addr;
      __ZN9b2Fixture6CreateEP16b2BlockAllocatorP6b2BodyPK12b2FixtureDef($7, $8, $this1, $9);
      var $m_flags=$this1+1;
      var $10=IHEAP[$m_flags];
      var $conv8=($10);
      var $and=($conv8) & 32;
      var $tobool=($and)!=0;
      if ($tobool) { __label__ = 7;; } else { __label__ = 8;; }
      $if_then9$$if_end11$68: do { 
        if (__label__ == 7) {

          var $m_world10=$this1+22;
          var $11=IHEAP[$m_world10];
          var $m_contactManager=$11+102518;
          var $m_broadPhase=$m_contactManager;
          $broadPhase=$m_broadPhase;
          var $12=$fixture;
          var $13=$broadPhase;
          var $m_xf=$this1+3;
          __ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform($12, $13, $m_xf);
          ;
        }
      } while(0);

      var $m_fixtureList=$this1+25;
      var $14=IHEAP[$m_fixtureList];
      var $15=$fixture;
      var $m_next=$15+1;
      IHEAP[$m_next]=$14;
      var $16=$fixture;
      var $m_fixtureList12=$this1+25;
      IHEAP[$m_fixtureList12]=$16;
      var $m_fixtureCount=$this1+26;
      var $17=IHEAP[$m_fixtureCount];
      var $inc=($17)+1;
      IHEAP[$m_fixtureCount]=$inc;
      var $18=$fixture;
      var $m_body=$18+2;
      IHEAP[$m_body]=$this1;
      var $19=$fixture;
      var $m_density=$19;
      var $20=FHEAP[$m_density];
      var $cmp13=($20) > 0;
      if ($cmp13) { __label__ = 9;; } else { __label__ = 10;; }
      $if_then14$$if_end15$71: do { 
        if (__label__ == 9) {

          __ZN6b2Body13ResetMassDataEv($this1);
          ;
        }
      } while(0);

      var $m_world16=$this1+22;
      var $21=IHEAP[$m_world16];
      var $m_flags17=$21+102517;
      var $22=IHEAP[$m_flags17];
      var $or=($22) | 1;
      IHEAP[$m_flags17]=$or;
      var $23=$fixture;
      $retval=$23;
      ;
    }
  } while(0);

  var $24=$retval;
  ;
  return $24;
  return null;
}
__ZN6b2Body13CreateFixtureEPK12b2FixtureDef["X"]=1;

function __ZN6b2Body13CreateFixtureEPK7b2Shapef($this, $shape, $density) {
  var __stackBase__  = STACKTOP; STACKTOP += 9;
  var __label__;

  var $this_addr;
  var $shape_addr;
  var $density_addr;
  var $def=__stackBase__;
  $this_addr=$this;
  $shape_addr=$shape;
  $density_addr=$density;
  var $this1=$this_addr;
  __ZN12b2FixtureDefC1Ev($def);
  var $0=$shape_addr;
  var $shape2=$def;
  IHEAP[$shape2]=$0;
  var $1=$density_addr;
  var $density3=$def+4;
  FHEAP[$density3]=$1;
  var $call=__ZN6b2Body13CreateFixtureEPK12b2FixtureDef($this1, $def);
  STACKTOP = __stackBase__;
  return $call;
  return null;
}


function __ZN6b2Body14DestroyFixtureEP9b2Fixture($this, $fixture) {
  ;
  var __label__;

  var $this_addr;
  var $fixture_addr;
  var $node;
  var $found;
  var $edge;
  var $c;
  var $fixtureA;
  var $fixtureB;
  var $allocator;
  var $broadPhase;
  $this_addr=$this;
  $fixture_addr=$fixture;
  var $this1=$this_addr;
  var $m_world=$this1+22;
  var $0=IHEAP[$m_world];
  var $call=__ZNK7b2World8IsLockedEv($0);
  var $conv=($call);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$78: do { 
    if (__label__ == 1) {

      ___assert_func(__str5, 201, ___PRETTY_FUNCTION____ZN6b2Body14DestroyFixtureEP9b2Fixture, __str7);
      ;
    }
  } while(0);

  var $m_world2=$this1+22;
  var $1=IHEAP[$m_world2];
  var $call3=__ZNK7b2World8IsLockedEv($1);
  var $conv4=($call3);
  var $cmp5=($conv4)==1;
  if ($cmp5) { __label__ = 23;; } else { __label__ = 3;; }
  $return$$if_end$81: do { 
    if (__label__ == 3) {

      var $2=$fixture_addr;
      var $m_body=$2+2;
      var $3=IHEAP[$m_body];
      var $cmp6=($3)==($this1);
      if ($cmp6) { __label__ = 5;; } else { __label__ = 4;; }
      $cond_end9$$cond_false8$83: do { 
        if (__label__ == 4) {

          ___assert_func(__str5, 207, ___PRETTY_FUNCTION____ZN6b2Body14DestroyFixtureEP9b2Fixture, __str8);
          ;
        }
      } while(0);

      var $m_fixtureCount=$this1+26;
      var $4=IHEAP[$m_fixtureCount];
      var $cmp10=($4) > 0;
      if ($cmp10) { __label__ = 7;; } else { __label__ = 6;; }
      $cond_end13$$cond_false12$86: do { 
        if (__label__ == 6) {

          ___assert_func(__str5, 210, ___PRETTY_FUNCTION____ZN6b2Body14DestroyFixtureEP9b2Fixture, __str9);
          ;
        }
      } while(0);

      var $m_fixtureList=$this1+25;
      $node=$m_fixtureList;
      $found=0;
      ;
      $while_cond$89: while(1) { 

        var $5=$node;
        var $6=IHEAP[$5];
        var $cmp14=($6)!=0;
        if (!($cmp14)) { __label__ = 12;break $while_cond$89; }

        var $7=$node;
        var $8=IHEAP[$7];
        var $9=$fixture_addr;
        var $cmp15=($8)==($9);
        if ($cmp15) { __label__ = 10;break $while_cond$89; }

        var $13=$node;
        var $14=IHEAP[$13];
        var $m_next18=$14+1;
        $node=$m_next18;
        ;
      }
      $while_end$$if_then16$93: do { 
        if (__label__ == 10) {

          var $10=$fixture_addr;
          var $m_next=$10+1;
          var $11=IHEAP[$m_next];
          var $12=$node;
          IHEAP[$12]=$11;
          $found=1;
          ;
        }
      } while(0);

      var $15=$found;
      var $tobool=((($15)) & 1);
      if ($tobool) { __label__ = 14;; } else { __label__ = 13;; }
      $cond_end21$$cond_false20$96: do { 
        if (__label__ == 13) {

          ___assert_func(__str5, 226, ___PRETTY_FUNCTION____ZN6b2Body14DestroyFixtureEP9b2Fixture, __str10);
          ;
        }
      } while(0);

      var $m_contactList=$this1+28;
      var $16=IHEAP[$m_contactList];
      $edge=$16;
      var $tobool231=($16)!=0;
      if ($tobool231) { __label__ = 15;; } else { __label__ = 20;; }
      $while_body24_lr_ph$$while_end32$99: do { 
        if (__label__ == 15) {

          var $m_world30=$this1+22;
          ;
          $while_body24$101: while(1) { 

            var $17=$edge;
            var $contact=$17+1;
            var $18=IHEAP[$contact];
            $c=$18;
            var $19=$edge;
            var $next=$19+3;
            var $20=IHEAP[$next];
            $edge=$20;
            var $21=$c;
            var $call25=__ZN9b2Contact11GetFixtureAEv($21);
            $fixtureA=$call25;
            var $22=$c;
            var $call26=__ZN9b2Contact11GetFixtureBEv($22);
            $fixtureB=$call26;
            var $23=$fixture_addr;
            var $24=$fixtureA;
            var $cmp27=($23)==($24);
            if ($cmp27) { __label__ = 19;; } else { __label__ = 18;; }
            $if_then29$$lor_lhs_false$103: do { 
              if (__label__ == 18) {

                var $25=$fixture_addr;
                var $26=$fixtureB;
                var $cmp28=($25)==($26);
                if ($cmp28) { __label__ = 19;break $if_then29$$lor_lhs_false$103; } else { __label__ = 16;break $if_then29$$lor_lhs_false$103; }
              }
            } while(0);
            $if_then29$$while_cond22thread_pre_split$105: do { 
              if (__label__ == 19) {

                var $27=IHEAP[$m_world30];
                var $m_contactManager=$27+102518;
                var $28=$c;
                __ZN16b2ContactManager7DestroyEP9b2Contact($m_contactManager, $28);
                ;
              }
            } while(0);

            var $_pr=$edge;
            var $tobool23=($_pr)!=0;
            if (!($tobool23)) { __label__ = 20;break $while_body24_lr_ph$$while_end32$99; }
          }
        }
      } while(0);

      var $m_world33=$this1+22;
      var $29=IHEAP[$m_world33];
      var $m_blockAllocator=$29;
      $allocator=$m_blockAllocator;
      var $m_flags=$this1+1;
      var $30=IHEAP[$m_flags];
      var $conv34=($30);
      var $and=($conv34) & 32;
      var $tobool35=($and)!=0;
      if ($tobool35) { __label__ = 21;; } else { __label__ = 22;; }
      $if_then36$$if_end39$109: do { 
        if (__label__ == 21) {

          var $m_world37=$this1+22;
          var $31=IHEAP[$m_world37];
          var $m_contactManager38=$31+102518;
          var $m_broadPhase=$m_contactManager38;
          $broadPhase=$m_broadPhase;
          var $32=$fixture_addr;
          var $33=$broadPhase;
          __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($32, $33);
          ;
        }
      } while(0);

      var $34=$fixture_addr;
      var $35=$allocator;
      __ZN9b2Fixture7DestroyEP16b2BlockAllocator($34, $35);
      var $36=$fixture_addr;
      var $m_body40=$36+2;
      IHEAP[$m_body40]=0;
      var $37=$fixture_addr;
      var $m_next41=$37+1;
      IHEAP[$m_next41]=0;
      var $38=$allocator;
      var $39=$fixture_addr;
      var $40=$39;
      __ZN16b2BlockAllocator4FreeEPvi($38, $40, 44);
      var $m_fixtureCount42=$this1+26;
      var $41=IHEAP[$m_fixtureCount42];
      var $dec=($41)-1;
      IHEAP[$m_fixtureCount42]=$dec;
      __ZN6b2Body13ResetMassDataEv($this1);
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN6b2Body14DestroyFixtureEP9b2Fixture["X"]=1;

function __ZN6b2Vec2C2Ev($this) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN5b2RotC2Ev($this) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN6b2Vec2C1Eff($this, $x, $y) {
  ;
  var __label__;

  var $this_addr;
  var $x_addr;
  var $y_addr;
  $this_addr=$this;
  $x_addr=$x;
  $y_addr=$y;
  var $this1=$this_addr;
  var $0=$x_addr;
  var $1=$y_addr;
  __ZN6b2Vec2C2Eff($this1, $0, $1);
  ;
  return;
  return;
}


function __ZN8b2FilterC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN8b2FilterC2Ev($this1);
  ;
  return;
  return;
}


function __ZN5b2RotC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN5b2RotC2Ev($this1);
  ;
  return;
  return;
}


function __ZN12b2BroadPhase10TouchProxyEi($this, $proxyId) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $0=$proxyId_addr;
  __ZN12b2BroadPhase10BufferMoveEi($this1, $0);
  ;
  return;
  return;
}


function __ZmiRK6b2Vec2S1_($agg_result, $a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$b_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $sub=($1)-($3);
  var $4=$a_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $6=$b_addr;
  var $y2=$6+1;
  var $7=FHEAP[$y2];
  var $sub3=($5)-($7);
  __ZN6b2Vec2C1Eff($agg_result, $sub, $sub3);
  ;
  return;
  return;
}


function __ZNK6b2Body13ShouldCollideEPKS_($this, $other) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $other_addr;
  var $jn;
  $this_addr=$this;
  $other_addr=$other;
  var $this1=$this_addr;
  var $m_type=$this1;
  var $0=IHEAP[$m_type];
  var $cmp=($0)!=2;
  if ($cmp) { __label__ = 1;; } else { __label__ = 3;; }
  $land_lhs_true$$if_end$21: do { 
    if (__label__ == 1) {

      var $1=$other_addr;
      var $m_type2=$1;
      var $2=IHEAP[$m_type2];
      var $cmp3=($2)!=2;
      if (!($cmp3)) { __label__ = 3;break $land_lhs_true$$if_end$21; }

      $retval=0;
      __label__ = 10;break $land_lhs_true$$if_end$21;
    }
  } while(0);
  $return$$if_end$24: do { 
    if (__label__ == 3) {

      var $m_jointList=$this1+27;
      var $3=IHEAP[$m_jointList];
      $jn=$3;
      var $4 = $3;;
      $for_cond$26: while(1) { 

        var $4;
        var $tobool=($4)!=0;
        if (!($tobool)) { __label__ = 9;break $for_cond$26; }

        var $5=$jn;
        var $other4=$5;
        var $6=IHEAP[$other4];
        var $7=$other_addr;
        var $cmp5=($6)==($7);
        if ($cmp5) { __label__ = 6;; } else { __label__ = 8;; }
        $if_then6$$for_inc$29: do { 
          if (__label__ == 6) {

            var $8=$jn;
            var $joint=$8+1;
            var $9=IHEAP[$joint];
            var $m_collideConnected=$9+16;
            var $10=IHEAP[$m_collideConnected];
            var $tobool7=((($10)) & 1);
            var $conv=($tobool7);
            var $cmp8=($conv)==0;
            if ($cmp8) { __label__ = 7;break $for_cond$26; }
          }
        } while(0);

        var $11=$jn;
        var $next=$11+3;
        var $12=IHEAP[$next];
        $jn=$12;
        var $4 = $12;;
      }
      $for_end$$if_then9$32: do { 
        if (__label__ == 9) {

          $retval=1;
          ;
        }
        else if (__label__ == 7) {

          $retval=0;
          ;
        }
      } while(0);
    }
  } while(0);

  var $13=$retval;
  ;
  return $13;
  return null;
}
__ZNK6b2Body13ShouldCollideEPKS_["X"]=1;

function __Z5b2MulRK5b2RotRK6b2Vec2($agg_result, $q, $v) {
  ;
  var __label__;

  var $q_addr;
  var $v_addr;
  $q_addr=$q;
  $v_addr=$v;
  var $0=$q_addr;
  var $c=$0+1;
  var $1=FHEAP[$c];
  var $2=$v_addr;
  var $x=$2;
  var $3=FHEAP[$x];
  var $mul=($1)*($3);
  var $4=$q_addr;
  var $s=$4;
  var $5=FHEAP[$s];
  var $6=$v_addr;
  var $y=$6+1;
  var $7=FHEAP[$y];
  var $mul1=($5)*($7);
  var $sub=($mul)-($mul1);
  var $8=$q_addr;
  var $s2=$8;
  var $9=FHEAP[$s2];
  var $10=$v_addr;
  var $x3=$10;
  var $11=FHEAP[$x3];
  var $mul4=($9)*($11);
  var $12=$q_addr;
  var $c5=$12+1;
  var $13=FHEAP[$c5];
  var $14=$v_addr;
  var $y6=$14+1;
  var $15=FHEAP[$y6];
  var $mul7=($13)*($15);
  var $add=($mul4)+($mul7);
  __ZN6b2Vec2C1Eff($agg_result, $sub, $add);
  ;
  return;
  return;
}


function __ZNK6b2Body8IsActiveEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_flags=$this1+1;
  var $0=IHEAP[$m_flags];
  var $conv=($0);
  var $and=($conv) & 32;
  var $cmp=($and)==32;
  ;
  return $cmp;
  return null;
}


function __ZN6b2Body4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $bodyIndex;
  var $f;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_islandIndex=$this1+2;
  var $0=IHEAP[$m_islandIndex];
  $bodyIndex=$0;
  __Z5b2LogPKcz(__str13419, allocate(1, "i32", ALLOC_STACK));
  __Z5b2LogPKcz(__str14, allocate(1, "i32", ALLOC_STACK));
  var $m_type=$this1;
  var $1=IHEAP[$m_type];
  __Z5b2LogPKcz(__str15, allocate([$1], "i32", ALLOC_STACK));
  var $m_xf=$this1+3;
  var $p=$m_xf;
  var $x=$p;
  var $2=FHEAP[$x];
  var $conv=($2);
  var $m_xf2=$this1+3;
  var $p3=$m_xf2;
  var $y=$p3+1;
  var $3=FHEAP[$y];
  var $conv4=($3);
  __Z5b2LogPKcz(__str1611, allocate([$conv,$conv4], "double", ALLOC_STACK));
  var $m_sweep=$this1+7;
  var $a=$m_sweep+7;
  var $4=FHEAP[$a];
  var $conv5=($4);
  __Z5b2LogPKcz(__str17, allocate([$conv5], "double", ALLOC_STACK));
  var $m_linearVelocity=$this1+16;
  var $x6=$m_linearVelocity;
  var $5=FHEAP[$x6];
  var $conv7=($5);
  var $m_linearVelocity8=$this1+16;
  var $y9=$m_linearVelocity8+1;
  var $6=FHEAP[$y9];
  var $conv10=($6);
  __Z5b2LogPKcz(__str18, allocate([$conv7,$conv10], "double", ALLOC_STACK));
  var $m_angularVelocity=$this1+18;
  var $7=FHEAP[$m_angularVelocity];
  var $conv11=($7);
  __Z5b2LogPKcz(__str19, allocate([$conv11], "double", ALLOC_STACK));
  var $m_linearDamping=$this1+33;
  var $8=FHEAP[$m_linearDamping];
  var $conv12=($8);
  __Z5b2LogPKcz(__str20, allocate([$conv12], "double", ALLOC_STACK));
  var $m_angularDamping=$this1+34;
  var $9=FHEAP[$m_angularDamping];
  var $conv13=($9);
  __Z5b2LogPKcz(__str21, allocate([$conv13], "double", ALLOC_STACK));
  var $m_flags=$this1+1;
  var $10=IHEAP[$m_flags];
  var $conv14=($10);
  var $and=($conv14) & 4;
  __Z5b2LogPKcz(__str22, allocate([$and], "i32", ALLOC_STACK));
  var $m_flags15=$this1+1;
  var $11=IHEAP[$m_flags15];
  var $conv16=($11);
  var $and17=($conv16) & 2;
  __Z5b2LogPKcz(__str23, allocate([$and17], "i32", ALLOC_STACK));
  var $m_flags18=$this1+1;
  var $12=IHEAP[$m_flags18];
  var $conv19=($12);
  var $and20=($conv19) & 16;
  __Z5b2LogPKcz(__str24, allocate([$and20], "i32", ALLOC_STACK));
  var $m_flags21=$this1+1;
  var $13=IHEAP[$m_flags21];
  var $conv22=($13);
  var $and23=($conv22) & 8;
  __Z5b2LogPKcz(__str25, allocate([$and23], "i32", ALLOC_STACK));
  var $m_flags24=$this1+1;
  var $14=IHEAP[$m_flags24];
  var $conv25=($14);
  var $and26=($conv25) & 32;
  __Z5b2LogPKcz(__str26, allocate([$and26], "i32", ALLOC_STACK));
  var $m_gravityScale=$this1+35;
  var $15=FHEAP[$m_gravityScale];
  var $conv27=($15);
  __Z5b2LogPKcz(__str2712, allocate([$conv27], "double", ALLOC_STACK));
  var $m_islandIndex28=$this1+2;
  var $16=IHEAP[$m_islandIndex28];
  __Z5b2LogPKcz(__str28, allocate([$16], "i32", ALLOC_STACK));
  __Z5b2LogPKcz(__str31195, allocate(1, "i32", ALLOC_STACK));
  var $m_fixtureList=$this1+25;
  var $17=IHEAP[$m_fixtureList];
  $f=$17;
  var $tobool1=($17)!=0;
  if ($tobool1) { __label__ = 1;; } else { __label__ = 2;; }
  $for_body$$for_end$73: do { 
    if (__label__ == 1) {
      $for_body$74: while(1) { 

        __Z5b2LogPKcz(__str30, allocate(1, "i32", ALLOC_STACK));
        var $18=$f;
        var $19=$bodyIndex;
        __ZN9b2Fixture4DumpEi($18, $19);
        __Z5b2LogPKcz(__str31, allocate(1, "i32", ALLOC_STACK));
        var $20=$f;
        var $m_next=$20+1;
        var $21=IHEAP[$m_next];
        $f=$21;
        var $tobool=($21)!=0;
        if (!($tobool)) { __label__ = 2;break $for_body$$for_end$73; }
      }
    }
  } while(0);

  __Z5b2LogPKcz(__str14420, allocate(1, "i32", ALLOC_STACK));
  ;
  return;
  return;
}
__ZN6b2Body4DumpEv["X"]=1;

function __ZN6b2Vec2C2Eff($this, $x, $y) {
  ;
  var __label__;

  var $this_addr;
  var $x_addr;
  var $y_addr;
  $this_addr=$this;
  $x_addr=$x;
  $y_addr=$y;
  var $this1=$this_addr;
  var $x2=$this1;
  var $0=$x_addr;
  FHEAP[$x2]=$0;
  var $y3=$this1+1;
  var $1=$y_addr;
  FHEAP[$y3]=$1;
  ;
  return;
  return;
}


function __ZN10b2MassDataC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $center=$this1+1;
  __ZN6b2Vec2C1Ev($center);
  ;
  return;
  return;
}


function __ZN12b2FixtureDefC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $filter=$this1+6;
  __ZN8b2FilterC1Ev($filter);
  var $shape=$this1;
  IHEAP[$shape]=0;
  var $userData=$this1+1;
  IHEAP[$userData]=0;
  var $friction=$this1+2;
  FHEAP[$friction]=0.20000000298023224;
  var $restitution=$this1+3;
  FHEAP[$restitution]=0;
  var $density=$this1+4;
  FHEAP[$density]=0;
  var $isSensor=$this1+5;
  IHEAP[$isSensor]=0;
  ;
  return;
  return;
}


function __ZN8b2FilterC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $categoryBits=$this1;
  IHEAP[$categoryBits]=1;
  var $maskBits=$this1+1;
  IHEAP[$maskBits]=-1;
  var $groupIndex=$this1+2;
  IHEAP[$groupIndex]=0;
  ;
  return;
  return;
}


function __ZN7b2SweepC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $localCenter=$this1;
  __ZN6b2Vec2C1Ev($localCenter);
  var $c0=$this1+2;
  __ZN6b2Vec2C1Ev($c0);
  var $c=$this1+4;
  __ZN6b2Vec2C1Ev($c);
  ;
  return;
  return;
}


function __ZN11b2TransformC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $p=$this1;
  __ZN6b2Vec2C1Ev($p);
  var $q=$this1+2;
  __ZN5b2RotC1Ev($q);
  ;
  return;
  return;
}


function __ZN12b2BroadPhaseD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_moveBuffer=$this1+8;
  var $0=IHEAP[$m_moveBuffer];
  var $1=$0;
  __Z6b2FreePv($1);
  var $m_pairBuffer=$this1+11;
  var $2=IHEAP[$m_pairBuffer];
  var $3=$2;
  __Z6b2FreePv($3);
  var $m_tree=$this1;
  __ZN13b2DynamicTreeD2Ev($m_tree);
  ;
  return;
  return;
}


function __ZN12b2BroadPhase12DestroyProxyEi($this, $proxyId) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $0=$proxyId_addr;
  __ZN12b2BroadPhase12UnBufferMoveEi($this1, $0);
  var $m_proxyCount=$this1+7;
  var $1=IHEAP[$m_proxyCount];
  var $dec=($1)-1;
  IHEAP[$m_proxyCount]=$dec;
  var $m_tree=$this1;
  var $2=$proxyId_addr;
  __ZN13b2DynamicTree12DestroyProxyEi($m_tree, $2);
  ;
  return;
  return;
}


function __ZN12b2BroadPhase12UnBufferMoveEi($this, $proxyId) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  var $i;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  $i=0;
  var $m_moveCount=$this1+10;
  var $m_moveBuffer=$this1+8;
  ;
  $for_cond$97: while(1) { 

    var $0=$i;
    var $1=IHEAP[$m_moveCount];
    var $cmp=($0) < ($1);
    if (!($cmp)) { __label__ = 5;break $for_cond$97; }

    var $2=$i;
    var $3=IHEAP[$m_moveBuffer];
    var $arrayidx=$3+$2;
    var $4=IHEAP[$arrayidx];
    var $5=$proxyId_addr;
    var $cmp2=($4)==($5);
    var $6=$i;
    if ($cmp2) { __label__ = 3;break $for_cond$97; }

    var $inc=($6)+1;
    $i=$inc;
    ;
  }
  $for_end$$if_then$101: do { 
    if (__label__ == 3) {

      var $m_moveBuffer3=$this1+8;
      var $7=IHEAP[$m_moveBuffer3];
      var $arrayidx4=$7+$6;
      IHEAP[$arrayidx4]=-1;
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN6b2Body11SetMassDataEPK10b2MassData($this, $massData) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $this_addr;
  var $massData_addr;
  var $oldCenter=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $ref_tmp41=__stackBase__+4;
  var $ref_tmp42=__stackBase__+6;
  $this_addr=$this;
  $massData_addr=$massData;
  var $this1=$this_addr;
  var $m_world=$this1+22;
  var $0=IHEAP[$m_world];
  var $call=__ZNK7b2World8IsLockedEv($0);
  var $conv=($call);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$3: do { 
    if (__label__ == 1) {

      ___assert_func(__str5, 340, ___PRETTY_FUNCTION____ZN6b2Body11SetMassDataEPK10b2MassData, __str7);
      ;
    }
  } while(0);

  var $m_world2=$this1+22;
  var $1=IHEAP[$m_world2];
  var $call3=__ZNK7b2World8IsLockedEv($1);
  var $conv4=($call3);
  var $cmp5=($conv4)==1;
  if ($cmp5) { __label__ = 12;; } else { __label__ = 3;; }
  $return$$if_end$6: do { 
    if (__label__ == 3) {

      var $m_type=$this1;
      var $2=IHEAP[$m_type];
      var $cmp6=($2)!=2;
      if ($cmp6) { __label__ = 12;break $return$$if_end$6; }

      var $m_invMass=$this1+30;
      FHEAP[$m_invMass]=0;
      var $m_I=$this1+31;
      FHEAP[$m_I]=0;
      var $m_invI=$this1+32;
      FHEAP[$m_invI]=0;
      var $3=$massData_addr;
      var $mass=$3;
      var $4=FHEAP[$mass];
      var $m_mass=$this1+29;
      FHEAP[$m_mass]=$4;
      var $m_mass9=$this1+29;
      var $5=FHEAP[$m_mass9];
      var $cmp10=($5) <= 0;
      if ($cmp10) { __label__ = 5;; } else { __label__ = 6;; }
      $if_then11$$if_end13$9: do { 
        if (__label__ == 5) {

          var $m_mass12=$this1+29;
          FHEAP[$m_mass12]=1;
          ;
        }
      } while(0);

      var $m_mass14=$this1+29;
      var $6=FHEAP[$m_mass14];
      var $div=1/($6);
      var $m_invMass15=$this1+30;
      FHEAP[$m_invMass15]=$div;
      var $7=$massData_addr;
      var $I=$7+3;
      var $8=FHEAP[$I];
      var $cmp16=($8) > 0;
      if ($cmp16) { __label__ = 7;; } else { __label__ = 11;; }
      $land_lhs_true$$if_end33$12: do { 
        if (__label__ == 7) {

          var $m_flags=$this1+1;
          var $9=IHEAP[$m_flags];
          var $conv17=($9);
          var $and=($conv17) & 16;
          var $cmp18=($and)==0;
          if (!($cmp18)) { __label__ = 11;break $land_lhs_true$$if_end33$12; }

          var $10=$massData_addr;
          var $I20=$10+3;
          var $11=FHEAP[$I20];
          var $m_mass21=$this1+29;
          var $12=FHEAP[$m_mass21];
          var $13=$massData_addr;
          var $center=$13+1;
          var $14=$massData_addr;
          var $center22=$14+1;
          var $call23=__Z5b2DotRK6b2Vec2S1_($center, $center22);
          var $mul=($12)*($call23);
          var $sub=($11)-($mul);
          var $m_I24=$this1+31;
          FHEAP[$m_I24]=$sub;
          var $m_I25=$this1+31;
          var $15=FHEAP[$m_I25];
          var $cmp26=($15) > 0;
          if ($cmp26) { __label__ = 10;; } else { __label__ = 9;; }
          $cond_end29$$cond_false28$15: do { 
            if (__label__ == 9) {

              ___assert_func(__str5, 366, ___PRETTY_FUNCTION____ZN6b2Body11SetMassDataEPK10b2MassData, __str12);
              ;
            }
          } while(0);

          var $m_I30=$this1+31;
          var $16=FHEAP[$m_I30];
          var $div31=1/($16);
          var $m_invI32=$this1+32;
          FHEAP[$m_invI32]=$div31;
          ;
        }
      } while(0);

      var $m_sweep=$this1+7;
      var $c=$m_sweep+4;
      var $17=$oldCenter;
      var $18=$c;
      IHEAP[$17]=IHEAP[$18]; FHEAP[$17]=FHEAP[$18]; ; IHEAP[$17+1]=IHEAP[$18+1]; FHEAP[$17+1]=FHEAP[$18+1]; ;
      var $m_sweep34=$this1+7;
      var $localCenter=$m_sweep34;
      var $19=$massData_addr;
      var $center35=$19+1;
      var $20=$localCenter;
      var $21=$center35;
      IHEAP[$20]=IHEAP[$21]; FHEAP[$20]=FHEAP[$21]; ; IHEAP[$20+1]=IHEAP[$21+1]; FHEAP[$20+1]=FHEAP[$21+1]; ;
      var $m_sweep36=$this1+7;
      var $c0=$m_sweep36+2;
      var $m_sweep37=$this1+7;
      var $c38=$m_sweep37+4;
      var $m_xf=$this1+3;
      var $m_sweep39=$this1+7;
      var $localCenter40=$m_sweep39;
      __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp, $m_xf, $localCenter40);
      var $22=$c38;
      var $23=$ref_tmp;
      IHEAP[$22]=IHEAP[$23]; FHEAP[$22]=FHEAP[$23]; ; IHEAP[$22+1]=IHEAP[$23+1]; FHEAP[$22+1]=FHEAP[$23+1]; ;
      var $24=$c0;
      _llvm_memmove_p0i8_p0i8_i32($24, $23, 2, 4, 0);
      var $m_linearVelocity=$this1+16;
      var $m_angularVelocity=$this1+18;
      var $25=FHEAP[$m_angularVelocity];
      var $m_sweep43=$this1+7;
      var $c44=$m_sweep43+4;
      __ZmiRK6b2Vec2S1_($ref_tmp42, $c44, $oldCenter);
      __Z7b2CrossfRK6b2Vec2($ref_tmp41, $25, $ref_tmp42);
      __ZN6b2Vec2pLERKS_($m_linearVelocity, $ref_tmp41);
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN6b2Body11SetMassDataEPK10b2MassData["X"]=1;

function __ZN6b2Body12SetTransformERK6b2Vec2f($this, $position, $angle) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $position_addr;
  var $angle_addr;
  var $ref_tmp=__stackBase__;
  var $broadPhase;
  var $f;
  $this_addr=$this;
  $position_addr=$position;
  $angle_addr=$angle;
  var $this1=$this_addr;
  var $m_world=$this1+22;
  var $0=IHEAP[$m_world];
  var $call=__ZNK7b2World8IsLockedEv($0);
  var $conv=($call);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$37: do { 
    if (__label__ == 1) {

      ___assert_func(__str5, 404, ___PRETTY_FUNCTION____ZN6b2Body12SetTransformERK6b2Vec2f, __str7);
      ;
    }
  } while(0);

  var $m_world2=$this1+22;
  var $1=IHEAP[$m_world2];
  var $call3=__ZNK7b2World8IsLockedEv($1);
  var $conv4=($call3);
  var $cmp5=($conv4)==1;
  if ($cmp5) { __label__ = 7;; } else { __label__ = 3;; }
  $return$$if_end$40: do { 
    if (__label__ == 3) {

      var $m_xf=$this1+3;
      var $q=$m_xf+2;
      var $2=$angle_addr;
      __ZN5b2Rot3SetEf($q, $2);
      var $m_xf6=$this1+3;
      var $p=$m_xf6;
      var $3=$position_addr;
      var $4=$p;
      var $5=$3;
      IHEAP[$4]=IHEAP[$5]; FHEAP[$4]=FHEAP[$5]; ; IHEAP[$4+1]=IHEAP[$5+1]; FHEAP[$4+1]=FHEAP[$5+1]; ;
      var $m_sweep=$this1+7;
      var $c=$m_sweep+4;
      var $m_xf7=$this1+3;
      var $m_sweep8=$this1+7;
      var $localCenter=$m_sweep8;
      __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp, $m_xf7, $localCenter);
      var $6=$c;
      var $7=$ref_tmp;
      IHEAP[$6]=IHEAP[$7]; FHEAP[$6]=FHEAP[$7]; ; IHEAP[$6+1]=IHEAP[$7+1]; FHEAP[$6+1]=FHEAP[$7+1]; ;
      var $8=$angle_addr;
      var $m_sweep9=$this1+7;
      var $a=$m_sweep9+7;
      FHEAP[$a]=$8;
      var $m_sweep10=$this1+7;
      var $c0=$m_sweep10+2;
      var $m_sweep11=$this1+7;
      var $c12=$m_sweep11+4;
      var $9=$c0;
      var $10=$c12;
      IHEAP[$9]=IHEAP[$10]; FHEAP[$9]=FHEAP[$10]; ; IHEAP[$9+1]=IHEAP[$10+1]; FHEAP[$9+1]=FHEAP[$10+1]; ;
      var $11=$angle_addr;
      var $m_sweep13=$this1+7;
      var $a0=$m_sweep13+6;
      FHEAP[$a0]=$11;
      var $m_world14=$this1+22;
      var $12=IHEAP[$m_world14];
      var $m_contactManager=$12+102518;
      var $m_broadPhase=$m_contactManager;
      $broadPhase=$m_broadPhase;
      var $m_fixtureList=$this1+25;
      var $13=IHEAP[$m_fixtureList];
      $f=$13;
      var $tobool1=($13)!=0;
      if ($tobool1) { __label__ = 4;; } else { __label__ = 6;; }
      $for_body_lr_ph$$for_end$42: do { 
        if (__label__ == 4) {

          var $m_xf15=$this1+3;
          var $m_xf16=$this1+3;
          ;
          $for_body$44: while(1) { 

            var $14=$f;
            var $15=$broadPhase;
            __ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_($14, $15, $m_xf15, $m_xf16);
            var $16=$f;
            var $m_next=$16+1;
            var $17=IHEAP[$m_next];
            $f=$17;
            var $tobool=($17)!=0;
            if (!($tobool)) { __label__ = 6;break $for_body_lr_ph$$for_end$42; }
          }
        }
      } while(0);

      var $m_world17=$this1+22;
      var $18=IHEAP[$m_world17];
      var $m_contactManager18=$18+102518;
      __ZN16b2ContactManager15FindNewContactsEv($m_contactManager18);
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN6b2Body12SetTransformERK6b2Vec2f["X"]=1;

function __ZN6b2Body9SetActiveEb($this, $flag) {
  ;
  var __label__;

  var $this_addr;
  var $flag_addr;
  var $broadPhase;
  var $f;
  var $broadPhase15;
  var $f19;
  var $ce;
  var $ce0;
  $this_addr=$this;
  var $frombool=($flag);
  $flag_addr=$frombool;
  var $this1=$this_addr;
  var $m_world=$this1+22;
  var $0=IHEAP[$m_world];
  var $call=__ZNK7b2World8IsLockedEv($0);
  var $conv=($call);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$50: do { 
    if (__label__ == 1) {

      ___assert_func(__str5, 443, ___PRETTY_FUNCTION____ZN6b2Body9SetActiveEb, __str7);
      ;
    }
  } while(0);

  var $1=$flag_addr;
  var $tobool=((($1)) & 1);
  var $conv2=($tobool);
  var $call3=__ZNK6b2Body8IsActiveEv($this1);
  var $conv4=($call3);
  var $cmp5=($conv2)==($conv4);
  if ($cmp5) { __label__ = 13;; } else { __label__ = 3;; }
  $if_end31$$if_end$53: do { 
    if (__label__ == 3) {

      var $2=$flag_addr;
      var $tobool6=((($2)) & 1);
      var $m_flags=$this1+1;
      var $3=IHEAP[$m_flags];
      var $conv8=($3);
      if ($tobool6) { __label__ = 4;; } else { __label__ = 7;; }
      $if_then7$$if_else$55: do { 
        if (__label__ == 4) {

          var $or=($conv8) | 32;
          var $conv9=((($or)) & 65535);
          IHEAP[$m_flags]=$conv9;
          var $m_world10=$this1+22;
          var $4=IHEAP[$m_world10];
          var $m_contactManager=$4+102518;
          var $m_broadPhase=$m_contactManager;
          $broadPhase=$m_broadPhase;
          var $m_fixtureList=$this1+25;
          var $5=IHEAP[$m_fixtureList];
          $f=$5;
          var $tobool113=($5)!=0;
          if (!($tobool113)) { __label__ = 13;break $if_end31$$if_end$53; }

          var $m_xf=$this1+3;
          ;
          $for_body$58: while(1) { 

            var $6=$f;
            var $7=$broadPhase;
            __ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform($6, $7, $m_xf);
            var $8=$f;
            var $m_next=$8+1;
            var $9=IHEAP[$m_next];
            $f=$9;
            var $tobool11=($9)!=0;
            if (!($tobool11)) { __label__ = 13;break $if_end31$$if_end$53; }
          }
        }
        else if (__label__ == 7) {

          var $and=($conv8) & -33;
          var $conv14=((($and)) & 65535);
          IHEAP[$m_flags]=$conv14;
          var $m_world16=$this1+22;
          var $10=IHEAP[$m_world16];
          var $m_contactManager17=$10+102518;
          var $m_broadPhase18=$m_contactManager17;
          $broadPhase15=$m_broadPhase18;
          var $m_fixtureList20=$this1+25;
          var $11=IHEAP[$m_fixtureList20];
          $f19=$11;
          var $tobool222=($11)!=0;
          if ($tobool222) { __label__ = 8;; } else { __label__ = 9;; }
          $for_body23$$for_end26$61: do { 
            if (__label__ == 8) {
              $for_body23$62: while(1) { 

                var $12=$f19;
                var $13=$broadPhase15;
                __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($12, $13);
                var $14=$f19;
                var $m_next25=$14+1;
                var $15=IHEAP[$m_next25];
                $f19=$15;
                var $tobool22=($15)!=0;
                if (!($tobool22)) { __label__ = 9;break $for_body23$$for_end26$61; }
              }
            }
          } while(0);

          var $m_contactList=$this1+28;
          var $16=IHEAP[$m_contactList];
          $ce=$16;
          var $tobool271=($16)!=0;
          if ($tobool271) { __label__ = 10;; } else { __label__ = 12;; }
          $while_body_lr_ph$$while_end$65: do { 
            if (__label__ == 10) {

              var $m_world28=$this1+22;
              ;
              $while_body$67: while(1) { 

                var $17=$ce;
                $ce0=$17;
                var $18=$ce;
                var $next=$18+3;
                var $19=IHEAP[$next];
                $ce=$19;
                var $20=IHEAP[$m_world28];
                var $m_contactManager29=$20+102518;
                var $21=$ce0;
                var $contact=$21+1;
                var $22=IHEAP[$contact];
                __ZN16b2ContactManager7DestroyEP9b2Contact($m_contactManager29, $22);
                var $_pr=$ce;
                var $tobool27=($_pr)!=0;
                if (!($tobool27)) { __label__ = 12;break $while_body_lr_ph$$while_end$65; }
              }
            }
          } while(0);

          var $m_contactList30=$this1+28;
          IHEAP[$m_contactList30]=0;
          ;
        }
      } while(0);
    }
  } while(0);

  ;
  return;
  return;
}
__ZN6b2Body9SetActiveEb["X"]=1;

function __ZN12b2BroadPhaseC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_tree=$this1;
  __ZN13b2DynamicTreeC2Ev($m_tree);
  var $m_proxyCount=$this1+7;
  IHEAP[$m_proxyCount]=0;
  var $m_pairCapacity=$this1+12;
  IHEAP[$m_pairCapacity]=16;
  var $m_pairCount=$this1+13;
  IHEAP[$m_pairCount]=0;
  var $m_pairCapacity2=$this1+12;
  var $0=IHEAP[$m_pairCapacity2];
  var $mul=($0)*12;
  var $call=__Z7b2Alloci($mul);
  var $1=$call;
  var $m_pairBuffer=$this1+11;
  IHEAP[$m_pairBuffer]=$1;
  var $m_moveCapacity=$this1+9;
  IHEAP[$m_moveCapacity]=16;
  var $m_moveCount=$this1+10;
  IHEAP[$m_moveCount]=0;
  var $m_moveCapacity3=$this1+9;
  var $2=IHEAP[$m_moveCapacity3];
  var $mul4=(($2)<<2);
  var $call6=__Z7b2Alloci($mul4);
  var $3=$call6;
  var $m_moveBuffer=$this1+8;
  IHEAP[$m_moveBuffer]=$3;
  ;
  return;
  return;
}


function __ZN12b2BroadPhase11CreateProxyERK6b2AABBPv($this, $aabb, $userData) {
  ;
  var __label__;

  var $this_addr;
  var $aabb_addr;
  var $userData_addr;
  var $proxyId;
  $this_addr=$this;
  $aabb_addr=$aabb;
  $userData_addr=$userData;
  var $this1=$this_addr;
  var $m_tree=$this1;
  var $0=$aabb_addr;
  var $1=$userData_addr;
  var $call=__ZN13b2DynamicTree11CreateProxyERK6b2AABBPv($m_tree, $0, $1);
  $proxyId=$call;
  var $m_proxyCount=$this1+7;
  var $2=IHEAP[$m_proxyCount];
  var $inc=($2)+1;
  IHEAP[$m_proxyCount]=$inc;
  var $3=$proxyId;
  __ZN12b2BroadPhase10BufferMoveEi($this1, $3);
  var $4=$proxyId;
  ;
  return $4;
  return null;
}


function __ZN12b2BroadPhase10BufferMoveEi($this, $proxyId) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  var $oldBuffer;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $m_moveCount=$this1+10;
  var $0=IHEAP[$m_moveCount];
  var $m_moveCapacity=$this1+9;
  var $1=IHEAP[$m_moveCapacity];
  var $cmp=($0)==($1);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$92: do { 
    if (__label__ == 1) {

      var $m_moveBuffer=$this1+8;
      var $2=IHEAP[$m_moveBuffer];
      $oldBuffer=$2;
      var $m_moveCapacity2=$this1+9;
      var $3=IHEAP[$m_moveCapacity2];
      var $mul=(($3)<<1);
      IHEAP[$m_moveCapacity2]=$mul;
      var $m_moveCapacity3=$this1+9;
      var $4=IHEAP[$m_moveCapacity3];
      var $mul4=(($4)<<2);
      var $call=__Z7b2Alloci($mul4);
      var $5=$call;
      var $m_moveBuffer5=$this1+8;
      IHEAP[$m_moveBuffer5]=$5;
      var $m_moveBuffer6=$this1+8;
      var $6=IHEAP[$m_moveBuffer6];
      var $7=$6;
      var $8=$oldBuffer;
      var $9=$8;
      var $m_moveCount7=$this1+10;
      var $10=IHEAP[$m_moveCount7];
      var $mul8=(($10)<<2);
      for (var mcpi_s=$9,mcpi_e=$9+1*($mul8/4),mcpi_d=$7; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
        IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
      };
      var $11=$oldBuffer;
      var $12=$11;
      __Z6b2FreePv($12);
      ;
    }
  } while(0);

  var $13=$proxyId_addr;
  var $m_moveCount9=$this1+10;
  var $14=IHEAP[$m_moveCount9];
  var $m_moveBuffer10=$this1+8;
  var $15=IHEAP[$m_moveBuffer10];
  var $arrayidx=$15+$14;
  IHEAP[$arrayidx]=$13;
  var $m_moveCount11=$this1+10;
  var $16=IHEAP[$m_moveCount11];
  var $inc=($16)+1;
  IHEAP[$m_moveCount11]=$inc;
  ;
  return;
  return;
}
__ZN12b2BroadPhase10BufferMoveEi["X"]=1;

function __ZN12b2BroadPhase9MoveProxyEiRK6b2AABBRK6b2Vec2($this, $proxyId, $aabb, $displacement) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  var $aabb_addr;
  var $displacement_addr;
  var $buffer;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  $aabb_addr=$aabb;
  $displacement_addr=$displacement;
  var $this1=$this_addr;
  var $m_tree=$this1;
  var $0=$proxyId_addr;
  var $1=$aabb_addr;
  var $2=$displacement_addr;
  var $call=__ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2($m_tree, $0, $1, $2);
  var $frombool=($call);
  $buffer=$frombool;
  var $3=$buffer;
  var $tobool=((($3)) & 1);
  if ($tobool) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$105: do { 
    if (__label__ == 1) {

      var $4=$proxyId_addr;
      __ZN12b2BroadPhase10BufferMoveEi($this1, $4);
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN9b2ContactD2Ev($this) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN7b2ShapeD2Ev($this) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN11b2EdgeShapeC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2EdgeShapeC2Ev($this1);
  ;
  return;
  return;
}


function __ZN11b2EdgeShapeD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2EdgeShapeD2Ev($this1);
  ;
  return;
  return;
}


function __ZN23b2ChainAndCircleContactD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN23b2ChainAndCircleContactD2Ev($this1);
  ;
  return;
  return;
}


function __ZN7b2ShapeD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN7b2ShapeD2Ev($this1);
  ;
  return;
  return;
}


function __ZN24b2ChainAndPolygonContactD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN24b2ChainAndPolygonContactD2Ev($this1);
  ;
  return;
  return;
}


function __ZN12b2ChainShapeC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN12b2ChainShapeC2Ev($this1);
  ;
  return;
  return;
}


function __Z5b2MinIiET_S0_S0_($a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $1=$b_addr;
  var $cmp=($0) < ($1);
  var $2=$a_addr;
  var $3=$b_addr;
  var $cond=($cmp) ? ($2) : ($3);
  ;
  return $cond;
  return null;
}


function __Z5b2MaxIiET_S0_S0_($a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $1=$b_addr;
  var $cmp=($0) > ($1);
  var $2=$a_addr;
  var $3=$b_addr;
  var $cond=($cmp) ? ($2) : ($3);
  ;
  return $cond;
  return null;
}


function __ZN23b2ChainAndCircleContactD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN23b2ChainAndCircleContactD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN23b2ChainAndCircleContactD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN9b2ContactD2Ev($0);
  ;
  return;
  return;
}


function __ZN11b2EdgeShapeD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2ShapeD2Ev($0);
  ;
  return;
  return;
}


function __ZN7b2ShapeC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  IHEAP[$0]=__ZTV7b2Shape+2;
  ;
  return;
  return;
}


function __ZN7b2ShapeD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN7b2ShapeD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN24b2ChainAndPolygonContactD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN24b2ChainAndPolygonContactD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN24b2ChainAndPolygonContactD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN9b2ContactD2Ev($0);
  ;
  return;
  return;
}


function __ZN12b2ChainShapeD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN12b2ChainShapeD2Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN23b2ChainAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact, $allocator) {
  ;
  var __label__;

  var $contact_addr;
  var $allocator_addr;
  $contact_addr=$contact;
  $allocator_addr=$allocator;
  var $0=$contact_addr;
  var $1=$0;
  var $2=$1;
  var $vtable=IHEAP[$2];
  var $vfn=$vtable+1;
  var $3=IHEAP[$vfn];
  FUNCTION_TABLE[$3]($1);
  var $4=$allocator_addr;
  var $5=$contact_addr;
  var $6=$5;
  __ZN16b2BlockAllocator4FreeEPvi($4, $6, 144);
  ;
  return;
  return;
}


function __ZN9b2Fixture8GetShapeEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_shape=$this1+3;
  var $0=IHEAP[$m_shape];
  ;
  return $0;
  return null;
}


function __ZN11b2EdgeShapeC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2ShapeC2Ev($0);
  var $1=$this1;
  IHEAP[$1]=__ZTV11b2EdgeShape+2;
  var $m_vertex1=$this1+3;
  __ZN6b2Vec2C1Ev($m_vertex1);
  var $m_vertex2=$this1+5;
  __ZN6b2Vec2C1Ev($m_vertex2);
  var $m_vertex0=$this1+7;
  __ZN6b2Vec2C1Ev($m_vertex0);
  var $m_vertex3=$this1+9;
  __ZN6b2Vec2C1Ev($m_vertex3);
  var $2=$this1;
  var $m_type=$2+1;
  IHEAP[$m_type]=1;
  var $3=$this1;
  var $m_radius=$3+2;
  FHEAP[$m_radius]=0.009999999776482582;
  var $m_vertex05=$this1+7;
  var $x=$m_vertex05;
  FHEAP[$x]=0;
  var $m_vertex06=$this1+7;
  var $y=$m_vertex06+1;
  FHEAP[$y]=0;
  var $m_vertex37=$this1+9;
  var $x8=$m_vertex37;
  FHEAP[$x8]=0;
  var $m_vertex39=$this1+9;
  var $y10=$m_vertex39+1;
  FHEAP[$y10]=0;
  var $m_hasVertex0=$this1+11;
  IHEAP[$m_hasVertex0]=0;
  var $m_hasVertex3=$this1+12;
  IHEAP[$m_hasVertex3]=0;
  ;
  return;
  return;
}


function __ZNK7b2Shape7GetTypeEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_type=$this1+1;
  var $0=IHEAP[$m_type];
  ;
  return $0;
  return null;
}


function __ZN24b2ChainAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator($contact, $allocator) {
  ;
  var __label__;

  var $contact_addr;
  var $allocator_addr;
  $contact_addr=$contact;
  $allocator_addr=$allocator;
  var $0=$contact_addr;
  var $1=$0;
  var $2=$1;
  var $vtable=IHEAP[$2];
  var $vfn=$vtable+1;
  var $3=IHEAP[$vfn];
  FUNCTION_TABLE[$3]($1);
  var $4=$allocator_addr;
  var $5=$contact_addr;
  var $6=$5;
  __ZN16b2BlockAllocator4FreeEPvi($4, $6, 144);
  ;
  return;
  return;
}


function __ZN12b2ChainShapeD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  IHEAP[$0]=__ZTV12b2ChainShape+2;
  var $m_vertices=$this1+3;
  var $1=IHEAP[$m_vertices];
  var $2=$1;
  __Z6b2FreePv($2);
  var $m_vertices2=$this1+3;
  IHEAP[$m_vertices2]=0;
  var $m_count=$this1+4;
  IHEAP[$m_count]=0;
  var $3=$this1;
  __ZN7b2ShapeD2Ev($3);
  ;
  return;
  return;
}


function __ZN12b2ChainShape13SetPrevVertexERK6b2Vec2($this, $prevVertex) {
  ;
  var __label__;

  var $this_addr;
  var $prevVertex_addr;
  $this_addr=$this;
  $prevVertex_addr=$prevVertex;
  var $this1=$this_addr;
  var $m_prevVertex=$this1+5;
  var $0=$prevVertex_addr;
  var $1=$m_prevVertex;
  var $2=$0;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ;
  var $m_hasPrevVertex=$this1+9;
  IHEAP[$m_hasPrevVertex]=1;
  ;
  return;
  return;
}


function __ZN12b2ChainShape13SetNextVertexERK6b2Vec2($this, $nextVertex) {
  ;
  var __label__;

  var $this_addr;
  var $nextVertex_addr;
  $this_addr=$this;
  $nextVertex_addr=$nextVertex;
  var $this1=$this_addr;
  var $m_nextVertex=$this1+7;
  var $0=$nextVertex_addr;
  var $1=$m_nextVertex;
  var $2=$0;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ;
  var $m_hasNextVertex=$this1+10;
  IHEAP[$m_hasNextVertex]=1;
  ;
  return;
  return;
}


function __ZNK12b2ChainShape13GetChildCountEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_count=$this1+4;
  var $0=IHEAP[$m_count];
  var $sub=($0)-1;
  ;
  return $sub;
  return null;
}


function __ZN12b2BroadPhase13QueryCallbackEi($this, $proxyId) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $proxyId_addr;
  var $oldBuffer;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $0=$proxyId_addr;
  var $m_queryProxyId=$this1+14;
  var $1=IHEAP[$m_queryProxyId];
  var $cmp=($0)==($1);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$2: do { 
    if (__label__ == 1) {

      $retval=1;
      ;
    }
    else if (__label__ == 2) {

      var $m_pairCount=$this1+13;
      var $2=IHEAP[$m_pairCount];
      var $m_pairCapacity=$this1+12;
      var $3=IHEAP[$m_pairCapacity];
      var $cmp2=($2)==($3);
      if ($cmp2) { __label__ = 3;; } else { __label__ = 4;; }
      $if_then3$$if_end11$5: do { 
        if (__label__ == 3) {

          var $m_pairBuffer=$this1+11;
          var $4=IHEAP[$m_pairBuffer];
          $oldBuffer=$4;
          var $m_pairCapacity4=$this1+12;
          var $5=IHEAP[$m_pairCapacity4];
          var $mul=(($5)<<1);
          IHEAP[$m_pairCapacity4]=$mul;
          var $m_pairCapacity5=$this1+12;
          var $6=IHEAP[$m_pairCapacity5];
          var $mul6=($6)*12;
          var $call=__Z7b2Alloci($mul6);
          var $7=$call;
          var $m_pairBuffer7=$this1+11;
          IHEAP[$m_pairBuffer7]=$7;
          var $m_pairBuffer8=$this1+11;
          var $8=IHEAP[$m_pairBuffer8];
          var $9=$8;
          var $10=$oldBuffer;
          var $11=$10;
          var $m_pairCount9=$this1+13;
          var $12=IHEAP[$m_pairCount9];
          var $mul10=($12)*12;
          for (var mcpi_s=$11,mcpi_e=$11+3*($mul10/12),mcpi_d=$9; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
            IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
          };
          var $13=$oldBuffer;
          var $14=$13;
          __Z6b2FreePv($14);
          ;
        }
      } while(0);

      var $15=$proxyId_addr;
      var $m_queryProxyId12=$this1+14;
      var $16=IHEAP[$m_queryProxyId12];
      var $call13=__Z5b2MinIiET_S0_S0_($15, $16);
      var $m_pairCount14=$this1+13;
      var $17=IHEAP[$m_pairCount14];
      var $m_pairBuffer15=$this1+11;
      var $18=IHEAP[$m_pairBuffer15];
      var $arrayidx=$18+$17*3;
      var $proxyIdA=$arrayidx;
      IHEAP[$proxyIdA]=$call13;
      var $19=$proxyId_addr;
      var $m_queryProxyId16=$this1+14;
      var $20=IHEAP[$m_queryProxyId16];
      var $call17=__Z5b2MaxIiET_S0_S0_($19, $20);
      var $m_pairCount18=$this1+13;
      var $21=IHEAP[$m_pairCount18];
      var $m_pairBuffer19=$this1+11;
      var $22=IHEAP[$m_pairBuffer19];
      var $arrayidx20=$22+$21*3;
      var $proxyIdB=$arrayidx20+1;
      IHEAP[$proxyIdB]=$call17;
      var $m_pairCount21=$this1+13;
      var $23=IHEAP[$m_pairCount21];
      var $inc=($23)+1;
      IHEAP[$m_pairCount21]=$inc;
      $retval=1;
      ;
    }
  } while(0);

  var $24=$retval;
  ;
  return $24;
  return null;
}
__ZN12b2BroadPhase13QueryCallbackEi["X"]=1;

function __ZN23b2ChainAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA, $indexA, $fixtureB, $indexB, $allocator) {
  ;
  var __label__;

  var $fixtureA_addr;
  var $indexA_addr;
  var $fixtureB_addr;
  var $indexB_addr;
  var $allocator_addr;
  var $mem;
  $fixtureA_addr=$fixtureA;
  $indexA_addr=$indexA;
  $fixtureB_addr=$fixtureB;
  $indexB_addr=$indexB;
  $allocator_addr=$allocator;
  var $0=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($0, 144);
  $mem=$call;
  var $1=$mem;
  var $new_isnull=($1)==0;
  if ($new_isnull) { var $7 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$12: do { 
    if (__label__ == 1) {

      var $2=$1;
      var $3=$fixtureA_addr;
      var $4=$indexA_addr;
      var $5=$fixtureB_addr;
      var $6=$indexB_addr;
      __ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i($2, $3, $4, $5, $6);
      var $7 = $2;;
    }
  } while(0);

  var $7;
  var $8=$7;
  ;
  return $8;
  return null;
}


function __ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i($this, $fixtureA, $indexA, $fixtureB, $indexB) {
  ;
  var __label__;

  var $this_addr;
  var $fixtureA_addr;
  var $indexA_addr;
  var $fixtureB_addr;
  var $indexB_addr;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $fixtureA_addr=$fixtureA;
  $indexA_addr=$indexA;
  $fixtureB_addr=$fixtureB;
  $indexB_addr=$indexB;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$fixtureA_addr;
  var $2=$indexA_addr;
  var $3=$fixtureB_addr;
  var $4=$indexB_addr;
  __ZN9b2ContactC2EP9b2FixtureiS1_i($0, $1, $2, $3, $4);
  var $5=$this1;
  IHEAP[$5]=__ZTV23b2ChainAndCircleContact+2;
  var $6=$this1;
  var $m_fixtureA=$6+12;
  var $7=IHEAP[$m_fixtureA];
  var $call=__ZNK9b2Fixture7GetTypeEv($7);
  var $cmp=($call)==3;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $invoke_cont3$$cond_false$17: do { 
    if (__label__ == 1) {

      ___assert_func(__str33, 43, ___PRETTY_FUNCTION____ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i, __str137);
      ;
    }
  } while(0);

  var $8=$this1;
  var $m_fixtureB=$8+13;
  var $9=IHEAP[$m_fixtureB];
  var $call4=__ZNK9b2Fixture7GetTypeEv($9);
  var $cmp5=($call4)==0;
  if ($cmp5) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end9$$cond_false7$20: do { 
    if (__label__ == 3) {

      ___assert_func(__str33, 44, ___PRETTY_FUNCTION____ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i, __str2264);
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i["X"]=1;

function __ZNK9b2Fixture7GetTypeEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_shape=$this1+3;
  var $0=IHEAP[$m_shape];
  var $call=__ZNK7b2Shape7GetTypeEv($0);
  ;
  return $call;
  return null;
}


function __ZN23b2ChainAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this, $manifold, $xfA, $xfB) {
  var __stackBase__  = STACKTOP; STACKTOP += 13;
  var __label__;

  var $this_addr;
  var $manifold_addr;
  var $xfA_addr;
  var $xfB_addr;
  var $chain;
  var $edge=__stackBase__;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $manifold_addr=$manifold;
  $xfA_addr=$xfA;
  $xfB_addr=$xfB;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_fixtureA=$0+12;
  var $1=IHEAP[$m_fixtureA];
  var $call=__ZN9b2Fixture8GetShapeEv($1);
  var $2=$call;
  $chain=$2;
  __ZN11b2EdgeShapeC1Ev($edge);
  var $3=$chain;
  var $4=$this1;
  var $m_indexA=$4+14;
  var $5=IHEAP[$m_indexA];
  __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($3, $edge, $5);
  ;

  var $6=$manifold_addr;
  var $7=$xfA_addr;
  var $8=$this1;
  var $m_fixtureB=$8+13;
  var $9=IHEAP[$m_fixtureB];
  var $call3=__ZN9b2Fixture8GetShapeEv($9);
  var $10=$call3;
  var $11=$xfB_addr;
  __Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_($6, $edge, $7, $10, $11);
  ;

  __ZN11b2EdgeShapeD1Ev($edge);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN24b2ChainAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA, $indexA, $fixtureB, $indexB, $allocator) {
  ;
  var __label__;

  var $fixtureA_addr;
  var $indexA_addr;
  var $fixtureB_addr;
  var $indexB_addr;
  var $allocator_addr;
  var $mem;
  $fixtureA_addr=$fixtureA;
  $indexA_addr=$indexA;
  $fixtureB_addr=$fixtureB;
  $indexB_addr=$indexB;
  $allocator_addr=$allocator;
  var $0=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($0, 144);
  $mem=$call;
  var $1=$mem;
  var $new_isnull=($1)==0;
  if ($new_isnull) { var $7 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$42: do { 
    if (__label__ == 1) {

      var $2=$1;
      var $3=$fixtureA_addr;
      var $4=$indexA_addr;
      var $5=$fixtureB_addr;
      var $6=$indexB_addr;
      __ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i($2, $3, $4, $5, $6);
      var $7 = $2;;
    }
  } while(0);

  var $7;
  var $8=$7;
  ;
  return $8;
  return null;
}


function __ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i($this, $fixtureA, $indexA, $fixtureB, $indexB) {
  ;
  var __label__;

  var $this_addr;
  var $fixtureA_addr;
  var $indexA_addr;
  var $fixtureB_addr;
  var $indexB_addr;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $fixtureA_addr=$fixtureA;
  $indexA_addr=$indexA;
  $fixtureB_addr=$fixtureB;
  $indexB_addr=$indexB;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$fixtureA_addr;
  var $2=$indexA_addr;
  var $3=$fixtureB_addr;
  var $4=$indexB_addr;
  __ZN9b2ContactC2EP9b2FixtureiS1_i($0, $1, $2, $3, $4);
  var $5=$this1;
  IHEAP[$5]=__ZTV24b2ChainAndPolygonContact+2;
  var $6=$this1;
  var $m_fixtureA=$6+12;
  var $7=IHEAP[$m_fixtureA];
  var $call=__ZNK9b2Fixture7GetTypeEv($7);
  var $cmp=($call)==3;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $invoke_cont3$$cond_false$47: do { 
    if (__label__ == 1) {

      ___assert_func(__str36, 43, ___PRETTY_FUNCTION____ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i, __str137);
      ;
    }
  } while(0);

  var $8=$this1;
  var $m_fixtureB=$8+13;
  var $9=IHEAP[$m_fixtureB];
  var $call4=__ZNK9b2Fixture7GetTypeEv($9);
  var $cmp5=($call4)==2;
  if ($cmp5) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end9$$cond_false7$50: do { 
    if (__label__ == 3) {

      ___assert_func(__str36, 44, ___PRETTY_FUNCTION____ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i, __str2271);
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i["X"]=1;

function __ZN24b2ChainAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this, $manifold, $xfA, $xfB) {
  var __stackBase__  = STACKTOP; STACKTOP += 13;
  var __label__;

  var $this_addr;
  var $manifold_addr;
  var $xfA_addr;
  var $xfB_addr;
  var $chain;
  var $edge=__stackBase__;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $manifold_addr=$manifold;
  $xfA_addr=$xfA;
  $xfB_addr=$xfB;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_fixtureA=$0+12;
  var $1=IHEAP[$m_fixtureA];
  var $call=__ZN9b2Fixture8GetShapeEv($1);
  var $2=$call;
  $chain=$2;
  __ZN11b2EdgeShapeC1Ev($edge);
  var $3=$chain;
  var $4=$this1;
  var $m_indexA=$4+14;
  var $5=IHEAP[$m_indexA];
  __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($3, $edge, $5);
  ;

  var $6=$manifold_addr;
  var $7=$xfA_addr;
  var $8=$this1;
  var $m_fixtureB=$8+13;
  var $9=IHEAP[$m_fixtureB];
  var $call3=__ZN9b2Fixture8GetShapeEv($9);
  var $10=$call3;
  var $11=$xfB_addr;
  __Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_($6, $edge, $7, $10, $11);
  ;

  __ZN11b2EdgeShapeD1Ev($edge);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN12b2ChainShape10CreateLoopEPK6b2Vec2i($this, $vertices, $count) {
  ;
  var __label__;

  var $this_addr;
  var $vertices_addr;
  var $count_addr;
  $this_addr=$this;
  $vertices_addr=$vertices;
  $count_addr=$count;
  var $this1=$this_addr;
  var $m_vertices=$this1+3;
  var $0=IHEAP[$m_vertices];
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$62: do { 
    if (__label__ == 1) {

      var $m_count=$this1+4;
      var $1=IHEAP[$m_count];
      var $cmp2=($1)==0;
      if ($cmp2) { __label__ = 3;break $land_lhs_true$$cond_false$62; } else { __label__ = 2;break $land_lhs_true$$cond_false$62; }
    }
  } while(0);
  $cond_end$$cond_false$64: do { 
    if (__label__ == 2) {

      ___assert_func(__str39, 34, ___PRETTY_FUNCTION____ZN12b2ChainShape10CreateLoopEPK6b2Vec2i, __str140);
      ;
    }
  } while(0);

  var $2=$count_addr;
  var $cmp3=($2) >= 3;
  if ($cmp3) { __label__ = 5;; } else { __label__ = 4;; }
  $cond_end6$$cond_false5$67: do { 
    if (__label__ == 4) {

      ___assert_func(__str39, 35, ___PRETTY_FUNCTION____ZN12b2ChainShape10CreateLoopEPK6b2Vec2i, __str6282);
      ;
    }
  } while(0);

  var $3=$count_addr;
  var $add=($3)+1;
  var $m_count7=$this1+4;
  IHEAP[$m_count7]=$add;
  var $m_count8=$this1+4;
  var $4=IHEAP[$m_count8];
  var $mul=(($4)<<3);
  var $call=__Z7b2Alloci($mul);
  var $5=$call;
  var $m_vertices9=$this1+3;
  IHEAP[$m_vertices9]=$5;
  var $m_vertices10=$this1+3;
  var $6=IHEAP[$m_vertices10];
  var $7=$6;
  var $8=$vertices_addr;
  var $9=$8;
  var $10=$count_addr;
  var $mul11=(($10)<<3);
  for (var mcpi_s=$9,mcpi_e=$9+2*($mul11/8),mcpi_d=$7; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $11=$count_addr;
  var $m_vertices12=$this1+3;
  var $12=IHEAP[$m_vertices12];
  var $arrayidx=$12+($11<<1);
  var $m_vertices13=$this1+3;
  var $13=IHEAP[$m_vertices13];
  var $arrayidx14=$13;
  var $14=$arrayidx;
  var $15=$arrayidx14;
  IHEAP[$14]=IHEAP[$15]; FHEAP[$14]=FHEAP[$15]; ; IHEAP[$14+1]=IHEAP[$15+1]; FHEAP[$14+1]=FHEAP[$15+1]; ;
  var $m_prevVertex=$this1+5;
  var $m_count15=$this1+4;
  var $16=IHEAP[$m_count15];
  var $sub=($16)-2;
  var $m_vertices16=$this1+3;
  var $17=IHEAP[$m_vertices16];
  var $arrayidx17=$17+($sub<<1);
  var $18=$m_prevVertex;
  var $19=$arrayidx17;
  IHEAP[$18]=IHEAP[$19]; FHEAP[$18]=FHEAP[$19]; ; IHEAP[$18+1]=IHEAP[$19+1]; FHEAP[$18+1]=FHEAP[$19+1]; ;
  var $m_nextVertex=$this1+7;
  var $m_vertices18=$this1+3;
  var $20=IHEAP[$m_vertices18];
  var $arrayidx19=$20+2;
  var $21=$m_nextVertex;
  var $22=$arrayidx19;
  IHEAP[$21]=IHEAP[$22]; FHEAP[$21]=FHEAP[$22]; ; IHEAP[$21+1]=IHEAP[$22+1]; FHEAP[$21+1]=FHEAP[$22+1]; ;
  var $m_hasPrevVertex=$this1+9;
  IHEAP[$m_hasPrevVertex]=1;
  var $m_hasNextVertex=$this1+10;
  IHEAP[$m_hasNextVertex]=1;
  ;
  return;
  return;
}
__ZN12b2ChainShape10CreateLoopEPK6b2Vec2i["X"]=1;

function __ZN12b2ChainShape11CreateChainEPK6b2Vec2i($this, $vertices, $count) {
  ;
  var __label__;

  var $this_addr;
  var $vertices_addr;
  var $count_addr;
  $this_addr=$this;
  $vertices_addr=$vertices;
  $count_addr=$count;
  var $this1=$this_addr;
  var $m_vertices=$this1+3;
  var $0=IHEAP[$m_vertices];
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$71: do { 
    if (__label__ == 1) {

      var $m_count=$this1+4;
      var $1=IHEAP[$m_count];
      var $cmp2=($1)==0;
      if ($cmp2) { __label__ = 3;break $land_lhs_true$$cond_false$71; } else { __label__ = 2;break $land_lhs_true$$cond_false$71; }
    }
  } while(0);
  $cond_end$$cond_false$73: do { 
    if (__label__ == 2) {

      ___assert_func(__str39, 48, ___PRETTY_FUNCTION____ZN12b2ChainShape11CreateChainEPK6b2Vec2i, __str140);
      ;
    }
  } while(0);

  var $2=$count_addr;
  var $cmp3=($2) >= 2;
  if ($cmp3) { __label__ = 5;; } else { __label__ = 4;; }
  $cond_end6$$cond_false5$76: do { 
    if (__label__ == 4) {

      ___assert_func(__str39, 49, ___PRETTY_FUNCTION____ZN12b2ChainShape11CreateChainEPK6b2Vec2i, __str342);
      ;
    }
  } while(0);

  var $3=$count_addr;
  var $m_count7=$this1+4;
  IHEAP[$m_count7]=$3;
  var $4=$count_addr;
  var $mul=(($4)<<3);
  var $call=__Z7b2Alloci($mul);
  var $5=$call;
  var $m_vertices8=$this1+3;
  IHEAP[$m_vertices8]=$5;
  var $m_vertices9=$this1+3;
  var $6=IHEAP[$m_vertices9];
  var $7=$6;
  var $8=$vertices_addr;
  var $9=$8;
  var $m_count10=$this1+4;
  var $10=IHEAP[$m_count10];
  var $mul11=(($10)<<3);
  for (var mcpi_s=$9,mcpi_e=$9+2*($mul11/8),mcpi_d=$7; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $m_hasPrevVertex=$this1+9;
  IHEAP[$m_hasPrevVertex]=0;
  var $m_hasNextVertex=$this1+10;
  IHEAP[$m_hasNextVertex]=0;
  ;
  return;
  return;
}


function __ZNK12b2ChainShape5CloneEP16b2BlockAllocator($this, $allocator) {
  ;
  var __label__;

  var $this_addr;
  var $allocator_addr;
  var $mem;
  var $clone;
  $this_addr=$this;
  $allocator_addr=$allocator;
  var $this1=$this_addr;
  var $0=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($0, 40);
  $mem=$call;
  var $1=$mem;
  var $new_isnull=($1)==0;
  if ($new_isnull) { var $3 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$82: do { 
    if (__label__ == 1) {

      var $2=$1;
      __ZN12b2ChainShapeC1Ev($2);
      var $3 = $2;;
    }
  } while(0);

  var $3;
  $clone=$3;
  var $4=$clone;
  var $m_vertices=$this1+3;
  var $5=IHEAP[$m_vertices];
  var $m_count=$this1+4;
  var $6=IHEAP[$m_count];
  __ZN12b2ChainShape11CreateChainEPK6b2Vec2i($4, $5, $6);
  var $7=$clone;
  var $m_prevVertex=$7+5;
  var $m_prevVertex2=$this1+5;
  var $8=$m_prevVertex;
  var $9=$m_prevVertex2;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $10=$clone;
  var $m_nextVertex=$10+7;
  var $m_nextVertex3=$this1+7;
  var $11=$m_nextVertex;
  var $12=$m_nextVertex3;
  IHEAP[$11]=IHEAP[$12]; FHEAP[$11]=FHEAP[$12]; ; IHEAP[$11+1]=IHEAP[$12+1]; FHEAP[$11+1]=FHEAP[$12+1]; ;
  var $m_hasPrevVertex=$this1+9;
  var $13=IHEAP[$m_hasPrevVertex];
  var $tobool=((($13)) & 1);
  var $14=$clone;
  var $m_hasPrevVertex4=$14+9;
  var $frombool=($tobool);
  IHEAP[$m_hasPrevVertex4]=$frombool;
  var $m_hasNextVertex=$this1+10;
  var $15=IHEAP[$m_hasNextVertex];
  var $tobool5=((($15)) & 1);
  var $16=$clone;
  var $m_hasNextVertex6=$16+10;
  var $frombool7=($tobool5);
  IHEAP[$m_hasNextVertex6]=$frombool7;
  var $17=$clone;
  var $18=$17;
  ;
  return $18;
  return null;
}
__ZNK12b2ChainShape5CloneEP16b2BlockAllocator["X"]=1;

function __ZNK12b2ChainShape9TestPointERK11b2TransformRK6b2Vec2($this, $xf, $p) {
  ;
  var __label__;

  ;
  return 0;
  return null;
}


function __ZNK13b2CircleShape13GetChildCountEv($this) {
  ;
  var __label__;

  ;
  return 1;
  return null;
}


function __ZN15b2CircleContactD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2CircleContactD2Ev($this1);
  ;
  return;
  return;
}


function __ZN13b2CircleShapeC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN13b2CircleShapeC2Ev($this1);
  ;
  return;
  return;
}


function __ZN13b2CircleShapeD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN13b2CircleShapeD2Ev($this1);
  ;
  return;
  return;
}


function __Z5b2MaxIfET_S0_S0_($a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $1=$b_addr;
  var $cmp=($0) > ($1);
  var $2=$a_addr;
  var $3=$b_addr;
  var $cond=($cmp) ? ($2) : ($3);
  ;
  return $cond;
  return null;
}


function __Z5b2MinIfET_S0_S0_($a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $1=$b_addr;
  var $cmp=($0) < ($1);
  var $2=$a_addr;
  var $3=$b_addr;
  var $cond=($cmp) ? ($2) : ($3);
  ;
  return $cond;
  return null;
}


function __ZN15b2CircleContactD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2CircleContactD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN15b2CircleContactD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN9b2ContactD2Ev($0);
  ;
  return;
  return;
}


function __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($this, $edge, $index) {
  ;
  var __label__;

  var $this_addr;
  var $edge_addr;
  var $index_addr;
  $this_addr=$this;
  $edge_addr=$edge;
  $index_addr=$index;
  var $this1=$this_addr;
  var $0=$index_addr;
  var $cmp=0 <= ($0);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$2: do { 
    if (__label__ == 1) {

      var $1=$index_addr;
      var $m_count=$this1+4;
      var $2=IHEAP[$m_count];
      var $sub=($2)-1;
      var $cmp2=($1) < ($sub);
      if ($cmp2) { __label__ = 3;break $land_lhs_true$$cond_false$2; } else { __label__ = 2;break $land_lhs_true$$cond_false$2; }
    }
  } while(0);
  $cond_end$$cond_false$4: do { 
    if (__label__ == 2) {

      ___assert_func(__str39, 89, ___PRETTY_FUNCTION____ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei, __str443);
      ;
    }
  } while(0);

  var $3=$edge_addr;
  var $4=$3;
  var $m_type=$4+1;
  IHEAP[$m_type]=1;
  var $5=$this1;
  var $m_radius=$5+2;
  var $6=FHEAP[$m_radius];
  var $7=$edge_addr;
  var $8=$7;
  var $m_radius3=$8+2;
  FHEAP[$m_radius3]=$6;
  var $9=$edge_addr;
  var $m_vertex1=$9+3;
  var $10=$index_addr;
  var $m_vertices=$this1+3;
  var $11=IHEAP[$m_vertices];
  var $arrayidx=$11+($10<<1);
  var $12=$m_vertex1;
  var $13=$arrayidx;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$edge_addr;
  var $m_vertex2=$14+5;
  var $15=$index_addr;
  var $add4=($15)+1;
  var $m_vertices5=$this1+3;
  var $16=IHEAP[$m_vertices5];
  var $arrayidx6=$16+($add4<<1);
  var $17=$m_vertex2;
  var $18=$arrayidx6;
  IHEAP[$17]=IHEAP[$18]; FHEAP[$17]=FHEAP[$18]; ; IHEAP[$17+1]=IHEAP[$18+1]; FHEAP[$17+1]=FHEAP[$18+1]; ;
  var $19=$index_addr;
  var $cmp7=($19) > 0;
  var $20=$edge_addr;
  var $m_vertex0=$20+7;
  if ($cmp7) { __label__ = 4;; } else { __label__ = 5;; }
  $if_then$$if_else$7: do { 
    if (__label__ == 4) {

      var $21=$index_addr;
      var $sub8=($21)-1;
      var $m_vertices9=$this1+3;
      var $22=IHEAP[$m_vertices9];
      var $arrayidx10=$22+($sub8<<1);
      var $23=$m_vertex0;
      var $24=$arrayidx10;
      IHEAP[$23]=IHEAP[$24]; FHEAP[$23]=FHEAP[$24]; ; IHEAP[$23+1]=IHEAP[$24+1]; FHEAP[$23+1]=FHEAP[$24+1]; ;
      var $25=$edge_addr;
      var $m_hasVertex0=$25+11;
      IHEAP[$m_hasVertex0]=1;
      ;
    }
    else if (__label__ == 5) {

      var $m_prevVertex=$this1+5;
      var $26=$m_vertex0;
      var $27=$m_prevVertex;
      IHEAP[$26]=IHEAP[$27]; FHEAP[$26]=FHEAP[$27]; ; IHEAP[$26+1]=IHEAP[$27+1]; FHEAP[$26+1]=FHEAP[$27+1]; ;
      var $m_hasPrevVertex=$this1+9;
      var $28=IHEAP[$m_hasPrevVertex];
      var $tobool=((($28)) & 1);
      var $29=$edge_addr;
      var $m_hasVertex012=$29+11;
      var $frombool=($tobool);
      IHEAP[$m_hasVertex012]=$frombool;
      ;
    }
  } while(0);

  var $30=$index_addr;
  var $m_count13=$this1+4;
  var $31=IHEAP[$m_count13];
  var $sub14=($31)-2;
  var $cmp15=($30) < ($sub14);
  var $32=$edge_addr;
  var $m_vertex3=$32+9;
  if ($cmp15) { __label__ = 7;; } else { __label__ = 8;; }
  $if_then16$$if_else20$11: do { 
    if (__label__ == 7) {

      var $33=$index_addr;
      var $add17=($33)+2;
      var $m_vertices18=$this1+3;
      var $34=IHEAP[$m_vertices18];
      var $arrayidx19=$34+($add17<<1);
      var $35=$m_vertex3;
      var $36=$arrayidx19;
      IHEAP[$35]=IHEAP[$36]; FHEAP[$35]=FHEAP[$36]; ; IHEAP[$35+1]=IHEAP[$36+1]; FHEAP[$35+1]=FHEAP[$36+1]; ;
      var $37=$edge_addr;
      var $m_hasVertex3=$37+12;
      IHEAP[$m_hasVertex3]=1;
      ;
    }
    else if (__label__ == 8) {

      var $m_nextVertex=$this1+7;
      var $38=$m_vertex3;
      var $39=$m_nextVertex;
      IHEAP[$38]=IHEAP[$39]; FHEAP[$38]=FHEAP[$39]; ; IHEAP[$38+1]=IHEAP[$39+1]; FHEAP[$38+1]=FHEAP[$39+1]; ;
      var $m_hasNextVertex=$this1+10;
      var $40=IHEAP[$m_hasNextVertex];
      var $tobool22=((($40)) & 1);
      var $41=$edge_addr;
      var $m_hasVertex323=$41+12;
      var $frombool24=($tobool22);
      IHEAP[$m_hasVertex323]=$frombool24;
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei["X"]=1;

function __ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi($this, $aabb, $xf, $childIndex) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $this_addr;
  var $aabb_addr;
  var $xf_addr;
  var $childIndex_addr;
  var $i1;
  var $i2;
  var $v1=__stackBase__;
  var $v2=__stackBase__+2;
  var $ref_tmp=__stackBase__+4;
  var $ref_tmp6=__stackBase__+6;
  $this_addr=$this;
  $aabb_addr=$aabb;
  $xf_addr=$xf;
  $childIndex_addr=$childIndex;
  var $this1=$this_addr;
  var $0=$childIndex_addr;
  var $m_count=$this1+4;
  var $1=IHEAP[$m_count];
  var $cmp=($0) < ($1);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$25: do { 
    if (__label__ == 1) {

      ___assert_func(__str39, 148, ___PRETTY_FUNCTION____ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi, __str544);
      ;
    }
  } while(0);

  var $2=$childIndex_addr;
  $i1=$2;
  var $3=$childIndex_addr;
  var $add=($3)+1;
  $i2=$add;
  var $4=$i2;
  var $m_count2=$this1+4;
  var $5=IHEAP[$m_count2];
  var $cmp3=($4)==($5);
  if ($cmp3) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then$$if_end$28: do { 
    if (__label__ == 3) {

      $i2=0;
      ;
    }
  } while(0);

  var $6=$xf_addr;
  var $7=$i1;
  var $m_vertices=$this1+3;
  var $8=IHEAP[$m_vertices];
  var $arrayidx=$8+($7<<1);
  __Z5b2MulRK11b2TransformRK6b2Vec2($v1, $6, $arrayidx);
  var $9=$xf_addr;
  var $10=$i2;
  var $m_vertices4=$this1+3;
  var $11=IHEAP[$m_vertices4];
  var $arrayidx5=$11+($10<<1);
  __Z5b2MulRK11b2TransformRK6b2Vec2($v2, $9, $arrayidx5);
  var $12=$aabb_addr;
  var $lowerBound=$12;
  __Z5b2MinRK6b2Vec2S1_($ref_tmp, $v1, $v2);
  var $13=$lowerBound;
  var $14=$ref_tmp;
  IHEAP[$13]=IHEAP[$14]; FHEAP[$13]=FHEAP[$14]; ; IHEAP[$13+1]=IHEAP[$14+1]; FHEAP[$13+1]=FHEAP[$14+1]; ;
  var $15=$aabb_addr;
  var $upperBound=$15+2;
  __Z5b2MaxRK6b2Vec2S1_($ref_tmp6, $v1, $v2);
  var $16=$upperBound;
  var $17=$ref_tmp6;
  IHEAP[$16]=IHEAP[$17]; FHEAP[$16]=FHEAP[$17]; ; IHEAP[$16+1]=IHEAP[$17+1]; FHEAP[$16+1]=FHEAP[$17+1]; ;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi["X"]=1;

function __ZNK12b2ChainShape11ComputeMassEP10b2MassDataf($this, $massData, $density) {
  ;
  var __label__;

  var $this_addr;
  var $massData_addr;
  var $density_addr;
  $this_addr=$this;
  $massData_addr=$massData;
  $density_addr=$density;
  var $0=$massData_addr;
  var $mass=$0;
  FHEAP[$mass]=0;
  var $1=$massData_addr;
  var $center=$1+1;
  __ZN6b2Vec27SetZeroEv($center);
  var $2=$massData_addr;
  var $I=$2+3;
  FHEAP[$I]=0;
  ;
  return;
  return;
}


function __ZN12b2ChainShapeC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2ShapeC2Ev($0);
  var $1=$this1;
  IHEAP[$1]=__ZTV12b2ChainShape+2;
  var $m_prevVertex=$this1+5;
  __ZN6b2Vec2C1Ev($m_prevVertex);
  var $m_nextVertex=$this1+7;
  __ZN6b2Vec2C1Ev($m_nextVertex);
  var $2=$this1;
  var $m_type=$2+1;
  IHEAP[$m_type]=3;
  var $3=$this1;
  var $m_radius=$3+2;
  FHEAP[$m_radius]=0.009999999776482582;
  var $m_vertices=$this1+3;
  IHEAP[$m_vertices]=0;
  var $m_count=$this1+4;
  IHEAP[$m_count]=0;
  var $m_hasPrevVertex=$this1+9;
  IHEAP[$m_hasPrevVertex]=0;
  var $m_hasNextVertex=$this1+10;
  IHEAP[$m_hasNextVertex]=0;
  ;
  return;
  return;
}


function __ZN15b2CircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact, $allocator) {
  ;
  var __label__;

  var $contact_addr;
  var $allocator_addr;
  $contact_addr=$contact;
  $allocator_addr=$allocator;
  var $0=$contact_addr;
  var $1=$0;
  var $2=$1;
  var $vtable=IHEAP[$2];
  var $vfn=$vtable+1;
  var $3=IHEAP[$vfn];
  FUNCTION_TABLE[$3]($1);
  var $4=$allocator_addr;
  var $5=$contact_addr;
  var $6=$5;
  __ZN16b2BlockAllocator4FreeEPvi($4, $6, 144);
  ;
  return;
  return;
}


function __ZplRK6b2Vec2S1_($agg_result, $a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$b_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $add=($1)+($3);
  var $4=$a_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $6=$b_addr;
  var $y2=$6+1;
  var $7=FHEAP[$y2];
  var $add3=($5)+($7);
  __ZN6b2Vec2C1Eff($agg_result, $add, $add3);
  ;
  return;
  return;
}


function __ZNK13b2CircleShape11ComputeAABBEP6b2AABBRK11b2Transformi($this, $aabb, $transform, $childIndex) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $aabb_addr;
  var $transform_addr;
  var $childIndex_addr;
  var $p=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  $this_addr=$this;
  $aabb_addr=$aabb;
  $transform_addr=$transform;
  $childIndex_addr=$childIndex;
  var $this1=$this_addr;
  var $0=$transform_addr;
  var $p2=$0;
  var $1=$transform_addr;
  var $q=$1+2;
  var $m_p=$this1+3;
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $q, $m_p);
  __ZplRK6b2Vec2S1_($p, $p2, $ref_tmp);
  var $2=$aabb_addr;
  var $lowerBound=$2;
  var $x=$p;
  var $3=FHEAP[$x];
  var $4=$this1;
  var $m_radius=$4+2;
  var $5=FHEAP[$m_radius];
  var $sub=($3)-($5);
  var $y=$p+1;
  var $6=FHEAP[$y];
  var $7=$this1;
  var $m_radius3=$7+2;
  var $8=FHEAP[$m_radius3];
  var $sub4=($6)-($8);
  __ZN6b2Vec23SetEff($lowerBound, $sub, $sub4);
  var $9=$aabb_addr;
  var $upperBound=$9+2;
  var $x5=$p;
  var $10=FHEAP[$x5];
  var $11=$this1;
  var $m_radius6=$11+2;
  var $12=FHEAP[$m_radius6];
  var $add=($10)+($12);
  var $y7=$p+1;
  var $13=FHEAP[$y7];
  var $14=$this1;
  var $m_radius8=$14+2;
  var $15=FHEAP[$m_radius8];
  var $add9=($13)+($15);
  __ZN6b2Vec23SetEff($upperBound, $add, $add9);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN6b2Vec23SetEff($this, $x_, $y_) {
  ;
  var __label__;

  var $this_addr;
  var $x__addr;
  var $y__addr;
  $this_addr=$this;
  $x__addr=$x_;
  $y__addr=$y_;
  var $this1=$this_addr;
  var $0=$x__addr;
  var $x=$this1;
  FHEAP[$x]=$0;
  var $1=$y__addr;
  var $y=$this1+1;
  FHEAP[$y]=$1;
  ;
  return;
  return;
}


function __ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this, $output, $input, $xf, $childIndex) {
  var __stackBase__  = STACKTOP; STACKTOP += 13;
  var __label__;

  var $retval;
  var $this_addr;
  var $output_addr;
  var $input_addr;
  var $xf_addr;
  var $childIndex_addr;
  var $edgeShape=__stackBase__;
  var $i1;
  var $i2;
  var $exn_slot;
  var $ehselector_slot;
  var $cleanup_dest_slot;
  $this_addr=$this;
  $output_addr=$output;
  $input_addr=$input;
  $xf_addr=$xf;
  $childIndex_addr=$childIndex;
  var $this1=$this_addr;
  var $0=$childIndex_addr;
  var $m_count=$this1+4;
  var $1=IHEAP[$m_count];
  var $cmp=($0) < ($1);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$17: do { 
    if (__label__ == 1) {

      ___assert_func(__str39, 129, ___PRETTY_FUNCTION____ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi, __str544);
      ;
    }
  } while(0);

  __ZN11b2EdgeShapeC1Ev($edgeShape);
  var $2=$childIndex_addr;
  $i1=$2;
  var $3=$childIndex_addr;
  var $add=($3)+1;
  $i2=$add;
  var $4=$i2;
  var $m_count2=$this1+4;
  var $5=IHEAP[$m_count2];
  var $cmp3=($4)==($5);
  if ($cmp3) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then$$if_end$20: do { 
    if (__label__ == 3) {

      $i2=0;
      ;
    }
  } while(0);

  var $m_vertex1=$edgeShape+3;
  var $6=$i1;
  var $m_vertices=$this1+3;
  var $7=IHEAP[$m_vertices];
  var $arrayidx=$7+($6<<1);
  var $8=$m_vertex1;
  var $9=$arrayidx;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_vertex2=$edgeShape+5;
  var $10=$i2;
  var $m_vertices4=$this1+3;
  var $11=IHEAP[$m_vertices4];
  var $arrayidx5=$11+($10<<1);
  var $12=$m_vertex2;
  var $13=$arrayidx5;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$output_addr;
  var $15=$input_addr;
  var $16=$xf_addr;
  var $call=__ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($edgeShape, $14, $15, $16, 0);
  ;

  $retval=$call;
  $cleanup_dest_slot=1;
  __ZN11b2EdgeShapeD1Ev($edgeShape);
  var $17=$retval;
  STACKTOP = __stackBase__;
  return $17;
  return null;
}
__ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi["X"]=1;

function __Z5b2MinRK6b2Vec2S1_($agg_result, $a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$b_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $call=__Z5b2MinIfET_S0_S0_($1, $3);
  var $4=$a_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $6=$b_addr;
  var $y2=$6+1;
  var $7=FHEAP[$y2];
  var $call3=__Z5b2MinIfET_S0_S0_($5, $7);
  __ZN6b2Vec2C1Eff($agg_result, $call, $call3);
  ;
  return;
  return;
}


function __Z5b2MaxRK6b2Vec2S1_($agg_result, $a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$b_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $call=__Z5b2MaxIfET_S0_S0_($1, $3);
  var $4=$a_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $6=$b_addr;
  var $y2=$6+1;
  var $7=FHEAP[$y2];
  var $call3=__Z5b2MaxIfET_S0_S0_($5, $7);
  __ZN6b2Vec2C1Eff($agg_result, $call, $call3);
  ;
  return;
  return;
}


function __ZN15b2CircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA, $0, $fixtureB, $1, $allocator) {
  ;
  var __label__;

  var $fixtureA_addr;
  var $_addr;
  var $fixtureB_addr;
  var $_addr1;
  var $allocator_addr;
  var $mem;
  $fixtureA_addr=$fixtureA;
  $_addr=$0;
  $fixtureB_addr=$fixtureB;
  $_addr1=$1;
  $allocator_addr=$allocator;
  var $2=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($2, 144);
  $mem=$call;
  var $3=$mem;
  var $new_isnull=($3)==0;
  if ($new_isnull) { var $7 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$38: do { 
    if (__label__ == 1) {

      var $4=$3;
      var $5=$fixtureA_addr;
      var $6=$fixtureB_addr;
      __ZN15b2CircleContactC2EP9b2FixtureS1_($4, $5, $6);
      var $7 = $4;;
    }
  } while(0);

  var $7;
  var $8=$7;
  ;
  return $8;
  return null;
}


function __ZN15b2CircleContactC2EP9b2FixtureS1_($this, $fixtureA, $fixtureB) {
  ;
  var __label__;

  var $this_addr;
  var $fixtureA_addr;
  var $fixtureB_addr;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $fixtureA_addr=$fixtureA;
  $fixtureB_addr=$fixtureB;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$fixtureA_addr;
  var $2=$fixtureB_addr;
  __ZN9b2ContactC2EP9b2FixtureiS1_i($0, $1, 0, $2, 0);
  var $3=$this1;
  IHEAP[$3]=__ZTV15b2CircleContact+2;
  var $4=$this1;
  var $m_fixtureA=$4+12;
  var $5=IHEAP[$m_fixtureA];
  var $call=__ZNK9b2Fixture7GetTypeEv($5);
  var $cmp=($call)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $invoke_cont3$$cond_false$43: do { 
    if (__label__ == 1) {

      ___assert_func(__str47, 44, ___PRETTY_FUNCTION____ZN15b2CircleContactC2EP9b2FixtureS1_, __str148);
      ;
    }
  } while(0);

  var $6=$this1;
  var $m_fixtureB=$6+13;
  var $7=IHEAP[$m_fixtureB];
  var $call4=__ZNK9b2Fixture7GetTypeEv($7);
  var $cmp5=($call4)==0;
  if ($cmp5) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end9$$cond_false7$46: do { 
    if (__label__ == 3) {

      ___assert_func(__str47, 45, ___PRETTY_FUNCTION____ZN15b2CircleContactC2EP9b2FixtureS1_, __str2264);
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN15b2CircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this, $manifold, $xfA, $xfB) {
  ;
  var __label__;

  var $this_addr;
  var $manifold_addr;
  var $xfA_addr;
  var $xfB_addr;
  $this_addr=$this;
  $manifold_addr=$manifold;
  $xfA_addr=$xfA;
  $xfB_addr=$xfB;
  var $this1=$this_addr;
  var $0=$manifold_addr;
  var $1=$this1;
  var $m_fixtureA=$1+12;
  var $2=IHEAP[$m_fixtureA];
  var $call=__ZN9b2Fixture8GetShapeEv($2);
  var $3=$call;
  var $4=$xfA_addr;
  var $5=$this1;
  var $m_fixtureB=$5+13;
  var $6=IHEAP[$m_fixtureB];
  var $call2=__ZN9b2Fixture8GetShapeEv($6);
  var $7=$call2;
  var $8=$xfB_addr;
  __Z16b2CollideCirclesP10b2ManifoldPK13b2CircleShapeRK11b2TransformS3_S6_($0, $3, $4, $7, $8);
  ;
  return;
  return;
}


function __ZNK13b2CircleShape5CloneEP16b2BlockAllocator($this, $allocator) {
  ;
  var __label__;

  var $this_addr;
  var $allocator_addr;
  var $mem;
  var $clone;
  $this_addr=$this;
  $allocator_addr=$allocator;
  var $this1=$this_addr;
  var $0=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($0, 20);
  $mem=$call;
  var $1=$mem;
  var $new_isnull=($1)==0;
  if ($new_isnull) { var $3 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$54: do { 
    if (__label__ == 1) {

      var $2=$1;
      __ZN13b2CircleShapeC1Ev($2);
      var $3 = $2;;
    }
  } while(0);

  var $3;
  $clone=$3;
  var $4=$clone;
  var $call2=__ZN13b2CircleShapeaSERKS_($4, $this1);
  var $5=$clone;
  var $6=$5;
  ;
  return $6;
  return null;
}


function __ZN13b2CircleShapeaSERKS_($this, $0) {
  ;
  var __label__;

  var $this_addr;
  var $_addr;
  $this_addr=$this;
  $_addr=$0;
  var $this1=$this_addr;
  var $1=$this1;
  var $2=$_addr;
  var $3=$2;
  var $call=__ZN7b2ShapeaSERKS_($1, $3);
  var $m_p=$this1+3;
  var $4=$_addr;
  var $m_p2=$4+3;
  var $5=$m_p;
  var $6=$m_p2;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  ;
  return $this1;
  return null;
}


function __ZNK13b2CircleShape9TestPointERK11b2TransformRK6b2Vec2($this, $transform, $p) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $transform_addr;
  var $p_addr;
  var $center=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $d=__stackBase__+4;
  $this_addr=$this;
  $transform_addr=$transform;
  $p_addr=$p;
  var $this1=$this_addr;
  var $0=$transform_addr;
  var $p2=$0;
  var $1=$transform_addr;
  var $q=$1+2;
  var $m_p=$this1+3;
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $q, $m_p);
  __ZplRK6b2Vec2S1_($center, $p2, $ref_tmp);
  var $2=$p_addr;
  __ZmiRK6b2Vec2S1_($d, $2, $center);
  var $call=__Z5b2DotRK6b2Vec2S1_($d, $d);
  var $3=$this1;
  var $m_radius=$3+2;
  var $4=FHEAP[$m_radius];
  var $5=$this1;
  var $m_radius3=$5+2;
  var $6=FHEAP[$m_radius3];
  var $mul=($4)*($6);
  var $cmp=($call) <= ($mul);
  STACKTOP = __stackBase__;
  return $cmp;
  return null;
}


function __ZNK13b2CircleShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this, $output, $input, $transform, $childIndex) {
  var __stackBase__  = STACKTOP; STACKTOP += 12;
  var __label__;

  var $__x_addr_i;
  var $retval;
  var $this_addr;
  var $output_addr;
  var $input_addr;
  var $transform_addr;
  var $childIndex_addr;
  var $position=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $s=__stackBase__+4;
  var $b;
  var $r=__stackBase__+6;
  var $c;
  var $rr;
  var $sigma;
  var $a;
  var $ref_tmp16=__stackBase__+8;
  var $ref_tmp17=__stackBase__+10;
  $this_addr=$this;
  $output_addr=$output;
  $input_addr=$input;
  $transform_addr=$transform;
  $childIndex_addr=$childIndex;
  var $this1=$this_addr;
  var $0=$transform_addr;
  var $p=$0;
  var $1=$transform_addr;
  var $q=$1+2;
  var $m_p=$this1+3;
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $q, $m_p);
  __ZplRK6b2Vec2S1_($position, $p, $ref_tmp);
  var $2=$input_addr;
  var $p1=$2;
  __ZmiRK6b2Vec2S1_($s, $p1, $position);
  var $call=__Z5b2DotRK6b2Vec2S1_($s, $s);
  var $3=$this1;
  var $m_radius=$3+2;
  var $4=FHEAP[$m_radius];
  var $5=$this1;
  var $m_radius2=$5+2;
  var $6=FHEAP[$m_radius2];
  var $mul=($4)*($6);
  var $sub=($call)-($mul);
  $b=$sub;
  var $7=$input_addr;
  var $p2=$7+2;
  var $8=$input_addr;
  var $p13=$8;
  __ZmiRK6b2Vec2S1_($r, $p2, $p13);
  var $call4=__Z5b2DotRK6b2Vec2S1_($s, $r);
  $c=$call4;
  var $call5=__Z5b2DotRK6b2Vec2S1_($r, $r);
  $rr=$call5;
  var $9=$c;
  var $10=$c;
  var $mul6=($9)*($10);
  var $11=$rr;
  var $12=$b;
  var $mul7=($11)*($12);
  var $sub8=($mul6)-($mul7);
  $sigma=$sub8;
  var $13=$sigma;
  var $cmp=($13) < 0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $if_then$$lor_lhs_false$63: do { 
    if (__label__ == 1) {

      var $14=$rr;
      var $cmp9=($14) < 1.1920928955078125e-7;
      if ($cmp9) { __label__ = 2;break $if_then$$lor_lhs_false$63; }

      var $15=$c;
      var $16=$sigma;
      ;
      $__x_addr_i=$16;
      var $18=$__x_addr_i;
      var $call_i=_sqrtf($18);
      ;
      var $add=($15)+($call_i);
      var $sub11=(-($add));
      $a=$sub11;
      var $20=$a;
      var $cmp12=0 <= ($20);
      if ($cmp12) { __label__ = 4;; } else { __label__ = 6;; }
      $land_lhs_true$$if_end20$66: do { 
        if (__label__ == 4) {

          var $21=$a;
          var $22=$input_addr;
          var $maxFraction=$22+4;
          var $23=FHEAP[$maxFraction];
          var $24=$rr;
          var $mul13=($23)*($24);
          var $cmp14=($21) <= ($mul13);
          if (!($cmp14)) { __label__ = 6;break $land_lhs_true$$if_end20$66; }

          var $25=$rr;
          var $26=$a;
          var $div=($26)/($25);
          $a=$div;
          var $27=$a;
          var $28=$output_addr;
          var $fraction=$28+2;
          FHEAP[$fraction]=$27;
          var $29=$output_addr;
          var $normal=$29;
          var $30=$a;
          __ZmlfRK6b2Vec2($ref_tmp17, $30, $r);
          __ZplRK6b2Vec2S1_($ref_tmp16, $s, $ref_tmp17);
          var $31=$normal;
          var $32=$ref_tmp16;
          IHEAP[$31]=IHEAP[$32]; FHEAP[$31]=FHEAP[$32]; ; IHEAP[$31+1]=IHEAP[$32+1]; FHEAP[$31+1]=FHEAP[$32+1]; ;
          var $33=$output_addr;
          var $normal18=$33;
          var $call19=__ZN6b2Vec29NormalizeEv($normal18);
          $retval=1;
          __label__ = 7;break $if_then$$lor_lhs_false$63;
        }
      } while(0);

      $retval=0;
      __label__ = 7;break $if_then$$lor_lhs_false$63;
    }
  } while(0);
  $if_then$$return$70: do { 
    if (__label__ == 2) {

      $retval=0;
      ;
    }
  } while(0);

  var $34=$retval;
  STACKTOP = __stackBase__;
  return $34;
  return null;
}
__ZNK13b2CircleShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi["X"]=1;

function __ZN6b2Vec29NormalizeEv($this) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $length;
  var $invLength;
  $this_addr=$this;
  var $this1=$this_addr;
  var $call=__ZNK6b2Vec26LengthEv($this1);
  $length=$call;
  var $0=$length;
  var $cmp=($0) < 1.1920928955078125e-7;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$74: do { 
    if (__label__ == 1) {

      $retval=0;
      ;
    }
    else if (__label__ == 2) {

      var $1=$length;
      var $div=1/($1);
      $invLength=$div;
      var $2=$invLength;
      var $x=$this1;
      var $3=FHEAP[$x];
      var $mul=($3)*($2);
      FHEAP[$x]=$mul;
      var $4=$invLength;
      var $y=$this1+1;
      var $5=FHEAP[$y];
      var $mul2=($5)*($4);
      FHEAP[$y]=$mul2;
      var $6=$length;
      $retval=$6;
      ;
    }
  } while(0);

  var $7=$retval;
  ;
  return $7;
  return null;
}


function __ZNK13b2CircleShape11ComputeMassEP10b2MassDataf($this, $massData, $density) {
  ;
  var __label__;

  var $this_addr;
  var $massData_addr;
  var $density_addr;
  $this_addr=$this;
  $massData_addr=$massData;
  $density_addr=$density;
  var $this1=$this_addr;
  var $0=$density_addr;
  var $mul=($0)*3.1415927410125732;
  var $1=$this1;
  var $m_radius=$1+2;
  var $2=FHEAP[$m_radius];
  var $mul2=($mul)*($2);
  var $3=$this1;
  var $m_radius3=$3+2;
  var $4=FHEAP[$m_radius3];
  var $mul4=($mul2)*($4);
  var $5=$massData_addr;
  var $mass=$5;
  FHEAP[$mass]=$mul4;
  var $6=$massData_addr;
  var $center=$6+1;
  var $m_p=$this1+3;
  var $7=$center;
  var $8=$m_p;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
  var $9=$massData_addr;
  var $mass5=$9;
  var $10=FHEAP[$mass5];
  var $11=$this1;
  var $m_radius6=$11+2;
  var $12=FHEAP[$m_radius6];
  var $mul7=($12)*0.5;
  var $13=$this1;
  var $m_radius8=$13+2;
  var $14=FHEAP[$m_radius8];
  var $mul9=($mul7)*($14);
  var $m_p10=$this1+3;
  var $m_p11=$this1+3;
  var $call=__Z5b2DotRK6b2Vec2S1_($m_p10, $m_p11);
  var $add=($mul9)+($call);
  var $mul12=($10)*($add);
  var $15=$massData_addr;
  var $I=$15+3;
  FHEAP[$I]=$mul12;
  ;
  return;
  return;
}


function __ZN13b2CircleShapeD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN13b2CircleShapeD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN13b2CircleShapeD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2ShapeD2Ev($0);
  ;
  return;
  return;
}


function __ZN7b2ShapeaSERKS_($this, $0) {
  ;
  var __label__;

  var $this_addr;
  var $_addr;
  $this_addr=$this;
  $_addr=$0;
  var $this1=$this_addr;
  var $1=$_addr;
  var $m_type=$1+1;
  var $2=IHEAP[$m_type];
  var $m_type2=$this1+1;
  IHEAP[$m_type2]=$2;
  var $3=$_addr;
  var $m_radius=$3+2;
  var $4=FHEAP[$m_radius];
  var $m_radius3=$this1+2;
  FHEAP[$m_radius3]=$4;
  ;
  return $this1;
  return null;
}


function __ZN13b2CircleShapeC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2ShapeC2Ev($0);
  var $1=$this1;
  IHEAP[$1]=__ZTV13b2CircleShape+2;
  var $m_p=$this1+3;
  __ZN6b2Vec2C1Ev($m_p);
  var $2=$this1;
  var $m_type=$2+1;
  IHEAP[$m_type]=0;
  var $3=$this1;
  var $m_radius=$3+2;
  FHEAP[$m_radius]=0;
  var $m_p2=$this1+3;
  __ZN6b2Vec27SetZeroEv($m_p2);
  ;
  return;
  return;
}


function __Z6b2MulTRK11b2TransformRK6b2Vec2($agg_result, $T, $v) {
  ;
  var __label__;

  var $T_addr;
  var $v_addr;
  var $px;
  var $py;
  var $x5;
  var $y8;
  $T_addr=$T;
  $v_addr=$v;
  var $0=$v_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$T_addr;
  var $p=$2;
  var $x1=$p;
  var $3=FHEAP[$x1];
  var $sub=($1)-($3);
  $px=$sub;
  var $4=$v_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $6=$T_addr;
  var $p2=$6;
  var $y3=$p2+1;
  var $7=FHEAP[$y3];
  var $sub4=($5)-($7);
  $py=$sub4;
  var $8=$T_addr;
  var $q=$8+2;
  var $c=$q+1;
  var $9=FHEAP[$c];
  var $10=$px;
  var $mul=($9)*($10);
  var $11=$T_addr;
  var $q6=$11+2;
  var $s=$q6;
  var $12=FHEAP[$s];
  var $13=$py;
  var $mul7=($12)*($13);
  var $add=($mul)+($mul7);
  $x5=$add;
  var $14=$T_addr;
  var $q9=$14+2;
  var $s10=$q9;
  var $15=FHEAP[$s10];
  var $sub11=(-($15));
  var $16=$px;
  var $mul12=($sub11)*($16);
  var $17=$T_addr;
  var $q13=$17+2;
  var $c14=$q13+1;
  var $18=FHEAP[$c14];
  var $19=$py;
  var $mul15=($18)*($19);
  var $add16=($mul12)+($mul15);
  $y8=$add16;
  var $20=$x5;
  var $21=$y8;
  __ZN6b2Vec2C1Eff($agg_result, $20, $21);
  ;
  return;
  return;
}
__Z6b2MulTRK11b2TransformRK6b2Vec2["X"]=1;

function __ZNK6b2Vec26LengthEv($this) {
  ;
  var __label__;

  var $__x_addr_i;
  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $x=$this1;
  var $0=FHEAP[$x];
  var $x2=$this1;
  var $1=FHEAP[$x2];
  var $mul=($0)*($1);
  var $y=$this1+1;
  var $2=FHEAP[$y];
  var $y3=$this1+1;
  var $3=FHEAP[$y3];
  var $mul4=($2)*($3);
  var $add=($mul)+($mul4);
  ;
  $__x_addr_i=$add;
  var $5=$__x_addr_i;
  var $call_i=_sqrtf($5);
  ;
  ;
  return $call_i;
  return null;
}


function __Z16b2CollideCirclesP10b2ManifoldPK13b2CircleShapeRK11b2TransformS3_S6_($manifold, $circleA, $xfA, $circleB, $xfB) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $manifold_addr;
  var $circleA_addr;
  var $xfA_addr;
  var $circleB_addr;
  var $xfB_addr;
  var $pA=__stackBase__;
  var $pB=__stackBase__+2;
  var $d=__stackBase__+4;
  var $distSqr;
  var $rA;
  var $rB;
  var $radius;
  $manifold_addr=$manifold;
  $circleA_addr=$circleA;
  $xfA_addr=$xfA;
  $circleB_addr=$circleB;
  $xfB_addr=$xfB;
  var $0=$manifold_addr;
  var $pointCount=$0+15;
  IHEAP[$pointCount]=0;
  var $1=$xfA_addr;
  var $2=$circleA_addr;
  var $m_p=$2+3;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pA, $1, $m_p);
  var $3=$xfB_addr;
  var $4=$circleB_addr;
  var $m_p1=$4+3;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pB, $3, $m_p1);
  __ZmiRK6b2Vec2S1_($d, $pB, $pA);
  var $call=__Z5b2DotRK6b2Vec2S1_($d, $d);
  $distSqr=$call;
  var $5=$circleA_addr;
  var $6=$5;
  var $m_radius=$6+2;
  var $7=FHEAP[$m_radius];
  $rA=$7;
  var $8=$circleB_addr;
  var $9=$8;
  var $m_radius2=$9+2;
  var $10=FHEAP[$m_radius2];
  $rB=$10;
  var $11=$rA;
  var $12=$rB;
  var $add=($11)+($12);
  $radius=$add;
  var $13=$distSqr;
  var $14=$radius;
  var $15=$radius;
  var $mul=($14)*($15);
  var $cmp=($13) > ($mul);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $return$$if_end$7: do { 
    if (__label__ == 1) {

      var $16=$manifold_addr;
      var $type=$16+14;
      IHEAP[$type]=0;
      var $17=$manifold_addr;
      var $localPoint=$17+12;
      var $18=$circleA_addr;
      var $m_p3=$18+3;
      var $19=$localPoint;
      var $20=$m_p3;
      IHEAP[$19]=IHEAP[$20]; FHEAP[$19]=FHEAP[$20]; ; IHEAP[$19+1]=IHEAP[$20+1]; FHEAP[$19+1]=FHEAP[$20+1]; ;
      var $21=$manifold_addr;
      var $localNormal=$21+10;
      __ZN6b2Vec27SetZeroEv($localNormal);
      var $22=$manifold_addr;
      var $pointCount4=$22+15;
      IHEAP[$pointCount4]=1;
      var $23=$manifold_addr;
      var $points=$23;
      var $arrayidx=$points;
      var $localPoint5=$arrayidx;
      var $24=$circleB_addr;
      var $m_p6=$24+3;
      var $25=$localPoint5;
      var $26=$m_p6;
      IHEAP[$25]=IHEAP[$26]; FHEAP[$25]=FHEAP[$26]; ; IHEAP[$25+1]=IHEAP[$26+1]; FHEAP[$25+1]=FHEAP[$26+1]; ;
      var $27=$manifold_addr;
      var $points7=$27;
      var $arrayidx8=$points7;
      var $id=$arrayidx8+4;
      var $key=$id;
      IHEAP[$key]=0;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__Z16b2CollideCirclesP10b2ManifoldPK13b2CircleShapeRK11b2TransformS3_S6_["X"]=1;

function __Z25b2CollidePolygonAndCircleP10b2ManifoldPK14b2PolygonShapeRK11b2TransformPK13b2CircleShapeS6_($manifold, $polygonA, $xfA, $circleB, $xfB) {
  var __stackBase__  = STACKTOP; STACKTOP += 32;
  var __label__;

  var $manifold_addr;
  var $polygonA_addr;
  var $xfA_addr;
  var $circleB_addr;
  var $xfB_addr;
  var $c=__stackBase__;
  var $cLocal=__stackBase__+2;
  var $normalIndex;
  var $separation;
  var $radius;
  var $vertexCount;
  var $vertices;
  var $normals;
  var $i;
  var $s;
  var $ref_tmp=__stackBase__+4;
  var $vertIndex1;
  var $vertIndex2;
  var $v1=__stackBase__+6;
  var $v2=__stackBase__+8;
  var $ref_tmp17=__stackBase__+10;
  var $ref_tmp18=__stackBase__+12;
  var $u1;
  var $ref_tmp25=__stackBase__+14;
  var $ref_tmp26=__stackBase__+16;
  var $u2;
  var $ref_tmp28=__stackBase__+18;
  var $ref_tmp29=__stackBase__+20;
  var $ref_tmp40=__stackBase__+22;
  var $ref_tmp62=__stackBase__+24;
  var $faceCenter=__stackBase__+26;
  var $ref_tmp75=__stackBase__+28;
  var $separation76;
  var $ref_tmp77=__stackBase__+30;
  $manifold_addr=$manifold;
  $polygonA_addr=$polygonA;
  $xfA_addr=$xfA;
  $circleB_addr=$circleB;
  $xfB_addr=$xfB;
  var $0=$manifold_addr;
  var $pointCount=$0+15;
  IHEAP[$pointCount]=0;
  var $1=$xfB_addr;
  var $2=$circleB_addr;
  var $m_p=$2+3;
  __Z5b2MulRK11b2TransformRK6b2Vec2($c, $1, $m_p);
  var $3=$xfA_addr;
  __Z6b2MulTRK11b2TransformRK6b2Vec2($cLocal, $3, $c);
  $normalIndex=0;
  $separation=-3.4028234663852886e+38;
  var $4=$polygonA_addr;
  var $5=$4;
  var $m_radius=$5+2;
  var $6=FHEAP[$m_radius];
  var $7=$circleB_addr;
  var $8=$7;
  var $m_radius1=$8+2;
  var $9=FHEAP[$m_radius1];
  var $add=($6)+($9);
  $radius=$add;
  var $10=$polygonA_addr;
  var $m_vertexCount=$10+37;
  var $11=IHEAP[$m_vertexCount];
  $vertexCount=$11;
  var $12=$polygonA_addr;
  var $m_vertices=$12+5;
  var $arraydecay=$m_vertices;
  $vertices=$arraydecay;
  var $13=$polygonA_addr;
  var $m_normals=$13+21;
  var $arraydecay2=$m_normals;
  $normals=$arraydecay2;
  $i=0;
  ;
  $for_cond$11: while(1) { 

    var $14=$i;
    var $15=$vertexCount;
    var $cmp=($14) < ($15);
    if (!($cmp)) { __label__ = 6;break $for_cond$11; }

    var $16=$i;
    var $17=$normals;
    var $arrayidx=$17+($16<<1);
    var $18=$i;
    var $19=$vertices;
    var $arrayidx3=$19+($18<<1);
    __ZmiRK6b2Vec2S1_($ref_tmp, $cLocal, $arrayidx3);
    var $call=__Z5b2DotRK6b2Vec2S1_($arrayidx, $ref_tmp);
    $s=$call;
    var $20=$s;
    var $21=$radius;
    var $cmp4=($20) > ($21);
    if ($cmp4) { __label__ = 18;break $for_cond$11; }

    var $22=$s;
    var $23=$separation;
    var $cmp5=($22) > ($23);
    if ($cmp5) { __label__ = 4;; } else { __label__ = 5;; }
    $if_then6$$for_inc$15: do { 
      if (__label__ == 4) {

        var $24=$s;
        $separation=$24;
        var $25=$i;
        $normalIndex=$25;
        ;
      }
    } while(0);

    var $26=$i;
    var $inc=($26)+1;
    $i=$inc;
    ;
  }
  $for_end$$if_end97$18: do { 
    if (__label__ == 6) {

      var $27=$normalIndex;
      $vertIndex1=$27;
      var $28=$vertIndex1;
      var $add8=($28)+1;
      var $29=$vertexCount;
      var $cmp9=($add8) < ($29);
      if ($cmp9) { __label__ = 7;; } else { var $cond = 0;__label__ = 8;; }
      $cond_true$$cond_end$20: do { 
        if (__label__ == 7) {

          var $30=$vertIndex1;
          var $add10=($30)+1;
          var $cond = $add10;;
        }
      } while(0);

      var $cond;
      $vertIndex2=$cond;
      var $31=$vertIndex1;
      var $32=$vertices;
      var $arrayidx11=$32+($31<<1);
      var $33=$v1;
      var $34=$arrayidx11;
      IHEAP[$33]=IHEAP[$34]; FHEAP[$33]=FHEAP[$34]; ; IHEAP[$33+1]=IHEAP[$34+1]; FHEAP[$33+1]=FHEAP[$34+1]; ;
      var $35=$vertIndex2;
      var $36=$vertices;
      var $arrayidx12=$36+($35<<1);
      var $37=$v2;
      var $38=$arrayidx12;
      IHEAP[$37]=IHEAP[$38]; FHEAP[$37]=FHEAP[$38]; ; IHEAP[$37+1]=IHEAP[$38+1]; FHEAP[$37+1]=FHEAP[$38+1]; ;
      var $39=$separation;
      var $cmp13=($39) < 1.1920928955078125e-7;
      if ($cmp13) { __label__ = 9;; } else { __label__ = 10;; }
      $if_then14$$if_end24$23: do { 
        if (__label__ == 9) {

          var $40=$manifold_addr;
          var $pointCount15=$40+15;
          IHEAP[$pointCount15]=1;
          var $41=$manifold_addr;
          var $type=$41+14;
          IHEAP[$type]=1;
          var $42=$manifold_addr;
          var $localNormal=$42+10;
          var $43=$normalIndex;
          var $44=$normals;
          var $arrayidx16=$44+($43<<1);
          var $45=$localNormal;
          var $46=$arrayidx16;
          IHEAP[$45]=IHEAP[$46]; FHEAP[$45]=FHEAP[$46]; ; IHEAP[$45+1]=IHEAP[$46+1]; FHEAP[$45+1]=FHEAP[$46+1]; ;
          var $47=$manifold_addr;
          var $localPoint=$47+12;
          __ZplRK6b2Vec2S1_($ref_tmp18, $v1, $v2);
          __ZmlfRK6b2Vec2($ref_tmp17, 0.5, $ref_tmp18);
          var $48=$localPoint;
          var $49=$ref_tmp17;
          IHEAP[$48]=IHEAP[$49]; FHEAP[$48]=FHEAP[$49]; ; IHEAP[$48+1]=IHEAP[$49+1]; FHEAP[$48+1]=FHEAP[$49+1]; ;
          var $50=$manifold_addr;
          var $points=$50;
          var $arrayidx19=$points;
          var $localPoint20=$arrayidx19;
          var $51=$circleB_addr;
          var $m_p21=$51+3;
          var $52=$localPoint20;
          var $53=$m_p21;
          IHEAP[$52]=IHEAP[$53]; FHEAP[$52]=FHEAP[$53]; ; IHEAP[$52+1]=IHEAP[$53+1]; FHEAP[$52+1]=FHEAP[$53+1]; ;
          var $54=$manifold_addr;
          var $points22=$54;
          var $arrayidx23=$points22;
          var $id=$arrayidx23+4;
          var $key=$id;
          IHEAP[$key]=0;
          ;
        }
        else if (__label__ == 10) {

          __ZmiRK6b2Vec2S1_($ref_tmp25, $cLocal, $v1);
          __ZmiRK6b2Vec2S1_($ref_tmp26, $v2, $v1);
          var $call27=__Z5b2DotRK6b2Vec2S1_($ref_tmp25, $ref_tmp26);
          $u1=$call27;
          __ZmiRK6b2Vec2S1_($ref_tmp28, $cLocal, $v2);
          __ZmiRK6b2Vec2S1_($ref_tmp29, $v1, $v2);
          var $call30=__Z5b2DotRK6b2Vec2S1_($ref_tmp28, $ref_tmp29);
          $u2=$call30;
          var $55=$u1;
          var $cmp31=($55) <= 0;
          if ($cmp31) { __label__ = 11;; } else { __label__ = 13;; }
          $if_then32$$if_else$26: do { 
            if (__label__ == 11) {

              var $call33=__Z17b2DistanceSquaredRK6b2Vec2S1_($cLocal, $v1);
              var $56=$radius;
              var $57=$radius;
              var $mul=($56)*($57);
              var $cmp34=($call33) > ($mul);
              if ($cmp34) { __label__ = 18;break $for_end$$if_end97$18; }

              var $58=$manifold_addr;
              var $pointCount37=$58+15;
              IHEAP[$pointCount37]=1;
              var $59=$manifold_addr;
              var $type38=$59+14;
              IHEAP[$type38]=1;
              var $60=$manifold_addr;
              var $localNormal39=$60+10;
              __ZmiRK6b2Vec2S1_($ref_tmp40, $cLocal, $v1);
              var $61=$localNormal39;
              var $62=$ref_tmp40;
              IHEAP[$61]=IHEAP[$62]; FHEAP[$61]=FHEAP[$62]; ; IHEAP[$61+1]=IHEAP[$62+1]; FHEAP[$61+1]=FHEAP[$62+1]; ;
              var $63=$manifold_addr;
              var $localNormal41=$63+10;
              var $call42=__ZN6b2Vec29NormalizeEv($localNormal41);
              var $64=$manifold_addr;
              var $localPoint43=$64+12;
              var $65=$localPoint43;
              var $66=$v1;
              IHEAP[$65]=IHEAP[$66]; FHEAP[$65]=FHEAP[$66]; ; IHEAP[$65+1]=IHEAP[$66+1]; FHEAP[$65+1]=FHEAP[$66+1]; ;
              var $67=$manifold_addr;
              var $points44=$67;
              var $arrayidx45=$points44;
              var $localPoint46=$arrayidx45;
              var $68=$circleB_addr;
              var $m_p47=$68+3;
              var $69=$localPoint46;
              var $70=$m_p47;
              IHEAP[$69]=IHEAP[$70]; FHEAP[$69]=FHEAP[$70]; ; IHEAP[$69+1]=IHEAP[$70+1]; FHEAP[$69+1]=FHEAP[$70+1]; ;
              var $71=$manifold_addr;
              var $points48=$71;
              var $arrayidx49=$points48;
              var $id50=$arrayidx49+4;
              var $key51=$id50;
              IHEAP[$key51]=0;
              ;
            }
            else if (__label__ == 13) {

              var $72=$u2;
              var $cmp52=($72) <= 0;
              if ($cmp52) { __label__ = 14;; } else { __label__ = 16;; }
              $if_then53$$if_else74$30: do { 
                if (__label__ == 14) {

                  var $call54=__Z17b2DistanceSquaredRK6b2Vec2S1_($cLocal, $v2);
                  var $73=$radius;
                  var $74=$radius;
                  var $mul55=($73)*($74);
                  var $cmp56=($call54) > ($mul55);
                  if ($cmp56) { __label__ = 18;break $for_end$$if_end97$18; }

                  var $75=$manifold_addr;
                  var $pointCount59=$75+15;
                  IHEAP[$pointCount59]=1;
                  var $76=$manifold_addr;
                  var $type60=$76+14;
                  IHEAP[$type60]=1;
                  var $77=$manifold_addr;
                  var $localNormal61=$77+10;
                  __ZmiRK6b2Vec2S1_($ref_tmp62, $cLocal, $v2);
                  var $78=$localNormal61;
                  var $79=$ref_tmp62;
                  IHEAP[$78]=IHEAP[$79]; FHEAP[$78]=FHEAP[$79]; ; IHEAP[$78+1]=IHEAP[$79+1]; FHEAP[$78+1]=FHEAP[$79+1]; ;
                  var $80=$manifold_addr;
                  var $localNormal63=$80+10;
                  var $call64=__ZN6b2Vec29NormalizeEv($localNormal63);
                  var $81=$manifold_addr;
                  var $localPoint65=$81+12;
                  var $82=$localPoint65;
                  var $83=$v2;
                  IHEAP[$82]=IHEAP[$83]; FHEAP[$82]=FHEAP[$83]; ; IHEAP[$82+1]=IHEAP[$83+1]; FHEAP[$82+1]=FHEAP[$83+1]; ;
                  var $84=$manifold_addr;
                  var $points66=$84;
                  var $arrayidx67=$points66;
                  var $localPoint68=$arrayidx67;
                  var $85=$circleB_addr;
                  var $m_p69=$85+3;
                  var $86=$localPoint68;
                  var $87=$m_p69;
                  IHEAP[$86]=IHEAP[$87]; FHEAP[$86]=FHEAP[$87]; ; IHEAP[$86+1]=IHEAP[$87+1]; FHEAP[$86+1]=FHEAP[$87+1]; ;
                  var $88=$manifold_addr;
                  var $points70=$88;
                  var $arrayidx71=$points70;
                  var $id72=$arrayidx71+4;
                  var $key73=$id72;
                  IHEAP[$key73]=0;
                  ;
                }
                else if (__label__ == 16) {

                  __ZplRK6b2Vec2S1_($ref_tmp75, $v1, $v2);
                  __ZmlfRK6b2Vec2($faceCenter, 0.5, $ref_tmp75);
                  __ZmiRK6b2Vec2S1_($ref_tmp77, $cLocal, $faceCenter);
                  var $89=$vertIndex1;
                  var $90=$normals;
                  var $arrayidx78=$90+($89<<1);
                  var $call79=__Z5b2DotRK6b2Vec2S1_($ref_tmp77, $arrayidx78);
                  $separation76=$call79;
                  var $91=$separation76;
                  var $92=$radius;
                  var $cmp80=($91) > ($92);
                  if ($cmp80) { __label__ = 18;break $for_end$$if_end97$18; }

                  var $93=$manifold_addr;
                  var $pointCount83=$93+15;
                  IHEAP[$pointCount83]=1;
                  var $94=$manifold_addr;
                  var $type84=$94+14;
                  IHEAP[$type84]=1;
                  var $95=$manifold_addr;
                  var $localNormal85=$95+10;
                  var $96=$vertIndex1;
                  var $97=$normals;
                  var $arrayidx86=$97+($96<<1);
                  var $98=$localNormal85;
                  var $99=$arrayidx86;
                  IHEAP[$98]=IHEAP[$99]; FHEAP[$98]=FHEAP[$99]; ; IHEAP[$98+1]=IHEAP[$99+1]; FHEAP[$98+1]=FHEAP[$99+1]; ;
                  var $100=$manifold_addr;
                  var $localPoint87=$100+12;
                  var $101=$localPoint87;
                  var $102=$faceCenter;
                  IHEAP[$101]=IHEAP[$102]; FHEAP[$101]=FHEAP[$102]; ; IHEAP[$101+1]=IHEAP[$102+1]; FHEAP[$101+1]=FHEAP[$102+1]; ;
                  var $103=$manifold_addr;
                  var $points88=$103;
                  var $arrayidx89=$points88;
                  var $localPoint90=$arrayidx89;
                  var $104=$circleB_addr;
                  var $m_p91=$104+3;
                  var $105=$localPoint90;
                  var $106=$m_p91;
                  IHEAP[$105]=IHEAP[$106]; FHEAP[$105]=FHEAP[$106]; ; IHEAP[$105+1]=IHEAP[$106+1]; FHEAP[$105+1]=FHEAP[$106+1]; ;
                  var $107=$manifold_addr;
                  var $points92=$107;
                  var $arrayidx93=$points92;
                  var $id94=$arrayidx93+4;
                  var $key95=$id94;
                  IHEAP[$key95]=0;
                  ;
                }
              } while(0);
            }
          } while(0);
        }
      } while(0);
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__Z25b2CollidePolygonAndCircleP10b2ManifoldPK14b2PolygonShapeRK11b2TransformPK13b2CircleShapeS6_["X"]=1;

function __Z17b2DistanceSquaredRK6b2Vec2S1_($a, $b) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $a_addr;
  var $b_addr;
  var $c=__stackBase__;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $1=$b_addr;
  __ZmiRK6b2Vec2S1_($c, $0, $1);
  var $call=__Z5b2DotRK6b2Vec2S1_($c, $c);
  STACKTOP = __stackBase__;
  return $call;
  return null;
}


function __Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_($manifold, $edgeA, $xfA, $circleB, $xfB) {
  var __stackBase__  = STACKTOP; STACKTOP += 56;
  var __label__;

  var $manifold_addr;
  var $edgeA_addr;
  var $xfA_addr;
  var $circleB_addr;
  var $xfB_addr;
  var $Q=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $A=__stackBase__+4;
  var $B=__stackBase__+6;
  var $e=__stackBase__+8;
  var $u;
  var $ref_tmp1=__stackBase__+10;
  var $v;
  var $ref_tmp2=__stackBase__+12;
  var $radius;
  var $cf=__stackBase__+14;
  var $P=__stackBase__+18;
  var $d=__stackBase__+20;
  var $dd;
  var $A1=__stackBase__+22;
  var $B1=__stackBase__+24;
  var $e1=__stackBase__+26;
  var $u1;
  var $ref_tmp9=__stackBase__+28;
  var $P27=__stackBase__+30;
  var $d28=__stackBase__+32;
  var $dd29;
  var $B2=__stackBase__+34;
  var $A2=__stackBase__+36;
  var $e2=__stackBase__+38;
  var $v2;
  var $ref_tmp37=__stackBase__+40;
  var $den;
  var $P64=__stackBase__+42;
  var $ref_tmp65=__stackBase__+44;
  var $ref_tmp66=__stackBase__+46;
  var $ref_tmp67=__stackBase__+48;
  var $d68=__stackBase__+50;
  var $dd69;
  var $n=__stackBase__+52;
  var $ref_tmp75=__stackBase__+54;
  $manifold_addr=$manifold;
  $edgeA_addr=$edgeA;
  $xfA_addr=$xfA;
  $circleB_addr=$circleB;
  $xfB_addr=$xfB;
  var $0=$manifold_addr;
  var $pointCount=$0+15;
  IHEAP[$pointCount]=0;
  var $1=$xfA_addr;
  var $2=$xfB_addr;
  var $3=$circleB_addr;
  var $m_p=$3+3;
  __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp, $2, $m_p);
  __Z6b2MulTRK11b2TransformRK6b2Vec2($Q, $1, $ref_tmp);
  var $4=$edgeA_addr;
  var $m_vertex1=$4+3;
  var $5=$A;
  var $6=$m_vertex1;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $7=$edgeA_addr;
  var $m_vertex2=$7+5;
  var $8=$B;
  var $9=$m_vertex2;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  __ZmiRK6b2Vec2S1_($e, $B, $A);
  __ZmiRK6b2Vec2S1_($ref_tmp1, $B, $Q);
  var $call=__Z5b2DotRK6b2Vec2S1_($e, $ref_tmp1);
  $u=$call;
  __ZmiRK6b2Vec2S1_($ref_tmp2, $Q, $A);
  var $call3=__Z5b2DotRK6b2Vec2S1_($e, $ref_tmp2);
  $v=$call3;
  var $10=$edgeA_addr;
  var $11=$10;
  var $m_radius=$11+2;
  var $12=FHEAP[$m_radius];
  var $13=$circleB_addr;
  var $14=$13;
  var $m_radius4=$14+2;
  var $15=FHEAP[$m_radius4];
  var $add=($12)+($15);
  $radius=$add;
  var $indexB=$cf+1;
  IHEAP[$indexB]=0;
  var $typeB=$cf+3;
  IHEAP[$typeB]=0;
  var $16=$v;
  var $cmp=($16) <= 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 5;; }
  $if_then$$if_end24$39: do { 
    if (__label__ == 1) {

      var $17=$P;
      var $18=$A;
      IHEAP[$17]=IHEAP[$18]; FHEAP[$17]=FHEAP[$18]; ; IHEAP[$17+1]=IHEAP[$18+1]; FHEAP[$17+1]=FHEAP[$18+1]; ;
      __ZmiRK6b2Vec2S1_($d, $Q, $P);
      var $call5=__Z5b2DotRK6b2Vec2S1_($d, $d);
      $dd=$call5;
      var $19=$dd;
      var $20=$radius;
      var $21=$radius;
      var $mul=($20)*($21);
      var $cmp6=($19) > ($mul);
      if ($cmp6) { __label__ = 16;break $if_then$$if_end24$39; }

      var $22=$edgeA_addr;
      var $m_hasVertex0=$22+11;
      var $23=IHEAP[$m_hasVertex0];
      var $tobool=((($23)) & 1);
      if ($tobool) { __label__ = 3;; } else { __label__ = 4;; }
      $if_then8$$if_end14$42: do { 
        if (__label__ == 3) {

          var $24=$edgeA_addr;
          var $m_vertex0=$24+7;
          var $25=$A1;
          var $26=$m_vertex0;
          IHEAP[$25]=IHEAP[$26]; FHEAP[$25]=FHEAP[$26]; ; IHEAP[$25+1]=IHEAP[$26+1]; FHEAP[$25+1]=FHEAP[$26+1]; ;
          var $27=$B1;
          var $28=$A;
          IHEAP[$27]=IHEAP[$28]; FHEAP[$27]=FHEAP[$28]; ; IHEAP[$27+1]=IHEAP[$28+1]; FHEAP[$27+1]=FHEAP[$28+1]; ;
          __ZmiRK6b2Vec2S1_($e1, $B1, $A1);
          __ZmiRK6b2Vec2S1_($ref_tmp9, $B1, $Q);
          var $call10=__Z5b2DotRK6b2Vec2S1_($e1, $ref_tmp9);
          $u1=$call10;
          var $29=$u1;
          var $cmp11=($29) > 0;
          if ($cmp11) { __label__ = 16;break $if_then$$if_end24$39; }
        }
      } while(0);

      var $indexA=$cf;
      IHEAP[$indexA]=0;
      var $typeA=$cf+2;
      IHEAP[$typeA]=0;
      var $30=$manifold_addr;
      var $pointCount15=$30+15;
      IHEAP[$pointCount15]=1;
      var $31=$manifold_addr;
      var $type=$31+14;
      IHEAP[$type]=0;
      var $32=$manifold_addr;
      var $localNormal=$32+10;
      __ZN6b2Vec27SetZeroEv($localNormal);
      var $33=$manifold_addr;
      var $localPoint=$33+12;
      var $34=$localPoint;
      var $35=$P;
      IHEAP[$34]=IHEAP[$35]; FHEAP[$34]=FHEAP[$35]; ; IHEAP[$34+1]=IHEAP[$35+1]; FHEAP[$34+1]=FHEAP[$35+1]; ;
      var $36=$manifold_addr;
      var $points=$36;
      var $arrayidx=$points;
      var $id=$arrayidx+4;
      var $key=$id;
      IHEAP[$key]=0;
      var $37=$manifold_addr;
      var $points16=$37;
      var $arrayidx17=$points16;
      var $id18=$arrayidx17+4;
      var $cf19=$id18;
      var $38=$cf19;
      var $39=$cf;
      IHEAP[$38]=IHEAP[$39]; FHEAP[$38]=FHEAP[$39]; ; IHEAP[$38+1]=IHEAP[$39+1]; FHEAP[$38+1]=FHEAP[$39+1]; ; IHEAP[$38+2]=IHEAP[$39+2]; FHEAP[$38+2]=FHEAP[$39+2]; ; IHEAP[$38+3]=IHEAP[$39+3]; FHEAP[$38+3]=FHEAP[$39+3]; ;
      var $40=$manifold_addr;
      var $points20=$40;
      var $arrayidx21=$points20;
      var $localPoint22=$arrayidx21;
      var $41=$circleB_addr;
      var $m_p23=$41+3;
      var $42=$localPoint22;
      var $43=$m_p23;
      IHEAP[$42]=IHEAP[$43]; FHEAP[$42]=FHEAP[$43]; ; IHEAP[$42+1]=IHEAP[$43+1]; FHEAP[$42+1]=FHEAP[$43+1]; ;
      ;
    }
    else if (__label__ == 5) {

      var $44=$u;
      var $cmp25=($44) <= 0;
      if ($cmp25) { __label__ = 6;; } else { __label__ = 10;; }
      $if_then26$$if_end61$46: do { 
        if (__label__ == 6) {

          var $45=$P27;
          var $46=$B;
          IHEAP[$45]=IHEAP[$46]; FHEAP[$45]=FHEAP[$46]; ; IHEAP[$45+1]=IHEAP[$46+1]; FHEAP[$45+1]=FHEAP[$46+1]; ;
          __ZmiRK6b2Vec2S1_($d28, $Q, $P27);
          var $call30=__Z5b2DotRK6b2Vec2S1_($d28, $d28);
          $dd29=$call30;
          var $47=$dd29;
          var $48=$radius;
          var $49=$radius;
          var $mul31=($48)*($49);
          var $cmp32=($47) > ($mul31);
          if ($cmp32) { __label__ = 16;break $if_then$$if_end24$39; }

          var $50=$edgeA_addr;
          var $m_hasVertex3=$50+12;
          var $51=IHEAP[$m_hasVertex3];
          var $tobool35=((($51)) & 1);
          if ($tobool35) { __label__ = 8;; } else { __label__ = 9;; }
          $if_then36$$if_end42$49: do { 
            if (__label__ == 8) {

              var $52=$edgeA_addr;
              var $m_vertex3=$52+9;
              var $53=$B2;
              var $54=$m_vertex3;
              IHEAP[$53]=IHEAP[$54]; FHEAP[$53]=FHEAP[$54]; ; IHEAP[$53+1]=IHEAP[$54+1]; FHEAP[$53+1]=FHEAP[$54+1]; ;
              var $55=$A2;
              var $56=$B;
              IHEAP[$55]=IHEAP[$56]; FHEAP[$55]=FHEAP[$56]; ; IHEAP[$55+1]=IHEAP[$56+1]; FHEAP[$55+1]=FHEAP[$56+1]; ;
              __ZmiRK6b2Vec2S1_($e2, $B2, $A2);
              __ZmiRK6b2Vec2S1_($ref_tmp37, $Q, $A2);
              var $call38=__Z5b2DotRK6b2Vec2S1_($e2, $ref_tmp37);
              $v2=$call38;
              var $57=$v2;
              var $cmp39=($57) > 0;
              if ($cmp39) { __label__ = 16;break $if_then$$if_end24$39; }
            }
          } while(0);

          var $indexA43=$cf;
          IHEAP[$indexA43]=1;
          var $typeA44=$cf+2;
          IHEAP[$typeA44]=0;
          var $58=$manifold_addr;
          var $pointCount45=$58+15;
          IHEAP[$pointCount45]=1;
          var $59=$manifold_addr;
          var $type46=$59+14;
          IHEAP[$type46]=0;
          var $60=$manifold_addr;
          var $localNormal47=$60+10;
          __ZN6b2Vec27SetZeroEv($localNormal47);
          var $61=$manifold_addr;
          var $localPoint48=$61+12;
          var $62=$localPoint48;
          var $63=$P27;
          IHEAP[$62]=IHEAP[$63]; FHEAP[$62]=FHEAP[$63]; ; IHEAP[$62+1]=IHEAP[$63+1]; FHEAP[$62+1]=FHEAP[$63+1]; ;
          var $64=$manifold_addr;
          var $points49=$64;
          var $arrayidx50=$points49;
          var $id51=$arrayidx50+4;
          var $key52=$id51;
          IHEAP[$key52]=0;
          var $65=$manifold_addr;
          var $points53=$65;
          var $arrayidx54=$points53;
          var $id55=$arrayidx54+4;
          var $cf56=$id55;
          var $66=$cf56;
          var $67=$cf;
          IHEAP[$66]=IHEAP[$67]; FHEAP[$66]=FHEAP[$67]; ; IHEAP[$66+1]=IHEAP[$67+1]; FHEAP[$66+1]=FHEAP[$67+1]; ; IHEAP[$66+2]=IHEAP[$67+2]; FHEAP[$66+2]=FHEAP[$67+2]; ; IHEAP[$66+3]=IHEAP[$67+3]; FHEAP[$66+3]=FHEAP[$67+3]; ;
          var $68=$manifold_addr;
          var $points57=$68;
          var $arrayidx58=$points57;
          var $localPoint59=$arrayidx58;
          var $69=$circleB_addr;
          var $m_p60=$69+3;
          var $70=$localPoint59;
          var $71=$m_p60;
          IHEAP[$70]=IHEAP[$71]; FHEAP[$70]=FHEAP[$71]; ; IHEAP[$70+1]=IHEAP[$71+1]; FHEAP[$70+1]=FHEAP[$71+1]; ;
          ;
        }
        else if (__label__ == 10) {

          var $call62=__Z5b2DotRK6b2Vec2S1_($e, $e);
          $den=$call62;
          var $72=$den;
          var $cmp63=($72) > 0;
          if ($cmp63) { __label__ = 12;; } else { __label__ = 11;; }
          $cond_end$$cond_false$53: do { 
            if (__label__ == 11) {

              ___assert_func(__str52, 127, ___PRETTY_FUNCTION____Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_, __str153);
              ;
            }
          } while(0);

          var $73=$den;
          var $div=1/($73);
          var $74=$u;
          __ZmlfRK6b2Vec2($ref_tmp66, $74, $A);
          var $75=$v;
          __ZmlfRK6b2Vec2($ref_tmp67, $75, $B);
          __ZplRK6b2Vec2S1_($ref_tmp65, $ref_tmp66, $ref_tmp67);
          __ZmlfRK6b2Vec2($P64, $div, $ref_tmp65);
          __ZmiRK6b2Vec2S1_($d68, $Q, $P64);
          var $call70=__Z5b2DotRK6b2Vec2S1_($d68, $d68);
          $dd69=$call70;
          var $76=$dd69;
          var $77=$radius;
          var $78=$radius;
          var $mul71=($77)*($78);
          var $cmp72=($76) > ($mul71);
          if ($cmp72) { __label__ = 16;break $if_then$$if_end24$39; }

          var $y=$e+1;
          var $79=FHEAP[$y];
          var $sub=(-($79));
          var $x=$e;
          var $80=FHEAP[$x];
          __ZN6b2Vec2C1Eff($n, $sub, $80);
          __ZmiRK6b2Vec2S1_($ref_tmp75, $Q, $A);
          var $call76=__Z5b2DotRK6b2Vec2S1_($n, $ref_tmp75);
          var $cmp77=($call76) < 0;
          if ($cmp77) { __label__ = 14;; } else { __label__ = 15;; }
          $if_then78$$if_end83$57: do { 
            if (__label__ == 14) {

              var $x79=$n;
              var $81=FHEAP[$x79];
              var $sub80=(-($81));
              var $y81=$n+1;
              var $82=FHEAP[$y81];
              var $sub82=(-($82));
              __ZN6b2Vec23SetEff($n, $sub80, $sub82);
              ;
            }
          } while(0);

          var $call84=__ZN6b2Vec29NormalizeEv($n);
          var $indexA85=$cf;
          IHEAP[$indexA85]=0;
          var $typeA86=$cf+2;
          IHEAP[$typeA86]=1;
          var $83=$manifold_addr;
          var $pointCount87=$83+15;
          IHEAP[$pointCount87]=1;
          var $84=$manifold_addr;
          var $type88=$84+14;
          IHEAP[$type88]=1;
          var $85=$manifold_addr;
          var $localNormal89=$85+10;
          var $86=$localNormal89;
          var $87=$n;
          IHEAP[$86]=IHEAP[$87]; FHEAP[$86]=FHEAP[$87]; ; IHEAP[$86+1]=IHEAP[$87+1]; FHEAP[$86+1]=FHEAP[$87+1]; ;
          var $88=$manifold_addr;
          var $localPoint90=$88+12;
          var $89=$localPoint90;
          var $90=$A;
          IHEAP[$89]=IHEAP[$90]; FHEAP[$89]=FHEAP[$90]; ; IHEAP[$89+1]=IHEAP[$90+1]; FHEAP[$89+1]=FHEAP[$90+1]; ;
          var $91=$manifold_addr;
          var $points91=$91;
          var $arrayidx92=$points91;
          var $id93=$arrayidx92+4;
          var $key94=$id93;
          IHEAP[$key94]=0;
          var $92=$manifold_addr;
          var $points95=$92;
          var $arrayidx96=$points95;
          var $id97=$arrayidx96+4;
          var $cf98=$id97;
          var $93=$cf98;
          var $94=$cf;
          IHEAP[$93]=IHEAP[$94]; FHEAP[$93]=FHEAP[$94]; ; IHEAP[$93+1]=IHEAP[$94+1]; FHEAP[$93+1]=FHEAP[$94+1]; ; IHEAP[$93+2]=IHEAP[$94+2]; FHEAP[$93+2]=FHEAP[$94+2]; ; IHEAP[$93+3]=IHEAP[$94+3]; FHEAP[$93+3]=FHEAP[$94+3]; ;
          var $95=$manifold_addr;
          var $points99=$95;
          var $arrayidx100=$points99;
          var $localPoint101=$arrayidx100;
          var $96=$circleB_addr;
          var $m_p102=$96+3;
          var $97=$localPoint101;
          var $98=$m_p102;
          IHEAP[$97]=IHEAP[$98]; FHEAP[$97]=FHEAP[$98]; ; IHEAP[$97+1]=IHEAP[$98+1]; FHEAP[$97+1]=FHEAP[$98+1]; ;
          ;
        }
      } while(0);
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_["X"]=1;

function __ZN12b2EPCollider7CollideEP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS7_($this, $manifold, $edgeA, $xfA, $polygonB, $xfB) {
  var __stackBase__  = STACKTOP; STACKTOP += 125;
  var __label__;

  var $this_addr;
  var $manifold_addr;
  var $edgeA_addr;
  var $xfA_addr;
  var $polygonB_addr;
  var $xfB_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp2=__stackBase__+4;
  var $hasVertex0;
  var $hasVertex3;
  var $edge1=__stackBase__+6;
  var $offset1;
  var $ref_tmp9=__stackBase__+8;
  var $offset0;
  var $offset2;
  var $convex1;
  var $convex2;
  var $edge0=__stackBase__+10;
  var $ref_tmp23=__stackBase__+12;
  var $edge2=__stackBase__+14;
  var $ref_tmp39=__stackBase__+16;
  var $ref_tmp62=__stackBase__+18;
  var $ref_tmp65=__stackBase__+20;
  var $ref_tmp68=__stackBase__+22;
  var $ref_tmp92=__stackBase__+24;
  var $ref_tmp95=__stackBase__+26;
  var $ref_tmp98=__stackBase__+28;
  var $ref_tmp124=__stackBase__+30;
  var $ref_tmp127=__stackBase__+32;
  var $ref_tmp130=__stackBase__+34;
  var $ref_tmp153=__stackBase__+36;
  var $ref_tmp156=__stackBase__+38;
  var $ref_tmp159=__stackBase__+40;
  var $ref_tmp184=__stackBase__+42;
  var $ref_tmp188=__stackBase__+44;
  var $ref_tmp193=__stackBase__+46;
  var $ref_tmp211=__stackBase__+48;
  var $ref_tmp215=__stackBase__+50;
  var $ref_tmp220=__stackBase__+52;
  var $ref_tmp242=__stackBase__+54;
  var $ref_tmp248=__stackBase__+56;
  var $ref_tmp251=__stackBase__+58;
  var $ref_tmp269=__stackBase__+60;
  var $ref_tmp275=__stackBase__+62;
  var $ref_tmp278=__stackBase__+64;
  var $ref_tmp294=__stackBase__+66;
  var $ref_tmp297=__stackBase__+68;
  var $ref_tmp301=__stackBase__+70;
  var $i;
  var $ref_tmp314=__stackBase__+72;
  var $ref_tmp319=__stackBase__+74;
  var $edgeAxis=__stackBase__+76;
  var $polygonAxis=__stackBase__+79;
  var $k_relativeTol;
  var $k_absoluteTol;
  var $primaryAxis=__stackBase__+82;
  var $ie=__stackBase__+85;
  var $rf=__stackBase__+91;
  var $bestIndex;
  var $bestValue;
  var $i357;
  var $value;
  var $i1;
  var $i2;
  var $ref_tmp431=__stackBase__+105;
  var $ref_tmp512=__stackBase__+107;
  var $clipPoints1=__stackBase__+109;
  var $clipPoints2=__stackBase__+115;
  var $np;
  var $pointCount566;
  var $i567;
  var $separation571;
  var $ref_tmp573=__stackBase__+121;
  var $cp;
  var $ref_tmp586=__stackBase__+123;
  $this_addr=$this;
  $manifold_addr=$manifold;
  $edgeA_addr=$edgeA;
  $xfA_addr=$xfA;
  $polygonB_addr=$polygonB;
  $xfB_addr=$xfB;
  var $this1=$this_addr;
  var $m_xf=$this1+33;
  var $0=$xfA_addr;
  var $1=$xfB_addr;
  __Z6b2MulTRK11b2TransformS1_($ref_tmp, $0, $1);
  var $2=$m_xf;
  var $3=$ref_tmp;
  IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ; IHEAP[$2+2]=IHEAP[$3+2]; FHEAP[$2+2]=FHEAP[$3+2]; ; IHEAP[$2+3]=IHEAP[$3+3]; FHEAP[$2+3]=FHEAP[$3+3]; ;
  var $m_centroidB=$this1+37;
  var $m_xf3=$this1+33;
  var $4=$polygonB_addr;
  var $m_centroid=$4+3;
  __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp2, $m_xf3, $m_centroid);
  var $5=$m_centroidB;
  var $6=$ref_tmp2;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_v0=$this1+39;
  var $7=$edgeA_addr;
  var $m_vertex0=$7+7;
  var $8=$m_v0;
  var $9=$m_vertex0;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_v1=$this1+41;
  var $10=$edgeA_addr;
  var $m_vertex1=$10+3;
  var $11=$m_v1;
  var $12=$m_vertex1;
  IHEAP[$11]=IHEAP[$12]; FHEAP[$11]=FHEAP[$12]; ; IHEAP[$11+1]=IHEAP[$12+1]; FHEAP[$11+1]=FHEAP[$12+1]; ;
  var $m_v2=$this1+43;
  var $13=$edgeA_addr;
  var $m_vertex2=$13+5;
  var $14=$m_v2;
  var $15=$m_vertex2;
  IHEAP[$14]=IHEAP[$15]; FHEAP[$14]=FHEAP[$15]; ; IHEAP[$14+1]=IHEAP[$15+1]; FHEAP[$14+1]=FHEAP[$15+1]; ;
  var $m_v3=$this1+45;
  var $16=$edgeA_addr;
  var $m_vertex3=$16+9;
  var $17=$m_v3;
  var $18=$m_vertex3;
  IHEAP[$17]=IHEAP[$18]; FHEAP[$17]=FHEAP[$18]; ; IHEAP[$17+1]=IHEAP[$18+1]; FHEAP[$17+1]=FHEAP[$18+1]; ;
  var $19=$edgeA_addr;
  var $m_hasVertex0=$19+11;
  var $20=IHEAP[$m_hasVertex0];
  var $tobool=((($20)) & 1);
  var $frombool=($tobool);
  $hasVertex0=$frombool;
  var $21=$edgeA_addr;
  var $m_hasVertex3=$21+12;
  var $22=IHEAP[$m_hasVertex3];
  var $tobool4=((($22)) & 1);
  var $frombool5=($tobool4);
  $hasVertex3=$frombool5;
  var $m_v26=$this1+43;
  var $m_v17=$this1+41;
  __ZmiRK6b2Vec2S1_($edge1, $m_v26, $m_v17);
  var $call=__ZN6b2Vec29NormalizeEv($edge1);
  var $m_normal1=$this1+49;
  var $y=$edge1+1;
  var $23=FHEAP[$y];
  var $x=$edge1;
  var $24=FHEAP[$x];
  var $sub=(-($24));
  __ZN6b2Vec23SetEff($m_normal1, $23, $sub);
  var $m_normal18=$this1+49;
  var $m_centroidB10=$this1+37;
  var $m_v111=$this1+41;
  __ZmiRK6b2Vec2S1_($ref_tmp9, $m_centroidB10, $m_v111);
  var $call12=__Z5b2DotRK6b2Vec2S1_($m_normal18, $ref_tmp9);
  $offset1=$call12;
  $offset0=0;
  $offset2=0;
  $convex1=0;
  $convex2=0;
  var $25=$hasVertex0;
  var $tobool13=((($25)) & 1);
  if ($tobool13) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$2: do { 
    if (__label__ == 1) {

      var $m_v114=$this1+41;
      var $m_v015=$this1+39;
      __ZmiRK6b2Vec2S1_($edge0, $m_v114, $m_v015);
      var $call16=__ZN6b2Vec29NormalizeEv($edge0);
      var $m_normal0=$this1+47;
      var $y17=$edge0+1;
      var $26=FHEAP[$y17];
      var $x18=$edge0;
      var $27=FHEAP[$x18];
      var $sub19=(-($27));
      __ZN6b2Vec23SetEff($m_normal0, $26, $sub19);
      var $call20=__Z7b2CrossRK6b2Vec2S1_($edge0, $edge1);
      var $cmp=($call20) >= 0;
      var $frombool21=($cmp);
      $convex1=$frombool21;
      var $m_normal022=$this1+47;
      var $m_centroidB24=$this1+37;
      var $m_v025=$this1+39;
      __ZmiRK6b2Vec2S1_($ref_tmp23, $m_centroidB24, $m_v025);
      var $call26=__Z5b2DotRK6b2Vec2S1_($m_normal022, $ref_tmp23);
      $offset0=$call26;
      ;
    }
  } while(0);

  var $28=$hasVertex3;
  var $tobool27=((($28)) & 1);
  if ($tobool27) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then28$$if_end43$5: do { 
    if (__label__ == 3) {

      var $m_v329=$this1+45;
      var $m_v230=$this1+43;
      __ZmiRK6b2Vec2S1_($edge2, $m_v329, $m_v230);
      var $call31=__ZN6b2Vec29NormalizeEv($edge2);
      var $m_normal2=$this1+51;
      var $y32=$edge2+1;
      var $29=FHEAP[$y32];
      var $x33=$edge2;
      var $30=FHEAP[$x33];
      var $sub34=(-($30));
      __ZN6b2Vec23SetEff($m_normal2, $29, $sub34);
      var $call35=__Z7b2CrossRK6b2Vec2S1_($edge1, $edge2);
      var $cmp36=($call35) > 0;
      var $frombool37=($cmp36);
      $convex2=$frombool37;
      var $m_normal238=$this1+51;
      var $m_centroidB40=$this1+37;
      var $m_v241=$this1+43;
      __ZmiRK6b2Vec2S1_($ref_tmp39, $m_centroidB40, $m_v241);
      var $call42=__Z5b2DotRK6b2Vec2S1_($m_normal238, $ref_tmp39);
      $offset2=$call42;
      ;
    }
  } while(0);

  var $31=$hasVertex0;
  var $tobool44=((($31)) & 1);
  if ($tobool44) { __label__ = 5;; } else { __label__ = 34;; }
  $land_lhs_true$$if_else165$8: do { 
    if (__label__ == 5) {

      var $32=$hasVertex3;
      var $tobool45=((($32)) & 1);
      if (!($tobool45)) { __label__ = 34;break $land_lhs_true$$if_else165$8; }

      var $33=$convex1;
      var $tobool47=((($33)) & 1);
      if ($tobool47) { __label__ = 7;; } else { __label__ = 14;; }
      $land_lhs_true48$$if_else71$11: do { 
        if (__label__ == 7) {

          var $34=$convex2;
          var $tobool49=((($34)) & 1);
          if (!($tobool49)) { __label__ = 14;break $land_lhs_true48$$if_else71$11; }

          var $35=$offset0;
          var $cmp51=($35) >= 0;
          if ($cmp51) { var $38 = 1;__label__ = 11;; } else { __label__ = 9;; }
          $lor_end$$lor_lhs_false$14: do { 
            if (__label__ == 9) {

              var $36=$offset1;
              var $cmp52=($36) >= 0;
              if ($cmp52) { var $38 = 1;__label__ = 11;break $lor_end$$lor_lhs_false$14; }

              var $37=$offset2;
              var $cmp53=($37) >= 0;
              var $38 = $cmp53;;
            }
          } while(0);

          var $38;
          var $m_front=$this1+62;
          var $frombool54=($38);
          IHEAP[$m_front]=$frombool54;
          var $m_front55=$this1+62;
          var $39=IHEAP[$m_front55];
          var $tobool56=((($39)) & 1);
          var $m_normal=$this1+53;
          var $m_normal158=$this1+49;
          if ($tobool56) { __label__ = 12;; } else { __label__ = 13;; }
          $if_then57$$if_else$18: do { 
            if (__label__ == 12) {

              var $40=$m_normal;
              var $41=$m_normal158;
              IHEAP[$40]=IHEAP[$41]; FHEAP[$40]=FHEAP[$41]; ; IHEAP[$40+1]=IHEAP[$41+1]; FHEAP[$40+1]=FHEAP[$41+1]; ;
              var $m_lowerLimit=$this1+57;
              var $m_normal059=$this1+47;
              var $42=$m_lowerLimit;
              var $43=$m_normal059;
              IHEAP[$42]=IHEAP[$43]; FHEAP[$42]=FHEAP[$43]; ; IHEAP[$42+1]=IHEAP[$43+1]; FHEAP[$42+1]=FHEAP[$43+1]; ;
              var $m_upperLimit=$this1+59;
              var $m_normal260=$this1+51;
              var $44=$m_upperLimit;
              var $45=$m_normal260;
              IHEAP[$44]=IHEAP[$45]; FHEAP[$44]=FHEAP[$45]; ; IHEAP[$44+1]=IHEAP[$45+1]; FHEAP[$44+1]=FHEAP[$45+1]; ;
              __label__ = 61;break $land_lhs_true$$if_else165$8;
            }
            else if (__label__ == 13) {

              __ZNK6b2Vec2ngEv($ref_tmp62, $m_normal158);
              var $46=$m_normal;
              var $47=$ref_tmp62;
              IHEAP[$46]=IHEAP[$47]; FHEAP[$46]=FHEAP[$47]; ; IHEAP[$46+1]=IHEAP[$47+1]; FHEAP[$46+1]=FHEAP[$47+1]; ;
              var $m_lowerLimit64=$this1+57;
              var $m_normal166=$this1+49;
              __ZNK6b2Vec2ngEv($ref_tmp65, $m_normal166);
              var $48=$m_lowerLimit64;
              var $49=$ref_tmp65;
              IHEAP[$48]=IHEAP[$49]; FHEAP[$48]=FHEAP[$49]; ; IHEAP[$48+1]=IHEAP[$49+1]; FHEAP[$48+1]=FHEAP[$49+1]; ;
              var $m_upperLimit67=$this1+59;
              var $m_normal169=$this1+49;
              __ZNK6b2Vec2ngEv($ref_tmp68, $m_normal169);
              var $50=$m_upperLimit67;
              var $51=$ref_tmp68;
              IHEAP[$50]=IHEAP[$51]; FHEAP[$50]=FHEAP[$51]; ; IHEAP[$50+1]=IHEAP[$51+1]; FHEAP[$50+1]=FHEAP[$51+1]; ;
              __label__ = 61;break $land_lhs_true$$if_else165$8;
            }
          } while(0);
        }
      } while(0);

      var $52=$convex1;
      var $tobool72=((($52)) & 1);
      if ($tobool72) { __label__ = 15;; } else { __label__ = 21;; }
      $if_then73$$if_else101$22: do { 
        if (__label__ == 15) {

          var $53=$offset0;
          var $cmp74=($53) >= 0;
          if ($cmp74) { var $56 = 1;__label__ = 18;; } else { __label__ = 16;; }
          $lor_end78$$lor_rhs75$24: do { 
            if (__label__ == 16) {

              var $54=$offset1;
              var $cmp76=($54) >= 0;
              if (!($cmp76)) { var $56 = 0;__label__ = 18;break $lor_end78$$lor_rhs75$24; }

              var $55=$offset2;
              var $cmp77=($55) >= 0;
              var $56 = $cmp77;;
            }
          } while(0);

          var $56;
          var $m_front79=$this1+62;
          var $frombool80=($56);
          IHEAP[$m_front79]=$frombool80;
          var $m_front81=$this1+62;
          var $57=IHEAP[$m_front81];
          var $tobool82=((($57)) & 1);
          var $m_normal84=$this1+53;
          var $m_normal185=$this1+49;
          if ($tobool82) { __label__ = 19;; } else { __label__ = 20;; }
          $if_then83$$if_else90$28: do { 
            if (__label__ == 19) {

              var $58=$m_normal84;
              var $59=$m_normal185;
              IHEAP[$58]=IHEAP[$59]; FHEAP[$58]=FHEAP[$59]; ; IHEAP[$58+1]=IHEAP[$59+1]; FHEAP[$58+1]=FHEAP[$59+1]; ;
              var $m_lowerLimit86=$this1+57;
              var $m_normal087=$this1+47;
              var $60=$m_lowerLimit86;
              var $61=$m_normal087;
              IHEAP[$60]=IHEAP[$61]; FHEAP[$60]=FHEAP[$61]; ; IHEAP[$60+1]=IHEAP[$61+1]; FHEAP[$60+1]=FHEAP[$61+1]; ;
              var $m_upperLimit88=$this1+59;
              var $m_normal189=$this1+49;
              var $62=$m_upperLimit88;
              var $63=$m_normal189;
              IHEAP[$62]=IHEAP[$63]; FHEAP[$62]=FHEAP[$63]; ; IHEAP[$62+1]=IHEAP[$63+1]; FHEAP[$62+1]=FHEAP[$63+1]; ;
              __label__ = 61;break $land_lhs_true$$if_else165$8;
            }
            else if (__label__ == 20) {

              __ZNK6b2Vec2ngEv($ref_tmp92, $m_normal185);
              var $64=$m_normal84;
              var $65=$ref_tmp92;
              IHEAP[$64]=IHEAP[$65]; FHEAP[$64]=FHEAP[$65]; ; IHEAP[$64+1]=IHEAP[$65+1]; FHEAP[$64+1]=FHEAP[$65+1]; ;
              var $m_lowerLimit94=$this1+57;
              var $m_normal296=$this1+51;
              __ZNK6b2Vec2ngEv($ref_tmp95, $m_normal296);
              var $66=$m_lowerLimit94;
              var $67=$ref_tmp95;
              IHEAP[$66]=IHEAP[$67]; FHEAP[$66]=FHEAP[$67]; ; IHEAP[$66+1]=IHEAP[$67+1]; FHEAP[$66+1]=FHEAP[$67+1]; ;
              var $m_upperLimit97=$this1+59;
              var $m_normal199=$this1+49;
              __ZNK6b2Vec2ngEv($ref_tmp98, $m_normal199);
              var $68=$m_upperLimit97;
              var $69=$ref_tmp98;
              IHEAP[$68]=IHEAP[$69]; FHEAP[$68]=FHEAP[$69]; ; IHEAP[$68+1]=IHEAP[$69+1]; FHEAP[$68+1]=FHEAP[$69+1]; ;
              __label__ = 61;break $land_lhs_true$$if_else165$8;
            }
          } while(0);
        }
        else if (__label__ == 21) {

          var $70=$convex2;
          var $tobool102=((($70)) & 1);
          if ($tobool102) { __label__ = 22;; } else { __label__ = 28;; }
          $if_then103$$if_else133$32: do { 
            if (__label__ == 22) {

              var $71=$offset2;
              var $cmp104=($71) >= 0;
              if ($cmp104) { var $74 = 1;__label__ = 25;; } else { __label__ = 23;; }
              $lor_end110$$lor_rhs105$34: do { 
                if (__label__ == 23) {

                  var $72=$offset0;
                  var $cmp106=($72) >= 0;
                  if (!($cmp106)) { var $74 = 0;__label__ = 25;break $lor_end110$$lor_rhs105$34; }

                  var $73=$offset1;
                  var $cmp108=($73) >= 0;
                  var $74 = $cmp108;;
                }
              } while(0);

              var $74;
              var $m_front111=$this1+62;
              var $frombool112=($74);
              IHEAP[$m_front111]=$frombool112;
              var $m_front113=$this1+62;
              var $75=IHEAP[$m_front113];
              var $tobool114=((($75)) & 1);
              var $m_normal116=$this1+53;
              var $m_normal1117=$this1+49;
              if ($tobool114) { __label__ = 26;; } else { __label__ = 27;; }
              $if_then115$$if_else122$38: do { 
                if (__label__ == 26) {

                  var $76=$m_normal116;
                  var $77=$m_normal1117;
                  IHEAP[$76]=IHEAP[$77]; FHEAP[$76]=FHEAP[$77]; ; IHEAP[$76+1]=IHEAP[$77+1]; FHEAP[$76+1]=FHEAP[$77+1]; ;
                  var $m_lowerLimit118=$this1+57;
                  var $m_normal1119=$this1+49;
                  var $78=$m_lowerLimit118;
                  var $79=$m_normal1119;
                  IHEAP[$78]=IHEAP[$79]; FHEAP[$78]=FHEAP[$79]; ; IHEAP[$78+1]=IHEAP[$79+1]; FHEAP[$78+1]=FHEAP[$79+1]; ;
                  var $m_upperLimit120=$this1+59;
                  var $m_normal2121=$this1+51;
                  var $80=$m_upperLimit120;
                  var $81=$m_normal2121;
                  IHEAP[$80]=IHEAP[$81]; FHEAP[$80]=FHEAP[$81]; ; IHEAP[$80+1]=IHEAP[$81+1]; FHEAP[$80+1]=FHEAP[$81+1]; ;
                  __label__ = 61;break $land_lhs_true$$if_else165$8;
                }
                else if (__label__ == 27) {

                  __ZNK6b2Vec2ngEv($ref_tmp124, $m_normal1117);
                  var $82=$m_normal116;
                  var $83=$ref_tmp124;
                  IHEAP[$82]=IHEAP[$83]; FHEAP[$82]=FHEAP[$83]; ; IHEAP[$82+1]=IHEAP[$83+1]; FHEAP[$82+1]=FHEAP[$83+1]; ;
                  var $m_lowerLimit126=$this1+57;
                  var $m_normal1128=$this1+49;
                  __ZNK6b2Vec2ngEv($ref_tmp127, $m_normal1128);
                  var $84=$m_lowerLimit126;
                  var $85=$ref_tmp127;
                  IHEAP[$84]=IHEAP[$85]; FHEAP[$84]=FHEAP[$85]; ; IHEAP[$84+1]=IHEAP[$85+1]; FHEAP[$84+1]=FHEAP[$85+1]; ;
                  var $m_upperLimit129=$this1+59;
                  var $m_normal0131=$this1+47;
                  __ZNK6b2Vec2ngEv($ref_tmp130, $m_normal0131);
                  var $86=$m_upperLimit129;
                  var $87=$ref_tmp130;
                  IHEAP[$86]=IHEAP[$87]; FHEAP[$86]=FHEAP[$87]; ; IHEAP[$86+1]=IHEAP[$87+1]; FHEAP[$86+1]=FHEAP[$87+1]; ;
                  __label__ = 61;break $land_lhs_true$$if_else165$8;
                }
              } while(0);
            }
            else if (__label__ == 28) {

              var $88=$offset0;
              var $cmp134=($88) >= 0;
              if ($cmp134) { __label__ = 29;; } else { var $91 = 0;__label__ = 31;; }
              $land_lhs_true135$$land_end139$42: do { 
                if (__label__ == 29) {

                  var $89=$offset1;
                  var $cmp136=($89) >= 0;
                  if (!($cmp136)) { var $91 = 0;__label__ = 31;break $land_lhs_true135$$land_end139$42; }

                  var $90=$offset2;
                  var $cmp138=($90) >= 0;
                  var $91 = $cmp138;;
                }
              } while(0);

              var $91;
              var $m_front140=$this1+62;
              var $frombool141=($91);
              IHEAP[$m_front140]=$frombool141;
              var $m_front142=$this1+62;
              var $92=IHEAP[$m_front142];
              var $tobool143=((($92)) & 1);
              var $m_normal145=$this1+53;
              var $m_normal1146=$this1+49;
              if ($tobool143) { __label__ = 32;; } else { __label__ = 33;; }
              $if_then144$$if_else151$46: do { 
                if (__label__ == 32) {

                  var $93=$m_normal145;
                  var $94=$m_normal1146;
                  IHEAP[$93]=IHEAP[$94]; FHEAP[$93]=FHEAP[$94]; ; IHEAP[$93+1]=IHEAP[$94+1]; FHEAP[$93+1]=FHEAP[$94+1]; ;
                  var $m_lowerLimit147=$this1+57;
                  var $m_normal1148=$this1+49;
                  var $95=$m_lowerLimit147;
                  var $96=$m_normal1148;
                  IHEAP[$95]=IHEAP[$96]; FHEAP[$95]=FHEAP[$96]; ; IHEAP[$95+1]=IHEAP[$96+1]; FHEAP[$95+1]=FHEAP[$96+1]; ;
                  var $m_upperLimit149=$this1+59;
                  var $m_normal1150=$this1+49;
                  var $97=$m_upperLimit149;
                  var $98=$m_normal1150;
                  IHEAP[$97]=IHEAP[$98]; FHEAP[$97]=FHEAP[$98]; ; IHEAP[$97+1]=IHEAP[$98+1]; FHEAP[$97+1]=FHEAP[$98+1]; ;
                  __label__ = 61;break $land_lhs_true$$if_else165$8;
                }
                else if (__label__ == 33) {

                  __ZNK6b2Vec2ngEv($ref_tmp153, $m_normal1146);
                  var $99=$m_normal145;
                  var $100=$ref_tmp153;
                  IHEAP[$99]=IHEAP[$100]; FHEAP[$99]=FHEAP[$100]; ; IHEAP[$99+1]=IHEAP[$100+1]; FHEAP[$99+1]=FHEAP[$100+1]; ;
                  var $m_lowerLimit155=$this1+57;
                  var $m_normal2157=$this1+51;
                  __ZNK6b2Vec2ngEv($ref_tmp156, $m_normal2157);
                  var $101=$m_lowerLimit155;
                  var $102=$ref_tmp156;
                  IHEAP[$101]=IHEAP[$102]; FHEAP[$101]=FHEAP[$102]; ; IHEAP[$101+1]=IHEAP[$102+1]; FHEAP[$101+1]=FHEAP[$102+1]; ;
                  var $m_upperLimit158=$this1+59;
                  var $m_normal0160=$this1+47;
                  __ZNK6b2Vec2ngEv($ref_tmp159, $m_normal0160);
                  var $103=$m_upperLimit158;
                  var $104=$ref_tmp159;
                  IHEAP[$103]=IHEAP[$104]; FHEAP[$103]=FHEAP[$104]; ; IHEAP[$103+1]=IHEAP[$104+1]; FHEAP[$103+1]=FHEAP[$104+1]; ;
                  __label__ = 61;break $land_lhs_true$$if_else165$8;
                }
              } while(0);
            }
          } while(0);
        }
      } while(0);
    }
  } while(0);
  $if_end310$$if_else165$49: do { 
    if (__label__ == 34) {

      var $105=$hasVertex0;
      var $tobool166=((($105)) & 1);
      if ($tobool166) { __label__ = 35;; } else { __label__ = 46;; }
      $if_then167$$if_else224$51: do { 
        if (__label__ == 35) {

          var $106=$convex1;
          var $tobool168=((($106)) & 1);
          var $107=$offset0;
          var $cmp170=($107) >= 0;
          if ($tobool168) { __label__ = 36;; } else { __label__ = 41;; }
          $if_then169$$if_else196$53: do { 
            if (__label__ == 36) {

              if ($cmp170) { var $109 = 1;__label__ = 38;; } else { __label__ = 37;; }
              $lor_end173$$lor_rhs171$55: do { 
                if (__label__ == 37) {

                  var $108=$offset1;
                  var $cmp172=($108) >= 0;
                  var $109 = $cmp172;;
                }
              } while(0);

              var $109;
              var $m_front174=$this1+62;
              var $frombool175=($109);
              IHEAP[$m_front174]=$frombool175;
              var $m_front176=$this1+62;
              var $110=IHEAP[$m_front176];
              var $tobool177=((($110)) & 1);
              var $m_normal179=$this1+53;
              var $m_normal1180=$this1+49;
              if ($tobool177) { __label__ = 39;; } else { __label__ = 40;; }
              $if_then178$$if_else186$58: do { 
                if (__label__ == 39) {

                  var $111=$m_normal179;
                  var $112=$m_normal1180;
                  IHEAP[$111]=IHEAP[$112]; FHEAP[$111]=FHEAP[$112]; ; IHEAP[$111+1]=IHEAP[$112+1]; FHEAP[$111+1]=FHEAP[$112+1]; ;
                  var $m_lowerLimit181=$this1+57;
                  var $m_normal0182=$this1+47;
                  var $113=$m_lowerLimit181;
                  var $114=$m_normal0182;
                  IHEAP[$113]=IHEAP[$114]; FHEAP[$113]=FHEAP[$114]; ; IHEAP[$113+1]=IHEAP[$114+1]; FHEAP[$113+1]=FHEAP[$114+1]; ;
                  var $m_upperLimit183=$this1+59;
                  var $m_normal1185=$this1+49;
                  __ZNK6b2Vec2ngEv($ref_tmp184, $m_normal1185);
                  var $115=$m_upperLimit183;
                  var $116=$ref_tmp184;
                  IHEAP[$115]=IHEAP[$116]; FHEAP[$115]=FHEAP[$116]; ; IHEAP[$115+1]=IHEAP[$116+1]; FHEAP[$115+1]=FHEAP[$116+1]; ;
                  ;
                }
                else if (__label__ == 40) {

                  __ZNK6b2Vec2ngEv($ref_tmp188, $m_normal1180);
                  var $117=$m_normal179;
                  var $118=$ref_tmp188;
                  IHEAP[$117]=IHEAP[$118]; FHEAP[$117]=FHEAP[$118]; ; IHEAP[$117+1]=IHEAP[$118+1]; FHEAP[$117+1]=FHEAP[$118+1]; ;
                  var $m_lowerLimit190=$this1+57;
                  var $m_normal1191=$this1+49;
                  var $119=$m_lowerLimit190;
                  var $120=$m_normal1191;
                  IHEAP[$119]=IHEAP[$120]; FHEAP[$119]=FHEAP[$120]; ; IHEAP[$119+1]=IHEAP[$120+1]; FHEAP[$119+1]=FHEAP[$120+1]; ;
                  var $m_upperLimit192=$this1+59;
                  var $m_normal1194=$this1+49;
                  __ZNK6b2Vec2ngEv($ref_tmp193, $m_normal1194);
                  var $121=$m_upperLimit192;
                  var $122=$ref_tmp193;
                  IHEAP[$121]=IHEAP[$122]; FHEAP[$121]=FHEAP[$122]; ; IHEAP[$121+1]=IHEAP[$122+1]; FHEAP[$121+1]=FHEAP[$122+1]; ;
                  ;
                }
              } while(0);
            }
            else if (__label__ == 41) {

              if ($cmp170) { __label__ = 42;; } else { var $124 = 0;__label__ = 43;; }
              $land_rhs198$$land_end200$62: do { 
                if (__label__ == 42) {

                  var $123=$offset1;
                  var $cmp199=($123) >= 0;
                  var $124 = $cmp199;;
                }
              } while(0);

              var $124;
              var $m_front201=$this1+62;
              var $frombool202=($124);
              IHEAP[$m_front201]=$frombool202;
              var $m_front203=$this1+62;
              var $125=IHEAP[$m_front203];
              var $tobool204=((($125)) & 1);
              var $m_normal206=$this1+53;
              var $m_normal1207=$this1+49;
              if ($tobool204) { __label__ = 44;; } else { __label__ = 45;; }
              $if_then205$$if_else213$65: do { 
                if (__label__ == 44) {

                  var $126=$m_normal206;
                  var $127=$m_normal1207;
                  IHEAP[$126]=IHEAP[$127]; FHEAP[$126]=FHEAP[$127]; ; IHEAP[$126+1]=IHEAP[$127+1]; FHEAP[$126+1]=FHEAP[$127+1]; ;
                  var $m_lowerLimit208=$this1+57;
                  var $m_normal1209=$this1+49;
                  var $128=$m_lowerLimit208;
                  var $129=$m_normal1209;
                  IHEAP[$128]=IHEAP[$129]; FHEAP[$128]=FHEAP[$129]; ; IHEAP[$128+1]=IHEAP[$129+1]; FHEAP[$128+1]=FHEAP[$129+1]; ;
                  var $m_upperLimit210=$this1+59;
                  var $m_normal1212=$this1+49;
                  __ZNK6b2Vec2ngEv($ref_tmp211, $m_normal1212);
                  var $130=$m_upperLimit210;
                  var $131=$ref_tmp211;
                  IHEAP[$130]=IHEAP[$131]; FHEAP[$130]=FHEAP[$131]; ; IHEAP[$130+1]=IHEAP[$131+1]; FHEAP[$130+1]=FHEAP[$131+1]; ;
                  ;
                }
                else if (__label__ == 45) {

                  __ZNK6b2Vec2ngEv($ref_tmp215, $m_normal1207);
                  var $132=$m_normal206;
                  var $133=$ref_tmp215;
                  IHEAP[$132]=IHEAP[$133]; FHEAP[$132]=FHEAP[$133]; ; IHEAP[$132+1]=IHEAP[$133+1]; FHEAP[$132+1]=FHEAP[$133+1]; ;
                  var $m_lowerLimit217=$this1+57;
                  var $m_normal1218=$this1+49;
                  var $134=$m_lowerLimit217;
                  var $135=$m_normal1218;
                  IHEAP[$134]=IHEAP[$135]; FHEAP[$134]=FHEAP[$135]; ; IHEAP[$134+1]=IHEAP[$135+1]; FHEAP[$134+1]=FHEAP[$135+1]; ;
                  var $m_upperLimit219=$this1+59;
                  var $m_normal0221=$this1+47;
                  __ZNK6b2Vec2ngEv($ref_tmp220, $m_normal0221);
                  var $136=$m_upperLimit219;
                  var $137=$ref_tmp220;
                  IHEAP[$136]=IHEAP[$137]; FHEAP[$136]=FHEAP[$137]; ; IHEAP[$136+1]=IHEAP[$137+1]; FHEAP[$136+1]=FHEAP[$137+1]; ;
                  ;
                }
              } while(0);
            }
          } while(0);
        }
        else if (__label__ == 46) {

          var $138=$hasVertex3;
          var $tobool225=((($138)) & 1);
          if ($tobool225) { __label__ = 47;; } else { __label__ = 58;; }
          $if_then226$$if_else284$69: do { 
            if (__label__ == 47) {

              var $139=$convex2;
              var $tobool227=((($139)) & 1);
              var $140=$offset1;
              var $cmp229=($140) >= 0;
              if ($tobool227) { __label__ = 48;; } else { __label__ = 53;; }
              $if_then228$$if_else256$71: do { 
                if (__label__ == 48) {

                  if ($cmp229) { var $142 = 1;__label__ = 50;; } else { __label__ = 49;; }
                  $lor_end232$$lor_rhs230$73: do { 
                    if (__label__ == 49) {

                      var $141=$offset2;
                      var $cmp231=($141) >= 0;
                      var $142 = $cmp231;;
                    }
                  } while(0);

                  var $142;
                  var $m_front233=$this1+62;
                  var $frombool234=($142);
                  IHEAP[$m_front233]=$frombool234;
                  var $m_front235=$this1+62;
                  var $143=IHEAP[$m_front235];
                  var $tobool236=((($143)) & 1);
                  var $m_normal239=$this1+53;
                  var $m_normal1240=$this1+49;
                  if ($tobool236) { __label__ = 51;; } else { __label__ = 52;; }
                  $if_then237$$if_else246$76: do { 
                    if (__label__ == 51) {

                      var $144=$m_normal239;
                      var $145=$m_normal1240;
                      IHEAP[$144]=IHEAP[$145]; FHEAP[$144]=FHEAP[$145]; ; IHEAP[$144+1]=IHEAP[$145+1]; FHEAP[$144+1]=FHEAP[$145+1]; ;
                      var $m_lowerLimit241=$this1+57;
                      var $m_normal1243=$this1+49;
                      __ZNK6b2Vec2ngEv($ref_tmp242, $m_normal1243);
                      var $146=$m_lowerLimit241;
                      var $147=$ref_tmp242;
                      IHEAP[$146]=IHEAP[$147]; FHEAP[$146]=FHEAP[$147]; ; IHEAP[$146+1]=IHEAP[$147+1]; FHEAP[$146+1]=FHEAP[$147+1]; ;
                      var $m_upperLimit244=$this1+59;
                      var $m_normal2245=$this1+51;
                      var $148=$m_upperLimit244;
                      var $149=$m_normal2245;
                      IHEAP[$148]=IHEAP[$149]; FHEAP[$148]=FHEAP[$149]; ; IHEAP[$148+1]=IHEAP[$149+1]; FHEAP[$148+1]=FHEAP[$149+1]; ;
                      ;
                    }
                    else if (__label__ == 52) {

                      __ZNK6b2Vec2ngEv($ref_tmp248, $m_normal1240);
                      var $150=$m_normal239;
                      var $151=$ref_tmp248;
                      IHEAP[$150]=IHEAP[$151]; FHEAP[$150]=FHEAP[$151]; ; IHEAP[$150+1]=IHEAP[$151+1]; FHEAP[$150+1]=FHEAP[$151+1]; ;
                      var $m_lowerLimit250=$this1+57;
                      var $m_normal1252=$this1+49;
                      __ZNK6b2Vec2ngEv($ref_tmp251, $m_normal1252);
                      var $152=$m_lowerLimit250;
                      var $153=$ref_tmp251;
                      IHEAP[$152]=IHEAP[$153]; FHEAP[$152]=FHEAP[$153]; ; IHEAP[$152+1]=IHEAP[$153+1]; FHEAP[$152+1]=FHEAP[$153+1]; ;
                      var $m_upperLimit253=$this1+59;
                      var $m_normal1254=$this1+49;
                      var $154=$m_upperLimit253;
                      var $155=$m_normal1254;
                      IHEAP[$154]=IHEAP[$155]; FHEAP[$154]=FHEAP[$155]; ; IHEAP[$154+1]=IHEAP[$155+1]; FHEAP[$154+1]=FHEAP[$155+1]; ;
                      ;
                    }
                  } while(0);
                }
                else if (__label__ == 53) {

                  if ($cmp229) { __label__ = 54;; } else { var $157 = 0;__label__ = 55;; }
                  $land_rhs258$$land_end260$80: do { 
                    if (__label__ == 54) {

                      var $156=$offset2;
                      var $cmp259=($156) >= 0;
                      var $157 = $cmp259;;
                    }
                  } while(0);

                  var $157;
                  var $m_front261=$this1+62;
                  var $frombool262=($157);
                  IHEAP[$m_front261]=$frombool262;
                  var $m_front263=$this1+62;
                  var $158=IHEAP[$m_front263];
                  var $tobool264=((($158)) & 1);
                  var $m_normal266=$this1+53;
                  var $m_normal1267=$this1+49;
                  if ($tobool264) { __label__ = 56;; } else { __label__ = 57;; }
                  $if_then265$$if_else273$83: do { 
                    if (__label__ == 56) {

                      var $159=$m_normal266;
                      var $160=$m_normal1267;
                      IHEAP[$159]=IHEAP[$160]; FHEAP[$159]=FHEAP[$160]; ; IHEAP[$159+1]=IHEAP[$160+1]; FHEAP[$159+1]=FHEAP[$160+1]; ;
                      var $m_lowerLimit268=$this1+57;
                      var $m_normal1270=$this1+49;
                      __ZNK6b2Vec2ngEv($ref_tmp269, $m_normal1270);
                      var $161=$m_lowerLimit268;
                      var $162=$ref_tmp269;
                      IHEAP[$161]=IHEAP[$162]; FHEAP[$161]=FHEAP[$162]; ; IHEAP[$161+1]=IHEAP[$162+1]; FHEAP[$161+1]=FHEAP[$162+1]; ;
                      var $m_upperLimit271=$this1+59;
                      var $m_normal1272=$this1+49;
                      var $163=$m_upperLimit271;
                      var $164=$m_normal1272;
                      IHEAP[$163]=IHEAP[$164]; FHEAP[$163]=FHEAP[$164]; ; IHEAP[$163+1]=IHEAP[$164+1]; FHEAP[$163+1]=FHEAP[$164+1]; ;
                      ;
                    }
                    else if (__label__ == 57) {

                      __ZNK6b2Vec2ngEv($ref_tmp275, $m_normal1267);
                      var $165=$m_normal266;
                      var $166=$ref_tmp275;
                      IHEAP[$165]=IHEAP[$166]; FHEAP[$165]=FHEAP[$166]; ; IHEAP[$165+1]=IHEAP[$166+1]; FHEAP[$165+1]=FHEAP[$166+1]; ;
                      var $m_lowerLimit277=$this1+57;
                      var $m_normal2279=$this1+51;
                      __ZNK6b2Vec2ngEv($ref_tmp278, $m_normal2279);
                      var $167=$m_lowerLimit277;
                      var $168=$ref_tmp278;
                      IHEAP[$167]=IHEAP[$168]; FHEAP[$167]=FHEAP[$168]; ; IHEAP[$167+1]=IHEAP[$168+1]; FHEAP[$167+1]=FHEAP[$168+1]; ;
                      var $m_upperLimit280=$this1+59;
                      var $m_normal1281=$this1+49;
                      var $169=$m_upperLimit280;
                      var $170=$m_normal1281;
                      IHEAP[$169]=IHEAP[$170]; FHEAP[$169]=FHEAP[$170]; ; IHEAP[$169+1]=IHEAP[$170+1]; FHEAP[$169+1]=FHEAP[$170+1]; ;
                      ;
                    }
                  } while(0);
                }
              } while(0);
            }
            else if (__label__ == 58) {

              var $171=$offset1;
              var $cmp285=($171) >= 0;
              var $m_front286=$this1+62;
              var $frombool287=($cmp285);
              IHEAP[$m_front286]=$frombool287;
              var $m_front288=$this1+62;
              var $172=IHEAP[$m_front288];
              var $tobool289=((($172)) & 1);
              var $m_normal291=$this1+53;
              var $m_normal1292=$this1+49;
              if ($tobool289) { __label__ = 59;; } else { __label__ = 60;; }
              $if_then290$$if_else299$87: do { 
                if (__label__ == 59) {

                  var $173=$m_normal291;
                  var $174=$m_normal1292;
                  IHEAP[$173]=IHEAP[$174]; FHEAP[$173]=FHEAP[$174]; ; IHEAP[$173+1]=IHEAP[$174+1]; FHEAP[$173+1]=FHEAP[$174+1]; ;
                  var $m_lowerLimit293=$this1+57;
                  var $m_normal1295=$this1+49;
                  __ZNK6b2Vec2ngEv($ref_tmp294, $m_normal1295);
                  var $175=$m_lowerLimit293;
                  var $176=$ref_tmp294;
                  IHEAP[$175]=IHEAP[$176]; FHEAP[$175]=FHEAP[$176]; ; IHEAP[$175+1]=IHEAP[$176+1]; FHEAP[$175+1]=FHEAP[$176+1]; ;
                  var $m_upperLimit296=$this1+59;
                  var $m_normal1298=$this1+49;
                  __ZNK6b2Vec2ngEv($ref_tmp297, $m_normal1298);
                  var $177=$m_upperLimit296;
                  var $178=$ref_tmp297;
                  IHEAP[$177]=IHEAP[$178]; FHEAP[$177]=FHEAP[$178]; ; IHEAP[$177+1]=IHEAP[$178+1]; FHEAP[$177+1]=FHEAP[$178+1]; ;
                  ;
                }
                else if (__label__ == 60) {

                  __ZNK6b2Vec2ngEv($ref_tmp301, $m_normal1292);
                  var $179=$m_normal291;
                  var $180=$ref_tmp301;
                  IHEAP[$179]=IHEAP[$180]; FHEAP[$179]=FHEAP[$180]; ; IHEAP[$179+1]=IHEAP[$180+1]; FHEAP[$179+1]=FHEAP[$180+1]; ;
                  var $m_lowerLimit303=$this1+57;
                  var $m_normal1304=$this1+49;
                  var $181=$m_lowerLimit303;
                  var $182=$m_normal1304;
                  IHEAP[$181]=IHEAP[$182]; FHEAP[$181]=FHEAP[$182]; ; IHEAP[$181+1]=IHEAP[$182+1]; FHEAP[$181+1]=FHEAP[$182+1]; ;
                  var $m_upperLimit305=$this1+59;
                  var $m_normal1306=$this1+49;
                  var $183=$m_upperLimit305;
                  var $184=$m_normal1306;
                  IHEAP[$183]=IHEAP[$184]; FHEAP[$183]=FHEAP[$184]; ; IHEAP[$183+1]=IHEAP[$184+1]; FHEAP[$183+1]=FHEAP[$184+1]; ;
                  ;
                }
              } while(0);
            }
          } while(0);
        }
      } while(0);
    }
  } while(0);

  var $185=$polygonB_addr;
  var $m_vertexCount=$185+37;
  var $186=IHEAP[$m_vertexCount];
  var $m_polygonB=$this1;
  var $count=$m_polygonB+32;
  IHEAP[$count]=$186;
  $i=0;
  var $187=$i;
  var $188=$polygonB_addr;
  var $m_vertexCount3112=$188+37;
  var $189=IHEAP[$m_vertexCount3112];
  var $cmp3123=($187) < ($189);
  if ($cmp3123) { __label__ = 62;; } else { __label__ = 64;; }
  $for_body_lr_ph$$for_end$91: do { 
    if (__label__ == 62) {

      var $m_polygonB313=$this1;
      var $vertices=$m_polygonB313;
      var $m_xf315=$this1+33;
      var $190=$ref_tmp314;
      var $m_polygonB317=$this1;
      var $normals=$m_polygonB317+16;
      var $m_xf320=$this1+33;
      var $q=$m_xf320+2;
      var $191=$ref_tmp319;
      ;
      $for_body$93: while(1) { 

        var $192=$i;
        var $arrayidx=$vertices+($192<<1);
        var $193=$i;
        var $194=$polygonB_addr;
        var $m_vertices=$194+5;
        var $arrayidx316=$m_vertices+($193<<1);
        __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp314, $m_xf315, $arrayidx316);
        var $195=$arrayidx;
        IHEAP[$195]=IHEAP[$190]; FHEAP[$195]=FHEAP[$190]; ; IHEAP[$195+1]=IHEAP[$190+1]; FHEAP[$195+1]=FHEAP[$190+1]; ;
        var $196=$i;
        var $arrayidx318=$normals+($196<<1);
        var $197=$i;
        var $198=$polygonB_addr;
        var $m_normals=$198+21;
        var $arrayidx321=$m_normals+($197<<1);
        __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp319, $q, $arrayidx321);
        var $199=$arrayidx318;
        IHEAP[$199]=IHEAP[$191]; FHEAP[$199]=FHEAP[$191]; ; IHEAP[$199+1]=IHEAP[$191+1]; FHEAP[$199+1]=FHEAP[$191+1]; ;
        var $200=$i;
        var $inc=($200)+1;
        $i=$inc;
        var $201=$i;
        var $202=$polygonB_addr;
        var $m_vertexCount311=$202+37;
        var $203=IHEAP[$m_vertexCount311];
        var $cmp312=($201) < ($203);
        if (!($cmp312)) { __label__ = 64;break $for_body_lr_ph$$for_end$91; }
      }
    }
  } while(0);

  var $m_radius=$this1+61;
  FHEAP[$m_radius]=0.019999999552965164;
  var $204=$manifold_addr;
  var $pointCount=$204+15;
  IHEAP[$pointCount]=0;
  __ZN12b2EPCollider21ComputeEdgeSeparationEv($edgeAxis, $this1);
  var $type=$edgeAxis;
  var $205=IHEAP[$type];
  var $cmp322=($205)==0;
  if ($cmp322) { __label__ = 100;; } else { __label__ = 65;; }
  $return$$if_end324$96: do { 
    if (__label__ == 65) {

      var $separation=$edgeAxis+2;
      var $206=FHEAP[$separation];
      var $m_radius325=$this1+61;
      var $207=FHEAP[$m_radius325];
      var $cmp326=($206) > ($207);
      if ($cmp326) { __label__ = 100;break $return$$if_end324$96; }

      __ZN12b2EPCollider24ComputePolygonSeparationEv($polygonAxis, $this1);
      var $type329=$polygonAxis;
      var $208=IHEAP[$type329];
      var $cmp330=($208)!=0;
      if ($cmp330) { __label__ = 67;; } else { __label__ = 68;; }
      $land_lhs_true331$$if_end336$99: do { 
        if (__label__ == 67) {

          var $separation332=$polygonAxis+2;
          var $209=FHEAP[$separation332];
          var $m_radius333=$this1+61;
          var $210=FHEAP[$m_radius333];
          var $cmp334=($209) > ($210);
          if ($cmp334) { __label__ = 100;break $return$$if_end324$96; }
        }
      } while(0);

      $k_relativeTol=0.9800000190734863;
      $k_absoluteTol=0.0010000000474974513;
      var $type337=$polygonAxis;
      var $211=IHEAP[$type337];
      var $cmp338=($211)==0;
      if ($cmp338) { __label__ = 69;; } else { __label__ = 70;; }
      $if_then339$$if_else340$102: do { 
        if (__label__ == 69) {

          var $212=$primaryAxis;
          var $213=$edgeAxis;
          IHEAP[$212]=IHEAP[$213]; FHEAP[$212]=FHEAP[$213]; ; IHEAP[$212+1]=IHEAP[$213+1]; FHEAP[$212+1]=FHEAP[$213+1]; ; IHEAP[$212+2]=IHEAP[$213+2]; FHEAP[$212+2]=FHEAP[$213+2]; ;
          ;
        }
        else if (__label__ == 70) {

          var $separation341=$polygonAxis+2;
          var $214=FHEAP[$separation341];
          var $separation342=$edgeAxis+2;
          var $215=FHEAP[$separation342];
          var $mul=($215)*0.9800000190734863;
          var $add=($mul)+0.0010000000474974513;
          var $cmp343=($214) > ($add);
          var $216=$primaryAxis;
          if ($cmp343) { __label__ = 71;; } else { __label__ = 72;; }
          $if_then344$$if_else345$105: do { 
            if (__label__ == 71) {

              var $217=$polygonAxis;
              IHEAP[$216]=IHEAP[$217]; FHEAP[$216]=FHEAP[$217]; ; IHEAP[$216+1]=IHEAP[$217+1]; FHEAP[$216+1]=FHEAP[$217+1]; ; IHEAP[$216+2]=IHEAP[$217+2]; FHEAP[$216+2]=FHEAP[$217+2]; ;
              ;
            }
            else if (__label__ == 72) {

              var $218=$edgeAxis;
              IHEAP[$216]=IHEAP[$218]; FHEAP[$216]=FHEAP[$218]; ; IHEAP[$216+1]=IHEAP[$218+1]; FHEAP[$216+1]=FHEAP[$218+1]; ; IHEAP[$216+2]=IHEAP[$218+2]; FHEAP[$216+2]=FHEAP[$218+2]; ;
              ;
            }
          } while(0);
        }
      } while(0);

      var $array_begin=$ie;
      __ZN12b2ClipVertexC1Ev($array_begin);
      var $arrayctor_next=$array_begin+3;
      __ZN12b2ClipVertexC1Ev($arrayctor_next);
      __ZN15b2ReferenceFaceC1Ev($rf);
      var $type348=$primaryAxis;
      var $219=IHEAP[$type348];
      var $cmp349=($219)==1;
      var $220=$manifold_addr;
      var $type351=$220+14;
      if ($cmp349) { __label__ = 74;; } else { __label__ = 84;; }
      $if_then350$$if_else434$109: do { 
        if (__label__ == 74) {

          IHEAP[$type351]=1;
          $bestIndex=0;
          var $m_normal352=$this1+53;
          var $m_polygonB353=$this1;
          var $normals354=$m_polygonB353+16;
          var $arrayidx355=$normals354;
          var $call356=__Z5b2DotRK6b2Vec2S1_($m_normal352, $arrayidx355);
          $bestValue=$call356;
          $i357=1;
          var $221=$i357;
          var $m_polygonB359=$this1;
          var $count360=$m_polygonB359+32;
          var $222=IHEAP[$count360];
          var $cmp3611=($221) < ($222);
          if ($cmp3611) { __label__ = 75;; } else { __label__ = 79;; }
          $for_body362_lr_ph$$for_end373$111: do { 
            if (__label__ == 75) {

              var $m_normal363=$this1+53;
              var $m_polygonB364=$this1;
              var $normals365=$m_polygonB364+16;
              ;
              $for_body362$113: while(1) { 

                var $223=$i357;
                var $arrayidx366=$normals365+($223<<1);
                var $call367=__Z5b2DotRK6b2Vec2S1_($m_normal363, $arrayidx366);
                $value=$call367;
                var $224=$value;
                var $225=$bestValue;
                var $cmp368=($224) < ($225);
                if ($cmp368) { __label__ = 77;; } else { __label__ = 78;; }
                $if_then369$$for_inc371$115: do { 
                  if (__label__ == 77) {

                    var $226=$value;
                    $bestValue=$226;
                    var $227=$i357;
                    $bestIndex=$227;
                    ;
                  }
                } while(0);

                var $228=$i357;
                var $inc372=($228)+1;
                $i357=$inc372;
                var $229=$i357;
                var $230=IHEAP[$count360];
                var $cmp361=($229) < ($230);
                if (!($cmp361)) { __label__ = 79;break $for_body362_lr_ph$$for_end373$111; }
              }
            }
          } while(0);

          var $231=$bestIndex;
          $i1=$231;
          var $232=$i1;
          var $add374=($232)+1;
          var $m_polygonB375=$this1;
          var $count376=$m_polygonB375+32;
          var $233=IHEAP[$count376];
          var $cmp377=($add374) < ($233);
          if ($cmp377) { __label__ = 80;; } else { var $cond = 0;__label__ = 81;; }
          $cond_true$$cond_end$119: do { 
            if (__label__ == 80) {

              var $234=$i1;
              var $add378=($234)+1;
              var $cond = $add378;;
            }
          } while(0);

          var $cond;
          $i2=$cond;
          var $arrayidx379=$ie;
          var $v=$arrayidx379;
          var $235=$i1;
          var $m_polygonB380=$this1;
          var $vertices381=$m_polygonB380;
          var $arrayidx382=$vertices381+($235<<1);
          var $236=$v;
          var $237=$arrayidx382;
          IHEAP[$236]=IHEAP[$237]; FHEAP[$236]=FHEAP[$237]; ; IHEAP[$236+1]=IHEAP[$237+1]; FHEAP[$236+1]=FHEAP[$237+1]; ;
          var $arrayidx383=$ie;
          var $id=$arrayidx383+2;
          var $cf=$id;
          var $indexA=$cf;
          IHEAP[$indexA]=0;
          var $238=$i1;
          var $conv=((($238)) & 255);
          var $arrayidx384=$ie;
          var $id385=$arrayidx384+2;
          var $cf386=$id385;
          var $indexB=$cf386+1;
          IHEAP[$indexB]=$conv;
          var $arrayidx387=$ie;
          var $id388=$arrayidx387+2;
          var $cf389=$id388;
          var $typeA=$cf389+2;
          IHEAP[$typeA]=1;
          var $arrayidx390=$ie;
          var $id391=$arrayidx390+2;
          var $cf392=$id391;
          var $typeB=$cf392+3;
          IHEAP[$typeB]=0;
          var $arrayidx393=$ie+3;
          var $v394=$arrayidx393;
          var $239=$i2;
          var $m_polygonB395=$this1;
          var $vertices396=$m_polygonB395;
          var $arrayidx397=$vertices396+($239<<1);
          var $240=$v394;
          var $241=$arrayidx397;
          IHEAP[$240]=IHEAP[$241]; FHEAP[$240]=FHEAP[$241]; ; IHEAP[$240+1]=IHEAP[$241+1]; FHEAP[$240+1]=FHEAP[$241+1]; ;
          var $arrayidx398=$ie+3;
          var $id399=$arrayidx398+2;
          var $cf400=$id399;
          var $indexA401=$cf400;
          IHEAP[$indexA401]=0;
          var $242=$i2;
          var $conv402=((($242)) & 255);
          var $arrayidx403=$ie+3;
          var $id404=$arrayidx403+2;
          var $cf405=$id404;
          var $indexB406=$cf405+1;
          IHEAP[$indexB406]=$conv402;
          var $arrayidx407=$ie+3;
          var $id408=$arrayidx407+2;
          var $cf409=$id408;
          var $typeA410=$cf409+2;
          IHEAP[$typeA410]=1;
          var $arrayidx411=$ie+3;
          var $id412=$arrayidx411+2;
          var $cf413=$id412;
          var $typeB414=$cf413+3;
          IHEAP[$typeB414]=0;
          var $m_front415=$this1+62;
          var $243=IHEAP[$m_front415];
          var $tobool416=((($243)) & 1);
          var $i1418=$rf;
          if ($tobool416) { __label__ = 82;; } else { __label__ = 83;; }
          $if_then417$$if_else423$122: do { 
            if (__label__ == 82) {

              IHEAP[$i1418]=0;
              var $i2419=$rf+1;
              IHEAP[$i2419]=1;
              var $v1=$rf+2;
              var $m_v1420=$this1+41;
              var $244=$v1;
              var $245=$m_v1420;
              IHEAP[$244]=IHEAP[$245]; FHEAP[$244]=FHEAP[$245]; ; IHEAP[$244+1]=IHEAP[$245+1]; FHEAP[$244+1]=FHEAP[$245+1]; ;
              var $v2=$rf+4;
              var $m_v2421=$this1+43;
              var $246=$v2;
              var $247=$m_v2421;
              IHEAP[$246]=IHEAP[$247]; FHEAP[$246]=FHEAP[$247]; ; IHEAP[$246+1]=IHEAP[$247+1]; FHEAP[$246+1]=FHEAP[$247+1]; ;
              var $normal=$rf+6;
              var $m_normal1422=$this1+49;
              var $248=$normal;
              var $249=$m_normal1422;
              IHEAP[$248]=IHEAP[$249]; FHEAP[$248]=FHEAP[$249]; ; IHEAP[$248+1]=IHEAP[$249+1]; FHEAP[$248+1]=FHEAP[$249+1]; ;
              ;
            }
            else if (__label__ == 83) {

              IHEAP[$i1418]=1;
              var $i2425=$rf+1;
              IHEAP[$i2425]=0;
              var $v1426=$rf+2;
              var $m_v2427=$this1+43;
              var $250=$v1426;
              var $251=$m_v2427;
              IHEAP[$250]=IHEAP[$251]; FHEAP[$250]=FHEAP[$251]; ; IHEAP[$250+1]=IHEAP[$251+1]; FHEAP[$250+1]=FHEAP[$251+1]; ;
              var $v2428=$rf+4;
              var $m_v1429=$this1+41;
              var $252=$v2428;
              var $253=$m_v1429;
              IHEAP[$252]=IHEAP[$253]; FHEAP[$252]=FHEAP[$253]; ; IHEAP[$252+1]=IHEAP[$253+1]; FHEAP[$252+1]=FHEAP[$253+1]; ;
              var $normal430=$rf+6;
              var $m_normal1432=$this1+49;
              __ZNK6b2Vec2ngEv($ref_tmp431, $m_normal1432);
              var $254=$normal430;
              var $255=$ref_tmp431;
              IHEAP[$254]=IHEAP[$255]; FHEAP[$254]=FHEAP[$255]; ; IHEAP[$254+1]=IHEAP[$255+1]; FHEAP[$254+1]=FHEAP[$255+1]; ;
              ;
            }
          } while(0);
        }
        else if (__label__ == 84) {

          IHEAP[$type351]=2;
          var $arrayidx436=$ie;
          var $v437=$arrayidx436;
          var $m_v1438=$this1+41;
          var $256=$v437;
          var $257=$m_v1438;
          IHEAP[$256]=IHEAP[$257]; FHEAP[$256]=FHEAP[$257]; ; IHEAP[$256+1]=IHEAP[$257+1]; FHEAP[$256+1]=FHEAP[$257+1]; ;
          var $arrayidx439=$ie;
          var $id440=$arrayidx439+2;
          var $cf441=$id440;
          var $indexA442=$cf441;
          IHEAP[$indexA442]=0;
          var $index=$primaryAxis+1;
          var $258=IHEAP[$index];
          var $conv443=((($258)) & 255);
          var $arrayidx444=$ie;
          var $id445=$arrayidx444+2;
          var $cf446=$id445;
          var $indexB447=$cf446+1;
          IHEAP[$indexB447]=$conv443;
          var $arrayidx448=$ie;
          var $id449=$arrayidx448+2;
          var $cf450=$id449;
          var $typeA451=$cf450+2;
          IHEAP[$typeA451]=0;
          var $arrayidx452=$ie;
          var $id453=$arrayidx452+2;
          var $cf454=$id453;
          var $typeB455=$cf454+3;
          IHEAP[$typeB455]=1;
          var $arrayidx456=$ie+3;
          var $v457=$arrayidx456;
          var $m_v2458=$this1+43;
          var $259=$v457;
          var $260=$m_v2458;
          IHEAP[$259]=IHEAP[$260]; FHEAP[$259]=FHEAP[$260]; ; IHEAP[$259+1]=IHEAP[$260+1]; FHEAP[$259+1]=FHEAP[$260+1]; ;
          var $arrayidx459=$ie+3;
          var $id460=$arrayidx459+2;
          var $cf461=$id460;
          var $indexA462=$cf461;
          IHEAP[$indexA462]=0;
          var $index463=$primaryAxis+1;
          var $261=IHEAP[$index463];
          var $conv464=((($261)) & 255);
          var $arrayidx465=$ie+3;
          var $id466=$arrayidx465+2;
          var $cf467=$id466;
          var $indexB468=$cf467+1;
          IHEAP[$indexB468]=$conv464;
          var $arrayidx469=$ie+3;
          var $id470=$arrayidx469+2;
          var $cf471=$id470;
          var $typeA472=$cf471+2;
          IHEAP[$typeA472]=0;
          var $arrayidx473=$ie+3;
          var $id474=$arrayidx473+2;
          var $cf475=$id474;
          var $typeB476=$cf475+3;
          IHEAP[$typeB476]=1;
          var $index477=$primaryAxis+1;
          var $262=IHEAP[$index477];
          var $i1478=$rf;
          IHEAP[$i1478]=$262;
          var $i1479=$rf;
          var $263=IHEAP[$i1479];
          var $add480=($263)+1;
          var $m_polygonB481=$this1;
          var $count482=$m_polygonB481+32;
          var $264=IHEAP[$count482];
          var $cmp483=($add480) < ($264);
          if ($cmp483) { __label__ = 85;; } else { var $cond489 = 0;__label__ = 86;; }
          $cond_true484$$cond_end488$126: do { 
            if (__label__ == 85) {

              var $i1485=$rf;
              var $265=IHEAP[$i1485];
              var $add486=($265)+1;
              var $cond489 = $add486;;
            }
          } while(0);

          var $cond489;
          var $i2490=$rf+1;
          IHEAP[$i2490]=$cond489;
          var $v1491=$rf+2;
          var $i1492=$rf;
          var $266=IHEAP[$i1492];
          var $m_polygonB493=$this1;
          var $vertices494=$m_polygonB493;
          var $arrayidx495=$vertices494+($266<<1);
          var $267=$v1491;
          var $268=$arrayidx495;
          IHEAP[$267]=IHEAP[$268]; FHEAP[$267]=FHEAP[$268]; ; IHEAP[$267+1]=IHEAP[$268+1]; FHEAP[$267+1]=FHEAP[$268+1]; ;
          var $v2496=$rf+4;
          var $i2497=$rf+1;
          var $269=IHEAP[$i2497];
          var $m_polygonB498=$this1;
          var $vertices499=$m_polygonB498;
          var $arrayidx500=$vertices499+($269<<1);
          var $270=$v2496;
          var $271=$arrayidx500;
          IHEAP[$270]=IHEAP[$271]; FHEAP[$270]=FHEAP[$271]; ; IHEAP[$270+1]=IHEAP[$271+1]; FHEAP[$270+1]=FHEAP[$271+1]; ;
          var $normal501=$rf+6;
          var $i1502=$rf;
          var $272=IHEAP[$i1502];
          var $m_polygonB503=$this1;
          var $normals504=$m_polygonB503+16;
          var $arrayidx505=$normals504+($272<<1);
          var $273=$normal501;
          var $274=$arrayidx505;
          IHEAP[$273]=IHEAP[$274]; FHEAP[$273]=FHEAP[$274]; ; IHEAP[$273+1]=IHEAP[$274+1]; FHEAP[$273+1]=FHEAP[$274+1]; ;
          ;
        }
      } while(0);

      var $sideNormal1=$rf+8;
      var $normal507=$rf+6;
      var $y508=$normal507+1;
      var $275=FHEAP[$y508];
      var $normal509=$rf+6;
      var $x510=$normal509;
      var $276=FHEAP[$x510];
      var $sub511=(-($276));
      __ZN6b2Vec23SetEff($sideNormal1, $275, $sub511);
      var $sideNormal2=$rf+11;
      var $sideNormal1513=$rf+8;
      __ZNK6b2Vec2ngEv($ref_tmp512, $sideNormal1513);
      var $277=$sideNormal2;
      var $278=$ref_tmp512;
      IHEAP[$277]=IHEAP[$278]; FHEAP[$277]=FHEAP[$278]; ; IHEAP[$277+1]=IHEAP[$278+1]; FHEAP[$277+1]=FHEAP[$278+1]; ;
      var $sideNormal1514=$rf+8;
      var $v1515=$rf+2;
      var $call516=__Z5b2DotRK6b2Vec2S1_($sideNormal1514, $v1515);
      var $sideOffset1=$rf+10;
      FHEAP[$sideOffset1]=$call516;
      var $sideNormal2517=$rf+11;
      var $v2518=$rf+4;
      var $call519=__Z5b2DotRK6b2Vec2S1_($sideNormal2517, $v2518);
      var $sideOffset2=$rf+13;
      FHEAP[$sideOffset2]=$call519;
      var $array_begin520=$clipPoints1;
      __ZN12b2ClipVertexC1Ev($array_begin520);
      var $arrayctor_next524=$array_begin520+3;
      __ZN12b2ClipVertexC1Ev($arrayctor_next524);
      var $array_begin527=$clipPoints2;
      __ZN12b2ClipVertexC1Ev($array_begin527);
      var $arrayctor_next531=$array_begin527+3;
      __ZN12b2ClipVertexC1Ev($arrayctor_next531);
      var $arraydecay=$clipPoints1;
      var $arraydecay534=$ie;
      var $sideNormal1535=$rf+8;
      var $sideOffset1536=$rf+10;
      var $279=FHEAP[$sideOffset1536];
      var $i1537=$rf;
      var $280=IHEAP[$i1537];
      var $call538=__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($arraydecay, $arraydecay534, $sideNormal1535, $279, $280);
      $np=$call538;
      var $cmp539=($call538) < 2;
      if ($cmp539) { __label__ = 100;break $return$$if_end324$96; }

      var $arraydecay542=$clipPoints2;
      var $arraydecay543=$clipPoints1;
      var $sideNormal2544=$rf+11;
      var $sideOffset2545=$rf+13;
      var $281=FHEAP[$sideOffset2545];
      var $i2546=$rf+1;
      var $282=IHEAP[$i2546];
      var $call547=__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($arraydecay542, $arraydecay543, $sideNormal2544, $281, $282);
      $np=$call547;
      var $283=$np;
      var $cmp548=($283) < 2;
      if ($cmp548) { __label__ = 100;break $return$$if_end324$96; }

      var $type551=$primaryAxis;
      var $284=IHEAP[$type551];
      var $cmp552=($284)==1;
      var $285=$manifold_addr;
      var $localNormal=$285+10;
      if ($cmp552) { __label__ = 90;; } else { __label__ = 91;; }
      $if_then553$$if_else556$132: do { 
        if (__label__ == 90) {

          var $normal554=$rf+6;
          var $286=$localNormal;
          var $287=$normal554;
          IHEAP[$286]=IHEAP[$287]; FHEAP[$286]=FHEAP[$287]; ; IHEAP[$286+1]=IHEAP[$287+1]; FHEAP[$286+1]=FHEAP[$287+1]; ;
          var $288=$manifold_addr;
          var $localPoint=$288+12;
          var $v1555=$rf+2;
          var $289=$localPoint;
          var $290=$v1555;
          IHEAP[$289]=IHEAP[$290]; FHEAP[$289]=FHEAP[$290]; ; IHEAP[$289+1]=IHEAP[$290+1]; FHEAP[$289+1]=FHEAP[$290+1]; ;
          ;
        }
        else if (__label__ == 91) {

          var $i1558=$rf;
          var $291=IHEAP[$i1558];
          var $292=$polygonB_addr;
          var $m_normals559=$292+21;
          var $arrayidx560=$m_normals559+($291<<1);
          var $293=$localNormal;
          var $294=$arrayidx560;
          IHEAP[$293]=IHEAP[$294]; FHEAP[$293]=FHEAP[$294]; ; IHEAP[$293+1]=IHEAP[$294+1]; FHEAP[$293+1]=FHEAP[$294+1]; ;
          var $295=$manifold_addr;
          var $localPoint561=$295+12;
          var $i1562=$rf;
          var $296=IHEAP[$i1562];
          var $297=$polygonB_addr;
          var $m_vertices563=$297+5;
          var $arrayidx564=$m_vertices563+($296<<1);
          var $298=$localPoint561;
          var $299=$arrayidx564;
          IHEAP[$298]=IHEAP[$299]; FHEAP[$298]=FHEAP[$299]; ; IHEAP[$298+1]=IHEAP[$299+1]; FHEAP[$298+1]=FHEAP[$299+1]; ;
          ;
        }
      } while(0);

      $pointCount566=0;
      $i567=0;
      var $normal572=$rf+6;
      var $v1576=$rf+2;
      var $m_radius578=$this1+61;
      var $type582=$primaryAxis;
      var $m_xf587=$this1+33;
      var $300=$ref_tmp586;
      ;
      $for_body570$136: while(1) { 

        var $301=$i567;
        var $arrayidx574=$clipPoints2+$301*3;
        var $v575=$arrayidx574;
        __ZmiRK6b2Vec2S1_($ref_tmp573, $v575, $v1576);
        var $call577=__Z5b2DotRK6b2Vec2S1_($normal572, $ref_tmp573);
        $separation571=$call577;
        var $302=$separation571;
        var $303=FHEAP[$m_radius578];
        var $cmp579=($302) <= ($303);
        if ($cmp579) { __label__ = 94;; } else { __label__ = 98;; }
        $if_then580$$for_inc628$138: do { 
          if (__label__ == 94) {

            var $304=$manifold_addr;
            var $points=$304;
            var $arraydecay581=$points;
            var $305=$pointCount566;
            var $add_ptr=$arraydecay581+$305*5;
            $cp=$add_ptr;
            var $306=IHEAP[$type582];
            var $cmp583=($306)==1;
            var $307=$cp;
            var $localPoint585=$307;
            var $308=$i567;
            var $arrayidx588=$clipPoints2+$308*3;
            var $v589=$arrayidx588;
            if ($cmp583) { __label__ = 95;; } else { __label__ = 96;; }
            $if_then584$$if_else593$140: do { 
              if (__label__ == 95) {

                __Z6b2MulTRK11b2TransformRK6b2Vec2($ref_tmp586, $m_xf587, $v589);
                var $309=$localPoint585;
                IHEAP[$309]=IHEAP[$300]; FHEAP[$309]=FHEAP[$300]; ; IHEAP[$309+1]=IHEAP[$300+1]; FHEAP[$309+1]=FHEAP[$300+1]; ;
                var $310=$cp;
                var $id590=$310+4;
                var $311=$i567;
                var $arrayidx591=$clipPoints2+$311*3;
                var $id592=$arrayidx591+2;
                var $312=$id590;
                var $313=$id592;
                IHEAP[$312]=IHEAP[$313]; FHEAP[$312]=FHEAP[$313]; ;
                ;
              }
              else if (__label__ == 96) {

                var $314=$localPoint585;
                var $315=$v589;
                IHEAP[$314]=IHEAP[$315]; FHEAP[$314]=FHEAP[$315]; ; IHEAP[$314+1]=IHEAP[$315+1]; FHEAP[$314+1]=FHEAP[$315+1]; ;
                var $316=$i567;
                var $arrayidx597=$clipPoints2+$316*3;
                var $id598=$arrayidx597+2;
                var $cf599=$id598;
                var $typeB600=$cf599+3;
                var $317=IHEAP[$typeB600];
                var $318=$cp;
                var $id601=$318+4;
                var $cf602=$id601;
                var $typeA603=$cf602+2;
                IHEAP[$typeA603]=$317;
                var $319=$i567;
                var $arrayidx604=$clipPoints2+$319*3;
                var $id605=$arrayidx604+2;
                var $cf606=$id605;
                var $typeA607=$cf606+2;
                var $320=IHEAP[$typeA607];
                var $321=$cp;
                var $id608=$321+4;
                var $cf609=$id608;
                var $typeB610=$cf609+3;
                IHEAP[$typeB610]=$320;
                var $322=$i567;
                var $arrayidx611=$clipPoints2+$322*3;
                var $id612=$arrayidx611+2;
                var $cf613=$id612;
                var $indexB614=$cf613+1;
                var $323=IHEAP[$indexB614];
                var $324=$cp;
                var $id615=$324+4;
                var $cf616=$id615;
                var $indexA617=$cf616;
                IHEAP[$indexA617]=$323;
                var $325=$i567;
                var $arrayidx618=$clipPoints2+$325*3;
                var $id619=$arrayidx618+2;
                var $cf620=$id619;
                var $indexA621=$cf620;
                var $326=IHEAP[$indexA621];
                var $327=$cp;
                var $id622=$327+4;
                var $cf623=$id622;
                var $indexB624=$cf623+1;
                IHEAP[$indexB624]=$326;
                ;
              }
            } while(0);

            var $328=$pointCount566;
            var $inc626=($328)+1;
            $pointCount566=$inc626;
            ;
          }
        } while(0);

        var $329=$i567;
        var $inc629=($329)+1;
        $i567=$inc629;
        var $cmp569=($inc629) < 2;
        if (!($cmp569)) { __label__ = 99;break $for_body570$136; }
      }

      var $330=$pointCount566;
      var $331=$manifold_addr;
      var $pointCount631=$331+15;
      IHEAP[$pointCount631]=$330;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN12b2EPCollider7CollideEP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS7_["X"]=1;

function __ZN12b2ClipVertexC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN12b2ClipVertexC2Ev($this1);
  ;
  return;
  return;
}


function __ZN15b2ReferenceFaceC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2ReferenceFaceC2Ev($this1);
  ;
  return;
  return;
}


function __Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_($manifold, $edgeA, $xfA, $polygonB, $xfB) {
  var __stackBase__  = STACKTOP; STACKTOP += 63;
  var __label__;

  var $manifold_addr;
  var $edgeA_addr;
  var $xfA_addr;
  var $polygonB_addr;
  var $xfB_addr;
  var $collider=__stackBase__;
  $manifold_addr=$manifold;
  $edgeA_addr=$edgeA;
  $xfA_addr=$xfA;
  $polygonB_addr=$polygonB;
  $xfB_addr=$xfB;
  __ZN12b2EPColliderC1Ev($collider);
  var $0=$manifold_addr;
  var $1=$edgeA_addr;
  var $2=$xfA_addr;
  var $3=$polygonB_addr;
  var $4=$xfB_addr;
  __ZN12b2EPCollider7CollideEP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS7_($collider, $0, $1, $2, $3, $4);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN12b2EPColliderC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN12b2EPColliderC2Ev($this1);
  ;
  return;
  return;
}


function __ZN13b2TempPolygonC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN13b2TempPolygonC2Ev($this1);
  ;
  return;
  return;
}


function __Z6b2MulTRK11b2TransformS1_($agg_result, $A, $B) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $A_addr;
  var $B_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp3=__stackBase__+2;
  var $ref_tmp5=__stackBase__+4;
  $A_addr=$A;
  $B_addr=$B;
  __ZN11b2TransformC1Ev($agg_result);
  var $q=$agg_result+2;
  var $0=$A_addr;
  var $q1=$0+2;
  var $1=$B_addr;
  var $q2=$1+2;
  __Z6b2MulTRK5b2RotS1_($ref_tmp, $q1, $q2);
  var $2=$q;
  var $3=$ref_tmp;
  IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
  var $p=$agg_result;
  var $4=$A_addr;
  var $q4=$4+2;
  var $5=$B_addr;
  var $p6=$5;
  var $6=$A_addr;
  var $p7=$6;
  __ZmiRK6b2Vec2S1_($ref_tmp5, $p6, $p7);
  __Z6b2MulTRK5b2RotRK6b2Vec2($ref_tmp3, $q4, $ref_tmp5);
  var $7=$p;
  var $8=$ref_tmp3;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __Z7b2CrossRK6b2Vec2S1_($a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$b_addr;
  var $y=$2+1;
  var $3=FHEAP[$y];
  var $mul=($1)*($3);
  var $4=$a_addr;
  var $y1=$4+1;
  var $5=FHEAP[$y1];
  var $6=$b_addr;
  var $x2=$6;
  var $7=FHEAP[$x2];
  var $mul3=($5)*($7);
  var $sub=($mul)-($mul3);
  ;
  return $sub;
  return null;
}


function __ZNK6b2Vec2ngEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN6b2Vec2C1Ev($agg_result);
  var $x=$this1;
  var $0=FHEAP[$x];
  var $sub=(-($0));
  var $y=$this1+1;
  var $1=FHEAP[$y];
  var $sub2=(-($1));
  __ZN6b2Vec23SetEff($agg_result, $sub, $sub2);
  ;
  return;
  return;
}


function __ZN12b2EPColliderC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_polygonB=$this1;
  __ZN13b2TempPolygonC1Ev($m_polygonB);
  var $m_xf=$this1+33;
  __ZN11b2TransformC1Ev($m_xf);
  var $m_centroidB=$this1+37;
  __ZN6b2Vec2C1Ev($m_centroidB);
  var $m_v0=$this1+39;
  __ZN6b2Vec2C1Ev($m_v0);
  var $m_v1=$this1+41;
  __ZN6b2Vec2C1Ev($m_v1);
  var $m_v2=$this1+43;
  __ZN6b2Vec2C1Ev($m_v2);
  var $m_v3=$this1+45;
  __ZN6b2Vec2C1Ev($m_v3);
  var $m_normal0=$this1+47;
  __ZN6b2Vec2C1Ev($m_normal0);
  var $m_normal1=$this1+49;
  __ZN6b2Vec2C1Ev($m_normal1);
  var $m_normal2=$this1+51;
  __ZN6b2Vec2C1Ev($m_normal2);
  var $m_normal=$this1+53;
  __ZN6b2Vec2C1Ev($m_normal);
  var $m_lowerLimit=$this1+57;
  __ZN6b2Vec2C1Ev($m_lowerLimit);
  var $m_upperLimit=$this1+59;
  __ZN6b2Vec2C1Ev($m_upperLimit);
  ;
  return;
  return;
}


function __ZN13b2TempPolygonC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $vertices=$this1;
  var $array_begin=$vertices;
  __ZN6b2Vec2C1Ev($array_begin);
  var $arrayctor_next=$array_begin+2;
  __ZN6b2Vec2C1Ev($arrayctor_next);
  var $arrayctor_next_1=$arrayctor_next+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_1);
  var $arrayctor_next_2=$arrayctor_next_1+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_2);
  var $arrayctor_next_3=$arrayctor_next_2+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_3);
  var $arrayctor_next_4=$arrayctor_next_3+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_4);
  var $arrayctor_next_5=$arrayctor_next_4+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_5);
  var $arrayctor_next_6=$arrayctor_next_5+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_6);
  var $normals=$this1+16;
  var $array_begin2=$normals;
  __ZN6b2Vec2C1Ev($array_begin2);
  var $arrayctor_next6=$array_begin2+2;
  __ZN6b2Vec2C1Ev($arrayctor_next6);
  var $arrayctor_next6_1=$arrayctor_next6+2;
  __ZN6b2Vec2C1Ev($arrayctor_next6_1);
  var $arrayctor_next6_2=$arrayctor_next6_1+2;
  __ZN6b2Vec2C1Ev($arrayctor_next6_2);
  var $arrayctor_next6_3=$arrayctor_next6_2+2;
  __ZN6b2Vec2C1Ev($arrayctor_next6_3);
  var $arrayctor_next6_4=$arrayctor_next6_3+2;
  __ZN6b2Vec2C1Ev($arrayctor_next6_4);
  var $arrayctor_next6_5=$arrayctor_next6_4+2;
  __ZN6b2Vec2C1Ev($arrayctor_next6_5);
  var $arrayctor_next6_6=$arrayctor_next6_5+2;
  __ZN6b2Vec2C1Ev($arrayctor_next6_6);
  ;
  return;
  return;
}


function __ZN15b2ReferenceFaceC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $v1=$this1+2;
  __ZN6b2Vec2C1Ev($v1);
  var $v2=$this1+4;
  __ZN6b2Vec2C1Ev($v2);
  var $normal=$this1+6;
  __ZN6b2Vec2C1Ev($normal);
  var $sideNormal1=$this1+8;
  __ZN6b2Vec2C1Ev($sideNormal1);
  var $sideNormal2=$this1+11;
  __ZN6b2Vec2C1Ev($sideNormal2);
  ;
  return;
  return;
}


function __ZN12b2ClipVertexC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $v=$this1;
  __ZN6b2Vec2C1Ev($v);
  ;
  return;
  return;
}


function __Z6b2MulTRK5b2RotS1_($agg_result, $q, $r) {
  ;
  var __label__;

  var $q_addr;
  var $r_addr;
  $q_addr=$q;
  $r_addr=$r;
  __ZN5b2RotC1Ev($agg_result);
  var $0=$q_addr;
  var $c=$0+1;
  var $1=FHEAP[$c];
  var $2=$r_addr;
  var $s=$2;
  var $3=FHEAP[$s];
  var $mul=($1)*($3);
  var $4=$q_addr;
  var $s1=$4;
  var $5=FHEAP[$s1];
  var $6=$r_addr;
  var $c2=$6+1;
  var $7=FHEAP[$c2];
  var $mul3=($5)*($7);
  var $sub=($mul)-($mul3);
  var $s4=$agg_result;
  FHEAP[$s4]=$sub;
  var $8=$q_addr;
  var $c5=$8+1;
  var $9=FHEAP[$c5];
  var $10=$r_addr;
  var $c6=$10+1;
  var $11=FHEAP[$c6];
  var $mul7=($9)*($11);
  var $12=$q_addr;
  var $s8=$12;
  var $13=FHEAP[$s8];
  var $14=$r_addr;
  var $s9=$14;
  var $15=FHEAP[$s9];
  var $mul10=($13)*($15);
  var $add=($mul7)+($mul10);
  var $c11=$agg_result+1;
  FHEAP[$c11]=$add;
  ;
  return;
  return;
}


function __Z6b2MulTRK5b2RotRK6b2Vec2($agg_result, $q, $v) {
  ;
  var __label__;

  var $q_addr;
  var $v_addr;
  $q_addr=$q;
  $v_addr=$v;
  var $0=$q_addr;
  var $c=$0+1;
  var $1=FHEAP[$c];
  var $2=$v_addr;
  var $x=$2;
  var $3=FHEAP[$x];
  var $mul=($1)*($3);
  var $4=$q_addr;
  var $s=$4;
  var $5=FHEAP[$s];
  var $6=$v_addr;
  var $y=$6+1;
  var $7=FHEAP[$y];
  var $mul1=($5)*($7);
  var $add=($mul)+($mul1);
  var $8=$q_addr;
  var $s2=$8;
  var $9=FHEAP[$s2];
  var $sub=(-($9));
  var $10=$v_addr;
  var $x3=$10;
  var $11=FHEAP[$x3];
  var $mul4=($sub)*($11);
  var $12=$q_addr;
  var $c5=$12+1;
  var $13=FHEAP[$c5];
  var $14=$v_addr;
  var $y6=$14+1;
  var $15=FHEAP[$y6];
  var $mul7=($13)*($15);
  var $add8=($mul4)+($mul7);
  __ZN6b2Vec2C1Eff($agg_result, $add, $add8);
  ;
  return;
  return;
}


function __ZN12b2EPCollider21ComputeEdgeSeparationEv($agg_result, $this) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $i;
  var $s;
  var $ref_tmp=__stackBase__;
  $this_addr=$this;
  var $this1=$this_addr;
  var $type=$agg_result;
  IHEAP[$type]=1;
  var $m_front=$this1+62;
  var $0=IHEAP[$m_front];
  var $tobool=((($0)) & 1);
  var $cond=($tobool) ? 0 : 1;
  var $index=$agg_result+1;
  IHEAP[$index]=$cond;
  var $separation=$agg_result+2;
  FHEAP[$separation]=3.4028234663852886e+38;
  $i=0;
  var $1=$i;
  var $m_polygonB=$this1;
  var $count=$m_polygonB+32;
  var $2=IHEAP[$count];
  var $cmp1=($1) < ($2);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end$5: do { 
    if (__label__ == 1) {

      var $m_normal=$this1+53;
      var $m_polygonB2=$this1;
      var $vertices=$m_polygonB2;
      var $m_v1=$this1+41;
      var $separation3=$agg_result+2;
      var $separation5=$agg_result+2;
      ;
      $for_body$7: while(1) { 

        var $3=$i;
        var $arrayidx=$vertices+($3<<1);
        __ZmiRK6b2Vec2S1_($ref_tmp, $arrayidx, $m_v1);
        var $call=__Z5b2DotRK6b2Vec2S1_($m_normal, $ref_tmp);
        $s=$call;
        var $4=$s;
        var $5=FHEAP[$separation3];
        var $cmp4=($4) < ($5);
        if ($cmp4) { __label__ = 3;; } else { __label__ = 4;; }
        $if_then$$for_inc$9: do { 
          if (__label__ == 3) {

            var $6=$s;
            FHEAP[$separation5]=$6;
            ;
          }
        } while(0);

        var $7=$i;
        var $inc=($7)+1;
        $i=$inc;
        var $8=$i;
        var $9=IHEAP[$count];
        var $cmp=($8) < ($9);
        if (!($cmp)) { __label__ = 5;break $for_body_lr_ph$$for_end$5; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN12b2EPCollider21ComputeEdgeSeparationEv["X"]=1;

function __ZN12b2EPCollider24ComputePolygonSeparationEv($agg_result, $this) {
  var __stackBase__  = STACKTOP; STACKTOP += 12;
  var __label__;

  var $this_addr;
  var $perp=__stackBase__;
  var $i;
  var $n=__stackBase__+2;
  var $s1;
  var $ref_tmp=__stackBase__+4;
  var $s2;
  var $ref_tmp6=__stackBase__+6;
  var $s;
  var $ref_tmp19=__stackBase__+8;
  var $ref_tmp25=__stackBase__+10;
  $this_addr=$this;
  var $this1=$this_addr;
  var $type=$agg_result;
  IHEAP[$type]=0;
  var $index=$agg_result+1;
  IHEAP[$index]=-1;
  var $separation=$agg_result+2;
  FHEAP[$separation]=-3.4028234663852886e+38;
  var $m_normal=$this1+53;
  var $y=$m_normal+1;
  var $0=FHEAP[$y];
  var $sub=(-($0));
  var $m_normal2=$this1+53;
  var $x=$m_normal2;
  var $1=FHEAP[$x];
  __ZN6b2Vec2C1Eff($perp, $sub, $1);
  $i=0;
  var $m_polygonB=$this1;
  var $count=$m_polygonB+32;
  var $m_polygonB3=$this1;
  var $normals=$m_polygonB3+16;
  var $m_polygonB4=$this1;
  var $vertices=$m_polygonB4;
  var $m_v1=$this1+41;
  var $m_polygonB7=$this1;
  var $vertices8=$m_polygonB7;
  var $m_v2=$this1+43;
  var $m_radius=$this1+61;
  var $m_upperLimit=$this1+59;
  var $m_normal20=$this1+53;
  var $separation32=$agg_result+2;
  var $type35=$agg_result;
  var $index36=$agg_result+1;
  var $separation37=$agg_result+2;
  var $m_lowerLimit=$this1+57;
  var $m_normal26=$this1+53;
  ;
  $for_cond$14: while(1) { 

    var $2=$i;
    var $3=IHEAP[$count];
    var $cmp=($2) < ($3);
    if (!($cmp)) { __label__ = 10;break $for_cond$14; }

    var $4=$i;
    var $arrayidx=$normals+($4<<1);
    __ZNK6b2Vec2ngEv($n, $arrayidx);
    var $5=$i;
    var $arrayidx5=$vertices+($5<<1);
    __ZmiRK6b2Vec2S1_($ref_tmp, $arrayidx5, $m_v1);
    var $call=__Z5b2DotRK6b2Vec2S1_($n, $ref_tmp);
    $s1=$call;
    var $6=$i;
    var $arrayidx9=$vertices8+($6<<1);
    __ZmiRK6b2Vec2S1_($ref_tmp6, $arrayidx9, $m_v2);
    var $call10=__Z5b2DotRK6b2Vec2S1_($n, $ref_tmp6);
    $s2=$call10;
    var $7=$s1;
    var $8=$s2;
    var $call11=__Z5b2MinIfET_S0_S0_($7, $8);
    $s=$call11;
    var $9=$s;
    var $10=FHEAP[$m_radius];
    var $cmp12=($9) > ($10);
    if ($cmp12) { __label__ = 3;break $for_cond$14; }

    var $call16=__Z5b2DotRK6b2Vec2S1_($n, $perp);
    var $cmp17=($call16) >= 0;
    if ($cmp17) { __label__ = 5;; } else { __label__ = 6;; }
    $if_then18$$if_else$18: do { 
      if (__label__ == 5) {

        __ZmiRK6b2Vec2S1_($ref_tmp19, $n, $m_upperLimit);
        var $call21=__Z5b2DotRK6b2Vec2S1_($ref_tmp19, $m_normal20);
        var $cmp22=($call21) < -0.03490658849477768;
        if ($cmp22) { __label__ = 9;break $if_then18$$if_else$18; } else { __label__ = 7;break $if_then18$$if_else$18; }
      }
      else if (__label__ == 6) {

        __ZmiRK6b2Vec2S1_($ref_tmp25, $n, $m_lowerLimit);
        var $call27=__Z5b2DotRK6b2Vec2S1_($ref_tmp25, $m_normal26);
        var $cmp28=($call27) < -0.03490658849477768;
        if ($cmp28) { __label__ = 9;break $if_then18$$if_else$18; } else { __label__ = 7;break $if_then18$$if_else$18; }
      }
    } while(0);
    $for_inc$$if_end31$21: do { 
      if (__label__ == 7) {

        var $13=$s;
        var $14=FHEAP[$separation32];
        var $cmp33=($13) > ($14);
        if (!($cmp33)) { __label__ = 9;break $for_inc$$if_end31$21; }

        IHEAP[$type35]=2;
        var $15=$i;
        IHEAP[$index36]=$15;
        var $16=$s;
        FHEAP[$separation37]=$16;
        ;
      }
    } while(0);

    var $17=$i;
    var $inc=($17)+1;
    $i=$inc;
    ;
  }
  $return$$if_then$25: do { 
    if (__label__ == 3) {

      var $type13=$agg_result;
      IHEAP[$type13]=2;
      var $11=$i;
      var $index14=$agg_result+1;
      IHEAP[$index14]=$11;
      var $12=$s;
      var $separation15=$agg_result+2;
      FHEAP[$separation15]=$12;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN12b2EPCollider24ComputePolygonSeparationEv["X"]=1;

function __Z17b2CollidePolygonsP10b2ManifoldPK14b2PolygonShapeRK11b2TransformS3_S6_($manifold, $polyA, $xfA, $polyB, $xfB) {
  var __stackBase__  = STACKTOP; STACKTOP += 56;
  var __label__;

  var $manifold_addr;
  var $polyA_addr;
  var $xfA_addr;
  var $polyB_addr;
  var $xfB_addr;
  var $totalRadius;
  var $edgeA=__stackBase__;
  var $separationA;
  var $edgeB=__stackBase__+1;
  var $separationB;
  var $poly1;
  var $poly2;
  var $xf1=__stackBase__+2;
  var $xf2=__stackBase__+6;
  var $edge1;
  var $flip;
  var $k_relativeTol;
  var $k_absoluteTol;
  var $incidentEdge=__stackBase__+10;
  var $count1;
  var $vertices1;
  var $iv1;
  var $iv2;
  var $v11=__stackBase__+16;
  var $v12=__stackBase__+18;
  var $localTangent=__stackBase__+20;
  var $localNormal=__stackBase__+22;
  var $planePoint=__stackBase__+24;
  var $ref_tmp=__stackBase__+26;
  var $tangent=__stackBase__+28;
  var $normal=__stackBase__+30;
  var $ref_tmp17=__stackBase__+32;
  var $ref_tmp18=__stackBase__+34;
  var $frontOffset;
  var $sideOffset1;
  var $sideOffset2;
  var $clipPoints1=__stackBase__+36;
  var $clipPoints2=__stackBase__+42;
  var $np;
  var $ref_tmp40=__stackBase__+48;
  var $pointCount52;
  var $i;
  var $separation;
  var $cp;
  var $ref_tmp61=__stackBase__+50;
  var $cf=__stackBase__+52;
  $manifold_addr=$manifold;
  $polyA_addr=$polyA;
  $xfA_addr=$xfA;
  $polyB_addr=$polyB;
  $xfB_addr=$xfB;
  var $0=$manifold_addr;
  var $pointCount=$0+15;
  IHEAP[$pointCount]=0;
  var $1=$polyA_addr;
  var $2=$1;
  var $m_radius=$2+2;
  var $3=FHEAP[$m_radius];
  var $4=$polyB_addr;
  var $5=$4;
  var $m_radius1=$5+2;
  var $6=FHEAP[$m_radius1];
  var $add=($3)+($6);
  $totalRadius=$add;
  IHEAP[$edgeA]=0;
  var $7=$polyA_addr;
  var $8=$xfA_addr;
  var $9=$polyB_addr;
  var $10=$xfB_addr;
  var $call=__ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_($edgeA, $7, $8, $9, $10);
  $separationA=$call;
  var $11=$separationA;
  var $12=$totalRadius;
  var $cmp=($11) > ($12);
  if ($cmp) { __label__ = 16;; } else { __label__ = 1;; }
  $return$$if_end$40: do { 
    if (__label__ == 1) {

      IHEAP[$edgeB]=0;
      var $13=$polyB_addr;
      var $14=$xfB_addr;
      var $15=$polyA_addr;
      var $16=$xfA_addr;
      var $call2=__ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_($edgeB, $13, $14, $15, $16);
      $separationB=$call2;
      var $17=$separationB;
      var $18=$totalRadius;
      var $cmp3=($17) > ($18);
      if ($cmp3) { __label__ = 16;break $return$$if_end$40; }

      __ZN11b2TransformC1Ev($xf1);
      __ZN11b2TransformC1Ev($xf2);
      $k_relativeTol=0.9800000190734863;
      $k_absoluteTol=0.0010000000474974513;
      var $19=$separationB;
      var $20=$separationA;
      var $mul=($20)*0.9800000190734863;
      var $add6=($mul)+0.0010000000474974513;
      var $cmp7=($19) > ($add6);
      if ($cmp7) { __label__ = 3;; } else { __label__ = 4;; }
      $if_then8$$if_else$43: do { 
        if (__label__ == 3) {

          var $21=$polyB_addr;
          $poly1=$21;
          var $22=$polyA_addr;
          $poly2=$22;
          var $23=$xfB_addr;
          var $24=$xf1;
          var $25=$23;
          IHEAP[$24]=IHEAP[$25]; FHEAP[$24]=FHEAP[$25]; ; IHEAP[$24+1]=IHEAP[$25+1]; FHEAP[$24+1]=FHEAP[$25+1]; ; IHEAP[$24+2]=IHEAP[$25+2]; FHEAP[$24+2]=FHEAP[$25+2]; ; IHEAP[$24+3]=IHEAP[$25+3]; FHEAP[$24+3]=FHEAP[$25+3]; ;
          var $26=$xfA_addr;
          var $27=$xf2;
          var $28=$26;
          IHEAP[$27]=IHEAP[$28]; FHEAP[$27]=FHEAP[$28]; ; IHEAP[$27+1]=IHEAP[$28+1]; FHEAP[$27+1]=FHEAP[$28+1]; ; IHEAP[$27+2]=IHEAP[$28+2]; FHEAP[$27+2]=FHEAP[$28+2]; ; IHEAP[$27+3]=IHEAP[$28+3]; FHEAP[$27+3]=FHEAP[$28+3]; ;
          var $29=IHEAP[$edgeB];
          $edge1=$29;
          var $30=$manifold_addr;
          var $type=$30+14;
          IHEAP[$type]=2;
          $flip=1;
          ;
        }
        else if (__label__ == 4) {

          var $31=$polyA_addr;
          $poly1=$31;
          var $32=$polyB_addr;
          $poly2=$32;
          var $33=$xfA_addr;
          var $34=$xf1;
          var $35=$33;
          IHEAP[$34]=IHEAP[$35]; FHEAP[$34]=FHEAP[$35]; ; IHEAP[$34+1]=IHEAP[$35+1]; FHEAP[$34+1]=FHEAP[$35+1]; ; IHEAP[$34+2]=IHEAP[$35+2]; FHEAP[$34+2]=FHEAP[$35+2]; ; IHEAP[$34+3]=IHEAP[$35+3]; FHEAP[$34+3]=FHEAP[$35+3]; ;
          var $36=$xfB_addr;
          var $37=$xf2;
          var $38=$36;
          IHEAP[$37]=IHEAP[$38]; FHEAP[$37]=FHEAP[$38]; ; IHEAP[$37+1]=IHEAP[$38+1]; FHEAP[$37+1]=FHEAP[$38+1]; ; IHEAP[$37+2]=IHEAP[$38+2]; FHEAP[$37+2]=FHEAP[$38+2]; ; IHEAP[$37+3]=IHEAP[$38+3]; FHEAP[$37+3]=FHEAP[$38+3]; ;
          var $39=IHEAP[$edgeA];
          $edge1=$39;
          var $40=$manifold_addr;
          var $type9=$40+14;
          IHEAP[$type9]=1;
          $flip=0;
          ;
        }
      } while(0);

      var $array_begin=$incidentEdge;
      __ZN12b2ClipVertexC1Ev($array_begin);
      var $arrayctor_next=$array_begin+3;
      __ZN12b2ClipVertexC1Ev($arrayctor_next);
      var $arraydecay=$incidentEdge;
      var $41=$poly1;
      var $42=$edge1;
      var $43=$poly2;
      __ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_($arraydecay, $41, $xf1, $42, $43, $xf2);
      var $44=$poly1;
      var $m_vertexCount=$44+37;
      var $45=IHEAP[$m_vertexCount];
      $count1=$45;
      var $46=$poly1;
      var $m_vertices=$46+5;
      var $arraydecay11=$m_vertices;
      $vertices1=$arraydecay11;
      var $47=$edge1;
      $iv1=$47;
      var $48=$edge1;
      var $add12=($48)+1;
      var $49=$count1;
      var $cmp13=($add12) < ($49);
      if ($cmp13) { __label__ = 6;; } else { var $cond = 0;__label__ = 7;; }
      $cond_true$$arrayctor_loop33$47: do { 
        if (__label__ == 6) {

          var $50=$edge1;
          var $add14=($50)+1;
          var $cond = $add14;;
        }
      } while(0);

      var $cond;
      $iv2=$cond;
      var $51=$iv1;
      var $52=$vertices1;
      var $arrayidx=$52+($51<<1);
      var $53=$v11;
      var $54=$arrayidx;
      IHEAP[$53]=IHEAP[$54]; FHEAP[$53]=FHEAP[$54]; ; IHEAP[$53+1]=IHEAP[$54+1]; FHEAP[$53+1]=FHEAP[$54+1]; ;
      var $55=$iv2;
      var $56=$vertices1;
      var $arrayidx15=$56+($55<<1);
      var $57=$v12;
      var $58=$arrayidx15;
      IHEAP[$57]=IHEAP[$58]; FHEAP[$57]=FHEAP[$58]; ; IHEAP[$57+1]=IHEAP[$58+1]; FHEAP[$57+1]=FHEAP[$58+1]; ;
      __ZmiRK6b2Vec2S1_($localTangent, $v12, $v11);
      var $call16=__ZN6b2Vec29NormalizeEv($localTangent);
      __Z7b2CrossRK6b2Vec2f($localNormal, $localTangent, 1);
      __ZplRK6b2Vec2S1_($ref_tmp, $v11, $v12);
      __ZmlfRK6b2Vec2($planePoint, 0.5, $ref_tmp);
      var $q=$xf1+2;
      __Z5b2MulRK5b2RotRK6b2Vec2($tangent, $q, $localTangent);
      __Z7b2CrossRK6b2Vec2f($normal, $tangent, 1);
      __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp17, $xf1, $v11);
      var $59=$v11;
      var $60=$ref_tmp17;
      IHEAP[$59]=IHEAP[$60]; FHEAP[$59]=FHEAP[$60]; ; IHEAP[$59+1]=IHEAP[$60+1]; FHEAP[$59+1]=FHEAP[$60+1]; ;
      __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp18, $xf1, $v12);
      var $61=$v12;
      var $62=$ref_tmp18;
      IHEAP[$61]=IHEAP[$62]; FHEAP[$61]=FHEAP[$62]; ; IHEAP[$61+1]=IHEAP[$62+1]; FHEAP[$61+1]=FHEAP[$62+1]; ;
      var $call19=__Z5b2DotRK6b2Vec2S1_($normal, $v11);
      $frontOffset=$call19;
      var $call20=__Z5b2DotRK6b2Vec2S1_($tangent, $v11);
      var $sub=(-($call20));
      var $63=$totalRadius;
      var $add21=($sub)+($63);
      $sideOffset1=$add21;
      var $call22=__Z5b2DotRK6b2Vec2S1_($tangent, $v12);
      var $64=$totalRadius;
      var $add23=($call22)+($64);
      $sideOffset2=$add23;
      var $array_begin24=$clipPoints1;
      __ZN12b2ClipVertexC1Ev($array_begin24);
      var $arrayctor_next28=$array_begin24+3;
      __ZN12b2ClipVertexC1Ev($arrayctor_next28);
      var $array_begin31=$clipPoints2;
      __ZN12b2ClipVertexC1Ev($array_begin31);
      var $arrayctor_next35=$array_begin31+3;
      __ZN12b2ClipVertexC1Ev($arrayctor_next35);
      var $arraydecay38=$clipPoints1;
      var $arraydecay39=$incidentEdge;
      __ZNK6b2Vec2ngEv($ref_tmp40, $tangent);
      var $65=$sideOffset1;
      var $66=$iv1;
      var $call41=__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($arraydecay38, $arraydecay39, $ref_tmp40, $65, $66);
      $np=$call41;
      var $cmp42=($call41) < 2;
      if ($cmp42) { __label__ = 16;break $return$$if_end$40; }

      var $arraydecay45=$clipPoints2;
      var $arraydecay46=$clipPoints1;
      var $67=$sideOffset2;
      var $68=$iv2;
      var $call47=__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($arraydecay45, $arraydecay46, $tangent, $67, $68);
      $np=$call47;
      var $69=$np;
      var $cmp48=($69) < 2;
      if ($cmp48) { __label__ = 16;break $return$$if_end$40; }

      var $70=$manifold_addr;
      var $localNormal51=$70+10;
      var $71=$localNormal51;
      var $72=$localNormal;
      IHEAP[$71]=IHEAP[$72]; FHEAP[$71]=FHEAP[$72]; ; IHEAP[$71+1]=IHEAP[$72+1]; FHEAP[$71+1]=FHEAP[$72+1]; ;
      var $73=$manifold_addr;
      var $localPoint=$73+12;
      var $74=$localPoint;
      var $75=$planePoint;
      IHEAP[$74]=IHEAP[$75]; FHEAP[$74]=FHEAP[$75]; ; IHEAP[$74+1]=IHEAP[$75+1]; FHEAP[$74+1]=FHEAP[$75+1]; ;
      $pointCount52=0;
      $i=0;
      var $76=$ref_tmp61;
      var $77=$cf;
      var $indexB=$cf+1;
      var $indexA71=$cf;
      var $typeB=$cf+3;
      var $typeA77=$cf+2;
      ;
      $for_body$52: while(1) { 

        var $78=$i;
        var $arrayidx54=$clipPoints2+$78*3;
        var $v=$arrayidx54;
        var $call55=__Z5b2DotRK6b2Vec2S1_($normal, $v);
        var $79=$frontOffset;
        var $sub56=($call55)-($79);
        $separation=$sub56;
        var $80=$separation;
        var $81=$totalRadius;
        var $cmp57=($80) <= ($81);
        if ($cmp57) { __label__ = 11;; } else { __label__ = 14;; }
        $if_then58$$for_inc$54: do { 
          if (__label__ == 11) {

            var $82=$manifold_addr;
            var $points=$82;
            var $arraydecay59=$points;
            var $83=$pointCount52;
            var $add_ptr=$arraydecay59+$83*5;
            $cp=$add_ptr;
            var $84=$cp;
            var $localPoint60=$84;
            var $85=$i;
            var $arrayidx62=$clipPoints2+$85*3;
            var $v63=$arrayidx62;
            __Z6b2MulTRK11b2TransformRK6b2Vec2($ref_tmp61, $xf2, $v63);
            var $86=$localPoint60;
            IHEAP[$86]=IHEAP[$76]; FHEAP[$86]=FHEAP[$76]; ; IHEAP[$86+1]=IHEAP[$76+1]; FHEAP[$86+1]=FHEAP[$76+1]; ;
            var $87=$cp;
            var $id=$87+4;
            var $88=$i;
            var $arrayidx64=$clipPoints2+$88*3;
            var $id65=$arrayidx64+2;
            var $89=$id;
            var $90=$id65;
            IHEAP[$89]=IHEAP[$90]; FHEAP[$89]=FHEAP[$90]; ;
            var $91=$flip;
            var $tobool=($91)!=0;
            if ($tobool) { __label__ = 12;; } else { __label__ = 13;; }
            $if_then66$$if_end81$56: do { 
              if (__label__ == 12) {

                var $92=$cp;
                var $id67=$92+4;
                var $cf68=$id67;
                var $93=$cf68;
                IHEAP[$77]=IHEAP[$93]; FHEAP[$77]=FHEAP[$93]; ; IHEAP[$77+1]=IHEAP[$93+1]; FHEAP[$77+1]=FHEAP[$93+1]; ; IHEAP[$77+2]=IHEAP[$93+2]; FHEAP[$77+2]=FHEAP[$93+2]; ; IHEAP[$77+3]=IHEAP[$93+3]; FHEAP[$77+3]=FHEAP[$93+3]; ;
                var $94=IHEAP[$indexB];
                var $95=$cp;
                var $id69=$95+4;
                var $cf70=$id69;
                var $indexA=$cf70;
                IHEAP[$indexA]=$94;
                var $96=IHEAP[$indexA71];
                var $97=$cp;
                var $id72=$97+4;
                var $cf73=$id72;
                var $indexB74=$cf73+1;
                IHEAP[$indexB74]=$96;
                var $98=IHEAP[$typeB];
                var $99=$cp;
                var $id75=$99+4;
                var $cf76=$id75;
                var $typeA=$cf76+2;
                IHEAP[$typeA]=$98;
                var $100=IHEAP[$typeA77];
                var $101=$cp;
                var $id78=$101+4;
                var $cf79=$id78;
                var $typeB80=$cf79+3;
                IHEAP[$typeB80]=$100;
                ;
              }
            } while(0);

            var $102=$pointCount52;
            var $inc=($102)+1;
            $pointCount52=$inc;
            ;
          }
        } while(0);

        var $103=$i;
        var $inc83=($103)+1;
        $i=$inc83;
        var $cmp53=($inc83) < 2;
        if (!($cmp53)) { __label__ = 15;break $for_body$52; }
      }

      var $104=$pointCount52;
      var $105=$manifold_addr;
      var $pointCount84=$105+15;
      IHEAP[$pointCount84]=$104;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__Z17b2CollidePolygonsP10b2ManifoldPK14b2PolygonShapeRK11b2TransformS3_S6_["X"]=1;

function __Z7b2CrossRK6b2Vec2f($agg_result, $a, $s) {
  ;
  var __label__;

  var $a_addr;
  var $s_addr;
  $a_addr=$a;
  $s_addr=$s;
  var $0=$s_addr;
  var $1=$a_addr;
  var $y=$1+1;
  var $2=FHEAP[$y];
  var $mul=($0)*($2);
  var $3=$s_addr;
  var $sub=(-($3));
  var $4=$a_addr;
  var $x=$4;
  var $5=FHEAP[$x];
  var $mul1=($sub)*($5);
  __ZN6b2Vec2C1Eff($agg_result, $mul, $mul1);
  ;
  return;
  return;
}


function __ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_($edgeIndex, $poly1, $xf1, $poly2, $xf2) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $retval;
  var $edgeIndex_addr;
  var $poly1_addr;
  var $xf1_addr;
  var $poly2_addr;
  var $xf2_addr;
  var $count1;
  var $normals1;
  var $d=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $ref_tmp1=__stackBase__+4;
  var $dLocal1=__stackBase__+6;
  var $edge;
  var $maxDot;
  var $i;
  var $dot;
  var $s;
  var $prevEdge;
  var $sPrev;
  var $nextEdge;
  var $sNext;
  var $bestEdge;
  var $bestSeparation;
  var $increment;
  $edgeIndex_addr=$edgeIndex;
  $poly1_addr=$poly1;
  $xf1_addr=$xf1;
  $poly2_addr=$poly2;
  $xf2_addr=$xf2;
  var $0=$poly1_addr;
  var $m_vertexCount=$0+37;
  var $1=IHEAP[$m_vertexCount];
  $count1=$1;
  var $2=$poly1_addr;
  var $m_normals=$2+21;
  var $arraydecay=$m_normals;
  $normals1=$arraydecay;
  var $3=$xf2_addr;
  var $4=$poly2_addr;
  var $m_centroid=$4+3;
  __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp, $3, $m_centroid);
  var $5=$xf1_addr;
  var $6=$poly1_addr;
  var $m_centroid2=$6+3;
  __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp1, $5, $m_centroid2);
  __ZmiRK6b2Vec2S1_($d, $ref_tmp, $ref_tmp1);
  var $7=$xf1_addr;
  var $q=$7+2;
  __Z6b2MulTRK5b2RotRK6b2Vec2($dLocal1, $q, $d);
  $edge=0;
  $maxDot=-3.4028234663852886e+38;
  $i=0;
  var $8=$i;
  var $9=$count1;
  var $cmp1=($8) < ($9);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 4;; }
  $for_body$$for_end$2: do { 
    if (__label__ == 1) {
      $for_body$3: while(1) { 

        var $10=$i;
        var $11=$normals1;
        var $arrayidx=$11+($10<<1);
        var $call=__Z5b2DotRK6b2Vec2S1_($arrayidx, $dLocal1);
        $dot=$call;
        var $12=$dot;
        var $13=$maxDot;
        var $cmp3=($12) > ($13);
        if ($cmp3) { __label__ = 2;; } else { __label__ = 3;; }
        $if_then$$for_inc$5: do { 
          if (__label__ == 2) {

            var $14=$dot;
            $maxDot=$14;
            var $15=$i;
            $edge=$15;
            ;
          }
        } while(0);

        var $16=$i;
        var $inc=($16)+1;
        $i=$inc;
        var $17=$i;
        var $18=$count1;
        var $cmp=($17) < ($18);
        if (!($cmp)) { __label__ = 4;break $for_body$$for_end$2; }
      }
    }
  } while(0);

  var $19=$poly1_addr;
  var $20=$xf1_addr;
  var $21=$edge;
  var $22=$poly2_addr;
  var $23=$xf2_addr;
  var $call4=__ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_($19, $20, $21, $22, $23);
  $s=$call4;
  var $24=$edge;
  var $sub=($24)-1;
  var $cmp5=($sub) >= 0;
  if ($cmp5) { __label__ = 5;; } else { __label__ = 6;; }
  $cond_true$$cond_false$9: do { 
    if (__label__ == 5) {

      var $25=$edge;
      var $sub6=($25)-1;
      var $cond = $sub6;;
    }
    else if (__label__ == 6) {

      var $26=$count1;
      var $sub7=($26)-1;
      var $cond = $sub7;;
    }
  } while(0);

  var $cond;
  $prevEdge=$cond;
  var $27=$poly1_addr;
  var $28=$xf1_addr;
  var $29=$prevEdge;
  var $30=$poly2_addr;
  var $31=$xf2_addr;
  var $call8=__ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_($27, $28, $29, $30, $31);
  $sPrev=$call8;
  var $32=$edge;
  var $add=($32)+1;
  var $33=$count1;
  var $cmp9=($add) < ($33);
  if ($cmp9) { __label__ = 8;; } else { var $cond14 = 0;__label__ = 9;; }
  $cond_true10$$cond_end13$13: do { 
    if (__label__ == 8) {

      var $34=$edge;
      var $add11=($34)+1;
      var $cond14 = $add11;;
    }
  } while(0);

  var $cond14;
  $nextEdge=$cond14;
  var $35=$poly1_addr;
  var $36=$xf1_addr;
  var $37=$nextEdge;
  var $38=$poly2_addr;
  var $39=$xf2_addr;
  var $call15=__ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_($35, $36, $37, $38, $39);
  $sNext=$call15;
  var $40=$sPrev;
  var $41=$s;
  var $cmp16=($40) > ($41);
  if ($cmp16) { __label__ = 10;; } else { __label__ = 12;; }
  $land_lhs_true$$if_else$16: do { 
    if (__label__ == 10) {

      var $42=$sPrev;
      var $43=$sNext;
      var $cmp17=($42) > ($43);
      if (!($cmp17)) { __label__ = 12;break $land_lhs_true$$if_else$16; }

      $increment=-1;
      var $44=$prevEdge;
      $bestEdge=$44;
      var $45=$sPrev;
      $bestSeparation=$45;
      var $53 = -1;__label__ = 15;break $land_lhs_true$$if_else$16;
    }
  } while(0);
  $for_cond24$$if_else$19: do { 
    if (__label__ == 12) {

      var $46=$sNext;
      var $47=$s;
      var $cmp19=($46) > ($47);
      if ($cmp19) { __label__ = 13;; } else { __label__ = 14;; }
      $if_then20$$if_else21$21: do { 
        if (__label__ == 13) {

          $increment=1;
          var $48=$nextEdge;
          $bestEdge=$48;
          var $49=$sNext;
          $bestSeparation=$49;
          var $53 = 1;__label__ = 15;break $for_cond24$$if_else$19;
        }
        else if (__label__ == 14) {

          var $50=$edge;
          var $51=$edgeIndex_addr;
          IHEAP[$51]=$50;
          var $52=$s;
          $retval=$52;
          __label__ = 26;break $for_cond24$$if_else$19;
        }
      } while(0);
    }
  } while(0);
  $for_cond24$$return$24: do { 
    if (__label__ == 15) {
      $for_cond24$25: while(1) { 

        var $53;
        var $cmp25=($53)==-1;
        var $54=$bestEdge;
        if ($cmp25) { __label__ = 16;; } else { __label__ = 20;; }
        $if_then26$$if_else35$27: do { 
          if (__label__ == 16) {

            var $sub27=($54)-1;
            var $cmp28=($sub27) >= 0;
            if ($cmp28) { __label__ = 17;; } else { __label__ = 18;; }
            $cond_true29$$cond_false31$29: do { 
              if (__label__ == 17) {

                var $55=$bestEdge;
                var $sub30=($55)-1;
                var $cond34 = $sub30;;
              }
              else if (__label__ == 18) {

                var $56=$count1;
                var $sub32=($56)-1;
                var $cond34 = $sub32;;
              }
            } while(0);

            var $cond34;
            $edge=$cond34;
            ;
          }
          else if (__label__ == 20) {

            var $add36=($54)+1;
            var $57=$count1;
            var $cmp37=($add36) < ($57);
            if ($cmp37) { __label__ = 21;; } else { var $cond42 = 0;__label__ = 22;; }
            $cond_true38$$cond_end41$34: do { 
              if (__label__ == 21) {

                var $58=$bestEdge;
                var $add39=($58)+1;
                var $cond42 = $add39;;
              }
            } while(0);

            var $cond42;
            $edge=$cond42;
            ;
          }
        } while(0);

        var $59=$poly1_addr;
        var $60=$xf1_addr;
        var $61=$edge;
        var $62=$poly2_addr;
        var $63=$xf2_addr;
        var $call44=__ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_($59, $60, $61, $62, $63);
        $s=$call44;
        var $64=$s;
        var $65=$bestSeparation;
        var $cmp45=($64) > ($65);
        if (!($cmp45)) { __label__ = 25;break $for_cond24$25; }

        var $66=$edge;
        $bestEdge=$66;
        var $67=$s;
        $bestSeparation=$67;
        var $_pr=$increment;
        var $53 = $_pr;;
      }

      var $68=$bestEdge;
      var $69=$edgeIndex_addr;
      IHEAP[$69]=$68;
      var $70=$bestSeparation;
      $retval=$70;
      ;
    }
  } while(0);

  var $71=$retval;
  STACKTOP = __stackBase__;
  return $71;
  return null;
}
__ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_["X"]=1;

function __ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_($c, $poly1, $xf1, $edge1, $poly2, $xf2) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $c_addr;
  var $poly1_addr;
  var $xf1_addr;
  var $edge1_addr;
  var $poly2_addr;
  var $xf2_addr;
  var $normals1;
  var $count2;
  var $vertices2;
  var $normals2;
  var $normal1=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $index;
  var $minDot;
  var $i;
  var $dot;
  var $i1;
  var $i2;
  var $ref_tmp16=__stackBase__+4;
  var $ref_tmp31=__stackBase__+6;
  $c_addr=$c;
  $poly1_addr=$poly1;
  $xf1_addr=$xf1;
  $edge1_addr=$edge1;
  $poly2_addr=$poly2;
  $xf2_addr=$xf2;
  var $0=$poly1_addr;
  var $m_normals=$0+21;
  var $arraydecay=$m_normals;
  $normals1=$arraydecay;
  var $1=$poly2_addr;
  var $m_vertexCount=$1+37;
  var $2=IHEAP[$m_vertexCount];
  $count2=$2;
  var $3=$poly2_addr;
  var $m_vertices=$3+5;
  var $arraydecay1=$m_vertices;
  $vertices2=$arraydecay1;
  var $4=$poly2_addr;
  var $m_normals2=$4+21;
  var $arraydecay3=$m_normals2;
  $normals2=$arraydecay3;
  var $5=$edge1_addr;
  var $cmp=0 <= ($5);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$42: do { 
    if (__label__ == 1) {

      var $6=$edge1_addr;
      var $7=$poly1_addr;
      var $m_vertexCount4=$7+37;
      var $8=IHEAP[$m_vertexCount4];
      var $cmp5=($6) < ($8);
      if ($cmp5) { __label__ = 3;break $land_lhs_true$$cond_false$42; } else { __label__ = 2;break $land_lhs_true$$cond_false$42; }
    }
  } while(0);
  $cond_end$$cond_false$44: do { 
    if (__label__ == 2) {

      ___assert_func(__str58, 151, ___PRETTY_FUNCTION____ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_, __str159);
      ;
    }
  } while(0);

  var $9=$xf2_addr;
  var $q=$9+2;
  var $10=$xf1_addr;
  var $q6=$10+2;
  var $11=$edge1_addr;
  var $12=$normals1;
  var $arrayidx=$12+($11<<1);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $q6, $arrayidx);
  __Z6b2MulTRK5b2RotRK6b2Vec2($normal1, $q, $ref_tmp);
  $index=0;
  $minDot=3.4028234663852886e+38;
  $i=0;
  var $13=$i;
  var $14=$count2;
  var $cmp71=($13) < ($14);
  if ($cmp71) { __label__ = 4;; } else { __label__ = 7;; }
  $for_body$$for_end$47: do { 
    if (__label__ == 4) {
      $for_body$48: while(1) { 

        var $15=$i;
        var $16=$normals2;
        var $arrayidx8=$16+($15<<1);
        var $call=__Z5b2DotRK6b2Vec2S1_($normal1, $arrayidx8);
        $dot=$call;
        var $17=$dot;
        var $18=$minDot;
        var $cmp9=($17) < ($18);
        if ($cmp9) { __label__ = 5;; } else { __label__ = 6;; }
        $if_then$$for_inc$50: do { 
          if (__label__ == 5) {

            var $19=$dot;
            $minDot=$19;
            var $20=$i;
            $index=$20;
            ;
          }
        } while(0);

        var $21=$i;
        var $inc=($21)+1;
        $i=$inc;
        var $22=$i;
        var $23=$count2;
        var $cmp7=($22) < ($23);
        if (!($cmp7)) { __label__ = 7;break $for_body$$for_end$47; }
      }
    }
  } while(0);

  var $24=$index;
  $i1=$24;
  var $25=$i1;
  var $add=($25)+1;
  var $26=$count2;
  var $cmp10=($add) < ($26);
  if ($cmp10) { __label__ = 8;; } else { var $cond = 0;__label__ = 9;; }
  $cond_true11$$cond_end14$54: do { 
    if (__label__ == 8) {

      var $27=$i1;
      var $add12=($27)+1;
      var $cond = $add12;;
    }
  } while(0);

  var $cond;
  $i2=$cond;
  var $28=$c_addr;
  var $arrayidx15=$28;
  var $v=$arrayidx15;
  var $29=$xf2_addr;
  var $30=$i1;
  var $31=$vertices2;
  var $arrayidx17=$31+($30<<1);
  __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp16, $29, $arrayidx17);
  var $32=$v;
  var $33=$ref_tmp16;
  IHEAP[$32]=IHEAP[$33]; FHEAP[$32]=FHEAP[$33]; ; IHEAP[$32+1]=IHEAP[$33+1]; FHEAP[$32+1]=FHEAP[$33+1]; ;
  var $34=$edge1_addr;
  var $conv=((($34)) & 255);
  var $35=$c_addr;
  var $arrayidx18=$35;
  var $id=$arrayidx18+2;
  var $cf=$id;
  var $indexA=$cf;
  IHEAP[$indexA]=$conv;
  var $36=$i1;
  var $conv19=((($36)) & 255);
  var $37=$c_addr;
  var $arrayidx20=$37;
  var $id21=$arrayidx20+2;
  var $cf22=$id21;
  var $indexB=$cf22+1;
  IHEAP[$indexB]=$conv19;
  var $38=$c_addr;
  var $arrayidx23=$38;
  var $id24=$arrayidx23+2;
  var $cf25=$id24;
  var $typeA=$cf25+2;
  IHEAP[$typeA]=1;
  var $39=$c_addr;
  var $arrayidx26=$39;
  var $id27=$arrayidx26+2;
  var $cf28=$id27;
  var $typeB=$cf28+3;
  IHEAP[$typeB]=0;
  var $40=$c_addr;
  var $arrayidx29=$40+3;
  var $v30=$arrayidx29;
  var $41=$xf2_addr;
  var $42=$i2;
  var $43=$vertices2;
  var $arrayidx32=$43+($42<<1);
  __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp31, $41, $arrayidx32);
  var $44=$v30;
  var $45=$ref_tmp31;
  IHEAP[$44]=IHEAP[$45]; FHEAP[$44]=FHEAP[$45]; ; IHEAP[$44+1]=IHEAP[$45+1]; FHEAP[$44+1]=FHEAP[$45+1]; ;
  var $46=$edge1_addr;
  var $conv33=((($46)) & 255);
  var $47=$c_addr;
  var $arrayidx34=$47+3;
  var $id35=$arrayidx34+2;
  var $cf36=$id35;
  var $indexA37=$cf36;
  IHEAP[$indexA37]=$conv33;
  var $48=$i2;
  var $conv38=((($48)) & 255);
  var $49=$c_addr;
  var $arrayidx39=$49+3;
  var $id40=$arrayidx39+2;
  var $cf41=$id40;
  var $indexB42=$cf41+1;
  IHEAP[$indexB42]=$conv38;
  var $50=$c_addr;
  var $arrayidx43=$50+3;
  var $id44=$arrayidx43+2;
  var $cf45=$id44;
  var $typeA46=$cf45+2;
  IHEAP[$typeA46]=1;
  var $51=$c_addr;
  var $arrayidx47=$51+3;
  var $id48=$arrayidx47+2;
  var $cf49=$id48;
  var $typeB50=$cf49+3;
  IHEAP[$typeB50]=0;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_["X"]=1;

function __ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_($poly1, $xf1, $edge1, $poly2, $xf2) {
  var __stackBase__  = STACKTOP; STACKTOP += 10;
  var __label__;

  var $poly1_addr;
  var $xf1_addr;
  var $edge1_addr;
  var $poly2_addr;
  var $xf2_addr;
  var $vertices1;
  var $normals1;
  var $count2;
  var $vertices2;
  var $normal1World=__stackBase__;
  var $normal1=__stackBase__+2;
  var $index;
  var $minDot;
  var $i;
  var $dot;
  var $v1=__stackBase__+4;
  var $v2=__stackBase__+6;
  var $separation;
  var $ref_tmp=__stackBase__+8;
  $poly1_addr=$poly1;
  $xf1_addr=$xf1;
  $edge1_addr=$edge1;
  $poly2_addr=$poly2;
  $xf2_addr=$xf2;
  var $0=$poly1_addr;
  var $m_vertices=$0+5;
  var $arraydecay=$m_vertices;
  $vertices1=$arraydecay;
  var $1=$poly1_addr;
  var $m_normals=$1+21;
  var $arraydecay1=$m_normals;
  $normals1=$arraydecay1;
  var $2=$poly2_addr;
  var $m_vertexCount=$2+37;
  var $3=IHEAP[$m_vertexCount];
  $count2=$3;
  var $4=$poly2_addr;
  var $m_vertices2=$4+5;
  var $arraydecay3=$m_vertices2;
  $vertices2=$arraydecay3;
  var $5=$edge1_addr;
  var $cmp=0 <= ($5);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$59: do { 
    if (__label__ == 1) {

      var $6=$edge1_addr;
      var $7=$poly1_addr;
      var $m_vertexCount4=$7+37;
      var $8=IHEAP[$m_vertexCount4];
      var $cmp5=($6) < ($8);
      if ($cmp5) { __label__ = 3;break $land_lhs_true$$cond_false$59; } else { __label__ = 2;break $land_lhs_true$$cond_false$59; }
    }
  } while(0);
  $cond_end$$cond_false$61: do { 
    if (__label__ == 2) {

      ___assert_func(__str58, 32, ___PRETTY_FUNCTION____ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_, __str159);
      ;
    }
  } while(0);

  var $9=$xf1_addr;
  var $q=$9+2;
  var $10=$edge1_addr;
  var $11=$normals1;
  var $arrayidx=$11+($10<<1);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal1World, $q, $arrayidx);
  var $12=$xf2_addr;
  var $q6=$12+2;
  __Z6b2MulTRK5b2RotRK6b2Vec2($normal1, $q6, $normal1World);
  $index=0;
  $minDot=3.4028234663852886e+38;
  $i=0;
  var $13=$i;
  var $14=$count2;
  var $cmp71=($13) < ($14);
  if ($cmp71) { __label__ = 4;; } else { __label__ = 7;; }
  $for_body$$for_end$64: do { 
    if (__label__ == 4) {
      $for_body$65: while(1) { 

        var $15=$i;
        var $16=$vertices2;
        var $arrayidx8=$16+($15<<1);
        var $call=__Z5b2DotRK6b2Vec2S1_($arrayidx8, $normal1);
        $dot=$call;
        var $17=$dot;
        var $18=$minDot;
        var $cmp9=($17) < ($18);
        if ($cmp9) { __label__ = 5;; } else { __label__ = 6;; }
        $if_then$$for_inc$67: do { 
          if (__label__ == 5) {

            var $19=$dot;
            $minDot=$19;
            var $20=$i;
            $index=$20;
            ;
          }
        } while(0);

        var $21=$i;
        var $inc=($21)+1;
        $i=$inc;
        var $22=$i;
        var $23=$count2;
        var $cmp7=($22) < ($23);
        if (!($cmp7)) { __label__ = 7;break $for_body$$for_end$64; }
      }
    }
  } while(0);

  var $24=$xf1_addr;
  var $25=$edge1_addr;
  var $26=$vertices1;
  var $arrayidx10=$26+($25<<1);
  __Z5b2MulRK11b2TransformRK6b2Vec2($v1, $24, $arrayidx10);
  var $27=$xf2_addr;
  var $28=$index;
  var $29=$vertices2;
  var $arrayidx11=$29+($28<<1);
  __Z5b2MulRK11b2TransformRK6b2Vec2($v2, $27, $arrayidx11);
  __ZmiRK6b2Vec2S1_($ref_tmp, $v2, $v1);
  var $call12=__Z5b2DotRK6b2Vec2S1_($ref_tmp, $normal1World);
  $separation=$call12;
  var $30=$separation;
  STACKTOP = __stackBase__;
  return $30;
  return null;
}
__ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_["X"]=1;

function __ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f($this, $manifold, $xfA, $radiusA, $xfB, $radiusB) {
  var __stackBase__  = STACKTOP; STACKTOP += 60;
  var __label__;

  var $this_addr;
  var $manifold_addr;
  var $xfA_addr;
  var $radiusA_addr;
  var $xfB_addr;
  var $radiusB_addr;
  var $pointA=__stackBase__;
  var $pointB=__stackBase__+2;
  var $ref_tmp=__stackBase__+4;
  var $cA=__stackBase__+6;
  var $ref_tmp9=__stackBase__+8;
  var $cB=__stackBase__+10;
  var $ref_tmp11=__stackBase__+12;
  var $ref_tmp15=__stackBase__+14;
  var $ref_tmp16=__stackBase__+16;
  var $ref_tmp19=__stackBase__+18;
  var $planePoint=__stackBase__+20;
  var $i;
  var $clipPoint=__stackBase__+22;
  var $cA26=__stackBase__+24;
  var $ref_tmp27=__stackBase__+26;
  var $ref_tmp28=__stackBase__+28;
  var $cB32=__stackBase__+30;
  var $ref_tmp33=__stackBase__+32;
  var $ref_tmp37=__stackBase__+34;
  var $ref_tmp38=__stackBase__+36;
  var $ref_tmp41=__stackBase__+38;
  var $planePoint44=__stackBase__+40;
  var $i46;
  var $clipPoint51=__stackBase__+42;
  var $cB55=__stackBase__+44;
  var $ref_tmp56=__stackBase__+46;
  var $ref_tmp57=__stackBase__+48;
  var $cA62=__stackBase__+50;
  var $ref_tmp63=__stackBase__+52;
  var $ref_tmp67=__stackBase__+54;
  var $ref_tmp68=__stackBase__+56;
  var $ref_tmp73=__stackBase__+58;
  $this_addr=$this;
  $manifold_addr=$manifold;
  $xfA_addr=$xfA;
  $radiusA_addr=$radiusA;
  $xfB_addr=$xfB;
  $radiusB_addr=$radiusB;
  var $this1=$this_addr;
  var $0=$manifold_addr;
  var $pointCount=$0+15;
  var $1=IHEAP[$pointCount];
  var $cmp=($1)==0;
  if ($cmp) { __label__ = 12;; } else { __label__ = 1;; }
  $sw_epilog$$if_end$72: do { 
    if (__label__ == 1) {

      var $2=$manifold_addr;
      var $type=$2+14;
      var $3=IHEAP[$type];
      if ($3 == 0) {
        __label__ = 2;;
      }
      else if ($3 == 1) {
        __label__ = 5;;
      }
      else if ($3 == 2) {
        __label__ = 8;;
      }
      else {
      __label__ = 12;break $sw_epilog$$if_end$72;
      }
      
      $sw_bb$$sw_bb17$$sw_bb39$74: do { 
        if (__label__ == 2) {

          var $normal=$this1;
          __ZN6b2Vec23SetEff($normal, 1, 0);
          var $4=$xfA_addr;
          var $5=$manifold_addr;
          var $localPoint=$5+12;
          __Z5b2MulRK11b2TransformRK6b2Vec2($pointA, $4, $localPoint);
          var $6=$xfB_addr;
          var $7=$manifold_addr;
          var $points=$7;
          var $arrayidx=$points;
          var $localPoint2=$arrayidx;
          __Z5b2MulRK11b2TransformRK6b2Vec2($pointB, $6, $localPoint2);
          var $call=__Z17b2DistanceSquaredRK6b2Vec2S1_($pointA, $pointB);
          var $cmp3=($call) > 1.4210854715202004e-14;
          if ($cmp3) { __label__ = 3;; } else { __label__ = 4;; }
          $if_then4$$if_end8$76: do { 
            if (__label__ == 3) {

              var $normal5=$this1;
              __ZmiRK6b2Vec2S1_($ref_tmp, $pointB, $pointA);
              var $8=$normal5;
              var $9=$ref_tmp;
              IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
              var $normal6=$this1;
              var $call7=__ZN6b2Vec29NormalizeEv($normal6);
              ;
            }
          } while(0);

          var $10=$radiusA_addr;
          var $normal10=$this1;
          __ZmlfRK6b2Vec2($ref_tmp9, $10, $normal10);
          __ZplRK6b2Vec2S1_($cA, $pointA, $ref_tmp9);
          var $11=$radiusB_addr;
          var $normal12=$this1;
          __ZmlfRK6b2Vec2($ref_tmp11, $11, $normal12);
          __ZmiRK6b2Vec2S1_($cB, $pointB, $ref_tmp11);
          var $points13=$this1+2;
          var $arrayidx14=$points13;
          __ZplRK6b2Vec2S1_($ref_tmp16, $cA, $cB);
          __ZmlfRK6b2Vec2($ref_tmp15, 0.5, $ref_tmp16);
          var $12=$arrayidx14;
          var $13=$ref_tmp15;
          IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
          ;
        }
        else if (__label__ == 5) {

          var $normal18=$this1;
          var $14=$xfA_addr;
          var $q=$14+2;
          var $15=$manifold_addr;
          var $localNormal=$15+10;
          __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp19, $q, $localNormal);
          var $16=$normal18;
          var $17=$ref_tmp19;
          IHEAP[$16]=IHEAP[$17]; FHEAP[$16]=FHEAP[$17]; ; IHEAP[$16+1]=IHEAP[$17+1]; FHEAP[$16+1]=FHEAP[$17+1]; ;
          var $18=$xfA_addr;
          var $19=$manifold_addr;
          var $localPoint20=$19+12;
          __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint, $18, $localPoint20);
          $i=0;
          var $20=$i;
          var $21=$manifold_addr;
          var $pointCount213=$21+15;
          var $22=IHEAP[$pointCount213];
          var $cmp224=($20) < ($22);
          if (!($cmp224)) { __label__ = 12;break $sw_epilog$$if_end$72; }

          var $normal29=$this1;
          var $normal31=$this1;
          var $normal34=$this1;
          var $points35=$this1+2;
          var $23=$ref_tmp37;
          ;
          $for_body$81: while(1) { 

            var $24=$xfB_addr;
            var $25=$i;
            var $26=$manifold_addr;
            var $points23=$26;
            var $arrayidx24=$points23+$25*5;
            var $localPoint25=$arrayidx24;
            __Z5b2MulRK11b2TransformRK6b2Vec2($clipPoint, $24, $localPoint25);
            var $27=$radiusA_addr;
            __ZmiRK6b2Vec2S1_($ref_tmp28, $clipPoint, $planePoint);
            var $call30=__Z5b2DotRK6b2Vec2S1_($ref_tmp28, $normal29);
            var $sub=($27)-($call30);
            __ZmlfRK6b2Vec2($ref_tmp27, $sub, $normal31);
            __ZplRK6b2Vec2S1_($cA26, $clipPoint, $ref_tmp27);
            var $28=$radiusB_addr;
            __ZmlfRK6b2Vec2($ref_tmp33, $28, $normal34);
            __ZmiRK6b2Vec2S1_($cB32, $clipPoint, $ref_tmp33);
            var $29=$i;
            var $arrayidx36=$points35+($29<<1);
            __ZplRK6b2Vec2S1_($ref_tmp38, $cA26, $cB32);
            __ZmlfRK6b2Vec2($ref_tmp37, 0.5, $ref_tmp38);
            var $30=$arrayidx36;
            IHEAP[$30]=IHEAP[$23]; FHEAP[$30]=FHEAP[$23]; ; IHEAP[$30+1]=IHEAP[$23+1]; FHEAP[$30+1]=FHEAP[$23+1]; ;
            var $31=$i;
            var $inc=($31)+1;
            $i=$inc;
            var $32=$i;
            var $33=$manifold_addr;
            var $pointCount21=$33+15;
            var $34=IHEAP[$pointCount21];
            var $cmp22=($32) < ($34);
            if (!($cmp22)) { __label__ = 12;break $sw_epilog$$if_end$72; }
          }
        }
        else if (__label__ == 8) {

          var $normal40=$this1;
          var $35=$xfB_addr;
          var $q42=$35+2;
          var $36=$manifold_addr;
          var $localNormal43=$36+10;
          __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp41, $q42, $localNormal43);
          var $37=$normal40;
          var $38=$ref_tmp41;
          IHEAP[$37]=IHEAP[$38]; FHEAP[$37]=FHEAP[$38]; ; IHEAP[$37+1]=IHEAP[$38+1]; FHEAP[$37+1]=FHEAP[$38+1]; ;
          var $39=$xfB_addr;
          var $40=$manifold_addr;
          var $localPoint45=$40+12;
          __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint44, $39, $localPoint45);
          $i46=0;
          var $41=$i46;
          var $42=$manifold_addr;
          var $pointCount481=$42+15;
          var $43=IHEAP[$pointCount481];
          var $cmp492=($41) < ($43);
          if ($cmp492) { __label__ = 9;; } else { __label__ = 11;; }
          $for_body50_lr_ph$$for_end71$84: do { 
            if (__label__ == 9) {

              var $normal58=$this1;
              var $normal61=$this1;
              var $normal64=$this1;
              var $points65=$this1+2;
              var $44=$ref_tmp67;
              ;
              $for_body50$86: while(1) { 

                var $45=$xfA_addr;
                var $46=$i46;
                var $47=$manifold_addr;
                var $points52=$47;
                var $arrayidx53=$points52+$46*5;
                var $localPoint54=$arrayidx53;
                __Z5b2MulRK11b2TransformRK6b2Vec2($clipPoint51, $45, $localPoint54);
                var $48=$radiusB_addr;
                __ZmiRK6b2Vec2S1_($ref_tmp57, $clipPoint51, $planePoint44);
                var $call59=__Z5b2DotRK6b2Vec2S1_($ref_tmp57, $normal58);
                var $sub60=($48)-($call59);
                __ZmlfRK6b2Vec2($ref_tmp56, $sub60, $normal61);
                __ZplRK6b2Vec2S1_($cB55, $clipPoint51, $ref_tmp56);
                var $49=$radiusA_addr;
                __ZmlfRK6b2Vec2($ref_tmp63, $49, $normal64);
                __ZmiRK6b2Vec2S1_($cA62, $clipPoint51, $ref_tmp63);
                var $50=$i46;
                var $arrayidx66=$points65+($50<<1);
                __ZplRK6b2Vec2S1_($ref_tmp68, $cA62, $cB55);
                __ZmlfRK6b2Vec2($ref_tmp67, 0.5, $ref_tmp68);
                var $51=$arrayidx66;
                IHEAP[$51]=IHEAP[$44]; FHEAP[$51]=FHEAP[$44]; ; IHEAP[$51+1]=IHEAP[$44+1]; FHEAP[$51+1]=FHEAP[$44+1]; ;
                var $52=$i46;
                var $inc70=($52)+1;
                $i46=$inc70;
                var $53=$i46;
                var $54=$manifold_addr;
                var $pointCount48=$54+15;
                var $55=IHEAP[$pointCount48];
                var $cmp49=($53) < ($55);
                if (!($cmp49)) { __label__ = 11;break $for_body50_lr_ph$$for_end71$84; }
              }
            }
          } while(0);

          var $normal72=$this1;
          var $normal74=$this1;
          __ZNK6b2Vec2ngEv($ref_tmp73, $normal74);
          var $56=$normal72;
          var $57=$ref_tmp73;
          IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
          ;
        }
      } while(0);
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f["X"]=1;

function __ZN9b2Contact19InitializeRegistersEv() {
  ;
  var __label__;

  __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(2, 4, 0, 0);
  __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(6, 8, 2, 0);
  __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(10, 12, 2, 2);
  __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(14, 16, 1, 0);
  __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(18, 20, 1, 2);
  __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(22, 24, 3, 0);
  __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(26, 28, 3, 2);
  ;
  return;
  return;
}


function __Z6b2SwapIfEvRT_S1_($a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  var $tmp;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $1=FHEAP[$0];
  $tmp=$1;
  var $2=$b_addr;
  var $3=FHEAP[$2];
  var $4=$a_addr;
  FHEAP[$4]=$3;
  var $5=$tmp;
  var $6=$b_addr;
  FHEAP[$6]=$5;
  ;
  return;
  return;
}


function __ZN15b2DistanceInputC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2DistanceInputC2Ev($this1);
  ;
  return;
  return;
}


function __ZN16b2DistanceOutputC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN16b2DistanceOutputC2Ev($this1);
  ;
  return;
  return;
}


function __ZN15b2DistanceProxyC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2DistanceProxyC2Ev($this1);
  ;
  return;
  return;
}


function __Z5b2AbsIfET_S0_($a) {
  ;
  var __label__;

  var $a_addr;
  $a_addr=$a;
  var $0=$a_addr;
  var $cmp=($0) > 0;
  var $1=$a_addr;
  if ($cmp) { var $cond = $1;__label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$75: do { 
    if (__label__ == 1) {

      var $sub=(-($1));
      var $cond = $sub;;
    }
  } while(0);

  var $cond;
  ;
  return $cond;
  return null;
}


function __Z16b2GetPointStatesP12b2PointStateS0_PK10b2ManifoldS3_($state1, $state2, $manifold1, $manifold2) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $state1_addr;
  var $state2_addr;
  var $manifold1_addr;
  var $manifold2_addr;
  var $i;
  var $i2;
  var $id=__stackBase__;
  var $j;
  var $i25;
  var $id30=__stackBase__+1;
  var $j35;
  $state1_addr=$state1;
  $state2_addr=$state2;
  $manifold1_addr=$manifold1;
  $manifold2_addr=$manifold2;
  $i=0;
  ;
  $for_body$2: while(1) { 

    var $0=$i;
    var $1=$state1_addr;
    var $arrayidx=$1+$0;
    IHEAP[$arrayidx]=0;
    var $2=$i;
    var $3=$state2_addr;
    var $arrayidx1=$3+$2;
    IHEAP[$arrayidx1]=0;
    var $4=$i;
    var $inc=($4)+1;
    $i=$inc;
    var $cmp=($inc) < 2;
    if (!($cmp)) { __label__ = 2;break $for_body$2; }
  }

  $i2=0;
  var $5=$i2;
  var $6=$manifold1_addr;
  var $pointCount3=$6+15;
  var $7=IHEAP[$pointCount3];
  var $cmp44=($5) < ($7);
  if ($cmp44) { __label__ = 3;; } else { __label__ = 10;; }
  $for_body5_lr_ph$$for_end24$5: do { 
    if (__label__ == 3) {

      var $8=$id;
      var $key16=$id;
      ;
      $for_body5$7: while(1) { 

        var $9=$i2;
        var $10=$manifold1_addr;
        var $points=$10;
        var $arrayidx6=$points+$9*5;
        var $id7=$arrayidx6+4;
        var $11=$id7;
        IHEAP[$8]=IHEAP[$11]; FHEAP[$8]=FHEAP[$11]; ;
        var $12=$i2;
        var $13=$state1_addr;
        var $arrayidx8=$13+$12;
        IHEAP[$arrayidx8]=3;
        $j=0;
        ;
        $for_cond9$9: while(1) { 

          var $14=$j;
          var $15=$manifold2_addr;
          var $pointCount10=$15+15;
          var $16=IHEAP[$pointCount10];
          var $cmp11=($14) < ($16);
          if (!($cmp11)) { __label__ = 9;break $for_cond9$9; }

          var $17=$j;
          var $18=$manifold2_addr;
          var $points13=$18;
          var $arrayidx14=$points13+$17*5;
          var $id15=$arrayidx14+4;
          var $key=$id15;
          var $19=IHEAP[$key];
          var $20=IHEAP[$key16];
          var $cmp17=($19)==($20);
          if ($cmp17) { __label__ = 7;break $for_cond9$9; }

          var $23=$j;
          var $inc20=($23)+1;
          $j=$inc20;
          ;
        }
        $for_inc22$$if_then$13: do { 
          if (__label__ == 7) {

            var $21=$i2;
            var $22=$state1_addr;
            var $arrayidx18=$22+$21;
            IHEAP[$arrayidx18]=2;
            ;
          }
        } while(0);

        var $24=$i2;
        var $inc23=($24)+1;
        $i2=$inc23;
        var $25=$i2;
        var $26=$manifold1_addr;
        var $pointCount=$26+15;
        var $27=IHEAP[$pointCount];
        var $cmp4=($25) < ($27);
        if (!($cmp4)) { __label__ = 10;break $for_body5_lr_ph$$for_end24$5; }
      }
    }
  } while(0);

  $i25=0;
  var $28=$i25;
  var $29=$manifold2_addr;
  var $pointCount271=$29+15;
  var $30=IHEAP[$pointCount271];
  var $cmp282=($28) < ($30);
  if ($cmp282) { __label__ = 11;; } else { __label__ = 18;; }
  $for_body29_lr_ph$$for_end54$17: do { 
    if (__label__ == 11) {

      var $31=$id30;
      var $key44=$id30;
      ;
      $for_body29$19: while(1) { 

        var $32=$i25;
        var $33=$manifold2_addr;
        var $points31=$33;
        var $arrayidx32=$points31+$32*5;
        var $id33=$arrayidx32+4;
        var $34=$id33;
        IHEAP[$31]=IHEAP[$34]; FHEAP[$31]=FHEAP[$34]; ;
        var $35=$i25;
        var $36=$state2_addr;
        var $arrayidx34=$36+$35;
        IHEAP[$arrayidx34]=1;
        $j35=0;
        ;
        $for_cond36$21: while(1) { 

          var $37=$j35;
          var $38=$manifold1_addr;
          var $pointCount37=$38+15;
          var $39=IHEAP[$pointCount37];
          var $cmp38=($37) < ($39);
          if (!($cmp38)) { __label__ = 17;break $for_cond36$21; }

          var $40=$j35;
          var $41=$manifold1_addr;
          var $points40=$41;
          var $arrayidx41=$points40+$40*5;
          var $id42=$arrayidx41+4;
          var $key43=$id42;
          var $42=IHEAP[$key43];
          var $43=IHEAP[$key44];
          var $cmp45=($42)==($43);
          if ($cmp45) { __label__ = 15;break $for_cond36$21; }

          var $46=$j35;
          var $inc50=($46)+1;
          $j35=$inc50;
          ;
        }
        $for_inc52$$if_then46$25: do { 
          if (__label__ == 15) {

            var $44=$i25;
            var $45=$state2_addr;
            var $arrayidx47=$45+$44;
            IHEAP[$arrayidx47]=2;
            ;
          }
        } while(0);

        var $47=$i25;
        var $inc53=($47)+1;
        $i25=$inc53;
        var $48=$i25;
        var $49=$manifold2_addr;
        var $pointCount27=$49+15;
        var $50=IHEAP[$pointCount27];
        var $cmp28=($48) < ($50);
        if (!($cmp28)) { __label__ = 18;break $for_body29_lr_ph$$for_end54$17; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__Z16b2GetPointStatesP12b2PointStateS0_PK10b2ManifoldS3_["X"]=1;

function __ZN6b2Vec2clEi($this, $i) {
  ;
  var __label__;

  var $this_addr;
  var $i_addr;
  $this_addr=$this;
  $i_addr=$i;
  var $this1=$this_addr;
  var $0=$i_addr;
  var $x=$this1;
  var $arrayidx=$x+$0;
  ;
  return $arrayidx;
  return null;
}


function __ZNK6b2Vec2clEi($this, $i) {
  ;
  var __label__;

  var $this_addr;
  var $i_addr;
  $this_addr=$this;
  $i_addr=$i;
  var $this1=$this_addr;
  var $0=$i_addr;
  var $x=$this1;
  var $arrayidx=$x+$0;
  var $1=FHEAP[$arrayidx];
  ;
  return $1;
  return null;
}


function __Z13b2TestOverlapPK7b2ShapeiS1_iRK11b2TransformS4_($shapeA, $indexA, $shapeB, $indexB, $xfA, $xfB) {
  var __stackBase__  = STACKTOP; STACKTOP += 37;
  var __label__;

  var $shapeA_addr;
  var $indexA_addr;
  var $shapeB_addr;
  var $indexB_addr;
  var $xfA_addr;
  var $xfB_addr;
  var $input=__stackBase__;
  var $cache=__stackBase__+23;
  var $output=__stackBase__+31;
  $shapeA_addr=$shapeA;
  $indexA_addr=$indexA;
  $shapeB_addr=$shapeB;
  $indexB_addr=$indexB;
  $xfA_addr=$xfA;
  $xfB_addr=$xfB;
  __ZN15b2DistanceInputC1Ev($input);
  var $proxyA=$input;
  var $0=$shapeA_addr;
  var $1=$indexA_addr;
  __ZN15b2DistanceProxy3SetEPK7b2Shapei($proxyA, $0, $1);
  var $proxyB=$input+7;
  var $2=$shapeB_addr;
  var $3=$indexB_addr;
  __ZN15b2DistanceProxy3SetEPK7b2Shapei($proxyB, $2, $3);
  var $transformA=$input+14;
  var $4=$xfA_addr;
  var $5=$transformA;
  var $6=$4;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ; IHEAP[$5+2]=IHEAP[$6+2]; FHEAP[$5+2]=FHEAP[$6+2]; ; IHEAP[$5+3]=IHEAP[$6+3]; FHEAP[$5+3]=FHEAP[$6+3]; ;
  var $transformB=$input+18;
  var $7=$xfB_addr;
  var $8=$transformB;
  var $9=$7;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ; IHEAP[$8+2]=IHEAP[$9+2]; FHEAP[$8+2]=FHEAP[$9+2]; ; IHEAP[$8+3]=IHEAP[$9+3]; FHEAP[$8+3]=FHEAP[$9+3]; ;
  var $useRadii=$input+22;
  IHEAP[$useRadii]=1;
  var $count=$cache+1;
  IHEAP[$count]=0;
  __ZN16b2DistanceOutputC1Ev($output);
  __Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput($output, $cache, $input);
  var $distance=$output+4;
  var $10=FHEAP[$distance];
  var $cmp=($10) < 0.0000011920928955078125;
  STACKTOP = __stackBase__;
  return $cmp;
  return null;
}


function __ZN16b2DistanceOutputC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $pointA=$this1;
  __ZN6b2Vec2C1Ev($pointA);
  var $pointB=$this1+2;
  __ZN6b2Vec2C1Ev($pointB);
  ;
  return;
  return;
}


function __ZN15b2DistanceInputC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $proxyA=$this1;
  __ZN15b2DistanceProxyC1Ev($proxyA);
  var $proxyB=$this1+7;
  __ZN15b2DistanceProxyC1Ev($proxyB);
  var $transformA=$this1+14;
  __ZN11b2TransformC1Ev($transformA);
  var $transformB=$this1+18;
  __ZN11b2TransformC1Ev($transformB);
  ;
  return;
  return;
}


function __ZN15b2DistanceProxyC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_buffer=$this1;
  var $array_begin=$m_buffer;
  __ZN6b2Vec2C1Ev($array_begin);
  var $arrayctor_next=$array_begin+2;
  __ZN6b2Vec2C1Ev($arrayctor_next);
  var $m_vertices=$this1+4;
  IHEAP[$m_vertices]=0;
  var $m_count=$this1+5;
  IHEAP[$m_count]=0;
  var $m_radius=$this1+6;
  FHEAP[$m_radius]=0;
  ;
  return;
  return;
}


function __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_($createFcn, $destoryFcn, $type1, $type2) {
  ;
  var __label__;

  var $createFcn_addr;
  var $destoryFcn_addr;
  var $type1_addr;
  var $type2_addr;
  $createFcn_addr=$createFcn;
  $destoryFcn_addr=$destoryFcn;
  $type1_addr=$type1;
  $type2_addr=$type2;
  var $0=$type1_addr;
  var $cmp=0 <= ($0);
  var $1=$type1_addr;
  var $cmp1=($1) < 4;
  var $or_cond=($cmp) & ($cmp1);
  if ($or_cond) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$80: do { 
    if (__label__ == 1) {

      ___assert_func(__str62, 54, ___PRETTY_FUNCTION____ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_, __str163);
      ;
    }
  } while(0);

  var $2=$type2_addr;
  var $cmp2=0 <= ($2);
  var $3=$type2_addr;
  var $cmp4=($3) < 4;
  var $or_cond1=($cmp2) & ($cmp4);
  if ($or_cond1) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end7$$cond_false6$83: do { 
    if (__label__ == 3) {

      ___assert_func(__str62, 55, ___PRETTY_FUNCTION____ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_, __str264);
      ;
    }
  } while(0);

  var $4=$createFcn_addr;
  var $5=$type2_addr;
  var $6=$type1_addr;
  var $arrayidx=__ZN9b2Contact11s_registersE+$6*12;
  var $arrayidx8=$arrayidx+$5*3;
  var $createFcn9=$arrayidx8;
  IHEAP[$createFcn9]=$4;
  var $7=$destoryFcn_addr;
  var $8=$type2_addr;
  var $9=$type1_addr;
  var $arrayidx10=__ZN9b2Contact11s_registersE+$9*12;
  var $arrayidx11=$arrayidx10+$8*3;
  var $destroyFcn=$arrayidx11+1;
  IHEAP[$destroyFcn]=$7;
  var $10=$type2_addr;
  var $11=$type1_addr;
  var $arrayidx12=__ZN9b2Contact11s_registersE+$11*12;
  var $arrayidx13=$arrayidx12+$10*3;
  var $primary=$arrayidx13+2;
  IHEAP[$primary]=1;
  var $12=$type1_addr;
  var $13=$type2_addr;
  var $cmp14=($12)!=($13);
  if ($cmp14) { __label__ = 5;; } else { __label__ = 6;; }
  $if_then$$if_end$86: do { 
    if (__label__ == 5) {

      var $14=$createFcn_addr;
      var $15=$type1_addr;
      var $16=$type2_addr;
      var $arrayidx15=__ZN9b2Contact11s_registersE+$16*12;
      var $arrayidx16=$arrayidx15+$15*3;
      var $createFcn17=$arrayidx16;
      IHEAP[$createFcn17]=$14;
      var $17=$destoryFcn_addr;
      var $18=$type1_addr;
      var $19=$type2_addr;
      var $arrayidx18=__ZN9b2Contact11s_registersE+$19*12;
      var $arrayidx19=$arrayidx18+$18*3;
      var $destroyFcn20=$arrayidx19+1;
      IHEAP[$destroyFcn20]=$17;
      var $20=$type1_addr;
      var $21=$type2_addr;
      var $arrayidx21=__ZN9b2Contact11s_registersE+$21*12;
      var $arrayidx22=$arrayidx21+$20*3;
      var $primary23=$arrayidx22+2;
      IHEAP[$primary23]=0;
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_["X"]=1;

function __ZNK6b2AABB7RayCastEP15b2RayCastOutputRK14b2RayCastInput($this, $output, $input) {
  var __stackBase__  = STACKTOP; STACKTOP += 10;
  var __label__;

  var $retval;
  var $this_addr;
  var $output_addr;
  var $input_addr;
  var $tmin;
  var $tmax;
  var $p=__stackBase__;
  var $d=__stackBase__+2;
  var $absD=__stackBase__+4;
  var $normal=__stackBase__+6;
  var $i;
  var $inv_d;
  var $t1=__stackBase__+8;
  var $t2=__stackBase__+9;
  var $s;
  $this_addr=$this;
  $output_addr=$output;
  $input_addr=$input;
  var $this1=$this_addr;
  $tmin=-3.4028234663852886e+38;
  $tmax=3.4028234663852886e+38;
  var $0=$input_addr;
  var $p1=$0;
  var $1=$p;
  var $2=$p1;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ;
  var $3=$input_addr;
  var $p2=$3+2;
  var $4=$input_addr;
  var $p12=$4;
  __ZmiRK6b2Vec2S1_($d, $p2, $p12);
  __Z5b2AbsRK6b2Vec2($absD, $d);
  __ZN6b2Vec2C1Ev($normal);
  $i=0;
  var $lowerBound=$this1;
  var $upperBound=$this1+2;
  var $lowerBound12=$this1;
  var $upperBound15=$this1+2;
  var $5 = 0;;
  $for_cond$30: while(1) { 

    var $5;
    var $cmp=($5) < 2;
    if (!($cmp)) { __label__ = 13;break $for_cond$30; }

    var $6=$i;
    var $call=__ZN6b2Vec2clEi($absD, $6);
    var $7=FHEAP[$call];
    var $cmp3=($7) < 1.1920928955078125e-7;
    var $8=$i;
    if ($cmp3) { __label__ = 3;; } else { __label__ = 6;; }
    $if_then$$if_else$33: do { 
      if (__label__ == 3) {

        var $call4=__ZN6b2Vec2clEi($p, $8);
        var $9=FHEAP[$call4];
        var $10=$i;
        var $call5=__ZNK6b2Vec2clEi($lowerBound, $10);
        var $cmp6=($9) < ($call5);
        if ($cmp6) { __label__ = 5;break $for_cond$30; }

        var $11=$i;
        var $call7=__ZNK6b2Vec2clEi($upperBound, $11);
        var $12=$i;
        var $call8=__ZN6b2Vec2clEi($p, $12);
        var $13=FHEAP[$call8];
        var $cmp9=($call7) < ($13);
        if ($cmp9) { __label__ = 5;break $for_cond$30; }
      }
      else if (__label__ == 6) {

        var $call11=__ZN6b2Vec2clEi($d, $8);
        var $14=FHEAP[$call11];
        var $div=1/($14);
        $inv_d=$div;
        var $15=$i;
        var $call13=__ZNK6b2Vec2clEi($lowerBound12, $15);
        var $16=$i;
        var $call14=__ZN6b2Vec2clEi($p, $16);
        var $17=FHEAP[$call14];
        var $sub=($call13)-($17);
        var $18=$inv_d;
        var $mul=($sub)*($18);
        FHEAP[$t1]=$mul;
        var $19=$i;
        var $call16=__ZNK6b2Vec2clEi($upperBound15, $19);
        var $20=$i;
        var $call17=__ZN6b2Vec2clEi($p, $20);
        var $21=FHEAP[$call17];
        var $sub18=($call16)-($21);
        var $22=$inv_d;
        var $mul19=($sub18)*($22);
        FHEAP[$t2]=$mul19;
        $s=-1;
        var $23=FHEAP[$t1];
        var $24=FHEAP[$t2];
        var $cmp20=($23) > ($24);
        if ($cmp20) { __label__ = 7;; } else { __label__ = 8;; }
        $if_then21$$if_end22$37: do { 
          if (__label__ == 7) {

            __Z6b2SwapIfEvRT_S1_($t1, $t2);
            $s=1;
            ;
          }
        } while(0);

        var $25=FHEAP[$t1];
        var $26=$tmin;
        var $cmp23=($25) > ($26);
        if ($cmp23) { __label__ = 9;; } else { __label__ = 10;; }
        $if_then24$$if_end26$40: do { 
          if (__label__ == 9) {

            __ZN6b2Vec27SetZeroEv($normal);
            var $27=$s;
            var $28=$i;
            var $call25=__ZN6b2Vec2clEi($normal, $28);
            FHEAP[$call25]=$27;
            var $29=FHEAP[$t1];
            $tmin=$29;
            ;
          }
        } while(0);

        var $30=$tmax;
        var $31=FHEAP[$t2];
        var $call27=__Z5b2MinIfET_S0_S0_($30, $31);
        $tmax=$call27;
        var $32=$tmin;
        var $33=$tmax;
        var $cmp28=($32) > ($33);
        if ($cmp28) { __label__ = 11;break $for_cond$30; }
      }
    } while(0);

    var $34=$i;
    var $inc=($34)+1;
    $i=$inc;
    var $5 = $inc;;
  }
  $for_end$$if_then10$$if_then29$44: do { 
    if (__label__ == 13) {

      var $35=$tmin;
      var $cmp32=($35) < 0;
      if ($cmp32) { __label__ = 15;; } else { __label__ = 14;; }
      $if_then35$$lor_lhs_false33$46: do { 
        if (__label__ == 14) {

          var $36=$input_addr;
          var $maxFraction=$36+4;
          var $37=FHEAP[$maxFraction];
          var $38=$tmin;
          var $cmp34=($37) < ($38);
          if ($cmp34) { __label__ = 15;break $if_then35$$lor_lhs_false33$46; }

          var $39=$tmin;
          var $40=$output_addr;
          var $fraction=$40+2;
          FHEAP[$fraction]=$39;
          var $41=$output_addr;
          var $normal37=$41;
          var $42=$normal37;
          var $43=$normal;
          IHEAP[$42]=IHEAP[$43]; FHEAP[$42]=FHEAP[$43]; ; IHEAP[$42+1]=IHEAP[$43+1]; FHEAP[$42+1]=FHEAP[$43+1]; ;
          $retval=1;
          __label__ = 17;break $for_end$$if_then10$$if_then29$44;
        }
      } while(0);

      $retval=0;
      ;
    }
    else if (__label__ == 5) {

      $retval=0;
      ;
    }
    else if (__label__ == 11) {

      $retval=0;
      ;
    }
  } while(0);

  var $44=$retval;
  STACKTOP = __stackBase__;
  return $44;
  return null;
}
__ZNK6b2AABB7RayCastEP15b2RayCastOutputRK14b2RayCastInput["X"]=1;

function __Z5b2AbsRK6b2Vec2($agg_result, $a) {
  ;
  var __label__;

  var $a_addr;
  $a_addr=$a;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $call=__Z5b2AbsIfET_S0_($1);
  var $2=$a_addr;
  var $y=$2+1;
  var $3=FHEAP[$y];
  var $call1=__Z5b2AbsIfET_S0_($3);
  __ZN6b2Vec2C1Eff($agg_result, $call, $call1);
  ;
  return;
  return;
}


function __Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($vOut, $vIn, $normal, $offset, $vertexIndexA) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $vOut_addr;
  var $vIn_addr;
  var $normal_addr;
  var $offset_addr;
  var $vertexIndexA_addr;
  var $numOut;
  var $distance0;
  var $distance1;
  var $interp;
  var $ref_tmp=__stackBase__;
  var $ref_tmp20=__stackBase__+2;
  var $ref_tmp21=__stackBase__+4;
  $vOut_addr=$vOut;
  $vIn_addr=$vIn;
  $normal_addr=$normal;
  $offset_addr=$offset;
  $vertexIndexA_addr=$vertexIndexA;
  $numOut=0;
  var $0=$normal_addr;
  var $1=$vIn_addr;
  var $arrayidx=$1;
  var $v=$arrayidx;
  var $call=__Z5b2DotRK6b2Vec2S1_($0, $v);
  var $2=$offset_addr;
  var $sub=($call)-($2);
  $distance0=$sub;
  var $3=$normal_addr;
  var $4=$vIn_addr;
  var $arrayidx1=$4+3;
  var $v2=$arrayidx1;
  var $call3=__Z5b2DotRK6b2Vec2S1_($3, $v2);
  var $5=$offset_addr;
  var $sub4=($call3)-($5);
  $distance1=$sub4;
  var $6=$distance0;
  var $cmp=($6) <= 0;
  if ($cmp) { __label__ = 1;; } else { var $12 = $sub4;__label__ = 2;; }
  $if_then$$if_end$58: do { 
    if (__label__ == 1) {

      var $7=$numOut;
      var $inc=($7)+1;
      $numOut=$inc;
      var $8=$vOut_addr;
      var $arrayidx5=$8+$7*3;
      var $9=$vIn_addr;
      var $arrayidx6=$9;
      var $10=$arrayidx5;
      var $11=$arrayidx6;
      IHEAP[$10]=IHEAP[$11]; FHEAP[$10]=FHEAP[$11]; ; IHEAP[$10+1]=IHEAP[$11+1]; FHEAP[$10+1]=FHEAP[$11+1]; ; IHEAP[$10+2]=IHEAP[$11+2]; FHEAP[$10+2]=FHEAP[$11+2]; ;
      var $_pr=$distance1;
      var $12 = $_pr;;
    }
  } while(0);

  var $12;
  var $cmp7=($12) <= 0;
  if ($cmp7) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then8$$if_end12$61: do { 
    if (__label__ == 3) {

      var $13=$numOut;
      var $inc9=($13)+1;
      $numOut=$inc9;
      var $14=$vOut_addr;
      var $arrayidx10=$14+$13*3;
      var $15=$vIn_addr;
      var $arrayidx11=$15+3;
      var $16=$arrayidx10;
      var $17=$arrayidx11;
      IHEAP[$16]=IHEAP[$17]; FHEAP[$16]=FHEAP[$17]; ; IHEAP[$16+1]=IHEAP[$17+1]; FHEAP[$16+1]=FHEAP[$17+1]; ; IHEAP[$16+2]=IHEAP[$17+2]; FHEAP[$16+2]=FHEAP[$17+2]; ;
      ;
    }
  } while(0);

  var $18=$distance0;
  var $19=$distance1;
  var $mul=($18)*($19);
  var $cmp13=($mul) < 0;
  if ($cmp13) { __label__ = 5;; } else { __label__ = 6;; }
  $if_then14$$if_end41$64: do { 
    if (__label__ == 5) {

      var $20=$distance0;
      var $21=$distance0;
      var $22=$distance1;
      var $sub15=($21)-($22);
      var $div=($20)/($sub15);
      $interp=$div;
      var $23=$numOut;
      var $24=$vOut_addr;
      var $arrayidx16=$24+$23*3;
      var $v17=$arrayidx16;
      var $25=$vIn_addr;
      var $arrayidx18=$25;
      var $v19=$arrayidx18;
      var $26=$interp;
      var $27=$vIn_addr;
      var $arrayidx22=$27+3;
      var $v23=$arrayidx22;
      var $28=$vIn_addr;
      var $arrayidx24=$28;
      var $v25=$arrayidx24;
      __ZmiRK6b2Vec2S1_($ref_tmp21, $v23, $v25);
      __ZmlfRK6b2Vec2($ref_tmp20, $26, $ref_tmp21);
      __ZplRK6b2Vec2S1_($ref_tmp, $v19, $ref_tmp20);
      var $29=$v17;
      var $30=$ref_tmp;
      IHEAP[$29]=IHEAP[$30]; FHEAP[$29]=FHEAP[$30]; ; IHEAP[$29+1]=IHEAP[$30+1]; FHEAP[$29+1]=FHEAP[$30+1]; ;
      var $31=$vertexIndexA_addr;
      var $conv=((($31)) & 255);
      var $32=$numOut;
      var $33=$vOut_addr;
      var $arrayidx26=$33+$32*3;
      var $id=$arrayidx26+2;
      var $cf=$id;
      var $indexA=$cf;
      IHEAP[$indexA]=$conv;
      var $34=$vIn_addr;
      var $arrayidx27=$34;
      var $id28=$arrayidx27+2;
      var $cf29=$id28;
      var $indexB=$cf29+1;
      var $35=IHEAP[$indexB];
      var $36=$numOut;
      var $37=$vOut_addr;
      var $arrayidx30=$37+$36*3;
      var $id31=$arrayidx30+2;
      var $cf32=$id31;
      var $indexB33=$cf32+1;
      IHEAP[$indexB33]=$35;
      var $38=$numOut;
      var $39=$vOut_addr;
      var $arrayidx34=$39+$38*3;
      var $id35=$arrayidx34+2;
      var $cf36=$id35;
      var $typeA=$cf36+2;
      IHEAP[$typeA]=0;
      var $40=$numOut;
      var $41=$vOut_addr;
      var $arrayidx37=$41+$40*3;
      var $id38=$arrayidx37+2;
      var $cf39=$id38;
      var $typeB=$cf39+3;
      IHEAP[$typeB]=1;
      var $42=$numOut;
      var $inc40=($42)+1;
      $numOut=$inc40;
      ;
    }
  } while(0);

  var $43=$numOut;
  STACKTOP = __stackBase__;
  return $43;
  return null;
}
__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi["X"]=1;

function __ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA, $indexA, $fixtureB, $indexB, $allocator) {
  ;
  var __label__;

  var $retval;
  var $fixtureA_addr;
  var $indexA_addr;
  var $fixtureB_addr;
  var $indexB_addr;
  var $allocator_addr;
  var $type1;
  var $type2;
  var $createFcn;
  $fixtureA_addr=$fixtureA;
  $indexA_addr=$indexA;
  $fixtureB_addr=$fixtureB;
  $indexB_addr=$indexB;
  $allocator_addr=$allocator;
  var $0=IHEAP[__ZN9b2Contact13s_initializedE];
  var $tobool=((($0)) & 1);
  var $conv=($tobool);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$90: do { 
    if (__label__ == 1) {

      __ZN9b2Contact19InitializeRegistersEv();
      IHEAP[__ZN9b2Contact13s_initializedE]=1;
      ;
    }
  } while(0);

  var $1=$fixtureA_addr;
  var $call=__ZNK9b2Fixture7GetTypeEv($1);
  $type1=$call;
  var $2=$fixtureB_addr;
  var $call1=__ZNK9b2Fixture7GetTypeEv($2);
  $type2=$call1;
  var $3=$type1;
  var $cmp2=0 <= ($3);
  var $4=$type1;
  var $cmp3=($4) < 4;
  var $or_cond=($cmp2) & ($cmp3);
  if ($or_cond) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end$$cond_false$93: do { 
    if (__label__ == 3) {

      ___assert_func(__str62, 80, ___PRETTY_FUNCTION____ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, __str163);
      ;
    }
  } while(0);

  var $5=$type2;
  var $cmp4=0 <= ($5);
  var $6=$type2;
  var $cmp6=($6) < 4;
  var $or_cond1=($cmp4) & ($cmp6);
  if ($or_cond1) { __label__ = 6;; } else { __label__ = 5;; }
  $cond_end9$$cond_false8$96: do { 
    if (__label__ == 5) {

      ___assert_func(__str62, 81, ___PRETTY_FUNCTION____ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator, __str264);
      ;
    }
  } while(0);

  var $7=$type2;
  var $8=$type1;
  var $arrayidx=__ZN9b2Contact11s_registersE+$8*12;
  var $arrayidx10=$arrayidx+$7*3;
  var $createFcn11=$arrayidx10;
  var $9=IHEAP[$createFcn11];
  $createFcn=$9;
  var $tobool12=($9)!=0;
  if ($tobool12) { __label__ = 7;; } else { __label__ = 10;; }
  $if_then13$$if_else20$99: do { 
    if (__label__ == 7) {

      var $10=$type2;
      var $11=$type1;
      var $arrayidx14=__ZN9b2Contact11s_registersE+$11*12;
      var $arrayidx15=$arrayidx14+$10*3;
      var $primary=$arrayidx15+2;
      var $12=IHEAP[$primary];
      var $tobool16=((($12)) & 1);
      var $13=$createFcn;
      if ($tobool16) { __label__ = 8;; } else { __label__ = 9;; }
      $if_then17$$if_else$101: do { 
        if (__label__ == 8) {

          var $14=$fixtureA_addr;
          var $15=$indexA_addr;
          var $16=$fixtureB_addr;
          var $17=$indexB_addr;
          var $18=$allocator_addr;
          var $call18=FUNCTION_TABLE[$13]($14, $15, $16, $17, $18);
          $retval=$call18;
          ;
        }
        else if (__label__ == 9) {

          var $19=$fixtureB_addr;
          var $20=$indexB_addr;
          var $21=$fixtureA_addr;
          var $22=$indexA_addr;
          var $23=$allocator_addr;
          var $call19=FUNCTION_TABLE[$13]($19, $20, $21, $22, $23);
          $retval=$call19;
          ;
        }
      } while(0);
    }
    else if (__label__ == 10) {

      $retval=0;
      ;
    }
  } while(0);

  var $24=$retval;
  ;
  return $24;
  return null;
}
__ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator["X"]=1;

function __ZN9b2Contact7DestroyEPS_P16b2BlockAllocator($contact, $allocator) {
  ;
  var __label__;

  var $contact_addr;
  var $allocator_addr;
  var $typeA;
  var $typeB;
  var $destroyFcn;
  $contact_addr=$contact;
  $allocator_addr=$allocator;
  var $0=IHEAP[__ZN9b2Contact13s_initializedE];
  var $tobool=((($0)) & 1);
  var $conv=($tobool);
  var $cmp=($conv)==1;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$107: do { 
    if (__label__ == 1) {

      ___assert_func(__str62, 103, ___PRETTY_FUNCTION____ZN9b2Contact7DestroyEPS_P16b2BlockAllocator, __str365);
      ;
    }
  } while(0);

  var $1=$contact_addr;
  var $m_manifold=$1+16;
  var $pointCount=$m_manifold+15;
  var $2=IHEAP[$pointCount];
  var $cmp1=($2) > 0;
  if ($cmp1) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then$$if_end$110: do { 
    if (__label__ == 3) {

      var $3=$contact_addr;
      var $call=__ZN9b2Contact11GetFixtureAEv($3);
      var $call2=__ZN9b2Fixture7GetBodyEv($call);
      __ZN6b2Body8SetAwakeEb($call2, 1);
      var $4=$contact_addr;
      var $call3=__ZN9b2Contact11GetFixtureBEv($4);
      var $call4=__ZN9b2Fixture7GetBodyEv($call3);
      __ZN6b2Body8SetAwakeEb($call4, 1);
      ;
    }
  } while(0);

  var $5=$contact_addr;
  var $call5=__ZN9b2Contact11GetFixtureAEv($5);
  var $call6=__ZNK9b2Fixture7GetTypeEv($call5);
  $typeA=$call6;
  var $6=$contact_addr;
  var $call7=__ZN9b2Contact11GetFixtureBEv($6);
  var $call8=__ZNK9b2Fixture7GetTypeEv($call7);
  $typeB=$call8;
  var $7=$typeA;
  var $cmp9=0 <= ($7);
  if ($cmp9) { __label__ = 5;; } else { __label__ = 6;; }
  $land_lhs_true$$cond_false12$113: do { 
    if (__label__ == 5) {

      var $8=$typeB;
      var $cmp10=($8) < 4;
      if ($cmp10) { __label__ = 7;break $land_lhs_true$$cond_false12$113; } else { __label__ = 6;break $land_lhs_true$$cond_false12$113; }
    }
  } while(0);
  $cond_end13$$cond_false12$115: do { 
    if (__label__ == 6) {

      ___assert_func(__str62, 114, ___PRETTY_FUNCTION____ZN9b2Contact7DestroyEPS_P16b2BlockAllocator, __str466);
      ;
    }
  } while(0);

  var $9=$typeA;
  var $cmp14=0 <= ($9);
  if ($cmp14) { __label__ = 8;; } else { __label__ = 9;; }
  $land_lhs_true15$$cond_false18$118: do { 
    if (__label__ == 8) {

      var $10=$typeB;
      var $cmp16=($10) < 4;
      if ($cmp16) { __label__ = 10;break $land_lhs_true15$$cond_false18$118; } else { __label__ = 9;break $land_lhs_true15$$cond_false18$118; }
    }
  } while(0);
  $cond_end19$$cond_false18$120: do { 
    if (__label__ == 9) {

      ___assert_func(__str62, 115, ___PRETTY_FUNCTION____ZN9b2Contact7DestroyEPS_P16b2BlockAllocator, __str466);
      ;
    }
  } while(0);

  var $11=$typeB;
  var $12=$typeA;
  var $arrayidx=__ZN9b2Contact11s_registersE+$12*12;
  var $arrayidx20=$arrayidx+$11*3;
  var $destroyFcn21=$arrayidx20+1;
  var $13=IHEAP[$destroyFcn21];
  $destroyFcn=$13;
  var $14=$destroyFcn;
  var $15=$contact_addr;
  var $16=$allocator_addr;
  FUNCTION_TABLE[$14]($15, $16);
  ;
  return;
  return;
}
__ZN9b2Contact7DestroyEPS_P16b2BlockAllocator["X"]=1;

function __ZN10b2ManifoldC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN10b2ManifoldC2Ev($this1);
  ;
  return;
  return;
}


function __ZN9b2ContactD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN9b2ContactD2Ev($this1);
  ;
  return;
  return;
}


function __ZN15b2ManifoldPointC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2ManifoldPointC2Ev($this1);
  ;
  return;
  return;
}


function __ZN15b2ContactFilterC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2ContactFilterC2Ev($this1);
  ;
  return;
  return;
}


function __ZN15b2ContactFilterD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2ContactFilterD2Ev($this1);
  ;
  return;
  return;
}


function __ZN17b2ContactListenerC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN17b2ContactListenerC2Ev($this1);
  ;
  return;
  return;
}


function __ZN17b2ContactListenerD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN17b2ContactListenerD2Ev($this1);
  ;
  return;
  return;
}


function __Z16b2MixRestitutionff($restitution1, $restitution2) {
  ;
  var __label__;

  var $restitution1_addr;
  var $restitution2_addr;
  $restitution1_addr=$restitution1;
  $restitution2_addr=$restitution2;
  var $0=$restitution1_addr;
  var $1=$restitution2_addr;
  var $cmp=($0) > ($1);
  var $2=$restitution1_addr;
  var $3=$restitution2_addr;
  var $cond=($cmp) ? ($2) : ($3);
  ;
  return $cond;
  return null;
}


function __ZN9b2ContactD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN9b2ContactD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN9b2Fixture7GetBodyEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_body=$this1+2;
  var $0=IHEAP[$m_body];
  ;
  return $0;
  return null;
}


function __ZNK9b2Fixture8IsSensorEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_isSensor=$this1+11;
  var $0=IHEAP[$m_isSensor];
  var $tobool=((($0)) & 1);
  ;
  return $tobool;
  return null;
}


function __ZNK6b2Body12GetTransformEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_xf=$this1+3;
  ;
  return $m_xf;
  return null;
}


function __ZN10b2ManifoldC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $points=$this1;
  var $array_begin=$points;
  __ZN15b2ManifoldPointC1Ev($array_begin);
  var $arrayctor_next=$array_begin+5;
  __ZN15b2ManifoldPointC1Ev($arrayctor_next);
  var $localNormal=$this1+10;
  __ZN6b2Vec2C1Ev($localNormal);
  var $localPoint=$this1+12;
  __ZN6b2Vec2C1Ev($localPoint);
  ;
  return;
  return;
}


function __ZN15b2ManifoldPointC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $localPoint=$this1;
  __ZN6b2Vec2C1Ev($localPoint);
  ;
  return;
  return;
}


function __ZN16b2ContactManagerC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_broadPhase=$this1;
  __ZN12b2BroadPhaseC2Ev($m_broadPhase);
  var $m_contactList=$this1+15;
  IHEAP[$m_contactList]=0;
  var $m_contactCount=$this1+16;
  IHEAP[$m_contactCount]=0;
  var $m_contactFilter=$this1+17;
  IHEAP[$m_contactFilter]=_b2_defaultFilter;
  var $m_contactListener=$this1+18;
  IHEAP[$m_contactListener]=_b2_defaultListener;
  var $m_allocator=$this1+19;
  IHEAP[$m_allocator]=0;
  ;
  return;
  return;
}


function __ZNK9b2Contact10IsTouchingEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_flags=$this1+1;
  var $0=IHEAP[$m_flags];
  var $and=($0) & 2;
  var $cmp=($and)==2;
  ;
  return $cmp;
  return null;
}


function __ZN9b2ContactC2EP9b2FixtureiS1_i($this, $fA, $indexA, $fB, $indexB) {
  ;
  var __label__;

  var $this_addr;
  var $fA_addr;
  var $indexA_addr;
  var $fB_addr;
  var $indexB_addr;
  $this_addr=$this;
  $fA_addr=$fA;
  $indexA_addr=$indexA;
  $fB_addr=$fB;
  $indexB_addr=$indexB;
  var $this1=$this_addr;
  var $0=$this1;
  IHEAP[$0]=__ZTV9b2Contact+2;
  var $m_manifold=$this1+16;
  __ZN10b2ManifoldC1Ev($m_manifold);
  var $m_flags=$this1+1;
  IHEAP[$m_flags]=4;
  var $1=$fA_addr;
  var $m_fixtureA=$this1+12;
  IHEAP[$m_fixtureA]=$1;
  var $2=$fB_addr;
  var $m_fixtureB=$this1+13;
  IHEAP[$m_fixtureB]=$2;
  var $3=$indexA_addr;
  var $m_indexA=$this1+14;
  IHEAP[$m_indexA]=$3;
  var $4=$indexB_addr;
  var $m_indexB=$this1+15;
  IHEAP[$m_indexB]=$4;
  var $m_manifold2=$this1+16;
  var $pointCount=$m_manifold2+15;
  IHEAP[$pointCount]=0;
  var $m_prev=$this1+2;
  IHEAP[$m_prev]=0;
  var $m_next=$this1+3;
  IHEAP[$m_next]=0;
  var $m_nodeA3=$this1+4;
  var $contact=$m_nodeA3+1;
  IHEAP[$contact]=0;
  var $m_nodeA4=$this1+4;
  var $prev=$m_nodeA4+2;
  IHEAP[$prev]=0;
  var $m_nodeA5=$this1+4;
  var $next=$m_nodeA5+3;
  IHEAP[$next]=0;
  var $m_nodeA6=$this1+4;
  var $other=$m_nodeA6;
  IHEAP[$other]=0;
  var $m_nodeB7=$this1+8;
  var $contact8=$m_nodeB7+1;
  IHEAP[$contact8]=0;
  var $m_nodeB9=$this1+8;
  var $prev10=$m_nodeB9+2;
  IHEAP[$prev10]=0;
  var $m_nodeB11=$this1+8;
  var $next12=$m_nodeB11+3;
  IHEAP[$next12]=0;
  var $m_nodeB13=$this1+8;
  var $other14=$m_nodeB13;
  IHEAP[$other14]=0;
  var $m_toiCount=$this1+32;
  IHEAP[$m_toiCount]=0;
  var $m_fixtureA15=$this1+12;
  var $5=IHEAP[$m_fixtureA15];
  var $m_friction=$5+4;
  var $6=FHEAP[$m_friction];
  var $m_fixtureB16=$this1+13;
  var $7=IHEAP[$m_fixtureB16];
  var $m_friction17=$7+4;
  var $8=FHEAP[$m_friction17];
  var $call=__Z13b2MixFrictionff($6, $8);
  var $m_friction18=$this1+34;
  FHEAP[$m_friction18]=$call;
  var $m_fixtureA19=$this1+12;
  var $9=IHEAP[$m_fixtureA19];
  var $m_restitution=$9+5;
  var $10=FHEAP[$m_restitution];
  var $m_fixtureB20=$this1+13;
  var $11=IHEAP[$m_fixtureB20];
  var $m_restitution21=$11+5;
  var $12=FHEAP[$m_restitution21];
  var $call22=__Z16b2MixRestitutionff($10, $12);
  var $m_restitution23=$this1+35;
  FHEAP[$m_restitution23]=$call22;
  ;
  return;
  return;
}
__ZN9b2ContactC2EP9b2FixtureiS1_i["X"]=1;

function __Z13b2MixFrictionff($friction1, $friction2) {
  ;
  var __label__;

  var $__x_addr_i;
  var $friction1_addr;
  var $friction2_addr;
  $friction1_addr=$friction1;
  $friction2_addr=$friction2;
  var $0=$friction1_addr;
  var $1=$friction2_addr;
  var $mul=($0)*($1);
  ;
  $__x_addr_i=$mul;
  var $3=$__x_addr_i;
  var $call_i=_sqrtf($3);
  ;
  ;
  return $call_i;
  return null;
}


function __ZN9b2Contact6UpdateEP17b2ContactListener($this, $listener) {
  var __stackBase__  = STACKTOP; STACKTOP += 17;
  var __label__;

  var $this_addr;
  var $listener_addr;
  var $oldManifold=__stackBase__;
  var $touching;
  var $wasTouching;
  var $sensorA;
  var $sensorB;
  var $sensor;
  var $bodyA;
  var $bodyB;
  var $xfA;
  var $xfB;
  var $shapeA;
  var $shapeB;
  var $i;
  var $mp2;
  var $id2=__stackBase__+16;
  var $j;
  var $mp1;
  $this_addr=$this;
  $listener_addr=$listener;
  var $this1=$this_addr;
  var $m_manifold=$this1+16;
  var $0=$oldManifold;
  var $1=$m_manifold;
  for (var mcpi_s=$1,mcpi_e=$1+16,mcpi_d=$0; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $m_flags=$this1+1;
  var $2=IHEAP[$m_flags];
  var $or=($2) | 4;
  IHEAP[$m_flags]=$or;
  $touching=0;
  var $m_flags2=$this1+1;
  var $3=IHEAP[$m_flags2];
  var $and=($3) & 2;
  var $cmp=($and)==2;
  var $frombool=($cmp);
  $wasTouching=$frombool;
  var $m_fixtureA=$this1+12;
  var $4=IHEAP[$m_fixtureA];
  var $call=__ZNK9b2Fixture8IsSensorEv($4);
  var $frombool3=($call);
  $sensorA=$frombool3;
  var $m_fixtureB=$this1+13;
  var $5=IHEAP[$m_fixtureB];
  var $call4=__ZNK9b2Fixture8IsSensorEv($5);
  var $frombool5=($call4);
  $sensorB=$frombool5;
  var $6=$sensorA;
  var $tobool=((($6)) & 1);
  if ($tobool) { var $8 = 1;__label__ = 2;; } else { __label__ = 1;; }
  $lor_end$$lor_rhs$7: do { 
    if (__label__ == 1) {

      var $7=$sensorB;
      var $tobool6=((($7)) & 1);
      var $8 = $tobool6;;
    }
  } while(0);

  var $8;
  var $frombool7=($8);
  $sensor=$frombool7;
  var $m_fixtureA8=$this1+12;
  var $9=IHEAP[$m_fixtureA8];
  var $call9=__ZN9b2Fixture7GetBodyEv($9);
  $bodyA=$call9;
  var $m_fixtureB10=$this1+13;
  var $10=IHEAP[$m_fixtureB10];
  var $call11=__ZN9b2Fixture7GetBodyEv($10);
  $bodyB=$call11;
  var $11=$bodyA;
  var $call12=__ZNK6b2Body12GetTransformEv($11);
  $xfA=$call12;
  var $12=$bodyB;
  var $call13=__ZNK6b2Body12GetTransformEv($12);
  $xfB=$call13;
  var $13=$sensor;
  var $tobool14=((($13)) & 1);
  if ($tobool14) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then$$if_else$10: do { 
    if (__label__ == 3) {

      var $m_fixtureA15=$this1+12;
      var $14=IHEAP[$m_fixtureA15];
      var $call16=__ZN9b2Fixture8GetShapeEv($14);
      $shapeA=$call16;
      var $m_fixtureB17=$this1+13;
      var $15=IHEAP[$m_fixtureB17];
      var $call18=__ZN9b2Fixture8GetShapeEv($15);
      $shapeB=$call18;
      var $16=$shapeA;
      var $m_indexA=$this1+14;
      var $17=IHEAP[$m_indexA];
      var $18=$shapeB;
      var $m_indexB=$this1+15;
      var $19=IHEAP[$m_indexB];
      var $20=$xfA;
      var $21=$xfB;
      var $call19=__Z13b2TestOverlapPK7b2ShapeiS1_iRK11b2TransformS4_($16, $17, $18, $19, $20, $21);
      var $frombool20=($call19);
      $touching=$frombool20;
      var $m_manifold21=$this1+16;
      var $pointCount=$m_manifold21+15;
      IHEAP[$pointCount]=0;
      ;
    }
    else if (__label__ == 4) {

      var $22=$this1;
      var $vtable=IHEAP[$22];
      var $vfn=$vtable;
      var $23=IHEAP[$vfn];
      var $m_manifold22=$this1+16;
      var $24=$xfA;
      var $25=$xfB;
      FUNCTION_TABLE[$23]($this1, $m_manifold22, $24, $25);
      var $m_manifold23=$this1+16;
      var $pointCount24=$m_manifold23+15;
      var $26=IHEAP[$pointCount24];
      var $cmp25=($26) > 0;
      var $frombool26=($cmp25);
      $touching=$frombool26;
      $i=0;
      var $27=$i;
      var $m_manifold27=$this1+16;
      var $pointCount28=$m_manifold27+15;
      var $28=IHEAP[$pointCount28];
      var $cmp291=($27) < ($28);
      if ($cmp291) { __label__ = 5;; } else { __label__ = 12;; }
      $for_body_lr_ph$$for_end48$13: do { 
        if (__label__ == 5) {

          var $m_manifold30=$this1+16;
          var $points=$m_manifold30;
          var $arraydecay=$points;
          var $29=$id2;
          var $pointCount32=$oldManifold+15;
          var $points35=$oldManifold;
          var $arraydecay36=$points35;
          var $key39=$id2;
          ;
          $for_body$15: while(1) { 

            var $30=$i;
            var $add_ptr=$arraydecay+$30*5;
            $mp2=$add_ptr;
            var $31=$mp2;
            var $normalImpulse=$31+2;
            FHEAP[$normalImpulse]=0;
            var $32=$mp2;
            var $tangentImpulse=$32+3;
            FHEAP[$tangentImpulse]=0;
            var $33=$mp2;
            var $id=$33+4;
            var $34=$id;
            IHEAP[$29]=IHEAP[$34]; FHEAP[$29]=FHEAP[$34]; ;
            $j=0;
            ;
            $for_cond31$17: while(1) { 

              var $35=$j;
              var $36=IHEAP[$pointCount32];
              var $cmp33=($35) < ($36);
              if (!($cmp33)) { __label__ = 11;break $for_cond31$17; }

              var $37=$j;
              var $add_ptr37=$arraydecay36+$37*5;
              $mp1=$add_ptr37;
              var $38=$mp1;
              var $id38=$38+4;
              var $key=$id38;
              var $39=IHEAP[$key];
              var $40=IHEAP[$key39];
              var $cmp40=($39)==($40);
              if ($cmp40) { __label__ = 9;break $for_cond31$17; }

              var $47=$j;
              var $inc=($47)+1;
              $j=$inc;
              ;
            }
            $for_inc46$$if_then41$21: do { 
              if (__label__ == 9) {

                var $41=$mp1;
                var $normalImpulse42=$41+2;
                var $42=FHEAP[$normalImpulse42];
                var $43=$mp2;
                var $normalImpulse43=$43+2;
                FHEAP[$normalImpulse43]=$42;
                var $44=$mp1;
                var $tangentImpulse44=$44+3;
                var $45=FHEAP[$tangentImpulse44];
                var $46=$mp2;
                var $tangentImpulse45=$46+3;
                FHEAP[$tangentImpulse45]=$45;
                ;
              }
            } while(0);

            var $48=$i;
            var $inc47=($48)+1;
            $i=$inc47;
            var $49=$i;
            var $50=IHEAP[$pointCount28];
            var $cmp29=($49) < ($50);
            if (!($cmp29)) { __label__ = 12;break $for_body_lr_ph$$for_end48$13; }
          }
        }
      } while(0);

      var $51=$touching;
      var $tobool49=((($51)) & 1);
      var $conv=($tobool49);
      var $52=$wasTouching;
      var $tobool50=((($52)) & 1);
      var $conv51=($tobool50);
      var $cmp52=($conv)!=($conv51);
      if (!($cmp52)) { __label__ = 14;break $if_then$$if_else$10; }

      var $53=$bodyA;
      __ZN6b2Body8SetAwakeEb($53, 1);
      var $54=$bodyB;
      __ZN6b2Body8SetAwakeEb($54, 1);
      ;
    }
  } while(0);

  var $55=$touching;
  var $tobool56=((($55)) & 1);
  var $m_flags58=$this1+1;
  var $56=IHEAP[$m_flags58];
  if ($tobool56) { __label__ = 15;; } else { __label__ = 16;; }
  $if_then57$$if_else60$27: do { 
    if (__label__ == 15) {

      var $or59=($56) | 2;
      IHEAP[$m_flags58]=$or59;
      ;
    }
    else if (__label__ == 16) {

      var $and62=($56) & -3;
      IHEAP[$m_flags58]=$and62;
      ;
    }
  } while(0);

  var $57=$wasTouching;
  var $tobool64=((($57)) & 1);
  var $conv65=($tobool64);
  var $cmp66=($conv65)==0;
  if ($cmp66) { __label__ = 18;; } else { __label__ = 21;; }
  $land_lhs_true$$if_end75$31: do { 
    if (__label__ == 18) {

      var $58=$touching;
      var $tobool67=((($58)) & 1);
      var $conv68=($tobool67);
      var $cmp69=($conv68)==1;
      if (!($cmp69)) { __label__ = 21;break $land_lhs_true$$if_end75$31; }

      var $59=$listener_addr;
      var $tobool71=($59)!=0;
      if (!($tobool71)) { __label__ = 21;break $land_lhs_true$$if_end75$31; }

      var $60=$listener_addr;
      var $61=$60;
      var $vtable73=IHEAP[$61];
      var $vfn74=$vtable73+2;
      var $62=IHEAP[$vfn74];
      FUNCTION_TABLE[$62]($60, $this1);
      ;
    }
  } while(0);

  var $63=$wasTouching;
  var $tobool76=((($63)) & 1);
  var $conv77=($tobool76);
  var $cmp78=($conv77)==1;
  if ($cmp78) { __label__ = 22;; } else { __label__ = 25;; }
  $land_lhs_true79$$if_end88$36: do { 
    if (__label__ == 22) {

      var $64=$touching;
      var $tobool80=((($64)) & 1);
      var $conv81=($tobool80);
      var $cmp82=($conv81)==0;
      if (!($cmp82)) { __label__ = 25;break $land_lhs_true79$$if_end88$36; }

      var $65=$listener_addr;
      var $tobool84=($65)!=0;
      if (!($tobool84)) { __label__ = 25;break $land_lhs_true79$$if_end88$36; }

      var $66=$listener_addr;
      var $67=$66;
      var $vtable86=IHEAP[$67];
      var $vfn87=$vtable86+3;
      var $68=IHEAP[$vfn87];
      FUNCTION_TABLE[$68]($66, $this1);
      ;
    }
  } while(0);

  var $69=$sensor;
  var $tobool89=((($69)) & 1);
  var $conv90=($tobool89);
  var $cmp91=($conv90)==0;
  if ($cmp91) { __label__ = 26;; } else { __label__ = 29;; }
  $land_lhs_true92$$if_end99$41: do { 
    if (__label__ == 26) {

      var $70=$touching;
      var $tobool93=((($70)) & 1);
      if (!($tobool93)) { __label__ = 29;break $land_lhs_true92$$if_end99$41; }

      var $71=$listener_addr;
      var $tobool95=($71)!=0;
      if (!($tobool95)) { __label__ = 29;break $land_lhs_true92$$if_end99$41; }

      var $72=$listener_addr;
      var $73=$72;
      var $vtable97=IHEAP[$73];
      var $vfn98=$vtable97+4;
      var $74=IHEAP[$vfn98];
      FUNCTION_TABLE[$74]($72, $this1, $oldManifold);
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN9b2Contact6UpdateEP17b2ContactListener["X"]=1;

function ___cxx_global_var_init() {
  ;
  var __label__;

  __ZN15b2ContactFilterC1Ev(_b2_defaultFilter);
  var $0=___cxa_atexit(30, (_b2_defaultFilter), (___dso_handle));
  ;
  return;
  return;
}


function ___cxx_global_var_init1() {
  ;
  var __label__;

  __ZN17b2ContactListenerC1Ev(_b2_defaultListener);
  var $0=___cxa_atexit(32, (_b2_defaultListener), (___dso_handle));
  ;
  return;
  return;
}


function __ZN16b2ContactManager7DestroyEP9b2Contact($this, $c) {
  ;
  var __label__;

  var $this_addr;
  var $c_addr;
  var $fixtureA;
  var $fixtureB;
  var $bodyA;
  var $bodyB;
  $this_addr=$this;
  $c_addr=$c;
  var $this1=$this_addr;
  var $0=$c_addr;
  var $call=__ZN9b2Contact11GetFixtureAEv($0);
  $fixtureA=$call;
  var $1=$c_addr;
  var $call2=__ZN9b2Contact11GetFixtureBEv($1);
  $fixtureB=$call2;
  var $2=$fixtureA;
  var $call3=__ZN9b2Fixture7GetBodyEv($2);
  $bodyA=$call3;
  var $3=$fixtureB;
  var $call4=__ZN9b2Fixture7GetBodyEv($3);
  $bodyB=$call4;
  var $m_contactListener=$this1+18;
  var $4=IHEAP[$m_contactListener];
  var $tobool=($4)!=0;
  if ($tobool) { __label__ = 1;; } else { __label__ = 3;; }
  $land_lhs_true$$if_end$61: do { 
    if (__label__ == 1) {

      var $5=$c_addr;
      var $call5=__ZNK9b2Contact10IsTouchingEv($5);
      if (!($call5)) { __label__ = 3;break $land_lhs_true$$if_end$61; }

      var $m_contactListener6=$this1+18;
      var $6=IHEAP[$m_contactListener6];
      var $7=$6;
      var $vtable=IHEAP[$7];
      var $vfn=$vtable+3;
      var $8=IHEAP[$vfn];
      var $9=$c_addr;
      FUNCTION_TABLE[$8]($6, $9);
      ;
    }
  } while(0);

  var $10=$c_addr;
  var $m_prev=$10+2;
  var $11=IHEAP[$m_prev];
  var $tobool7=($11)!=0;
  if ($tobool7) { __label__ = 4;; } else { __label__ = 5;; }
  $if_then8$$if_end11$65: do { 
    if (__label__ == 4) {

      var $12=$c_addr;
      var $m_next=$12+3;
      var $13=IHEAP[$m_next];
      var $14=$c_addr;
      var $m_prev9=$14+2;
      var $15=IHEAP[$m_prev9];
      var $m_next10=$15+3;
      IHEAP[$m_next10]=$13;
      ;
    }
  } while(0);

  var $16=$c_addr;
  var $m_next12=$16+3;
  var $17=IHEAP[$m_next12];
  var $tobool13=($17)!=0;
  if ($tobool13) { __label__ = 6;; } else { __label__ = 7;; }
  $if_then14$$if_end18$68: do { 
    if (__label__ == 6) {

      var $18=$c_addr;
      var $m_prev15=$18+2;
      var $19=IHEAP[$m_prev15];
      var $20=$c_addr;
      var $m_next16=$20+3;
      var $21=IHEAP[$m_next16];
      var $m_prev17=$21+2;
      IHEAP[$m_prev17]=$19;
      ;
    }
  } while(0);

  var $22=$c_addr;
  var $m_contactList=$this1+15;
  var $23=IHEAP[$m_contactList];
  var $cmp=($22)==($23);
  if ($cmp) { __label__ = 8;; } else { __label__ = 9;; }
  $if_then19$$if_end22$71: do { 
    if (__label__ == 8) {

      var $24=$c_addr;
      var $m_next20=$24+3;
      var $25=IHEAP[$m_next20];
      var $m_contactList21=$this1+15;
      IHEAP[$m_contactList21]=$25;
      ;
    }
  } while(0);

  var $26=$c_addr;
  var $m_nodeA=$26+4;
  var $prev=$m_nodeA+2;
  var $27=IHEAP[$prev];
  var $tobool23=($27)!=0;
  if ($tobool23) { __label__ = 10;; } else { __label__ = 11;; }
  $if_then24$$if_end29$74: do { 
    if (__label__ == 10) {

      var $28=$c_addr;
      var $m_nodeA25=$28+4;
      var $next=$m_nodeA25+3;
      var $29=IHEAP[$next];
      var $30=$c_addr;
      var $m_nodeA26=$30+4;
      var $prev27=$m_nodeA26+2;
      var $31=IHEAP[$prev27];
      var $next28=$31+3;
      IHEAP[$next28]=$29;
      ;
    }
  } while(0);

  var $32=$c_addr;
  var $m_nodeA30=$32+4;
  var $next31=$m_nodeA30+3;
  var $33=IHEAP[$next31];
  var $tobool32=($33)!=0;
  if ($tobool32) { __label__ = 12;; } else { __label__ = 13;; }
  $if_then33$$if_end39$77: do { 
    if (__label__ == 12) {

      var $34=$c_addr;
      var $m_nodeA34=$34+4;
      var $prev35=$m_nodeA34+2;
      var $35=IHEAP[$prev35];
      var $36=$c_addr;
      var $m_nodeA36=$36+4;
      var $next37=$m_nodeA36+3;
      var $37=IHEAP[$next37];
      var $prev38=$37+2;
      IHEAP[$prev38]=$35;
      ;
    }
  } while(0);

  var $38=$c_addr;
  var $m_nodeA40=$38+4;
  var $39=$bodyA;
  var $m_contactList41=$39+28;
  var $40=IHEAP[$m_contactList41];
  var $cmp42=($m_nodeA40)==($40);
  if ($cmp42) { __label__ = 14;; } else { __label__ = 15;; }
  $if_then43$$if_end47$80: do { 
    if (__label__ == 14) {

      var $41=$c_addr;
      var $m_nodeA44=$41+4;
      var $next45=$m_nodeA44+3;
      var $42=IHEAP[$next45];
      var $43=$bodyA;
      var $m_contactList46=$43+28;
      IHEAP[$m_contactList46]=$42;
      ;
    }
  } while(0);

  var $44=$c_addr;
  var $m_nodeB=$44+8;
  var $prev48=$m_nodeB+2;
  var $45=IHEAP[$prev48];
  var $tobool49=($45)!=0;
  if ($tobool49) { __label__ = 16;; } else { __label__ = 17;; }
  $if_then50$$if_end56$83: do { 
    if (__label__ == 16) {

      var $46=$c_addr;
      var $m_nodeB51=$46+8;
      var $next52=$m_nodeB51+3;
      var $47=IHEAP[$next52];
      var $48=$c_addr;
      var $m_nodeB53=$48+8;
      var $prev54=$m_nodeB53+2;
      var $49=IHEAP[$prev54];
      var $next55=$49+3;
      IHEAP[$next55]=$47;
      ;
    }
  } while(0);

  var $50=$c_addr;
  var $m_nodeB57=$50+8;
  var $next58=$m_nodeB57+3;
  var $51=IHEAP[$next58];
  var $tobool59=($51)!=0;
  if ($tobool59) { __label__ = 18;; } else { __label__ = 19;; }
  $if_then60$$if_end66$86: do { 
    if (__label__ == 18) {

      var $52=$c_addr;
      var $m_nodeB61=$52+8;
      var $prev62=$m_nodeB61+2;
      var $53=IHEAP[$prev62];
      var $54=$c_addr;
      var $m_nodeB63=$54+8;
      var $next64=$m_nodeB63+3;
      var $55=IHEAP[$next64];
      var $prev65=$55+2;
      IHEAP[$prev65]=$53;
      ;
    }
  } while(0);

  var $56=$c_addr;
  var $m_nodeB67=$56+8;
  var $57=$bodyB;
  var $m_contactList68=$57+28;
  var $58=IHEAP[$m_contactList68];
  var $cmp69=($m_nodeB67)==($58);
  if ($cmp69) { __label__ = 20;; } else { __label__ = 21;; }
  $if_then70$$if_end74$89: do { 
    if (__label__ == 20) {

      var $59=$c_addr;
      var $m_nodeB71=$59+8;
      var $next72=$m_nodeB71+3;
      var $60=IHEAP[$next72];
      var $61=$bodyB;
      var $m_contactList73=$61+28;
      IHEAP[$m_contactList73]=$60;
      ;
    }
  } while(0);

  var $62=$c_addr;
  var $m_allocator=$this1+19;
  var $63=IHEAP[$m_allocator];
  __ZN9b2Contact7DestroyEPS_P16b2BlockAllocator($62, $63);
  var $m_contactCount=$this1+16;
  var $64=IHEAP[$m_contactCount];
  var $dec=($64)-1;
  IHEAP[$m_contactCount]=$dec;
  ;
  return;
  return;
}
__ZN16b2ContactManager7DestroyEP9b2Contact["X"]=1;

function __ZNK9b2Contact14GetChildIndexAEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_indexA=$this1+14;
  var $0=IHEAP[$m_indexA];
  ;
  return $0;
  return null;
}


function __ZNK9b2Contact14GetChildIndexBEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_indexB=$this1+15;
  var $0=IHEAP[$m_indexB];
  ;
  return $0;
  return null;
}


function __ZN9b2Contact7GetNextEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_next=$this1+3;
  var $0=IHEAP[$m_next];
  ;
  return $0;
  return null;
}


function __ZNK6b2Body7IsAwakeEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_flags=$this1+1;
  var $0=IHEAP[$m_flags];
  var $conv=($0);
  var $and=($conv) & 2;
  var $cmp=($and)==2;
  ;
  return $cmp;
  return null;
}


function __ZN16b2ContactManager15FindNewContactsEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_broadPhase=$this1;
  __ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_($m_broadPhase, $this1);
  ;
  return;
  return;
}


function __ZN6b2Body14GetContactListEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_contactList=$this1+28;
  var $0=IHEAP[$m_contactList];
  ;
  return $0;
  return null;
}


function __ZNK13b2DynamicTree10GetFatAABBEi($this, $proxyId) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $0=$proxyId_addr;
  var $cmp=0 <= ($0);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$95: do { 
    if (__label__ == 1) {

      var $1=$proxyId_addr;
      var $m_nodeCapacity=$this1+3;
      var $2=IHEAP[$m_nodeCapacity];
      var $cmp2=($1) < ($2);
      if ($cmp2) { __label__ = 3;break $land_lhs_true$$cond_false$95; } else { __label__ = 2;break $land_lhs_true$$cond_false$95; }
    }
  } while(0);
  $cond_end$$cond_false$97: do { 
    if (__label__ == 2) {

      ___assert_func(__str19425, 159, ___PRETTY_FUNCTION____ZNK13b2DynamicTree10GetFatAABBEi, __str4107);
      ;
    }
  } while(0);

  var $3=$proxyId_addr;
  var $m_nodes=$this1+1;
  var $4=IHEAP[$m_nodes];
  var $arrayidx=$4+$3*9;
  var $aabb=$arrayidx;
  ;
  return $aabb;
  return null;
}


function __Z14b2PairLessThanRK6b2PairS1_($pair1, $pair2) {
  ;
  var __label__;

  var $retval;
  var $pair1_addr;
  var $pair2_addr;
  $pair1_addr=$pair1;
  $pair2_addr=$pair2;
  var $0=$pair1_addr;
  var $proxyIdA=$0;
  var $1=IHEAP[$proxyIdA];
  var $2=$pair2_addr;
  var $proxyIdA1=$2;
  var $3=IHEAP[$proxyIdA1];
  var $cmp=($1) < ($3);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$116: do { 
    if (__label__ == 1) {

      $retval=1;
      ;
    }
    else if (__label__ == 2) {

      var $4=$pair1_addr;
      var $proxyIdA2=$4;
      var $5=IHEAP[$proxyIdA2];
      var $6=$pair2_addr;
      var $proxyIdA3=$6;
      var $7=IHEAP[$proxyIdA3];
      var $cmp4=($5)==($7);
      if ($cmp4) { __label__ = 3;; } else { __label__ = 4;; }
      $if_then5$$if_end8$119: do { 
        if (__label__ == 3) {

          var $8=$pair1_addr;
          var $proxyIdB=$8+1;
          var $9=IHEAP[$proxyIdB];
          var $10=$pair2_addr;
          var $proxyIdB6=$10+1;
          var $11=IHEAP[$proxyIdB6];
          var $cmp7=($9) < ($11);
          $retval=$cmp7;
          ;
        }
        else if (__label__ == 4) {

          $retval=0;
          ;
        }
      } while(0);
    }
  } while(0);

  var $12=$retval;
  ;
  return $12;
  return null;
}


function __ZN16b2ContactManager7CollideEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $c;
  var $fixtureA;
  var $fixtureB;
  var $indexA;
  var $indexB;
  var $bodyA;
  var $bodyB;
  var $cNuke;
  var $cNuke17;
  var $activeA;
  var $activeB;
  var $proxyIdA;
  var $proxyIdB;
  var $overlap;
  var $cNuke50;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_contactList=$this1+15;
  var $0=IHEAP[$m_contactList];
  $c=$0;
  var $tobool1=($0)!=0;
  if ($tobool1) { __label__ = 1;; } else { __label__ = 21;; }
  $while_body_lr_ph$$while_end$2: do { 
    if (__label__ == 1) {

      var $m_contactFilter=$this1+17;
      var $m_contactFilter12=$this1+17;
      var $m_broadPhase=$this1;
      var $m_contactListener=$this1+18;
      ;
      $while_body$4: while(1) { 

        var $1=$c;
        var $call=__ZN9b2Contact11GetFixtureAEv($1);
        $fixtureA=$call;
        var $2=$c;
        var $call2=__ZN9b2Contact11GetFixtureBEv($2);
        $fixtureB=$call2;
        var $3=$c;
        var $call3=__ZNK9b2Contact14GetChildIndexAEv($3);
        $indexA=$call3;
        var $4=$c;
        var $call4=__ZNK9b2Contact14GetChildIndexBEv($4);
        $indexB=$call4;
        var $5=$fixtureA;
        var $call5=__ZN9b2Fixture7GetBodyEv($5);
        $bodyA=$call5;
        var $6=$fixtureB;
        var $call6=__ZN9b2Fixture7GetBodyEv($6);
        $bodyB=$call6;
        var $7=$c;
        var $m_flags=$7+1;
        var $8=IHEAP[$m_flags];
        var $and=($8) & 8;
        var $tobool7=($and)!=0;
        if ($tobool7) { __label__ = 4;; } else { __label__ = 10;; }
        $if_then$$if_end22$6: do { 
          if (__label__ == 4) {

            var $9=$bodyB;
            var $10=$bodyA;
            var $call8=__ZNK6b2Body13ShouldCollideEPKS_($9, $10);
            var $conv=($call8);
            var $cmp=($conv)==0;
            if ($cmp) { __label__ = 5;; } else { __label__ = 6;; }
            $if_then9$$if_end$8: do { 
              if (__label__ == 5) {

                var $11=$c;
                $cNuke=$11;
                var $12=$cNuke;
                var $call10=__ZN9b2Contact7GetNextEv($12);
                $c=$call10;
                var $13=$cNuke;
                __ZN16b2ContactManager7DestroyEP9b2Contact($this1, $13);
                __label__ = 2;break $if_then$$if_end22$6;
              }
              else if (__label__ == 6) {

                var $14=IHEAP[$m_contactFilter];
                var $tobool11=($14)!=0;
                if ($tobool11) { __label__ = 7;; } else { __label__ = 9;; }
                $land_lhs_true$$if_end19$11: do { 
                  if (__label__ == 7) {

                    var $15=IHEAP[$m_contactFilter12];
                    var $16=$15;
                    var $vtable=IHEAP[$16];
                    var $vfn=$vtable+2;
                    var $17=IHEAP[$vfn];
                    var $18=$fixtureA;
                    var $19=$fixtureB;
                    var $call13=FUNCTION_TABLE[$17]($15, $18, $19);
                    var $conv14=($call13);
                    var $cmp15=($conv14)==0;
                    if (!($cmp15)) { __label__ = 9;break $land_lhs_true$$if_end19$11; }

                    var $20=$c;
                    $cNuke17=$20;
                    var $21=$cNuke17;
                    var $call18=__ZN9b2Contact7GetNextEv($21);
                    $c=$call18;
                    var $22=$cNuke17;
                    __ZN16b2ContactManager7DestroyEP9b2Contact($this1, $22);
                    __label__ = 2;break $if_then$$if_end22$6;
                  }
                } while(0);

                var $23=$c;
                var $m_flags20=$23+1;
                var $24=IHEAP[$m_flags20];
                var $and21=($24) & -9;
                IHEAP[$m_flags20]=$and21;
                __label__ = 10;break $if_then$$if_end22$6;
              }
            } while(0);
          }
        } while(0);
        $while_condthread_pre_split$$if_end22$15: do { 
          if (__label__ == 10) {

            var $25=$bodyA;
            var $call23=__ZNK6b2Body7IsAwakeEv($25);
            if ($call23) { __label__ = 11;; } else { var $28 = 0;__label__ = 12;; }
            $land_rhs$$land_end$17: do { 
              if (__label__ == 11) {

                var $26=$bodyA;
                var $m_type=$26;
                var $27=IHEAP[$m_type];
                var $cmp24=($27)!=0;
                var $28 = $cmp24;;
              }
            } while(0);

            var $28;
            var $frombool=($28);
            $activeA=$frombool;
            var $29=$bodyB;
            var $call25=__ZNK6b2Body7IsAwakeEv($29);
            if ($call25) { __label__ = 13;; } else { var $32 = 0;__label__ = 14;; }
            $land_rhs26$$land_end29$20: do { 
              if (__label__ == 13) {

                var $30=$bodyB;
                var $m_type27=$30;
                var $31=IHEAP[$m_type27];
                var $cmp28=($31)!=0;
                var $32 = $cmp28;;
              }
            } while(0);

            var $32;
            var $frombool30=($32);
            $activeB=$frombool30;
            var $33=$activeA;
            var $tobool31=((($33)) & 1);
            var $conv32=($tobool31);
            var $cmp33=($conv32)==0;
            if ($cmp33) { __label__ = 15;; } else { __label__ = 18;; }
            $land_lhs_true34$$if_end40$23: do { 
              if (__label__ == 15) {

                var $34=$activeB;
                var $tobool35=((($34)) & 1);
                var $conv36=($tobool35);
                var $cmp37=($conv36)==0;
                if (!($cmp37)) { __label__ = 18;break $land_lhs_true34$$if_end40$23; }

                var $35=$c;
                var $call39=__ZN9b2Contact7GetNextEv($35);
                $c=$call39;
                var $_be = $call39;__label__ = 17;break $while_condthread_pre_split$$if_end22$15;
              }
            } while(0);

            var $36=$indexA;
            var $37=$fixtureA;
            var $m_proxies=$37+6;
            var $38=IHEAP[$m_proxies];
            var $arrayidx=$38+$36*7;
            var $proxyId=$arrayidx+6;
            var $39=IHEAP[$proxyId];
            $proxyIdA=$39;
            var $40=$indexB;
            var $41=$fixtureB;
            var $m_proxies41=$41+6;
            var $42=IHEAP[$m_proxies41];
            var $arrayidx42=$42+$40*7;
            var $proxyId43=$arrayidx42+6;
            var $43=IHEAP[$proxyId43];
            $proxyIdB=$43;
            var $44=$proxyIdA;
            var $45=$proxyIdB;
            var $call44=__ZNK12b2BroadPhase11TestOverlapEii($m_broadPhase, $44, $45);
            var $frombool45=($call44);
            $overlap=$frombool45;
            var $46=$overlap;
            var $tobool46=((($46)) & 1);
            var $conv47=($tobool46);
            var $cmp48=($conv47)==0;
            var $47=$c;
            if ($cmp48) { __label__ = 19;; } else { __label__ = 20;; }
            $if_then49$$if_end52$27: do { 
              if (__label__ == 19) {

                $cNuke50=$47;
                var $48=$cNuke50;
                var $call51=__ZN9b2Contact7GetNextEv($48);
                $c=$call51;
                var $49=$cNuke50;
                __ZN16b2ContactManager7DestroyEP9b2Contact($this1, $49);
                __label__ = 2;break $while_condthread_pre_split$$if_end22$15;
              }
              else if (__label__ == 20) {

                var $50=IHEAP[$m_contactListener];
                __ZN9b2Contact6UpdateEP17b2ContactListener($47, $50);
                var $51=$c;
                var $call53=__ZN9b2Contact7GetNextEv($51);
                $c=$call53;
                var $_be = $call53;__label__ = 17;break $while_condthread_pre_split$$if_end22$15;
              }
            } while(0);
          }
        } while(0);
        $while_condthread_pre_split$$while_cond_backedge$30: do { 
          if (__label__ == 2) {

            var $_pr=$c;
            var $_be = $_pr;;
          }
        } while(0);

        var $_be;
        var $tobool=($_be)!=0;
        if (!($tobool)) { __label__ = 21;break $while_body_lr_ph$$while_end$2; }
      }
    }
  } while(0);

  ;
  return;
  return;
}
__ZN16b2ContactManager7CollideEv["X"]=1;

function __ZNK12b2BroadPhase11TestOverlapEii($this, $proxyIdA, $proxyIdB) {
  ;
  var __label__;

  var $this_addr;
  var $proxyIdA_addr;
  var $proxyIdB_addr;
  var $aabbA;
  var $aabbB;
  $this_addr=$this;
  $proxyIdA_addr=$proxyIdA;
  $proxyIdB_addr=$proxyIdB;
  var $this1=$this_addr;
  var $m_tree=$this1;
  var $0=$proxyIdA_addr;
  var $call=__ZNK13b2DynamicTree10GetFatAABBEi($m_tree, $0);
  $aabbA=$call;
  var $m_tree2=$this1;
  var $1=$proxyIdB_addr;
  var $call3=__ZNK13b2DynamicTree10GetFatAABBEi($m_tree2, $1);
  $aabbB=$call3;
  var $2=$aabbA;
  var $3=$aabbB;
  var $call4=__Z13b2TestOverlapRK6b2AABBS1_($2, $3);
  ;
  return $call4;
  return null;
}


function __ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_($this, $callback) {
  var __stackBase__  = STACKTOP; STACKTOP += 1;
  var __label__;

  var $__first_addr_i;
  var $__last_addr_i;
  var $__comp_addr_i=__stackBase__;
  var $this_addr;
  var $callback_addr;
  var $i;
  var $fatAABB;
  var $i9;
  var $primaryPair;
  var $userDataA;
  var $userDataB;
  var $pair;
  $this_addr=$this;
  $callback_addr=$callback;
  var $this1=$this_addr;
  var $m_pairCount=$this1+13;
  IHEAP[$m_pairCount]=0;
  $i=0;
  var $0=$i;
  var $m_moveCount=$this1+10;
  var $1=IHEAP[$m_moveCount];
  var $cmp2=($0) < ($1);
  if ($cmp2) { __label__ = 1;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end$41: do { 
    if (__label__ == 1) {

      var $m_moveBuffer=$this1+8;
      var $m_queryProxyId=$this1+14;
      var $m_tree=$this1;
      var $m_queryProxyId4=$this1+14;
      var $m_tree5=$this1;
      ;
      $for_body$43: while(1) { 

        var $2=$i;
        var $3=IHEAP[$m_moveBuffer];
        var $arrayidx=$3+$2;
        var $4=IHEAP[$arrayidx];
        IHEAP[$m_queryProxyId]=$4;
        var $cmp3=($4)==-1;
        if ($cmp3) { __label__ = 4;; } else { __label__ = 3;; }
        $for_inc$$if_end$45: do { 
          if (__label__ == 3) {

            var $5=IHEAP[$m_queryProxyId4];
            var $call=__ZNK13b2DynamicTree10GetFatAABBEi($m_tree, $5);
            $fatAABB=$call;
            var $6=$fatAABB;
            __ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB($m_tree5, $this1, $6);
            ;
          }
        } while(0);

        var $7=$i;
        var $inc=($7)+1;
        $i=$inc;
        var $8=$i;
        var $9=IHEAP[$m_moveCount];
        var $cmp=($8) < ($9);
        if (!($cmp)) { __label__ = 5;break $for_body_lr_ph$$for_end$41; }
      }
    }
  } while(0);

  var $m_moveCount6=$this1+10;
  IHEAP[$m_moveCount6]=0;
  var $m_pairBuffer=$this1+11;
  var $10=IHEAP[$m_pairBuffer];
  var $m_pairBuffer7=$this1+11;
  var $11=IHEAP[$m_pairBuffer7];
  var $m_pairCount8=$this1+13;
  var $12=IHEAP[$m_pairCount8];
  var $add_ptr=$11+$12*3;
  ;
  ;
  ;
  $__first_addr_i=$10;
  $__last_addr_i=$add_ptr;
  IHEAP[$__comp_addr_i]=34;
  var $16=$__first_addr_i;
  var $17=$__last_addr_i;
  __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($16, $17, $__comp_addr_i);
  ;
  ;
  ;
  $i9=0;
  var $21=$i9;
  var $m_pairCount10=$this1+13;
  var $22=IHEAP[$m_pairCount10];
  var $cmp111=($21) < ($22);
  if ($cmp111) { __label__ = 6;; } else { __label__ = 13;; }
  $while_body_lr_ph$$while_end34$49: do { 
    if (__label__ == 6) {

      var $m_pairBuffer12=$this1+11;
      var $m_tree14=$this1;
      var $m_tree16=$this1;
      var $m_pairBuffer23=$this1+11;
      var $m_pairCount20=$this1+13;
      ;
      $while_body$51: while(1) { 

        var $25=IHEAP[$m_pairBuffer12];
        var $26=$i9;
        var $add_ptr13=$25+$26*3;
        $primaryPair=$add_ptr13;
        var $27=$primaryPair;
        var $proxyIdA=$27;
        var $28=IHEAP[$proxyIdA];
        var $call15=__ZNK13b2DynamicTree11GetUserDataEi($m_tree14, $28);
        $userDataA=$call15;
        var $29=$primaryPair;
        var $proxyIdB=$29+1;
        var $30=IHEAP[$proxyIdB];
        var $call17=__ZNK13b2DynamicTree11GetUserDataEi($m_tree16, $30);
        $userDataB=$call17;
        var $31=$callback_addr;
        var $32=$userDataA;
        var $33=$userDataB;
        __ZN16b2ContactManager7AddPairEPvS0_($31, $32, $33);
        var $34=$i9;
        var $inc18=($34)+1;
        $i9=$inc18;
        ;
        $while_cond19$53: while(1) { 

          var $35=$i9;
          var $36=IHEAP[$m_pairCount20];
          var $cmp21=($35) < ($36);
          if (!($cmp21)) { __label__ = 7;break $while_cond19$53; }

          var $37=IHEAP[$m_pairBuffer23];
          var $38=$i9;
          var $add_ptr24=$37+$38*3;
          $pair=$add_ptr24;
          var $39=$pair;
          var $proxyIdA25=$39;
          var $40=IHEAP[$proxyIdA25];
          var $41=$primaryPair;
          var $proxyIdA26=$41;
          var $42=IHEAP[$proxyIdA26];
          var $cmp27=($40)!=($42);
          if ($cmp27) { __label__ = 7;break $while_cond19$53; }

          var $43=$pair;
          var $proxyIdB28=$43+1;
          var $44=IHEAP[$proxyIdB28];
          var $45=$primaryPair;
          var $proxyIdB29=$45+1;
          var $46=IHEAP[$proxyIdB29];
          var $cmp30=($44)!=($46);
          if ($cmp30) { __label__ = 7;break $while_cond19$53; }

          var $47=$i9;
          var $inc33=($47)+1;
          $i9=$inc33;
          ;
        }

        var $23=$i9;
        var $24=IHEAP[$m_pairCount10];
        var $cmp11=($23) < ($24);
        if (!($cmp11)) { __label__ = 13;break $while_body_lr_ph$$while_end34$49; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_["X"]=1;

function __ZN16b2ContactManager7AddPairEPvS0_($this, $proxyUserDataA, $proxyUserDataB) {
  ;
  var __label__;

  var $this_addr;
  var $proxyUserDataA_addr;
  var $proxyUserDataB_addr;
  var $proxyA;
  var $proxyB;
  var $fixtureA;
  var $fixtureB;
  var $indexA;
  var $indexB;
  var $bodyA;
  var $bodyB;
  var $edge;
  var $fA;
  var $fB;
  var $iA;
  var $iB;
  var $c;
  $this_addr=$this;
  $proxyUserDataA_addr=$proxyUserDataA;
  $proxyUserDataB_addr=$proxyUserDataB;
  var $this1=$this_addr;
  var $0=$proxyUserDataA_addr;
  var $1=$0;
  $proxyA=$1;
  var $2=$proxyUserDataB_addr;
  var $3=$2;
  $proxyB=$3;
  var $4=$proxyA;
  var $fixture=$4+4;
  var $5=IHEAP[$fixture];
  $fixtureA=$5;
  var $6=$proxyB;
  var $fixture2=$6+4;
  var $7=IHEAP[$fixture2];
  $fixtureB=$7;
  var $8=$proxyA;
  var $childIndex=$8+5;
  var $9=IHEAP[$childIndex];
  $indexA=$9;
  var $10=$proxyB;
  var $childIndex3=$10+5;
  var $11=IHEAP[$childIndex3];
  $indexB=$11;
  var $12=$fixtureA;
  var $call=__ZN9b2Fixture7GetBodyEv($12);
  $bodyA=$call;
  var $13=$fixtureB;
  var $call4=__ZN9b2Fixture7GetBodyEv($13);
  $bodyB=$call4;
  var $14=$bodyA;
  var $15=$bodyB;
  var $cmp=($14)==($15);
  if ($cmp) { __label__ = 24;; } else { __label__ = 1;; }
  $return$$if_end$61: do { 
    if (__label__ == 1) {

      var $16=$bodyB;
      var $call5=__ZN6b2Body14GetContactListEv($16);
      $edge=$call5;
      var $17 = $call5;;
      $while_cond$63: while(1) { 

        var $17;
        var $tobool=($17)!=0;
        if (!($tobool)) { __label__ = 13;break $while_cond$63; }

        var $18=$edge;
        var $other=$18;
        var $19=IHEAP[$other];
        var $20=$bodyA;
        var $cmp6=($19)==($20);
        if ($cmp6) { __label__ = 4;; } else { __label__ = 12;; }
        $if_then7$$if_end32$66: do { 
          if (__label__ == 4) {

            var $21=$edge;
            var $contact=$21+1;
            var $22=IHEAP[$contact];
            var $call8=__ZN9b2Contact11GetFixtureAEv($22);
            $fA=$call8;
            var $23=$edge;
            var $contact9=$23+1;
            var $24=IHEAP[$contact9];
            var $call10=__ZN9b2Contact11GetFixtureBEv($24);
            $fB=$call10;
            var $25=$edge;
            var $contact11=$25+1;
            var $26=IHEAP[$contact11];
            var $call12=__ZNK9b2Contact14GetChildIndexAEv($26);
            $iA=$call12;
            var $27=$edge;
            var $contact13=$27+1;
            var $28=IHEAP[$contact13];
            var $call14=__ZNK9b2Contact14GetChildIndexBEv($28);
            $iB=$call14;
            var $29=$fA;
            var $30=$fixtureA;
            var $cmp15=($29)==($30);
            if ($cmp15) { __label__ = 5;; } else { __label__ = 8;; }
            $land_lhs_true$$if_end22$68: do { 
              if (__label__ == 5) {

                var $31=$fB;
                var $32=$fixtureB;
                var $cmp16=($31)==($32);
                if (!($cmp16)) { __label__ = 8;break $land_lhs_true$$if_end22$68; }

                var $33=$iA;
                var $34=$indexA;
                var $cmp18=($33)==($34);
                if (!($cmp18)) { __label__ = 8;break $land_lhs_true$$if_end22$68; }

                var $35=$iB;
                var $36=$indexB;
                var $cmp20=($35)==($36);
                if ($cmp20) { __label__ = 24;break $return$$if_end$61; }
              }
            } while(0);

            var $37=$fA;
            var $38=$fixtureB;
            var $cmp23=($37)==($38);
            if (!($cmp23)) { __label__ = 12;break $if_then7$$if_end32$66; }

            var $39=$fB;
            var $40=$fixtureA;
            var $cmp25=($39)==($40);
            if (!($cmp25)) { __label__ = 12;break $if_then7$$if_end32$66; }

            var $41=$iA;
            var $42=$indexB;
            var $cmp27=($41)==($42);
            if (!($cmp27)) { __label__ = 12;break $if_then7$$if_end32$66; }

            var $43=$iB;
            var $44=$indexA;
            var $cmp29=($43)==($44);
            if ($cmp29) { __label__ = 24;break $return$$if_end$61; }
          }
        } while(0);

        var $45=$edge;
        var $next=$45+3;
        var $46=IHEAP[$next];
        $edge=$46;
        var $17 = $46;;
      }

      var $47=$bodyB;
      var $48=$bodyA;
      var $call33=__ZNK6b2Body13ShouldCollideEPKS_($47, $48);
      var $conv=($call33);
      var $cmp34=($conv)==0;
      if ($cmp34) { __label__ = 24;break $return$$if_end$61; }

      var $m_contactFilter=$this1+17;
      var $49=IHEAP[$m_contactFilter];
      var $tobool37=($49)!=0;
      if ($tobool37) { __label__ = 15;; } else { __label__ = 16;; }
      $land_lhs_true38$$if_end44$79: do { 
        if (__label__ == 15) {

          var $m_contactFilter39=$this1+17;
          var $50=IHEAP[$m_contactFilter39];
          var $51=$50;
          var $vtable=IHEAP[$51];
          var $vfn=$vtable+2;
          var $52=IHEAP[$vfn];
          var $53=$fixtureA;
          var $54=$fixtureB;
          var $call40=FUNCTION_TABLE[$52]($50, $53, $54);
          var $conv41=($call40);
          var $cmp42=($conv41)==0;
          if ($cmp42) { __label__ = 24;break $return$$if_end$61; }
        }
      } while(0);

      var $55=$fixtureA;
      var $56=$indexA;
      var $57=$fixtureB;
      var $58=$indexB;
      var $m_allocator=$this1+19;
      var $59=IHEAP[$m_allocator];
      var $call45=__ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($55, $56, $57, $58, $59);
      $c=$call45;
      var $cmp46=($call45)==0;
      if ($cmp46) { __label__ = 24;break $return$$if_end$61; }

      var $60=$c;
      var $call49=__ZN9b2Contact11GetFixtureAEv($60);
      $fixtureA=$call49;
      var $61=$c;
      var $call50=__ZN9b2Contact11GetFixtureBEv($61);
      $fixtureB=$call50;
      var $62=$c;
      var $call51=__ZNK9b2Contact14GetChildIndexAEv($62);
      $indexA=$call51;
      var $63=$c;
      var $call52=__ZNK9b2Contact14GetChildIndexBEv($63);
      $indexB=$call52;
      var $64=$fixtureA;
      var $call53=__ZN9b2Fixture7GetBodyEv($64);
      $bodyA=$call53;
      var $65=$fixtureB;
      var $call54=__ZN9b2Fixture7GetBodyEv($65);
      $bodyB=$call54;
      var $66=$c;
      var $m_prev=$66+2;
      IHEAP[$m_prev]=0;
      var $m_contactList=$this1+15;
      var $67=IHEAP[$m_contactList];
      var $68=$c;
      var $m_next=$68+3;
      IHEAP[$m_next]=$67;
      var $m_contactList55=$this1+15;
      var $69=IHEAP[$m_contactList55];
      var $cmp56=($69)!=0;
      if ($cmp56) { __label__ = 18;; } else { __label__ = 19;; }
      $if_then57$$if_end60$83: do { 
        if (__label__ == 18) {

          var $70=$c;
          var $m_contactList58=$this1+15;
          var $71=IHEAP[$m_contactList58];
          var $m_prev59=$71+2;
          IHEAP[$m_prev59]=$70;
          ;
        }
      } while(0);

      var $72=$c;
      var $m_contactList61=$this1+15;
      IHEAP[$m_contactList61]=$72;
      var $73=$c;
      var $74=$c;
      var $m_nodeA=$74+4;
      var $contact62=$m_nodeA+1;
      IHEAP[$contact62]=$73;
      var $75=$bodyB;
      var $76=$c;
      var $m_nodeA63=$76+4;
      var $other64=$m_nodeA63;
      IHEAP[$other64]=$75;
      var $77=$c;
      var $m_nodeA65=$77+4;
      var $prev=$m_nodeA65+2;
      IHEAP[$prev]=0;
      var $78=$bodyA;
      var $m_contactList66=$78+28;
      var $79=IHEAP[$m_contactList66];
      var $80=$c;
      var $m_nodeA67=$80+4;
      var $next68=$m_nodeA67+3;
      IHEAP[$next68]=$79;
      var $81=$bodyA;
      var $m_contactList69=$81+28;
      var $82=IHEAP[$m_contactList69];
      var $cmp70=($82)!=0;
      if ($cmp70) { __label__ = 20;; } else { __label__ = 21;; }
      $if_then71$$if_end75$86: do { 
        if (__label__ == 20) {

          var $83=$c;
          var $m_nodeA72=$83+4;
          var $84=$bodyA;
          var $m_contactList73=$84+28;
          var $85=IHEAP[$m_contactList73];
          var $prev74=$85+2;
          IHEAP[$prev74]=$m_nodeA72;
          ;
        }
      } while(0);

      var $86=$c;
      var $m_nodeA76=$86+4;
      var $87=$bodyA;
      var $m_contactList77=$87+28;
      IHEAP[$m_contactList77]=$m_nodeA76;
      var $88=$c;
      var $89=$c;
      var $m_nodeB=$89+8;
      var $contact78=$m_nodeB+1;
      IHEAP[$contact78]=$88;
      var $90=$bodyA;
      var $91=$c;
      var $m_nodeB79=$91+8;
      var $other80=$m_nodeB79;
      IHEAP[$other80]=$90;
      var $92=$c;
      var $m_nodeB81=$92+8;
      var $prev82=$m_nodeB81+2;
      IHEAP[$prev82]=0;
      var $93=$bodyB;
      var $m_contactList83=$93+28;
      var $94=IHEAP[$m_contactList83];
      var $95=$c;
      var $m_nodeB84=$95+8;
      var $next85=$m_nodeB84+3;
      IHEAP[$next85]=$94;
      var $96=$bodyB;
      var $m_contactList86=$96+28;
      var $97=IHEAP[$m_contactList86];
      var $cmp87=($97)!=0;
      if ($cmp87) { __label__ = 22;; } else { __label__ = 23;; }
      $if_then88$$if_end92$89: do { 
        if (__label__ == 22) {

          var $98=$c;
          var $m_nodeB89=$98+8;
          var $99=$bodyB;
          var $m_contactList90=$99+28;
          var $100=IHEAP[$m_contactList90];
          var $prev91=$100+2;
          IHEAP[$prev91]=$m_nodeB89;
          ;
        }
      } while(0);

      var $101=$c;
      var $m_nodeB93=$101+8;
      var $102=$bodyB;
      var $m_contactList94=$102+28;
      IHEAP[$m_contactList94]=$m_nodeB93;
      var $103=$bodyA;
      __ZN6b2Body8SetAwakeEb($103, 1);
      var $104=$bodyB;
      __ZN6b2Body8SetAwakeEb($104, 1);
      var $m_contactCount=$this1+16;
      var $105=IHEAP[$m_contactCount];
      var $inc=($105)+1;
      IHEAP[$m_contactCount]=$inc;
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN16b2ContactManager7AddPairEPvS0_["X"]=1;

function __ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB($this, $callback, $aabb) {
  var __stackBase__  = STACKTOP; STACKTOP += 259;
  var __label__;

  var $this_addr;
  var $callback_addr;
  var $aabb_addr;
  var $stack=__stackBase__;
  var $exn_slot;
  var $ehselector_slot;
  var $nodeId;
  var $node;
  var $proceed;
  var $cleanup_dest_slot;
  $this_addr=$this;
  $callback_addr=$callback;
  $aabb_addr=$aabb;
  var $this1=$this_addr;
  __ZN15b2GrowableStackIiLi256EEC1Ev($stack);
  var $m_root=$this1;
  __ZN15b2GrowableStackIiLi256EE4PushERKi($stack, $m_root);
  var $m_nodes=$this1+1;
  ;
  $while_cond$101: while(1) { 

    var $call=__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack);
    var $cmp=($call) > 0;
    if (!($cmp)) { __label__ = 10;break $while_cond$101; }

    var $call4=__ZN15b2GrowableStackIiLi256EE3PopEv($stack);
    ;

    $nodeId=$call4;
    var $0=$nodeId;
    var $cmp5=($0)==-1;
    if ($cmp5) { __label__ = 1;continue $while_cond$101; }

    var $1=IHEAP[$m_nodes];
    var $2=$nodeId;
    var $add_ptr=$1+$2*9;
    $node=$add_ptr;
    var $3=$node;
    var $aabb6=$3;
    var $4=$aabb_addr;
    var $call8=__Z13b2TestOverlapRK6b2AABBS1_($aabb6, $4);
    ;

    if (!($call8)) { __label__ = 1;continue $while_cond$101; }

    var $5=$node;
    var $call11=__ZNK10b2TreeNode6IsLeafEv($5);
    if ($call11) { __label__ = 7;; } else { __label__ = 9;; }
    $invoke_cont13$$invoke_cont18$108: do { 
      if (__label__ == 7) {

        var $6=$callback_addr;
        var $7=$nodeId;
        var $call14=__ZN12b2BroadPhase13QueryCallbackEi($6, $7);
        var $frombool=($call14);
        $proceed=$frombool;
        var $8=$proceed;
        var $tobool=((($8)) & 1);
        var $conv=($tobool);
        var $cmp15=($conv)==0;
        if ($cmp15) { __label__ = 8;break $while_cond$101; }
      }
      else if (__label__ == 9) {

        var $9=$node;
        var $child1=$9+6;
        __ZN15b2GrowableStackIiLi256EE4PushERKi($stack, $child1);
        var $10=$node;
        var $child2=$10+7;
        __ZN15b2GrowableStackIiLi256EE4PushERKi($stack, $child2);
        ;
      }
    } while(0);
  }
  $while_end$$if_then16$111: do { 
    if (__label__ == 10) {

      $cleanup_dest_slot=0;
      ;
    }
    else if (__label__ == 8) {

      $cleanup_dest_slot=1;
      ;
    }
  } while(0);

  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB["X"]=1;
// Warning: .ll contains ptrtoint and/or inttoptr. These may be dangerous in QUANTUM == 1. The safest thing is to investigate every appearance, and modify the source code to avoid this. Emscripten will print a list of the .ll lines, and also annotate the .js.
//   ptrtoint on .ll line 13241
//   ptrtoint on .ll line 13242
//   ptrtoint on .ll line 13834
//   ptrtoint on .ll line 13835
//   ptrtoint on .ll line 13840
//   ptrtoint on .ll line 13841

function __ZNK13b2DynamicTree11GetUserDataEi($this, $proxyId) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $0=$proxyId_addr;
  var $cmp=0 <= ($0);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$2: do { 
    if (__label__ == 1) {

      var $1=$proxyId_addr;
      var $m_nodeCapacity=$this1+3;
      var $2=IHEAP[$m_nodeCapacity];
      var $cmp2=($1) < ($2);
      if ($cmp2) { __label__ = 3;break $land_lhs_true$$cond_false$2; } else { __label__ = 2;break $land_lhs_true$$cond_false$2; }
    }
  } while(0);
  $cond_end$$cond_false$4: do { 
    if (__label__ == 2) {

      ___assert_func(__str19425, 153, ___PRETTY_FUNCTION____ZNK13b2DynamicTree11GetUserDataEi, __str4107);
      ;
    }
  } while(0);

  var $3=$proxyId_addr;
  var $m_nodes=$this1+1;
  var $4=IHEAP[$m_nodes];
  var $arrayidx=$4+$3*9;
  var $userData=$arrayidx+4;
  var $5=IHEAP[$userData];
  ;
  return $5;
  return null;
}


function __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($__first, $__last, $__comp) {
  var __stackBase__  = STACKTOP; STACKTOP += 18;
  var __label__;

  var $__t_addr_i4_i164;
  var $__t_addr_i3_i165;
  var $__t_addr_i_i166;
  var $__x_addr_i167;
  var $__y_addr_i168;
  var $__t_i169=__stackBase__;
  var $__t_addr_i4_i158;
  var $__t_addr_i3_i159;
  var $__t_addr_i_i160;
  var $__x_addr_i161;
  var $__y_addr_i162;
  var $__t_i163=__stackBase__+3;
  var $__t_addr_i4_i152;
  var $__t_addr_i3_i153;
  var $__t_addr_i_i154;
  var $__x_addr_i155;
  var $__y_addr_i156;
  var $__t_i157=__stackBase__+6;
  var $__t_addr_i4_i146;
  var $__t_addr_i3_i147;
  var $__t_addr_i_i148;
  var $__x_addr_i149;
  var $__y_addr_i150;
  var $__t_i151=__stackBase__+9;
  var $__t_addr_i4_i140;
  var $__t_addr_i3_i141;
  var $__t_addr_i_i142;
  var $__x_addr_i143;
  var $__y_addr_i144;
  var $__t_i145=__stackBase__+12;
  var $__t_addr_i4_i;
  var $__t_addr_i3_i;
  var $__t_addr_i_i;
  var $__x_addr_i;
  var $__y_addr_i;
  var $__t_i=__stackBase__+15;
  var $__first_addr;
  var $__last_addr;
  var $__comp_addr;
  var $__limit;
  var $__len;
  var $__m;
  var $__lm1;
  var $__n_swaps;
  var $__delta;
  var $__i;
  var $__j;
  var $__fs;
  $__first_addr=$__first;
  $__last_addr=$__last;
  $__comp_addr=$__comp;
  $__limit=30;
  ;
  ;
  ;
  ;
  ;
  var $5=$__t_i169;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  var $18=$__t_i163;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  var $31=$__t_i151;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  var $44=$__t_i145;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  var $57=$__t_i157;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  $__restart$8: while(1) { 

    var $65=$__last_addr;
    var $66=$__first_addr;
    var $sub_ptr_lhs_cast=($65) /* Warning: ptrtoint, .ll line 13241 */;
    var $sub_ptr_rhs_cast=($66) /* Warning: ptrtoint, .ll line 13242 */;
    var $sub_ptr_sub=($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast);
    var $sub_ptr_div=((($sub_ptr_sub)/12)|0);
    $__len=$sub_ptr_div;
    if ($sub_ptr_div == 0) {
      __label__ = 49;break $__restart$8;
    }
    else if ($sub_ptr_div == 1) {
      __label__ = 49;break $__restart$8;
    }
    else if ($sub_ptr_div == 2) {
      __label__ = 2;break $__restart$8;
    }
    else if ($sub_ptr_div == 3) {
      __label__ = 4;break $__restart$8;
    }
    else if ($sub_ptr_div == 4) {
      __label__ = 5;break $__restart$8;
    }
    else if ($sub_ptr_div == 5) {
      __label__ = 6;break $__restart$8;
    }
    else {
    ;
    }
    

    var $113=$__len;
    var $cmp=($113) <= 30;
    var $114=$__first_addr;
    if ($cmp) { __label__ = 8;break $__restart$8; }

    $__m=$114;
    var $117=$__last_addr;
    $__lm1=$117;
    var $118=$__lm1;
    var $incdec_ptr18=$118-3;
    $__lm1=$incdec_ptr18;
    var $119=$__len;
    var $cmp19=($119) >= 1000;
    var $120=$__len;
    var $div=((($120)/2)|0);
    $__delta=$div;
    var $121=$__delta;
    var $122=$__m;
    var $add_ptr21=$122+$121*3;
    $__m=$add_ptr21;
    if ($cmp19) { __label__ = 10;; } else { __label__ = 11;; }
    $if_then20$$if_else$12: do { 
      if (__label__ == 10) {

        var $123=$__delta;
        var $div22=((($123)/2)|0);
        $__delta=$div22;
        var $124=$__first_addr;
        var $125=$__first_addr;
        var $126=$__delta;
        var $add_ptr23=$125+$126*3;
        var $127=$__m;
        var $128=$__m;
        var $129=$__delta;
        var $add_ptr24=$128+$129*3;
        var $130=$__lm1;
        var $131=$__comp_addr;
        var $call25=__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($124, $add_ptr23, $127, $add_ptr24, $130, $131);
        $__n_swaps=$call25;
        ;
      }
      else if (__label__ == 11) {

        var $132=$__first_addr;
        var $133=$__m;
        var $134=$__lm1;
        var $135=$__comp_addr;
        var $call28=__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($132, $133, $134, $135);
        $__n_swaps=$call28;
        ;
      }
    } while(0);

    var $136=$__first_addr;
    $__i=$136;
    var $137=$__lm1;
    $__j=$137;
    var $138=$__comp_addr;
    var $139=IHEAP[$138];
    var $140=$__i;
    var $141=$__m;
    var $call30=FUNCTION_TABLE[$139]($140, $141);
    if ($call30) { __label__ = 28;; } else { __label__ = 13;; }
    $if_end79$$while_body33$16: do { 
      if (__label__ == 13) {
        $while_body33$17: while(1) { 

          var $142=$__i;
          var $143=$__j;
          var $incdec_ptr34=$143-3;
          $__j=$incdec_ptr34;
          var $cmp35=($142)==($incdec_ptr34);
          if ($cmp35) { __label__ = 14;break $while_body33$17; }

          var $201=$__comp_addr;
          var $202=IHEAP[$201];
          var $203=$__j;
          var $204=$__m;
          var $call74=FUNCTION_TABLE[$202]($203, $204);
          if ($call74) { __label__ = 27;break $while_body33$17; }
        }
        $if_then36$$if_then75$20: do { 
          if (__label__ == 14) {

            var $144=$__i;
            var $incdec_ptr37=$144+3;
            $__i=$incdec_ptr37;
            var $145=$__last_addr;
            $__j=$145;
            var $146=$__comp_addr;
            var $147=IHEAP[$146];
            var $148=$__first_addr;
            var $149=$__j;
            var $incdec_ptr38=$149-3;
            $__j=$incdec_ptr38;
            var $call39=FUNCTION_TABLE[$147]($148, $incdec_ptr38);
            if ($call39) { __label__ = 19;; } else { __label__ = 15;; }
            $if_end51$$while_body42$22: do { 
              if (__label__ == 15) {
                $while_body42$23: while(1) { 

                  var $150=$__i;
                  var $151=$__j;
                  var $cmp43=($150)==($151);
                  if ($cmp43) { __label__ = 49;break $__restart$8; }

                  var $152=$__comp_addr;
                  var $153=IHEAP[$152];
                  var $154=$__first_addr;
                  var $155=$__i;
                  var $call46=FUNCTION_TABLE[$153]($154, $155);
                  var $156=$__i;
                  if ($call46) { __label__ = 17;break $while_body42$23; }

                  var $incdec_ptr50=$156+3;
                  $__i=$incdec_ptr50;
                  ;
                }

                var $157=$__j;
                $__x_addr_i143=$156;
                $__y_addr_i144=$157;
                var $158=$__x_addr_i143;
                $__t_addr_i_i142=$158;
                var $159=$__t_addr_i_i142;
                var $160=$159;
                IHEAP[$44]=IHEAP[$160]; FHEAP[$44]=FHEAP[$160]; ; IHEAP[$44+1]=IHEAP[$160+1]; FHEAP[$44+1]=FHEAP[$160+1]; ; IHEAP[$44+2]=IHEAP[$160+2]; FHEAP[$44+2]=FHEAP[$160+2]; ;
                var $161=$__x_addr_i143;
                var $162=$__y_addr_i144;
                $__t_addr_i4_i140=$162;
                var $163=$__t_addr_i4_i140;
                var $164=$161;
                var $165=$163;
                IHEAP[$164]=IHEAP[$165]; FHEAP[$164]=FHEAP[$165]; ; IHEAP[$164+1]=IHEAP[$165+1]; FHEAP[$164+1]=FHEAP[$165+1]; ; IHEAP[$164+2]=IHEAP[$165+2]; FHEAP[$164+2]=FHEAP[$165+2]; ;
                var $166=$__y_addr_i144;
                $__t_addr_i3_i141=$__t_i145;
                var $167=$__t_addr_i3_i141;
                var $168=$166;
                var $169=$167;
                IHEAP[$168]=IHEAP[$169]; FHEAP[$168]=FHEAP[$169]; ; IHEAP[$168+1]=IHEAP[$169+1]; FHEAP[$168+1]=FHEAP[$169+1]; ; IHEAP[$168+2]=IHEAP[$169+2]; FHEAP[$168+2]=FHEAP[$169+2]; ;
                var $170=$__n_swaps;
                var $inc=($170)+1;
                $__n_swaps=$inc;
                var $171=$__i;
                var $incdec_ptr48=$171+3;
                $__i=$incdec_ptr48;
                ;
              }
            } while(0);

            var $172=$__i;
            var $173=$__j;
            var $cmp52=($172)==($173);
            if ($cmp52) { __label__ = 49;break $__restart$8; }
            $while_cond57$29: while(1) { 

              var $174=$__comp_addr;
              var $175=IHEAP[$174];
              var $176=$__first_addr;
              var $177=$__i;
              var $call58=FUNCTION_TABLE[$175]($176, $177);
              var $lnot=($call58) ^ 1;
              if ($lnot) { __label__ = 21;; } else { __label__ = 22;; }
              $while_body59$$while_cond62$31: do { 
                if (__label__ == 21) {

                  var $178=$__i;
                  var $incdec_ptr60=$178+3;
                  $__i=$incdec_ptr60;
                  ;
                }
                else if (__label__ == 22) {
                  $while_cond62$33: while(1) { 

                    var $179=$__comp_addr;
                    var $180=IHEAP[$179];
                    var $181=$__first_addr;
                    var $182=$__j;
                    var $incdec_ptr63=$182-3;
                    $__j=$incdec_ptr63;
                    var $call64=FUNCTION_TABLE[$180]($181, $incdec_ptr63);
                    if (!($call64)) { __label__ = 23;break $while_cond62$33; }
                  }

                  var $183=$__i;
                  var $184=$__j;
                  var $cmp67=($183) >= ($184);
                  var $185=$__i;
                  if ($cmp67) { __label__ = 25;break $while_cond57$29; }

                  var $186=$__j;
                  $__x_addr_i149=$185;
                  $__y_addr_i150=$186;
                  var $187=$__x_addr_i149;
                  $__t_addr_i_i148=$187;
                  var $188=$__t_addr_i_i148;
                  var $189=$188;
                  IHEAP[$31]=IHEAP[$189]; FHEAP[$31]=FHEAP[$189]; ; IHEAP[$31+1]=IHEAP[$189+1]; FHEAP[$31+1]=FHEAP[$189+1]; ; IHEAP[$31+2]=IHEAP[$189+2]; FHEAP[$31+2]=FHEAP[$189+2]; ;
                  var $190=$__x_addr_i149;
                  var $191=$__y_addr_i150;
                  $__t_addr_i4_i146=$191;
                  var $192=$__t_addr_i4_i146;
                  var $193=$190;
                  var $194=$192;
                  IHEAP[$193]=IHEAP[$194]; FHEAP[$193]=FHEAP[$194]; ; IHEAP[$193+1]=IHEAP[$194+1]; FHEAP[$193+1]=FHEAP[$194+1]; ; IHEAP[$193+2]=IHEAP[$194+2]; FHEAP[$193+2]=FHEAP[$194+2]; ;
                  var $195=$__y_addr_i150;
                  $__t_addr_i3_i147=$__t_i151;
                  var $196=$__t_addr_i3_i147;
                  var $197=$195;
                  var $198=$196;
                  IHEAP[$197]=IHEAP[$198]; FHEAP[$197]=FHEAP[$198]; ; IHEAP[$197+1]=IHEAP[$198+1]; FHEAP[$197+1]=FHEAP[$198+1]; ; IHEAP[$197+2]=IHEAP[$198+2]; FHEAP[$197+2]=FHEAP[$198+2]; ;
                  var $199=$__n_swaps;
                  var $inc70=($199)+1;
                  $__n_swaps=$inc70;
                  var $200=$__i;
                  var $incdec_ptr71=$200+3;
                  $__i=$incdec_ptr71;
                  ;
                }
              } while(0);
            }

            $__first_addr=$185;
            __label__ = 1;continue $__restart$8;
          }
          else if (__label__ == 27) {

            var $205=$__i;
            var $206=$__j;
            $__x_addr_i155=$205;
            $__y_addr_i156=$206;
            var $207=$__x_addr_i155;
            $__t_addr_i_i154=$207;
            var $208=$__t_addr_i_i154;
            var $209=$208;
            IHEAP[$57]=IHEAP[$209]; FHEAP[$57]=FHEAP[$209]; ; IHEAP[$57+1]=IHEAP[$209+1]; FHEAP[$57+1]=FHEAP[$209+1]; ; IHEAP[$57+2]=IHEAP[$209+2]; FHEAP[$57+2]=FHEAP[$209+2]; ;
            var $210=$__x_addr_i155;
            var $211=$__y_addr_i156;
            $__t_addr_i4_i152=$211;
            var $212=$__t_addr_i4_i152;
            var $213=$210;
            var $214=$212;
            IHEAP[$213]=IHEAP[$214]; FHEAP[$213]=FHEAP[$214]; ; IHEAP[$213+1]=IHEAP[$214+1]; FHEAP[$213+1]=FHEAP[$214+1]; ; IHEAP[$213+2]=IHEAP[$214+2]; FHEAP[$213+2]=FHEAP[$214+2]; ;
            var $215=$__y_addr_i156;
            $__t_addr_i3_i153=$__t_i157;
            var $216=$__t_addr_i3_i153;
            var $217=$215;
            var $218=$216;
            IHEAP[$217]=IHEAP[$218]; FHEAP[$217]=FHEAP[$218]; ; IHEAP[$217+1]=IHEAP[$218+1]; FHEAP[$217+1]=FHEAP[$218+1]; ; IHEAP[$217+2]=IHEAP[$218+2]; FHEAP[$217+2]=FHEAP[$218+2]; ;
            var $219=$__n_swaps;
            var $inc76=($219)+1;
            $__n_swaps=$inc76;
            ;
          }
        } while(0);
      }
    } while(0);

    var $220=$__i;
    var $incdec_ptr80=$220+3;
    $__i=$incdec_ptr80;
    var $221=$__i;
    var $222=$__j;
    var $cmp81=($221) < ($222);
    if ($cmp81) { __label__ = 29;; } else { __label__ = 36;; }
    $while_cond85$$if_end105$40: do { 
      if (__label__ == 29) {
        $while_cond85$41: while(1) { 

          var $223=$__comp_addr;
          var $224=IHEAP[$223];
          var $225=$__i;
          var $226=$__m;
          var $call86=FUNCTION_TABLE[$224]($225, $226);
          if ($call86) { __label__ = 30;; } else { __label__ = 31;; }
          $while_body87$$while_cond90$43: do { 
            if (__label__ == 30) {

              var $227=$__i;
              var $incdec_ptr88=$227+3;
              $__i=$incdec_ptr88;
              ;
            }
            else if (__label__ == 31) {
              $while_cond90$45: while(1) { 

                var $228=$__comp_addr;
                var $229=IHEAP[$228];
                var $230=$__j;
                var $incdec_ptr91=$230-3;
                $__j=$incdec_ptr91;
                var $231=$__m;
                var $call92=FUNCTION_TABLE[$229]($incdec_ptr91, $231);
                var $lnot93=($call92) ^ 1;
                if (!($lnot93)) { __label__ = 32;break $while_cond90$45; }
              }

              var $232=$__i;
              var $233=$__j;
              var $cmp96=($232) > ($233);
              if ($cmp96) { __label__ = 36;break $while_cond85$$if_end105$40; }

              var $234=$__i;
              var $235=$__j;
              $__x_addr_i161=$234;
              $__y_addr_i162=$235;
              var $236=$__x_addr_i161;
              $__t_addr_i_i160=$236;
              var $237=$__t_addr_i_i160;
              var $238=$237;
              IHEAP[$18]=IHEAP[$238]; FHEAP[$18]=FHEAP[$238]; ; IHEAP[$18+1]=IHEAP[$238+1]; FHEAP[$18+1]=FHEAP[$238+1]; ; IHEAP[$18+2]=IHEAP[$238+2]; FHEAP[$18+2]=FHEAP[$238+2]; ;
              var $239=$__x_addr_i161;
              var $240=$__y_addr_i162;
              $__t_addr_i4_i158=$240;
              var $241=$__t_addr_i4_i158;
              var $242=$239;
              var $243=$241;
              IHEAP[$242]=IHEAP[$243]; FHEAP[$242]=FHEAP[$243]; ; IHEAP[$242+1]=IHEAP[$243+1]; FHEAP[$242+1]=FHEAP[$243+1]; ; IHEAP[$242+2]=IHEAP[$243+2]; FHEAP[$242+2]=FHEAP[$243+2]; ;
              var $244=$__y_addr_i162;
              $__t_addr_i3_i159=$__t_i163;
              var $245=$__t_addr_i3_i159;
              var $246=$244;
              var $247=$245;
              IHEAP[$246]=IHEAP[$247]; FHEAP[$246]=FHEAP[$247]; ; IHEAP[$246+1]=IHEAP[$247+1]; FHEAP[$246+1]=FHEAP[$247+1]; ; IHEAP[$246+2]=IHEAP[$247+2]; FHEAP[$246+2]=FHEAP[$247+2]; ;
              var $248=$__n_swaps;
              var $inc99=($248)+1;
              $__n_swaps=$inc99;
              var $249=$__m;
              var $250=$__i;
              var $cmp100=($249)==($250);
              if ($cmp100) { __label__ = 34;; } else { __label__ = 35;; }
              $if_then101$$if_end102$49: do { 
                if (__label__ == 34) {

                  var $251=$__j;
                  $__m=$251;
                  ;
                }
              } while(0);

              var $252=$__i;
              var $incdec_ptr103=$252+3;
              $__i=$incdec_ptr103;
              ;
            }
          } while(0);
        }
      }
    } while(0);

    var $253=$__i;
    var $254=$__m;
    var $cmp106=($253)!=($254);
    if ($cmp106) { __label__ = 37;; } else { __label__ = 39;; }
    $land_lhs_true$$if_end110thread_pre_split$53: do { 
      if (__label__ == 37) {

        var $255=$__comp_addr;
        var $256=IHEAP[$255];
        var $257=$__m;
        var $258=$__i;
        var $call107=FUNCTION_TABLE[$256]($257, $258);
        if (!($call107)) { __label__ = 39;break $land_lhs_true$$if_end110thread_pre_split$53; }

        var $259=$__i;
        var $260=$__m;
        $__x_addr_i167=$259;
        $__y_addr_i168=$260;
        var $261=$__x_addr_i167;
        $__t_addr_i_i166=$261;
        var $262=$__t_addr_i_i166;
        var $263=$262;
        IHEAP[$5]=IHEAP[$263]; FHEAP[$5]=FHEAP[$263]; ; IHEAP[$5+1]=IHEAP[$263+1]; FHEAP[$5+1]=FHEAP[$263+1]; ; IHEAP[$5+2]=IHEAP[$263+2]; FHEAP[$5+2]=FHEAP[$263+2]; ;
        var $264=$__x_addr_i167;
        var $265=$__y_addr_i168;
        $__t_addr_i4_i164=$265;
        var $266=$__t_addr_i4_i164;
        var $267=$264;
        var $268=$266;
        IHEAP[$267]=IHEAP[$268]; FHEAP[$267]=FHEAP[$268]; ; IHEAP[$267+1]=IHEAP[$268+1]; FHEAP[$267+1]=FHEAP[$268+1]; ; IHEAP[$267+2]=IHEAP[$268+2]; FHEAP[$267+2]=FHEAP[$268+2]; ;
        var $269=$__y_addr_i168;
        $__t_addr_i3_i165=$__t_i169;
        var $270=$__t_addr_i3_i165;
        var $271=$269;
        var $272=$270;
        IHEAP[$271]=IHEAP[$272]; FHEAP[$271]=FHEAP[$272]; ; IHEAP[$271+1]=IHEAP[$272+1]; FHEAP[$271+1]=FHEAP[$272+1]; ; IHEAP[$271+2]=IHEAP[$272+2]; FHEAP[$271+2]=FHEAP[$272+2]; ;
        var $273=$__n_swaps;
        var $inc109=($273)+1;
        $__n_swaps=$inc109;
        var $274 = $inc109;__label__ = 40;break $land_lhs_true$$if_end110thread_pre_split$53;
      }
    } while(0);
    $if_end110$$if_end110thread_pre_split$56: do { 
      if (__label__ == 39) {

        var $_pr=$__n_swaps;
        var $274 = $_pr;;
      }
    } while(0);

    var $274;
    var $cmp111=($274)==0;
    if ($cmp111) { __label__ = 41;; } else { __label__ = 46;; }
    $if_then112$$if_end125$59: do { 
      if (__label__ == 41) {

        var $275=$__first_addr;
        var $276=$__i;
        var $277=$__comp_addr;
        var $call113=__ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_($275, $276, $277);
        var $frombool=($call113);
        $__fs=$frombool;
        var $278=$__i;
        var $add_ptr114=$278+3;
        var $279=$__last_addr;
        var $280=$__comp_addr;
        var $call115=__ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_($add_ptr114, $279, $280);
        var $281=$__fs;
        var $tobool=((($281)) & 1);
        if ($call115) { __label__ = 42;; } else { __label__ = 44;; }
        $if_then116$$if_else119$61: do { 
          if (__label__ == 42) {

            if ($tobool) { __label__ = 49;break $__restart$8; }

            var $282=$__i;
            $__last_addr=$282;
            __label__ = 1;continue $__restart$8;
          }
          else if (__label__ == 44) {

            if (!($tobool)) { __label__ = 46;break $if_then112$$if_end125$59; }

            var $283=$__i;
            var $incdec_ptr122=$283+3;
            $__i=$incdec_ptr122;
            $__first_addr=$incdec_ptr122;
            __label__ = 1;continue $__restart$8;
          }
        } while(0);
      }
    } while(0);

    var $284=$__i;
    var $285=$__first_addr;
    var $sub_ptr_lhs_cast126=($284) /* Warning: ptrtoint, .ll line 13834 */;
    var $sub_ptr_rhs_cast127=($285) /* Warning: ptrtoint, .ll line 13835 */;
    var $sub_ptr_sub128=($sub_ptr_lhs_cast126)-($sub_ptr_rhs_cast127);
    var $sub_ptr_div129=((($sub_ptr_sub128)/12)|0);
    var $286=$__last_addr;
    var $287=$__i;
    var $sub_ptr_lhs_cast130=($286) /* Warning: ptrtoint, .ll line 13840 */;
    var $sub_ptr_rhs_cast131=($287) /* Warning: ptrtoint, .ll line 13841 */;
    var $sub_ptr_sub132=($sub_ptr_lhs_cast130)-($sub_ptr_rhs_cast131);
    var $sub_ptr_div133=((($sub_ptr_sub132)/12)|0);
    var $cmp134=($sub_ptr_div129) < ($sub_ptr_div133);
    if ($cmp134) { __label__ = 47;; } else { __label__ = 48;; }
    $if_then135$$if_else137$67: do { 
      if (__label__ == 47) {

        var $288=$__first_addr;
        var $289=$__i;
        var $290=$__comp_addr;
        __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($288, $289, $290);
        var $291=$__i;
        var $incdec_ptr136=$291+3;
        $__i=$incdec_ptr136;
        $__first_addr=$incdec_ptr136;
        ;
      }
      else if (__label__ == 48) {

        var $292=$__i;
        var $add_ptr138=$292+3;
        var $293=$__last_addr;
        var $294=$__comp_addr;
        __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($add_ptr138, $293, $294);
        var $295=$__i;
        $__last_addr=$295;
        ;
      }
    } while(0);
  }
  $return$$sw_bb1$$sw_bb2$$sw_bb5$$sw_bb10$$if_then16$70: do { 
    if (__label__ == 2) {

      var $67=$__comp_addr;
      var $68=IHEAP[$67];
      var $69=$__last_addr;
      var $incdec_ptr=$69-3;
      $__last_addr=$incdec_ptr;
      var $70=$__first_addr;
      var $call=FUNCTION_TABLE[$68]($incdec_ptr, $70);
      if (!($call)) { __label__ = 49;break $return$$sw_bb1$$sw_bb2$$sw_bb5$$sw_bb10$$if_then16$70; }

      var $71=$__first_addr;
      var $72=$__last_addr;
      ;
      ;
      ;
      $__x_addr_i=$71;
      $__y_addr_i=$72;
      var $76=$__x_addr_i;
      ;
      $__t_addr_i_i=$76;
      var $78=$__t_addr_i_i;
      ;
      var $80=$__t_i;
      var $81=$78;
      IHEAP[$80]=IHEAP[$81]; FHEAP[$80]=FHEAP[$81]; ; IHEAP[$80+1]=IHEAP[$81+1]; FHEAP[$80+1]=FHEAP[$81+1]; ; IHEAP[$80+2]=IHEAP[$81+2]; FHEAP[$80+2]=FHEAP[$81+2]; ;
      var $82=$__x_addr_i;
      var $83=$__y_addr_i;
      ;
      $__t_addr_i4_i=$83;
      var $85=$__t_addr_i4_i;
      ;
      var $87=$82;
      var $88=$85;
      IHEAP[$87]=IHEAP[$88]; FHEAP[$87]=FHEAP[$88]; ; IHEAP[$87+1]=IHEAP[$88+1]; FHEAP[$87+1]=FHEAP[$88+1]; ; IHEAP[$87+2]=IHEAP[$88+2]; FHEAP[$87+2]=FHEAP[$88+2]; ;
      var $89=$__y_addr_i;
      ;
      $__t_addr_i3_i=$__t_i;
      var $91=$__t_addr_i3_i;
      ;
      var $93=$89;
      var $94=$91;
      IHEAP[$93]=IHEAP[$94]; FHEAP[$93]=FHEAP[$94]; ; IHEAP[$93+1]=IHEAP[$94+1]; FHEAP[$93+1]=FHEAP[$94+1]; ; IHEAP[$93+2]=IHEAP[$94+2]; FHEAP[$93+2]=FHEAP[$94+2]; ;
      ;
      ;
      ;
      ;
    }
    else if (__label__ == 4) {

      var $98=$__first_addr;
      var $99=$__first_addr;
      var $add_ptr=$99+3;
      var $100=$__last_addr;
      var $incdec_ptr3=$100-3;
      $__last_addr=$incdec_ptr3;
      var $101=$__comp_addr;
      var $call4=__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($98, $add_ptr, $incdec_ptr3, $101);
      ;
    }
    else if (__label__ == 5) {

      var $102=$__first_addr;
      var $103=$__first_addr;
      var $add_ptr6=$103+3;
      var $104=$__first_addr;
      var $add_ptr7=$104+6;
      var $105=$__last_addr;
      var $incdec_ptr8=$105-3;
      $__last_addr=$incdec_ptr8;
      var $106=$__comp_addr;
      var $call9=__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($102, $add_ptr6, $add_ptr7, $incdec_ptr8, $106);
      ;
    }
    else if (__label__ == 6) {

      var $107=$__first_addr;
      var $108=$__first_addr;
      var $add_ptr11=$108+3;
      var $109=$__first_addr;
      var $add_ptr12=$109+6;
      var $110=$__first_addr;
      var $add_ptr13=$110+9;
      var $111=$__last_addr;
      var $incdec_ptr14=$111-3;
      $__last_addr=$incdec_ptr14;
      var $112=$__comp_addr;
      var $call15=__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($107, $add_ptr11, $add_ptr12, $add_ptr13, $incdec_ptr14, $112);
      ;
    }
    else if (__label__ == 8) {

      var $115=$__last_addr;
      var $116=$__comp_addr;
      __ZNSt3__118__insertion_sort_3IRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($114, $115, $116);
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_["X"]=1;

function __ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__x, $__y, $__z, $__c) {
  var __stackBase__  = STACKTOP; STACKTOP += 15;
  var __label__;

  var $__t_addr_i4_i31;
  var $__t_addr_i3_i32;
  var $__t_addr_i_i33;
  var $__x_addr_i34;
  var $__y_addr_i35;
  var $__t_i36=__stackBase__;
  var $__t_addr_i4_i25;
  var $__t_addr_i3_i26;
  var $__t_addr_i_i27;
  var $__x_addr_i28;
  var $__y_addr_i29;
  var $__t_i30=__stackBase__+3;
  var $__t_addr_i4_i19;
  var $__t_addr_i3_i20;
  var $__t_addr_i_i21;
  var $__x_addr_i22;
  var $__y_addr_i23;
  var $__t_i24=__stackBase__+6;
  var $__t_addr_i4_i13;
  var $__t_addr_i3_i14;
  var $__t_addr_i_i15;
  var $__x_addr_i16;
  var $__y_addr_i17;
  var $__t_i18=__stackBase__+9;
  var $__t_addr_i4_i;
  var $__t_addr_i3_i;
  var $__t_addr_i_i;
  var $__x_addr_i;
  var $__y_addr_i;
  var $__t_i=__stackBase__+12;
  var $retval;
  var $__x_addr;
  var $__y_addr;
  var $__z_addr;
  var $__c_addr;
  var $__r;
  $__x_addr=$__x;
  $__y_addr=$__y;
  $__z_addr=$__z;
  $__c_addr=$__c;
  $__r=0;
  var $0=$__c_addr;
  var $1=IHEAP[$0];
  var $2=$__y_addr;
  var $3=$__x_addr;
  var $call=FUNCTION_TABLE[$1]($2, $3);
  var $4=$__c_addr;
  var $5=IHEAP[$4];
  var $6=$__z_addr;
  var $7=$__y_addr;
  var $call7=FUNCTION_TABLE[$5]($6, $7);
  if ($call) { __label__ = 6;; } else { __label__ = 1;; }
  $if_end6$$if_then$2: do { 
    if (__label__ == 6) {

      var $68=$__x_addr;
      if ($call7) { __label__ = 7;; } else { __label__ = 8;; }
      $if_then8$$if_end9$4: do { 
        if (__label__ == 7) {

          var $69=$__z_addr;
          ;
          ;
          ;
          $__x_addr_i34=$68;
          $__y_addr_i35=$69;
          var $73=$__x_addr_i34;
          ;
          $__t_addr_i_i33=$73;
          var $75=$__t_addr_i_i33;
          ;
          var $77=$__t_i36;
          var $78=$75;
          IHEAP[$77]=IHEAP[$78]; FHEAP[$77]=FHEAP[$78]; ; IHEAP[$77+1]=IHEAP[$78+1]; FHEAP[$77+1]=FHEAP[$78+1]; ; IHEAP[$77+2]=IHEAP[$78+2]; FHEAP[$77+2]=FHEAP[$78+2]; ;
          var $79=$__x_addr_i34;
          var $80=$__y_addr_i35;
          ;
          $__t_addr_i4_i31=$80;
          var $82=$__t_addr_i4_i31;
          ;
          var $84=$79;
          var $85=$82;
          IHEAP[$84]=IHEAP[$85]; FHEAP[$84]=FHEAP[$85]; ; IHEAP[$84+1]=IHEAP[$85+1]; FHEAP[$84+1]=FHEAP[$85+1]; ; IHEAP[$84+2]=IHEAP[$85+2]; FHEAP[$84+2]=FHEAP[$85+2]; ;
          var $86=$__y_addr_i35;
          ;
          $__t_addr_i3_i32=$__t_i36;
          var $88=$__t_addr_i3_i32;
          ;
          var $90=$86;
          var $91=$88;
          IHEAP[$90]=IHEAP[$91]; FHEAP[$90]=FHEAP[$91]; ; IHEAP[$90+1]=IHEAP[$91+1]; FHEAP[$90+1]=FHEAP[$91+1]; ; IHEAP[$90+2]=IHEAP[$91+2]; FHEAP[$90+2]=FHEAP[$91+2]; ;
          ;
          ;
          ;
          $__r=1;
          var $95=$__r;
          $retval=$95;
          ;
        }
        else if (__label__ == 8) {

          var $96=$__y_addr;
          ;
          ;
          ;
          $__x_addr_i28=$68;
          $__y_addr_i29=$96;
          var $100=$__x_addr_i28;
          ;
          $__t_addr_i_i27=$100;
          var $102=$__t_addr_i_i27;
          ;
          var $104=$__t_i30;
          var $105=$102;
          IHEAP[$104]=IHEAP[$105]; FHEAP[$104]=FHEAP[$105]; ; IHEAP[$104+1]=IHEAP[$105+1]; FHEAP[$104+1]=FHEAP[$105+1]; ; IHEAP[$104+2]=IHEAP[$105+2]; FHEAP[$104+2]=FHEAP[$105+2]; ;
          var $106=$__x_addr_i28;
          var $107=$__y_addr_i29;
          ;
          $__t_addr_i4_i25=$107;
          var $109=$__t_addr_i4_i25;
          ;
          var $111=$106;
          var $112=$109;
          IHEAP[$111]=IHEAP[$112]; FHEAP[$111]=FHEAP[$112]; ; IHEAP[$111+1]=IHEAP[$112+1]; FHEAP[$111+1]=FHEAP[$112+1]; ; IHEAP[$111+2]=IHEAP[$112+2]; FHEAP[$111+2]=FHEAP[$112+2]; ;
          var $113=$__y_addr_i29;
          ;
          $__t_addr_i3_i26=$__t_i30;
          var $115=$__t_addr_i3_i26;
          ;
          var $117=$113;
          var $118=$115;
          IHEAP[$117]=IHEAP[$118]; FHEAP[$117]=FHEAP[$118]; ; IHEAP[$117+1]=IHEAP[$118+1]; FHEAP[$117+1]=FHEAP[$118+1]; ; IHEAP[$117+2]=IHEAP[$118+2]; FHEAP[$117+2]=FHEAP[$118+2]; ;
          ;
          ;
          ;
          $__r=1;
          var $122=$__c_addr;
          var $123=IHEAP[$122];
          var $124=$__z_addr;
          var $125=$__y_addr;
          var $call10=FUNCTION_TABLE[$123]($124, $125);
          if ($call10) { __label__ = 9;; } else { __label__ = 10;; }
          $if_then11$$if_end12$7: do { 
            if (__label__ == 9) {

              var $126=$__y_addr;
              var $127=$__z_addr;
              ;
              ;
              ;
              $__x_addr_i16=$126;
              $__y_addr_i17=$127;
              var $131=$__x_addr_i16;
              ;
              $__t_addr_i_i15=$131;
              var $133=$__t_addr_i_i15;
              ;
              var $135=$__t_i18;
              var $136=$133;
              IHEAP[$135]=IHEAP[$136]; FHEAP[$135]=FHEAP[$136]; ; IHEAP[$135+1]=IHEAP[$136+1]; FHEAP[$135+1]=FHEAP[$136+1]; ; IHEAP[$135+2]=IHEAP[$136+2]; FHEAP[$135+2]=FHEAP[$136+2]; ;
              var $137=$__x_addr_i16;
              var $138=$__y_addr_i17;
              ;
              $__t_addr_i4_i13=$138;
              var $140=$__t_addr_i4_i13;
              ;
              var $142=$137;
              var $143=$140;
              IHEAP[$142]=IHEAP[$143]; FHEAP[$142]=FHEAP[$143]; ; IHEAP[$142+1]=IHEAP[$143+1]; FHEAP[$142+1]=FHEAP[$143+1]; ; IHEAP[$142+2]=IHEAP[$143+2]; FHEAP[$142+2]=FHEAP[$143+2]; ;
              var $144=$__y_addr_i17;
              ;
              $__t_addr_i3_i14=$__t_i18;
              var $146=$__t_addr_i3_i14;
              ;
              var $148=$144;
              var $149=$146;
              IHEAP[$148]=IHEAP[$149]; FHEAP[$148]=FHEAP[$149]; ; IHEAP[$148+1]=IHEAP[$149+1]; FHEAP[$148+1]=FHEAP[$149+1]; ; IHEAP[$148+2]=IHEAP[$149+2]; FHEAP[$148+2]=FHEAP[$149+2]; ;
              ;
              ;
              ;
              $__r=2;
              ;
            }
          } while(0);

          var $153=$__r;
          $retval=$153;
          ;
        }
      } while(0);
    }
    else if (__label__ == 1) {

      if ($call7) { __label__ = 3;; } else { __label__ = 2;; }
      $if_end$$if_then2$11: do { 
        if (__label__ == 3) {

          var $9=$__y_addr;
          var $10=$__z_addr;
          ;
          ;
          ;
          $__x_addr_i=$9;
          $__y_addr_i=$10;
          var $14=$__x_addr_i;
          ;
          $__t_addr_i_i=$14;
          var $16=$__t_addr_i_i;
          ;
          var $18=$__t_i;
          var $19=$16;
          IHEAP[$18]=IHEAP[$19]; FHEAP[$18]=FHEAP[$19]; ; IHEAP[$18+1]=IHEAP[$19+1]; FHEAP[$18+1]=FHEAP[$19+1]; ; IHEAP[$18+2]=IHEAP[$19+2]; FHEAP[$18+2]=FHEAP[$19+2]; ;
          var $20=$__x_addr_i;
          var $21=$__y_addr_i;
          ;
          $__t_addr_i4_i=$21;
          var $23=$__t_addr_i4_i;
          ;
          var $25=$20;
          var $26=$23;
          IHEAP[$25]=IHEAP[$26]; FHEAP[$25]=FHEAP[$26]; ; IHEAP[$25+1]=IHEAP[$26+1]; FHEAP[$25+1]=FHEAP[$26+1]; ; IHEAP[$25+2]=IHEAP[$26+2]; FHEAP[$25+2]=FHEAP[$26+2]; ;
          var $27=$__y_addr_i;
          ;
          $__t_addr_i3_i=$__t_i;
          var $29=$__t_addr_i3_i;
          ;
          var $31=$27;
          var $32=$29;
          IHEAP[$31]=IHEAP[$32]; FHEAP[$31]=FHEAP[$32]; ; IHEAP[$31+1]=IHEAP[$32+1]; FHEAP[$31+1]=FHEAP[$32+1]; ; IHEAP[$31+2]=IHEAP[$32+2]; FHEAP[$31+2]=FHEAP[$32+2]; ;
          ;
          ;
          ;
          $__r=1;
          var $36=$__c_addr;
          var $37=IHEAP[$36];
          var $38=$__y_addr;
          var $39=$__x_addr;
          var $call3=FUNCTION_TABLE[$37]($38, $39);
          if ($call3) { __label__ = 4;; } else { __label__ = 5;; }
          $if_then4$$if_end5$13: do { 
            if (__label__ == 4) {

              var $40=$__x_addr;
              var $41=$__y_addr;
              ;
              ;
              ;
              $__x_addr_i22=$40;
              $__y_addr_i23=$41;
              var $45=$__x_addr_i22;
              ;
              $__t_addr_i_i21=$45;
              var $47=$__t_addr_i_i21;
              ;
              var $49=$__t_i24;
              var $50=$47;
              IHEAP[$49]=IHEAP[$50]; FHEAP[$49]=FHEAP[$50]; ; IHEAP[$49+1]=IHEAP[$50+1]; FHEAP[$49+1]=FHEAP[$50+1]; ; IHEAP[$49+2]=IHEAP[$50+2]; FHEAP[$49+2]=FHEAP[$50+2]; ;
              var $51=$__x_addr_i22;
              var $52=$__y_addr_i23;
              ;
              $__t_addr_i4_i19=$52;
              var $54=$__t_addr_i4_i19;
              ;
              var $56=$51;
              var $57=$54;
              IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ; IHEAP[$56+2]=IHEAP[$57+2]; FHEAP[$56+2]=FHEAP[$57+2]; ;
              var $58=$__y_addr_i23;
              ;
              $__t_addr_i3_i20=$__t_i24;
              var $60=$__t_addr_i3_i20;
              ;
              var $62=$58;
              var $63=$60;
              IHEAP[$62]=IHEAP[$63]; FHEAP[$62]=FHEAP[$63]; ; IHEAP[$62+1]=IHEAP[$63+1]; FHEAP[$62+1]=FHEAP[$63+1]; ; IHEAP[$62+2]=IHEAP[$63+2]; FHEAP[$62+2]=FHEAP[$63+2]; ;
              ;
              ;
              ;
              $__r=2;
              ;
            }
          } while(0);

          var $67=$__r;
          $retval=$67;
          ;
        }
        else if (__label__ == 2) {

          var $8=$__r;
          $retval=$8;
          ;
        }
      } while(0);
    }
  } while(0);

  var $154=$retval;
  STACKTOP = __stackBase__;
  return $154;
  return null;
}
__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_["X"]=1;

function __ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($__x1, $__x2, $__x3, $__x4, $__c) {
  var __stackBase__  = STACKTOP; STACKTOP += 9;
  var __label__;

  var $__t_addr_i4_i16;
  var $__t_addr_i3_i17;
  var $__t_addr_i_i18;
  var $__x_addr_i19;
  var $__y_addr_i20;
  var $__t_i21=__stackBase__;
  var $__t_addr_i4_i10;
  var $__t_addr_i3_i11;
  var $__t_addr_i_i12;
  var $__x_addr_i13;
  var $__y_addr_i14;
  var $__t_i15=__stackBase__+3;
  var $__t_addr_i4_i;
  var $__t_addr_i3_i;
  var $__t_addr_i_i;
  var $__x_addr_i;
  var $__y_addr_i;
  var $__t_i=__stackBase__+6;
  var $__x1_addr;
  var $__x2_addr;
  var $__x3_addr;
  var $__x4_addr;
  var $__c_addr;
  var $__r;
  $__x1_addr=$__x1;
  $__x2_addr=$__x2;
  $__x3_addr=$__x3;
  $__x4_addr=$__x4;
  $__c_addr=$__c;
  var $0=$__x1_addr;
  var $1=$__x2_addr;
  var $2=$__x3_addr;
  var $3=$__c_addr;
  var $call=__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($0, $1, $2, $3);
  $__r=$call;
  var $4=$__c_addr;
  var $5=IHEAP[$4];
  var $6=$__x4_addr;
  var $7=$__x3_addr;
  var $call1=FUNCTION_TABLE[$5]($6, $7);
  if ($call1) { __label__ = 1;; } else { __label__ = 4;; }
  $if_then$$if_end9$19: do { 
    if (__label__ == 1) {

      var $8=$__x3_addr;
      var $9=$__x4_addr;
      ;
      ;
      ;
      $__x_addr_i=$8;
      $__y_addr_i=$9;
      var $13=$__x_addr_i;
      ;
      $__t_addr_i_i=$13;
      var $15=$__t_addr_i_i;
      ;
      var $17=$__t_i;
      var $18=$15;
      IHEAP[$17]=IHEAP[$18]; FHEAP[$17]=FHEAP[$18]; ; IHEAP[$17+1]=IHEAP[$18+1]; FHEAP[$17+1]=FHEAP[$18+1]; ; IHEAP[$17+2]=IHEAP[$18+2]; FHEAP[$17+2]=FHEAP[$18+2]; ;
      var $19=$__x_addr_i;
      var $20=$__y_addr_i;
      ;
      $__t_addr_i4_i=$20;
      var $22=$__t_addr_i4_i;
      ;
      var $24=$19;
      var $25=$22;
      IHEAP[$24]=IHEAP[$25]; FHEAP[$24]=FHEAP[$25]; ; IHEAP[$24+1]=IHEAP[$25+1]; FHEAP[$24+1]=FHEAP[$25+1]; ; IHEAP[$24+2]=IHEAP[$25+2]; FHEAP[$24+2]=FHEAP[$25+2]; ;
      var $26=$__y_addr_i;
      ;
      $__t_addr_i3_i=$__t_i;
      var $28=$__t_addr_i3_i;
      ;
      var $30=$26;
      var $31=$28;
      IHEAP[$30]=IHEAP[$31]; FHEAP[$30]=FHEAP[$31]; ; IHEAP[$30+1]=IHEAP[$31+1]; FHEAP[$30+1]=FHEAP[$31+1]; ; IHEAP[$30+2]=IHEAP[$31+2]; FHEAP[$30+2]=FHEAP[$31+2]; ;
      ;
      ;
      ;
      var $35=$__r;
      var $inc=($35)+1;
      $__r=$inc;
      var $36=$__c_addr;
      var $37=IHEAP[$36];
      var $38=$__x3_addr;
      var $39=$__x2_addr;
      var $call2=FUNCTION_TABLE[$37]($38, $39);
      if (!($call2)) { __label__ = 4;break $if_then$$if_end9$19; }

      var $40=$__x2_addr;
      var $41=$__x3_addr;
      ;
      ;
      ;
      $__x_addr_i19=$40;
      $__y_addr_i20=$41;
      var $45=$__x_addr_i19;
      ;
      $__t_addr_i_i18=$45;
      var $47=$__t_addr_i_i18;
      ;
      var $49=$__t_i21;
      var $50=$47;
      IHEAP[$49]=IHEAP[$50]; FHEAP[$49]=FHEAP[$50]; ; IHEAP[$49+1]=IHEAP[$50+1]; FHEAP[$49+1]=FHEAP[$50+1]; ; IHEAP[$49+2]=IHEAP[$50+2]; FHEAP[$49+2]=FHEAP[$50+2]; ;
      var $51=$__x_addr_i19;
      var $52=$__y_addr_i20;
      ;
      $__t_addr_i4_i16=$52;
      var $54=$__t_addr_i4_i16;
      ;
      var $56=$51;
      var $57=$54;
      IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ; IHEAP[$56+2]=IHEAP[$57+2]; FHEAP[$56+2]=FHEAP[$57+2]; ;
      var $58=$__y_addr_i20;
      ;
      $__t_addr_i3_i17=$__t_i21;
      var $60=$__t_addr_i3_i17;
      ;
      var $62=$58;
      var $63=$60;
      IHEAP[$62]=IHEAP[$63]; FHEAP[$62]=FHEAP[$63]; ; IHEAP[$62+1]=IHEAP[$63+1]; FHEAP[$62+1]=FHEAP[$63+1]; ; IHEAP[$62+2]=IHEAP[$63+2]; FHEAP[$62+2]=FHEAP[$63+2]; ;
      ;
      ;
      ;
      var $67=$__r;
      var $inc4=($67)+1;
      $__r=$inc4;
      var $68=$__c_addr;
      var $69=IHEAP[$68];
      var $70=$__x2_addr;
      var $71=$__x1_addr;
      var $call5=FUNCTION_TABLE[$69]($70, $71);
      if (!($call5)) { __label__ = 4;break $if_then$$if_end9$19; }

      var $72=$__x1_addr;
      var $73=$__x2_addr;
      ;
      ;
      ;
      $__x_addr_i13=$72;
      $__y_addr_i14=$73;
      var $77=$__x_addr_i13;
      ;
      $__t_addr_i_i12=$77;
      var $79=$__t_addr_i_i12;
      ;
      var $81=$__t_i15;
      var $82=$79;
      IHEAP[$81]=IHEAP[$82]; FHEAP[$81]=FHEAP[$82]; ; IHEAP[$81+1]=IHEAP[$82+1]; FHEAP[$81+1]=FHEAP[$82+1]; ; IHEAP[$81+2]=IHEAP[$82+2]; FHEAP[$81+2]=FHEAP[$82+2]; ;
      var $83=$__x_addr_i13;
      var $84=$__y_addr_i14;
      ;
      $__t_addr_i4_i10=$84;
      var $86=$__t_addr_i4_i10;
      ;
      var $88=$83;
      var $89=$86;
      IHEAP[$88]=IHEAP[$89]; FHEAP[$88]=FHEAP[$89]; ; IHEAP[$88+1]=IHEAP[$89+1]; FHEAP[$88+1]=FHEAP[$89+1]; ; IHEAP[$88+2]=IHEAP[$89+2]; FHEAP[$88+2]=FHEAP[$89+2]; ;
      var $90=$__y_addr_i14;
      ;
      $__t_addr_i3_i11=$__t_i15;
      var $92=$__t_addr_i3_i11;
      ;
      var $94=$90;
      var $95=$92;
      IHEAP[$94]=IHEAP[$95]; FHEAP[$94]=FHEAP[$95]; ; IHEAP[$94+1]=IHEAP[$95+1]; FHEAP[$94+1]=FHEAP[$95+1]; ; IHEAP[$94+2]=IHEAP[$95+2]; FHEAP[$94+2]=FHEAP[$95+2]; ;
      ;
      ;
      ;
      var $99=$__r;
      var $inc7=($99)+1;
      $__r=$inc7;
      ;
    }
  } while(0);

  var $100=$__r;
  STACKTOP = __stackBase__;
  return $100;
  return null;
}
__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_["X"]=1;

function __ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($__x1, $__x2, $__x3, $__x4, $__x5, $__c) {
  var __stackBase__  = STACKTOP; STACKTOP += 12;
  var __label__;

  var $__t_addr_i4_i26;
  var $__t_addr_i3_i27;
  var $__t_addr_i_i28;
  var $__x_addr_i29;
  var $__y_addr_i30;
  var $__t_i31=__stackBase__;
  var $__t_addr_i4_i20;
  var $__t_addr_i3_i21;
  var $__t_addr_i_i22;
  var $__x_addr_i23;
  var $__y_addr_i24;
  var $__t_i25=__stackBase__+3;
  var $__t_addr_i4_i14;
  var $__t_addr_i3_i15;
  var $__t_addr_i_i16;
  var $__x_addr_i17;
  var $__y_addr_i18;
  var $__t_i19=__stackBase__+6;
  var $__t_addr_i4_i;
  var $__t_addr_i3_i;
  var $__t_addr_i_i;
  var $__x_addr_i;
  var $__y_addr_i;
  var $__t_i=__stackBase__+9;
  var $__x1_addr;
  var $__x2_addr;
  var $__x3_addr;
  var $__x4_addr;
  var $__x5_addr;
  var $__c_addr;
  var $__r;
  $__x1_addr=$__x1;
  $__x2_addr=$__x2;
  $__x3_addr=$__x3;
  $__x4_addr=$__x4;
  $__x5_addr=$__x5;
  $__c_addr=$__c;
  var $0=$__x1_addr;
  var $1=$__x2_addr;
  var $2=$__x3_addr;
  var $3=$__x4_addr;
  var $4=$__c_addr;
  var $call=__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($0, $1, $2, $3, $4);
  $__r=$call;
  var $5=$__c_addr;
  var $6=IHEAP[$5];
  var $7=$__x5_addr;
  var $8=$__x4_addr;
  var $call1=FUNCTION_TABLE[$6]($7, $8);
  if ($call1) { __label__ = 1;; } else { __label__ = 5;; }
  $if_then$$if_end13$25: do { 
    if (__label__ == 1) {

      var $9=$__x4_addr;
      var $10=$__x5_addr;
      ;
      ;
      ;
      $__x_addr_i=$9;
      $__y_addr_i=$10;
      var $14=$__x_addr_i;
      ;
      $__t_addr_i_i=$14;
      var $16=$__t_addr_i_i;
      ;
      var $18=$__t_i;
      var $19=$16;
      IHEAP[$18]=IHEAP[$19]; FHEAP[$18]=FHEAP[$19]; ; IHEAP[$18+1]=IHEAP[$19+1]; FHEAP[$18+1]=FHEAP[$19+1]; ; IHEAP[$18+2]=IHEAP[$19+2]; FHEAP[$18+2]=FHEAP[$19+2]; ;
      var $20=$__x_addr_i;
      var $21=$__y_addr_i;
      ;
      $__t_addr_i4_i=$21;
      var $23=$__t_addr_i4_i;
      ;
      var $25=$20;
      var $26=$23;
      IHEAP[$25]=IHEAP[$26]; FHEAP[$25]=FHEAP[$26]; ; IHEAP[$25+1]=IHEAP[$26+1]; FHEAP[$25+1]=FHEAP[$26+1]; ; IHEAP[$25+2]=IHEAP[$26+2]; FHEAP[$25+2]=FHEAP[$26+2]; ;
      var $27=$__y_addr_i;
      ;
      $__t_addr_i3_i=$__t_i;
      var $29=$__t_addr_i3_i;
      ;
      var $31=$27;
      var $32=$29;
      IHEAP[$31]=IHEAP[$32]; FHEAP[$31]=FHEAP[$32]; ; IHEAP[$31+1]=IHEAP[$32+1]; FHEAP[$31+1]=FHEAP[$32+1]; ; IHEAP[$31+2]=IHEAP[$32+2]; FHEAP[$31+2]=FHEAP[$32+2]; ;
      ;
      ;
      ;
      var $36=$__r;
      var $inc=($36)+1;
      $__r=$inc;
      var $37=$__c_addr;
      var $38=IHEAP[$37];
      var $39=$__x4_addr;
      var $40=$__x3_addr;
      var $call2=FUNCTION_TABLE[$38]($39, $40);
      if (!($call2)) { __label__ = 5;break $if_then$$if_end13$25; }

      var $41=$__x3_addr;
      var $42=$__x4_addr;
      ;
      ;
      ;
      $__x_addr_i23=$41;
      $__y_addr_i24=$42;
      var $46=$__x_addr_i23;
      ;
      $__t_addr_i_i22=$46;
      var $48=$__t_addr_i_i22;
      ;
      var $50=$__t_i25;
      var $51=$48;
      IHEAP[$50]=IHEAP[$51]; FHEAP[$50]=FHEAP[$51]; ; IHEAP[$50+1]=IHEAP[$51+1]; FHEAP[$50+1]=FHEAP[$51+1]; ; IHEAP[$50+2]=IHEAP[$51+2]; FHEAP[$50+2]=FHEAP[$51+2]; ;
      var $52=$__x_addr_i23;
      var $53=$__y_addr_i24;
      ;
      $__t_addr_i4_i20=$53;
      var $55=$__t_addr_i4_i20;
      ;
      var $57=$52;
      var $58=$55;
      IHEAP[$57]=IHEAP[$58]; FHEAP[$57]=FHEAP[$58]; ; IHEAP[$57+1]=IHEAP[$58+1]; FHEAP[$57+1]=FHEAP[$58+1]; ; IHEAP[$57+2]=IHEAP[$58+2]; FHEAP[$57+2]=FHEAP[$58+2]; ;
      var $59=$__y_addr_i24;
      ;
      $__t_addr_i3_i21=$__t_i25;
      var $61=$__t_addr_i3_i21;
      ;
      var $63=$59;
      var $64=$61;
      IHEAP[$63]=IHEAP[$64]; FHEAP[$63]=FHEAP[$64]; ; IHEAP[$63+1]=IHEAP[$64+1]; FHEAP[$63+1]=FHEAP[$64+1]; ; IHEAP[$63+2]=IHEAP[$64+2]; FHEAP[$63+2]=FHEAP[$64+2]; ;
      ;
      ;
      ;
      var $68=$__r;
      var $inc4=($68)+1;
      $__r=$inc4;
      var $69=$__c_addr;
      var $70=IHEAP[$69];
      var $71=$__x3_addr;
      var $72=$__x2_addr;
      var $call5=FUNCTION_TABLE[$70]($71, $72);
      if (!($call5)) { __label__ = 5;break $if_then$$if_end13$25; }

      var $73=$__x2_addr;
      var $74=$__x3_addr;
      ;
      ;
      ;
      $__x_addr_i29=$73;
      $__y_addr_i30=$74;
      var $78=$__x_addr_i29;
      ;
      $__t_addr_i_i28=$78;
      var $80=$__t_addr_i_i28;
      ;
      var $82=$__t_i31;
      var $83=$80;
      IHEAP[$82]=IHEAP[$83]; FHEAP[$82]=FHEAP[$83]; ; IHEAP[$82+1]=IHEAP[$83+1]; FHEAP[$82+1]=FHEAP[$83+1]; ; IHEAP[$82+2]=IHEAP[$83+2]; FHEAP[$82+2]=FHEAP[$83+2]; ;
      var $84=$__x_addr_i29;
      var $85=$__y_addr_i30;
      ;
      $__t_addr_i4_i26=$85;
      var $87=$__t_addr_i4_i26;
      ;
      var $89=$84;
      var $90=$87;
      IHEAP[$89]=IHEAP[$90]; FHEAP[$89]=FHEAP[$90]; ; IHEAP[$89+1]=IHEAP[$90+1]; FHEAP[$89+1]=FHEAP[$90+1]; ; IHEAP[$89+2]=IHEAP[$90+2]; FHEAP[$89+2]=FHEAP[$90+2]; ;
      var $91=$__y_addr_i30;
      ;
      $__t_addr_i3_i27=$__t_i31;
      var $93=$__t_addr_i3_i27;
      ;
      var $95=$91;
      var $96=$93;
      IHEAP[$95]=IHEAP[$96]; FHEAP[$95]=FHEAP[$96]; ; IHEAP[$95+1]=IHEAP[$96+1]; FHEAP[$95+1]=FHEAP[$96+1]; ; IHEAP[$95+2]=IHEAP[$96+2]; FHEAP[$95+2]=FHEAP[$96+2]; ;
      ;
      ;
      ;
      var $100=$__r;
      var $inc7=($100)+1;
      $__r=$inc7;
      var $101=$__c_addr;
      var $102=IHEAP[$101];
      var $103=$__x2_addr;
      var $104=$__x1_addr;
      var $call8=FUNCTION_TABLE[$102]($103, $104);
      if (!($call8)) { __label__ = 5;break $if_then$$if_end13$25; }

      var $105=$__x1_addr;
      var $106=$__x2_addr;
      ;
      ;
      ;
      $__x_addr_i17=$105;
      $__y_addr_i18=$106;
      var $110=$__x_addr_i17;
      ;
      $__t_addr_i_i16=$110;
      var $112=$__t_addr_i_i16;
      ;
      var $114=$__t_i19;
      var $115=$112;
      IHEAP[$114]=IHEAP[$115]; FHEAP[$114]=FHEAP[$115]; ; IHEAP[$114+1]=IHEAP[$115+1]; FHEAP[$114+1]=FHEAP[$115+1]; ; IHEAP[$114+2]=IHEAP[$115+2]; FHEAP[$114+2]=FHEAP[$115+2]; ;
      var $116=$__x_addr_i17;
      var $117=$__y_addr_i18;
      ;
      $__t_addr_i4_i14=$117;
      var $119=$__t_addr_i4_i14;
      ;
      var $121=$116;
      var $122=$119;
      IHEAP[$121]=IHEAP[$122]; FHEAP[$121]=FHEAP[$122]; ; IHEAP[$121+1]=IHEAP[$122+1]; FHEAP[$121+1]=FHEAP[$122+1]; ; IHEAP[$121+2]=IHEAP[$122+2]; FHEAP[$121+2]=FHEAP[$122+2]; ;
      var $123=$__y_addr_i18;
      ;
      $__t_addr_i3_i15=$__t_i19;
      var $125=$__t_addr_i3_i15;
      ;
      var $127=$123;
      var $128=$125;
      IHEAP[$127]=IHEAP[$128]; FHEAP[$127]=FHEAP[$128]; ; IHEAP[$127+1]=IHEAP[$128+1]; FHEAP[$127+1]=FHEAP[$128+1]; ; IHEAP[$127+2]=IHEAP[$128+2]; FHEAP[$127+2]=FHEAP[$128+2]; ;
      ;
      ;
      ;
      var $132=$__r;
      var $inc10=($132)+1;
      $__r=$inc10;
      ;
    }
  } while(0);

  var $133=$__r;
  STACKTOP = __stackBase__;
  return $133;
  return null;
}
__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_["X"]=1;

function __ZNSt3__118__insertion_sort_3IRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($__first, $__last, $__comp) {
  var __stackBase__  = STACKTOP; STACKTOP += 3;
  var __label__;

  var $__t_addr_i11;
  var $__t_addr_i10;
  var $__t_addr_i;
  var $__first_addr;
  var $__last_addr;
  var $__comp_addr;
  var $__j;
  var $__i;
  var $__t=__stackBase__;
  var $__k;
  $__first_addr=$__first;
  $__last_addr=$__last;
  $__comp_addr=$__comp;
  var $0=$__first_addr;
  var $add_ptr=$0+6;
  $__j=$add_ptr;
  var $1=$__first_addr;
  var $2=$__first_addr;
  var $add_ptr1=$2+3;
  var $3=$__j;
  var $4=$__comp_addr;
  var $call=__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($1, $add_ptr1, $3, $4);
  var $5=$__j;
  var $add_ptr2=$5+3;
  $__i=$add_ptr2;
  var $6=$__i;
  var $7=$__last_addr;
  var $cmp1=($6)!=($7);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 8;; }
  $for_body_lr_ph$$for_end$32: do { 
    if (__label__ == 1) {

      ;
      ;
      var $10=$__t;
      ;
      ;
      ;
      ;
      ;
      $for_body$34: while(1) { 

        var $15=$__comp_addr;
        var $16=IHEAP[$15];
        var $17=$__i;
        var $18=$__j;
        var $call3=FUNCTION_TABLE[$16]($17, $18);
        if ($call3) { __label__ = 3;; } else { __label__ = 7;; }
        $if_then$$if_end$36: do { 
          if (__label__ == 3) {

            var $19=$__i;
            $__t_addr_i=$19;
            var $20=$__t_addr_i;
            var $21=$20;
            IHEAP[$10]=IHEAP[$21]; FHEAP[$10]=FHEAP[$21]; ; IHEAP[$10+1]=IHEAP[$21+1]; FHEAP[$10+1]=FHEAP[$21+1]; ; IHEAP[$10+2]=IHEAP[$21+2]; FHEAP[$10+2]=FHEAP[$21+2]; ;
            var $22=$__j;
            $__k=$22;
            var $23=$__i;
            $__j=$23;
            ;
            $do_body$38: while(1) { 

              var $24=$__j;
              var $25=$__k;
              $__t_addr_i11=$25;
              var $26=$__t_addr_i11;
              var $27=$24;
              var $28=$26;
              IHEAP[$27]=IHEAP[$28]; FHEAP[$27]=FHEAP[$28]; ; IHEAP[$27+1]=IHEAP[$28+1]; FHEAP[$27+1]=FHEAP[$28+1]; ; IHEAP[$27+2]=IHEAP[$28+2]; FHEAP[$27+2]=FHEAP[$28+2]; ;
              var $29=$__k;
              $__j=$29;
              var $30=$__j;
              var $31=$__first_addr;
              var $cmp6=($30)!=($31);
              if (!($cmp6)) { __label__ = 6;break $do_body$38; }

              var $32=$__comp_addr;
              var $33=IHEAP[$32];
              var $34=$__k;
              var $incdec_ptr=$34-3;
              $__k=$incdec_ptr;
              var $call7=FUNCTION_TABLE[$33]($__t, $incdec_ptr);
              if (!($call7)) { __label__ = 6;break $do_body$38; }
            }

            var $35=$__j;
            $__t_addr_i10=$__t;
            var $36=$__t_addr_i10;
            var $37=$35;
            var $38=$36;
            IHEAP[$37]=IHEAP[$38]; FHEAP[$37]=FHEAP[$38]; ; IHEAP[$37+1]=IHEAP[$38+1]; FHEAP[$37+1]=FHEAP[$38+1]; ; IHEAP[$37+2]=IHEAP[$38+2]; FHEAP[$37+2]=FHEAP[$38+2]; ;
            ;
          }
        } while(0);

        var $39=$__i;
        $__j=$39;
        var $40=$__i;
        var $incdec_ptr9=$40+3;
        $__i=$incdec_ptr9;
        var $41=$__i;
        var $42=$__last_addr;
        var $cmp=($41)!=($42);
        if (!($cmp)) { __label__ = 8;break $for_body_lr_ph$$for_end$32; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNSt3__118__insertion_sort_3IRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_["X"]=1;
//   ptrtoint on .ll line 14869
//   ptrtoint on .ll line 14870

function __ZN17b2ContactListenerD2Ev($this) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN17b2ContactListener12BeginContactEP9b2Contact($this, $contact) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN17b2ContactListener10EndContactEP9b2Contact($this, $contact) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN17b2ContactListener8PreSolveEP9b2ContactPK10b2Manifold($this, $contact, $oldManifold) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN17b2ContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse($this, $contact, $impulse) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN15b2ContactFilterD2Ev($this) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __GLOBAL__I_a() {
  ;
  var __label__;

  ___cxx_global_var_init();
  ___cxx_global_var_init1();
  ;
  return;
  return;
}


function __ZN15b2GrowableStackIiLi256EEC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2GrowableStackIiLi256EEC2Ev($this1);
  ;
  return;
  return;
}


function __ZN15b2GrowableStackIiLi256EED1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2GrowableStackIiLi256EED2Ev($this1);
  ;
  return;
  return;
}


function __ZN17b2ContactListenerC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  IHEAP[$0]=__ZTV17b2ContactListener+2;
  ;
  return;
  return;
}


function __ZN17b2ContactListenerD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN17b2ContactListenerD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN15b2ContactFilterC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  IHEAP[$0]=__ZTV15b2ContactFilter+2;
  ;
  return;
  return;
}


function __ZN15b2GrowableStackIiLi256EE8GetCountEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_count=$this1+257;
  var $0=IHEAP[$m_count];
  ;
  return $0;
  return null;
}


function __ZN15b2GrowableStackIiLi256EE3PopEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_count=$this1+257;
  var $0=IHEAP[$m_count];
  var $cmp=($0) > 0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$34: do { 
    if (__label__ == 1) {

      ___assert_func(__str371, 67, ___PRETTY_FUNCTION____ZN15b2GrowableStackIiLi256EE3PopEv, __str472);
      ;
    }
  } while(0);

  var $m_count2=$this1+257;
  var $1=IHEAP[$m_count2];
  var $dec=($1)-1;
  IHEAP[$m_count2]=$dec;
  var $m_count3=$this1+257;
  var $2=IHEAP[$m_count3];
  var $m_stack=$this1;
  var $3=IHEAP[$m_stack];
  var $arrayidx=$3+$2;
  var $4=IHEAP[$arrayidx];
  ;
  return $4;
  return null;
}


function __Z13b2TestOverlapRK6b2AABBS1_($a, $b) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $retval;
  var $a_addr;
  var $b_addr;
  var $d1=__stackBase__;
  var $d2=__stackBase__+2;
  var $ref_tmp=__stackBase__+4;
  var $ref_tmp1=__stackBase__+6;
  $a_addr=$a;
  $b_addr=$b;
  __ZN6b2Vec2C1Ev($d1);
  __ZN6b2Vec2C1Ev($d2);
  var $0=$b_addr;
  var $lowerBound=$0;
  var $1=$a_addr;
  var $upperBound=$1+2;
  __ZmiRK6b2Vec2S1_($ref_tmp, $lowerBound, $upperBound);
  var $2=$d1;
  var $3=$ref_tmp;
  IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
  var $4=$a_addr;
  var $lowerBound2=$4;
  var $5=$b_addr;
  var $upperBound3=$5+2;
  __ZmiRK6b2Vec2S1_($ref_tmp1, $lowerBound2, $upperBound3);
  var $6=$d2;
  var $7=$ref_tmp1;
  IHEAP[$6]=IHEAP[$7]; FHEAP[$6]=FHEAP[$7]; ; IHEAP[$6+1]=IHEAP[$7+1]; FHEAP[$6+1]=FHEAP[$7+1]; ;
  var $x=$d1;
  var $8=FHEAP[$x];
  var $cmp=($8) > 0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $if_then$$lor_lhs_false$38: do { 
    if (__label__ == 1) {

      var $y=$d1+1;
      var $9=FHEAP[$y];
      var $cmp4=($9) > 0;
      if ($cmp4) { __label__ = 2;break $if_then$$lor_lhs_false$38; }

      var $x5=$d2;
      var $10=FHEAP[$x5];
      var $cmp6=($10) > 0;
      if ($cmp6) { __label__ = 5;; } else { __label__ = 4;; }
      $if_then10$$lor_lhs_false7$41: do { 
        if (__label__ == 4) {

          var $y8=$d2+1;
          var $11=FHEAP[$y8];
          var $cmp9=($11) > 0;
          if ($cmp9) { __label__ = 5;break $if_then10$$lor_lhs_false7$41; }

          $retval=1;
          __label__ = 7;break $if_then$$lor_lhs_false$38;
        }
      } while(0);

      $retval=0;
      __label__ = 7;break $if_then$$lor_lhs_false$38;
    }
  } while(0);
  $if_then$$return$45: do { 
    if (__label__ == 2) {

      $retval=0;
      ;
    }
  } while(0);

  var $12=$retval;
  STACKTOP = __stackBase__;
  return $12;
  return null;
}
__Z13b2TestOverlapRK6b2AABBS1_["X"]=1;

function __ZNK10b2TreeNode6IsLeafEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $child1=$this1+6;
  var $0=IHEAP[$child1];
  var $cmp=($0)==-1;
  ;
  return $cmp;
  return null;
}


function __ZN15b2GrowableStackIiLi256EED2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_stack=$this1;
  var $0=IHEAP[$m_stack];
  var $m_array=$this1+1;
  var $arraydecay=$m_array;
  var $cmp=($0)!=($arraydecay);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$51: do { 
    if (__label__ == 1) {

      var $m_stack2=$this1;
      var $1=IHEAP[$m_stack2];
      var $2=$1;
      __Z6b2FreePv($2);
      var $m_stack3=$this1;
      IHEAP[$m_stack3]=0;
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN15b2GrowableStackIiLi256EEC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_array=$this1+1;
  var $arraydecay=$m_array;
  var $m_stack=$this1;
  IHEAP[$m_stack]=$arraydecay;
  var $m_count=$this1+257;
  IHEAP[$m_count]=0;
  var $m_capacity=$this1+258;
  IHEAP[$m_capacity]=256;
  ;
  return;
  return;
}


function __ZN9b2Contact11GetManifoldEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_manifold=$this1+16;
  ;
  return $m_manifold;
  return null;
}


function __ZN7b2Mat227SetZeroEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $ex=$this1;
  var $x=$ex;
  FHEAP[$x]=0;
  var $ey=$this1+2;
  var $x2=$ey;
  FHEAP[$x2]=0;
  var $ex3=$this1;
  var $y=$ex3+1;
  FHEAP[$y]=0;
  var $ey4=$this1+2;
  var $y5=$ey4+1;
  FHEAP[$y5]=0;
  ;
  return;
  return;
}


function __ZN15b2ContactSolverD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_allocator=$this1+8;
  var $0=IHEAP[$m_allocator];
  var $m_velocityConstraints=$this1+10;
  var $1=IHEAP[$m_velocityConstraints];
  var $2=$1;
  __ZN16b2StackAllocator4FreeEPv($0, $2);
  var $m_allocator2=$this1+8;
  var $3=IHEAP[$m_allocator2];
  var $m_positionConstraints=$this1+9;
  var $4=IHEAP[$m_positionConstraints];
  var $5=$4;
  __ZN16b2StackAllocator4FreeEPv($3, $5);
  ;
  return;
  return;
}


function __ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_($__first, $__last, $__comp) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $__t_addr_i36;
  var $__t_addr_i35;
  var $__t_addr_i;
  var $__t_addr_i4_i;
  var $__t_addr_i3_i;
  var $__t_addr_i_i;
  var $__x_addr_i;
  var $__y_addr_i;
  var $__t_i=__stackBase__;
  var $retval;
  var $__first_addr;
  var $__last_addr;
  var $__comp_addr;
  var $__j;
  var $__limit;
  var $__count;
  var $__i;
  var $__t=__stackBase__+3;
  var $__k;
  $__first_addr=$__first;
  $__last_addr=$__last;
  $__comp_addr=$__comp;
  var $0=$__last_addr;
  var $1=$__first_addr;
  var $sub_ptr_lhs_cast=($0) /* Warning: ptrtoint, .ll line 14869 */;
  var $sub_ptr_rhs_cast=($1) /* Warning: ptrtoint, .ll line 14870 */;
  var $sub_ptr_sub=($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast);
  var $sub_ptr_div=((($sub_ptr_sub)/12)|0);
  if ($sub_ptr_div == 0) {
    __label__ = 1;;
  }
  else if ($sub_ptr_div == 1) {
    __label__ = 1;;
  }
  else if ($sub_ptr_div == 2) {
    __label__ = 2;;
  }
  else if ($sub_ptr_div == 3) {
    __label__ = 5;;
  }
  else if ($sub_ptr_div == 4) {
    __label__ = 6;;
  }
  else if ($sub_ptr_div == 5) {
    __label__ = 7;;
  }
  else {
  __label__ = 8;;
  }
  
  $sw_epilog$$sw_bb$$sw_bb1$$sw_bb2$$sw_bb5$$sw_bb10$2: do { 
    if (__label__ == 8) {

      var $48=$__first_addr;
      var $add_ptr16=$48+6;
      $__j=$add_ptr16;
      var $49=$__first_addr;
      var $50=$__first_addr;
      var $add_ptr17=$50+3;
      var $51=$__j;
      var $52=$__comp_addr;
      var $call18=__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($49, $add_ptr17, $51, $52);
      $__limit=8;
      $__count=0;
      var $53=$__j;
      var $add_ptr19=$53+3;
      $__i=$add_ptr19;
      ;
      ;
      var $56=$__t;
      ;
      ;
      ;
      ;
      ;
      $for_cond$4: while(1) { 

        var $61=$__i;
        var $62=$__last_addr;
        var $cmp=($61)!=($62);
        if (!($cmp)) { __label__ = 17;break $for_cond$4; }

        var $63=$__comp_addr;
        var $64=IHEAP[$63];
        var $65=$__i;
        var $66=$__j;
        var $call20=FUNCTION_TABLE[$64]($65, $66);
        if ($call20) { __label__ = 11;; } else { __label__ = 16;; }
        $if_then21$$if_end33$7: do { 
          if (__label__ == 11) {

            var $67=$__i;
            $__t_addr_i35=$67;
            var $68=$__t_addr_i35;
            var $69=$68;
            IHEAP[$56]=IHEAP[$69]; FHEAP[$56]=FHEAP[$69]; ; IHEAP[$56+1]=IHEAP[$69+1]; FHEAP[$56+1]=FHEAP[$69+1]; ; IHEAP[$56+2]=IHEAP[$69+2]; FHEAP[$56+2]=FHEAP[$69+2]; ;
            var $70=$__j;
            $__k=$70;
            var $71=$__i;
            $__j=$71;
            ;
            $do_body$9: while(1) { 

              var $72=$__j;
              var $73=$__k;
              $__t_addr_i36=$73;
              var $74=$__t_addr_i36;
              var $75=$72;
              var $76=$74;
              IHEAP[$75]=IHEAP[$76]; FHEAP[$75]=FHEAP[$76]; ; IHEAP[$75+1]=IHEAP[$76+1]; FHEAP[$75+1]=FHEAP[$76+1]; ; IHEAP[$75+2]=IHEAP[$76+2]; FHEAP[$75+2]=FHEAP[$76+2]; ;
              var $77=$__k;
              $__j=$77;
              var $78=$__j;
              var $79=$__first_addr;
              var $cmp24=($78)!=($79);
              if (!($cmp24)) { __label__ = 14;break $do_body$9; }

              var $80=$__comp_addr;
              var $81=IHEAP[$80];
              var $82=$__k;
              var $incdec_ptr25=$82-3;
              $__k=$incdec_ptr25;
              var $call26=FUNCTION_TABLE[$81]($__t, $incdec_ptr25);
              if (!($call26)) { __label__ = 14;break $do_body$9; }
            }

            var $83=$__j;
            $__t_addr_i=$__t;
            var $84=$__t_addr_i;
            var $85=$83;
            var $86=$84;
            IHEAP[$85]=IHEAP[$86]; FHEAP[$85]=FHEAP[$86]; ; IHEAP[$85+1]=IHEAP[$86+1]; FHEAP[$85+1]=FHEAP[$86+1]; ; IHEAP[$85+2]=IHEAP[$86+2]; FHEAP[$85+2]=FHEAP[$86+2]; ;
            var $87=$__count;
            var $inc=($87)+1;
            $__count=$inc;
            var $cmp28=($inc)==8;
            if ($cmp28) { __label__ = 15;break $for_cond$4; }
          }
        } while(0);

        var $90=$__i;
        $__j=$90;
        var $91=$__i;
        var $incdec_ptr34=$91+3;
        $__i=$incdec_ptr34;
        ;
      }
      $for_end$$if_then29$14: do { 
        if (__label__ == 17) {

          $retval=1;
          ;
        }
        else if (__label__ == 15) {

          var $88=$__i;
          var $incdec_ptr30=$88+3;
          $__i=$incdec_ptr30;
          var $89=$__last_addr;
          var $cmp31=($incdec_ptr30)==($89);
          $retval=$cmp31;
          ;
        }
      } while(0);
    }
    else if (__label__ == 1) {

      $retval=1;
      ;
    }
    else if (__label__ == 2) {

      var $2=$__comp_addr;
      var $3=IHEAP[$2];
      var $4=$__last_addr;
      var $incdec_ptr=$4-3;
      $__last_addr=$incdec_ptr;
      var $5=$__first_addr;
      var $call=FUNCTION_TABLE[$3]($incdec_ptr, $5);
      if ($call) { __label__ = 3;; } else { __label__ = 4;; }
      $if_then$$if_end$19: do { 
        if (__label__ == 3) {

          var $6=$__first_addr;
          var $7=$__last_addr;
          ;
          ;
          ;
          $__x_addr_i=$6;
          $__y_addr_i=$7;
          var $11=$__x_addr_i;
          ;
          $__t_addr_i_i=$11;
          var $13=$__t_addr_i_i;
          ;
          var $15=$__t_i;
          var $16=$13;
          IHEAP[$15]=IHEAP[$16]; FHEAP[$15]=FHEAP[$16]; ; IHEAP[$15+1]=IHEAP[$16+1]; FHEAP[$15+1]=FHEAP[$16+1]; ; IHEAP[$15+2]=IHEAP[$16+2]; FHEAP[$15+2]=FHEAP[$16+2]; ;
          var $17=$__x_addr_i;
          var $18=$__y_addr_i;
          ;
          $__t_addr_i4_i=$18;
          var $20=$__t_addr_i4_i;
          ;
          var $22=$17;
          var $23=$20;
          IHEAP[$22]=IHEAP[$23]; FHEAP[$22]=FHEAP[$23]; ; IHEAP[$22+1]=IHEAP[$23+1]; FHEAP[$22+1]=FHEAP[$23+1]; ; IHEAP[$22+2]=IHEAP[$23+2]; FHEAP[$22+2]=FHEAP[$23+2]; ;
          var $24=$__y_addr_i;
          ;
          $__t_addr_i3_i=$__t_i;
          var $26=$__t_addr_i3_i;
          ;
          var $28=$24;
          var $29=$26;
          IHEAP[$28]=IHEAP[$29]; FHEAP[$28]=FHEAP[$29]; ; IHEAP[$28+1]=IHEAP[$29+1]; FHEAP[$28+1]=FHEAP[$29+1]; ; IHEAP[$28+2]=IHEAP[$29+2]; FHEAP[$28+2]=FHEAP[$29+2]; ;
          ;
          ;
          ;
          ;
        }
      } while(0);

      $retval=1;
      ;
    }
    else if (__label__ == 5) {

      var $33=$__first_addr;
      var $34=$__first_addr;
      var $add_ptr=$34+3;
      var $35=$__last_addr;
      var $incdec_ptr3=$35-3;
      $__last_addr=$incdec_ptr3;
      var $36=$__comp_addr;
      var $call4=__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($33, $add_ptr, $incdec_ptr3, $36);
      $retval=1;
      ;
    }
    else if (__label__ == 6) {

      var $37=$__first_addr;
      var $38=$__first_addr;
      var $add_ptr6=$38+3;
      var $39=$__first_addr;
      var $add_ptr7=$39+6;
      var $40=$__last_addr;
      var $incdec_ptr8=$40-3;
      $__last_addr=$incdec_ptr8;
      var $41=$__comp_addr;
      var $call9=__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($37, $add_ptr6, $add_ptr7, $incdec_ptr8, $41);
      $retval=1;
      ;
    }
    else if (__label__ == 7) {

      var $42=$__first_addr;
      var $43=$__first_addr;
      var $add_ptr11=$43+3;
      var $44=$__first_addr;
      var $add_ptr12=$44+6;
      var $45=$__first_addr;
      var $add_ptr13=$45+9;
      var $46=$__last_addr;
      var $incdec_ptr14=$46-3;
      $__last_addr=$incdec_ptr14;
      var $47=$__comp_addr;
      var $call15=__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($42, $add_ptr11, $add_ptr12, $add_ptr13, $incdec_ptr14, $47);
      $retval=1;
      ;
    }
  } while(0);

  var $92=$retval;
  STACKTOP = __stackBase__;
  return $92;
  return null;
}
__ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_["X"]=1;

function __ZN15b2GrowableStackIiLi256EE4PushERKi($this, $element) {
  ;
  var __label__;

  var $this_addr;
  var $element_addr;
  var $old;
  $this_addr=$this;
  $element_addr=$element;
  var $this1=$this_addr;
  var $m_count=$this1+257;
  var $0=IHEAP[$m_count];
  var $m_capacity=$this1+258;
  var $1=IHEAP[$m_capacity];
  var $cmp=($0)==($1);
  if ($cmp) { __label__ = 1;; } else { __label__ = 3;; }
  $if_then$$if_end11$28: do { 
    if (__label__ == 1) {

      var $m_stack=$this1;
      var $2=IHEAP[$m_stack];
      $old=$2;
      var $m_capacity2=$this1+258;
      var $3=IHEAP[$m_capacity2];
      var $mul=(($3)<<1);
      IHEAP[$m_capacity2]=$mul;
      var $m_capacity3=$this1+258;
      var $4=IHEAP[$m_capacity3];
      var $mul4=(($4)<<2);
      var $call=__Z7b2Alloci($mul4);
      var $5=$call;
      var $m_stack5=$this1;
      IHEAP[$m_stack5]=$5;
      var $m_stack6=$this1;
      var $6=IHEAP[$m_stack6];
      var $7=$6;
      var $8=$old;
      var $9=$8;
      var $m_count7=$this1+257;
      var $10=IHEAP[$m_count7];
      var $mul8=(($10)<<2);
      for (var mcpi_s=$9,mcpi_e=$9+1*($mul8/4),mcpi_d=$7; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
        IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
      };
      var $11=$old;
      var $m_array=$this1+1;
      var $arraydecay=$m_array;
      var $cmp9=($11)!=($arraydecay);
      if (!($cmp9)) { __label__ = 3;break $if_then$$if_end11$28; }

      var $12=$old;
      var $13=$12;
      __Z6b2FreePv($13);
      ;
    }
  } while(0);

  var $14=$element_addr;
  var $15=IHEAP[$14];
  var $m_count12=$this1+257;
  var $16=IHEAP[$m_count12];
  var $m_stack13=$this1;
  var $17=IHEAP[$m_stack13];
  var $arrayidx=$17+$16;
  IHEAP[$arrayidx]=$15;
  var $m_count14=$this1+257;
  var $18=IHEAP[$m_count14];
  var $inc=($18)+1;
  IHEAP[$m_count14]=$inc;
  ;
  return;
  return;
}
__ZN15b2GrowableStackIiLi256EE4PushERKi["X"]=1;

function __ZN15b2ContactSolverC2EP18b2ContactSolverDef($this, $def) {
  ;
  var __label__;

  var $this_addr;
  var $def_addr;
  var $i;
  var $contact;
  var $fixtureA;
  var $fixtureB;
  var $shapeA;
  var $shapeB;
  var $radiusA;
  var $radiusB;
  var $bodyA;
  var $bodyB;
  var $manifold;
  var $pointCount;
  var $vc;
  var $pc;
  var $j;
  var $cp;
  var $vcp;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $m_step2=$this1;
  var $0=$def_addr;
  var $step=$0;
  var $1=$m_step2;
  var $2=$step;
  for (var mcpi_s=$2,mcpi_e=$2+6,mcpi_d=$1; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $3=$def_addr;
  var $allocator=$3+10;
  var $4=IHEAP[$allocator];
  var $m_allocator=$this1+8;
  IHEAP[$m_allocator]=$4;
  var $5=$def_addr;
  var $count=$5+7;
  var $6=IHEAP[$count];
  var $m_count=$this1+12;
  IHEAP[$m_count]=$6;
  var $m_allocator3=$this1+8;
  var $7=IHEAP[$m_allocator3];
  var $m_count4=$this1+12;
  var $8=IHEAP[$m_count4];
  var $mul=($8)*88;
  var $call=__ZN16b2StackAllocator8AllocateEi($7, $mul);
  var $9=$call;
  var $m_positionConstraints=$this1+9;
  IHEAP[$m_positionConstraints]=$9;
  var $m_allocator5=$this1+8;
  var $10=IHEAP[$m_allocator5];
  var $m_count6=$this1+12;
  var $11=IHEAP[$m_count6];
  var $mul7=($11)*152;
  var $call8=__ZN16b2StackAllocator8AllocateEi($10, $mul7);
  var $12=$call8;
  var $m_velocityConstraints=$this1+10;
  IHEAP[$m_velocityConstraints]=$12;
  var $13=$def_addr;
  var $positions=$13+8;
  var $14=IHEAP[$positions];
  var $m_positions=$this1+6;
  IHEAP[$m_positions]=$14;
  var $15=$def_addr;
  var $velocities=$15+9;
  var $16=IHEAP[$velocities];
  var $m_velocities=$this1+7;
  IHEAP[$m_velocities]=$16;
  var $17=$def_addr;
  var $contacts=$17+6;
  var $18=IHEAP[$contacts];
  var $m_contacts=$this1+11;
  IHEAP[$m_contacts]=$18;
  $i=0;
  var $19=$i;
  var $m_count9=$this1+12;
  var $20=IHEAP[$m_count9];
  var $cmp2=($19) < ($20);
  if ($cmp2) { __label__ = 1;; } else { __label__ = 10;; }
  $for_body_lr_ph$$for_end68$66: do { 
    if (__label__ == 1) {

      var $m_contacts10=$this1+11;
      var $m_velocityConstraints19=$this1+10;
      var $m_positionConstraints24=$this1+9;
      var $m_step53=$this1;
      var $warmStarting=$m_step53+5;
      var $m_step54=$this1;
      var $dtRatio=$m_step54+2;
      var $m_step57=$this1;
      var $dtRatio58=$m_step57+2;
      ;
      $for_body$68: while(1) { 

        var $21=$i;
        var $22=IHEAP[$m_contacts10];
        var $arrayidx=$22+$21;
        var $23=IHEAP[$arrayidx];
        $contact=$23;
        var $24=$contact;
        var $m_fixtureA=$24+12;
        var $25=IHEAP[$m_fixtureA];
        $fixtureA=$25;
        var $26=$contact;
        var $m_fixtureB=$26+13;
        var $27=IHEAP[$m_fixtureB];
        $fixtureB=$27;
        var $28=$fixtureA;
        var $call11=__ZN9b2Fixture8GetShapeEv($28);
        $shapeA=$call11;
        var $29=$fixtureB;
        var $call12=__ZN9b2Fixture8GetShapeEv($29);
        $shapeB=$call12;
        var $30=$shapeA;
        var $m_radius=$30+2;
        var $31=FHEAP[$m_radius];
        $radiusA=$31;
        var $32=$shapeB;
        var $m_radius13=$32+2;
        var $33=FHEAP[$m_radius13];
        $radiusB=$33;
        var $34=$fixtureA;
        var $call14=__ZN9b2Fixture7GetBodyEv($34);
        $bodyA=$call14;
        var $35=$fixtureB;
        var $call15=__ZN9b2Fixture7GetBodyEv($35);
        $bodyB=$call15;
        var $36=$contact;
        var $call16=__ZN9b2Contact11GetManifoldEv($36);
        $manifold=$call16;
        var $37=$manifold;
        var $pointCount17=$37+15;
        var $38=IHEAP[$pointCount17];
        $pointCount=$38;
        var $cmp18=($38) > 0;
        if ($cmp18) { __label__ = 4;; } else { __label__ = 3;; }
        $cond_end$$cond_false$70: do { 
          if (__label__ == 3) {

            ___assert_func(__str77, 71, ___PRETTY_FUNCTION____ZN15b2ContactSolverC2EP18b2ContactSolverDef, __str178);
            ;
          }
        } while(0);

        var $39=IHEAP[$m_velocityConstraints19];
        var $40=$i;
        var $add_ptr=$39+$40*38;
        $vc=$add_ptr;
        var $41=$contact;
        var $m_friction=$41+34;
        var $42=FHEAP[$m_friction];
        var $43=$vc;
        var $friction=$43+34;
        FHEAP[$friction]=$42;
        var $44=$contact;
        var $m_restitution=$44+35;
        var $45=FHEAP[$m_restitution];
        var $46=$vc;
        var $restitution=$46+35;
        FHEAP[$restitution]=$45;
        var $47=$bodyA;
        var $m_islandIndex=$47+2;
        var $48=IHEAP[$m_islandIndex];
        var $49=$vc;
        var $indexA=$49+28;
        IHEAP[$indexA]=$48;
        var $50=$bodyB;
        var $m_islandIndex20=$50+2;
        var $51=IHEAP[$m_islandIndex20];
        var $52=$vc;
        var $indexB=$52+29;
        IHEAP[$indexB]=$51;
        var $53=$bodyA;
        var $m_invMass=$53+30;
        var $54=FHEAP[$m_invMass];
        var $55=$vc;
        var $invMassA=$55+30;
        FHEAP[$invMassA]=$54;
        var $56=$bodyB;
        var $m_invMass21=$56+30;
        var $57=FHEAP[$m_invMass21];
        var $58=$vc;
        var $invMassB=$58+31;
        FHEAP[$invMassB]=$57;
        var $59=$bodyA;
        var $m_invI=$59+32;
        var $60=FHEAP[$m_invI];
        var $61=$vc;
        var $invIA=$61+32;
        FHEAP[$invIA]=$60;
        var $62=$bodyB;
        var $m_invI22=$62+32;
        var $63=FHEAP[$m_invI22];
        var $64=$vc;
        var $invIB=$64+33;
        FHEAP[$invIB]=$63;
        var $65=$i;
        var $66=$vc;
        var $contactIndex=$66+37;
        IHEAP[$contactIndex]=$65;
        var $67=$pointCount;
        var $68=$vc;
        var $pointCount23=$68+36;
        IHEAP[$pointCount23]=$67;
        var $69=$vc;
        var $K=$69+24;
        __ZN7b2Mat227SetZeroEv($K);
        var $70=$vc;
        var $normalMass=$70+20;
        __ZN7b2Mat227SetZeroEv($normalMass);
        var $71=IHEAP[$m_positionConstraints24];
        var $72=$i;
        var $add_ptr25=$71+$72*22;
        $pc=$add_ptr25;
        var $73=$bodyA;
        var $m_islandIndex26=$73+2;
        var $74=IHEAP[$m_islandIndex26];
        var $75=$pc;
        var $indexA27=$75+8;
        IHEAP[$indexA27]=$74;
        var $76=$bodyB;
        var $m_islandIndex28=$76+2;
        var $77=IHEAP[$m_islandIndex28];
        var $78=$pc;
        var $indexB29=$78+9;
        IHEAP[$indexB29]=$77;
        var $79=$bodyA;
        var $m_invMass30=$79+30;
        var $80=FHEAP[$m_invMass30];
        var $81=$pc;
        var $invMassA31=$81+10;
        FHEAP[$invMassA31]=$80;
        var $82=$bodyB;
        var $m_invMass32=$82+30;
        var $83=FHEAP[$m_invMass32];
        var $84=$pc;
        var $invMassB33=$84+11;
        FHEAP[$invMassB33]=$83;
        var $85=$pc;
        var $localCenterA=$85+12;
        var $86=$bodyA;
        var $m_sweep=$86+7;
        var $localCenter=$m_sweep;
        var $87=$localCenterA;
        var $88=$localCenter;
        IHEAP[$87]=IHEAP[$88]; FHEAP[$87]=FHEAP[$88]; ; IHEAP[$87+1]=IHEAP[$88+1]; FHEAP[$87+1]=FHEAP[$88+1]; ;
        var $89=$pc;
        var $localCenterB=$89+14;
        var $90=$bodyB;
        var $m_sweep34=$90+7;
        var $localCenter35=$m_sweep34;
        var $91=$localCenterB;
        var $92=$localCenter35;
        IHEAP[$91]=IHEAP[$92]; FHEAP[$91]=FHEAP[$92]; ; IHEAP[$91+1]=IHEAP[$92+1]; FHEAP[$91+1]=FHEAP[$92+1]; ;
        var $93=$bodyA;
        var $m_invI36=$93+32;
        var $94=FHEAP[$m_invI36];
        var $95=$pc;
        var $invIA37=$95+16;
        FHEAP[$invIA37]=$94;
        var $96=$bodyB;
        var $m_invI38=$96+32;
        var $97=FHEAP[$m_invI38];
        var $98=$pc;
        var $invIB39=$98+17;
        FHEAP[$invIB39]=$97;
        var $99=$pc;
        var $localNormal=$99+4;
        var $100=$manifold;
        var $localNormal40=$100+10;
        var $101=$localNormal;
        var $102=$localNormal40;
        IHEAP[$101]=IHEAP[$102]; FHEAP[$101]=FHEAP[$102]; ; IHEAP[$101+1]=IHEAP[$102+1]; FHEAP[$101+1]=FHEAP[$102+1]; ;
        var $103=$pc;
        var $localPoint=$103+6;
        var $104=$manifold;
        var $localPoint41=$104+12;
        var $105=$localPoint;
        var $106=$localPoint41;
        IHEAP[$105]=IHEAP[$106]; FHEAP[$105]=FHEAP[$106]; ; IHEAP[$105+1]=IHEAP[$106+1]; FHEAP[$105+1]=FHEAP[$106+1]; ;
        var $107=$pointCount;
        var $108=$pc;
        var $pointCount42=$108+21;
        IHEAP[$pointCount42]=$107;
        var $109=$radiusA;
        var $110=$pc;
        var $radiusA43=$110+19;
        FHEAP[$radiusA43]=$109;
        var $111=$radiusB;
        var $112=$pc;
        var $radiusB44=$112+20;
        FHEAP[$radiusB44]=$111;
        var $113=$manifold;
        var $type=$113+14;
        var $114=IHEAP[$type];
        var $115=$pc;
        var $type45=$115+18;
        IHEAP[$type45]=$114;
        $j=0;
        var $116=$j;
        var $117=$pointCount;
        var $cmp471=($116) < ($117);
        if ($cmp471) { __label__ = 5;; } else { __label__ = 9;; }
        $for_body48$$for_inc66$73: do { 
          if (__label__ == 5) {
            $for_body48$74: while(1) { 

              var $118=$manifold;
              var $points=$118;
              var $arraydecay=$points;
              var $119=$j;
              var $add_ptr49=$arraydecay+$119*5;
              $cp=$add_ptr49;
              var $120=$vc;
              var $points50=$120;
              var $arraydecay51=$points50;
              var $121=$j;
              var $add_ptr52=$arraydecay51+$121*9;
              $vcp=$add_ptr52;
              var $122=IHEAP[$warmStarting];
              var $tobool=((($122)) & 1);
              if ($tobool) { __label__ = 6;; } else { __label__ = 7;; }
              $if_then$$if_else$76: do { 
                if (__label__ == 6) {

                  var $123=FHEAP[$dtRatio];
                  var $124=$cp;
                  var $normalImpulse=$124+2;
                  var $125=FHEAP[$normalImpulse];
                  var $mul55=($123)*($125);
                  var $126=$vcp;
                  var $normalImpulse56=$126+4;
                  FHEAP[$normalImpulse56]=$mul55;
                  var $127=FHEAP[$dtRatio58];
                  var $128=$cp;
                  var $tangentImpulse=$128+3;
                  var $129=FHEAP[$tangentImpulse];
                  var $mul59=($127)*($129);
                  var $130=$vcp;
                  var $tangentImpulse60=$130+5;
                  FHEAP[$tangentImpulse60]=$mul59;
                  ;
                }
                else if (__label__ == 7) {

                  var $131=$vcp;
                  var $normalImpulse61=$131+4;
                  FHEAP[$normalImpulse61]=0;
                  var $132=$vcp;
                  var $tangentImpulse62=$132+5;
                  FHEAP[$tangentImpulse62]=0;
                  ;
                }
              } while(0);

              var $133=$vcp;
              var $rA=$133;
              __ZN6b2Vec27SetZeroEv($rA);
              var $134=$vcp;
              var $rB=$134+2;
              __ZN6b2Vec27SetZeroEv($rB);
              var $135=$vcp;
              var $normalMass63=$135+6;
              FHEAP[$normalMass63]=0;
              var $136=$vcp;
              var $tangentMass=$136+7;
              FHEAP[$tangentMass]=0;
              var $137=$vcp;
              var $velocityBias=$137+8;
              FHEAP[$velocityBias]=0;
              var $138=$j;
              var $139=$pc;
              var $localPoints=$139;
              var $arrayidx64=$localPoints+($138<<1);
              var $140=$cp;
              var $localPoint65=$140;
              var $141=$arrayidx64;
              var $142=$localPoint65;
              IHEAP[$141]=IHEAP[$142]; FHEAP[$141]=FHEAP[$142]; ; IHEAP[$141+1]=IHEAP[$142+1]; FHEAP[$141+1]=FHEAP[$142+1]; ;
              var $143=$j;
              var $inc=($143)+1;
              $j=$inc;
              var $144=$j;
              var $145=$pointCount;
              var $cmp47=($144) < ($145);
              if (!($cmp47)) { __label__ = 9;break $for_body48$$for_inc66$73; }
            }
          }
        } while(0);

        var $146=$i;
        var $inc67=($146)+1;
        $i=$inc67;
        var $147=$i;
        var $148=IHEAP[$m_count9];
        var $cmp=($147) < ($148);
        if (!($cmp)) { __label__ = 10;break $for_body_lr_ph$$for_end68$66; }
      }
    }
  } while(0);

  ;
  return;
  return;
}
__ZN15b2ContactSolverC2EP18b2ContactSolverDef["X"]=1;

function __ZN15b2WorldManifoldC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2WorldManifoldC2Ev($this1);
  ;
  return;
  return;
}


function __ZNK7b2Mat2210GetInverseEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  var $a;
  var $b;
  var $c;
  var $d;
  var $det;
  $this_addr=$this;
  var $this1=$this_addr;
  var $ex=$this1;
  var $x=$ex;
  var $0=FHEAP[$x];
  $a=$0;
  var $ey=$this1+2;
  var $x2=$ey;
  var $1=FHEAP[$x2];
  $b=$1;
  var $ex3=$this1;
  var $y=$ex3+1;
  var $2=FHEAP[$y];
  $c=$2;
  var $ey4=$this1+2;
  var $y5=$ey4+1;
  var $3=FHEAP[$y5];
  $d=$3;
  __ZN7b2Mat22C1Ev($agg_result);
  var $4=$a;
  var $5=$d;
  var $mul=($4)*($5);
  var $6=$b;
  var $7=$c;
  var $mul6=($6)*($7);
  var $sub=($mul)-($mul6);
  $det=$sub;
  var $8=$det;
  var $cmp=($8) != 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$31: do { 
    if (__label__ == 1) {

      var $9=$det;
      var $div=1/($9);
      $det=$div;
      ;
    }
  } while(0);

  var $10=$det;
  var $11=$d;
  var $mul7=($10)*($11);
  var $ex8=$agg_result;
  var $x9=$ex8;
  FHEAP[$x9]=$mul7;
  var $12=$det;
  var $sub10=(-($12));
  var $13=$b;
  var $mul11=($sub10)*($13);
  var $ey12=$agg_result+2;
  var $x13=$ey12;
  FHEAP[$x13]=$mul11;
  var $14=$det;
  var $sub14=(-($14));
  var $15=$c;
  var $mul15=($sub14)*($15);
  var $ex16=$agg_result;
  var $y17=$ex16+1;
  FHEAP[$y17]=$mul15;
  var $16=$det;
  var $17=$a;
  var $mul18=($16)*($17);
  var $ey19=$agg_result+2;
  var $y20=$ey19+1;
  FHEAP[$y20]=$mul18;
  ;
  return;
  return;
}
__ZNK7b2Mat2210GetInverseEv["X"]=1;

function __ZN6b2Vec2mIERKS_($this, $v) {
  ;
  var __label__;

  var $this_addr;
  var $v_addr;
  $this_addr=$this;
  $v_addr=$v;
  var $this1=$this_addr;
  var $0=$v_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $x2=$this1;
  var $2=FHEAP[$x2];
  var $sub=($2)-($1);
  FHEAP[$x2]=$sub;
  var $3=$v_addr;
  var $y=$3+1;
  var $4=FHEAP[$y];
  var $y3=$this1+1;
  var $5=FHEAP[$y3];
  var $sub4=($5)-($4);
  FHEAP[$y3]=$sub4;
  ;
  return;
  return;
}


function __ZN15b2ContactSolver29InitializeVelocityConstraintsEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 54;
  var __label__;

  var $this_addr;
  var $i;
  var $vc;
  var $pc;
  var $radiusA;
  var $radiusB;
  var $manifold;
  var $indexA;
  var $indexB;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $localCenterA=__stackBase__;
  var $localCenterB=__stackBase__+2;
  var $cA=__stackBase__+4;
  var $aA;
  var $vA=__stackBase__+6;
  var $wA;
  var $cB=__stackBase__+8;
  var $aB;
  var $vB=__stackBase__+10;
  var $wB;
  var $xfA=__stackBase__+12;
  var $xfB=__stackBase__+16;
  var $ref_tmp=__stackBase__+20;
  var $ref_tmp29=__stackBase__+22;
  var $ref_tmp32=__stackBase__+24;
  var $ref_tmp33=__stackBase__+26;
  var $worldManifold=__stackBase__+28;
  var $pointCount36;
  var $j;
  var $vcp;
  var $ref_tmp42=__stackBase__+34;
  var $ref_tmp45=__stackBase__+36;
  var $rnA;
  var $rnB;
  var $kNormal;
  var $tangent=__stackBase__+38;
  var $rtA;
  var $rtB;
  var $kTangent;
  var $vRel;
  var $ref_tmp82=__stackBase__+40;
  var $ref_tmp83=__stackBase__+42;
  var $ref_tmp84=__stackBase__+44;
  var $ref_tmp85=__stackBase__+46;
  var $ref_tmp87=__stackBase__+48;
  var $vcp1;
  var $vcp2;
  var $rn1A;
  var $rn1B;
  var $rn2A;
  var $rn2B;
  var $k11;
  var $k22;
  var $k12;
  var $k_maxConditionNumber;
  var $ref_tmp144=__stackBase__+50;
  $this_addr=$this;
  var $this1=$this_addr;
  $i=0;
  var $0=$i;
  var $m_count=$this1+12;
  var $1=IHEAP[$m_count];
  var $cmp2=($0) < ($1);
  if ($cmp2) { __label__ = 1;; } else { __label__ = 17;; }
  $for_body_lr_ph$$for_end151$2: do { 
    if (__label__ == 1) {

      var $m_velocityConstraints=$this1+10;
      var $m_positionConstraints=$this1+9;
      var $m_contacts=$this1+11;
      var $2=$localCenterA;
      var $3=$localCenterB;
      var $m_positions=$this1+6;
      var $4=$cA;
      var $m_positions10=$this1+6;
      var $m_velocities=$this1+7;
      var $5=$vA;
      var $m_velocities13=$this1+7;
      var $m_positions15=$this1+6;
      var $6=$cB;
      var $m_positions18=$this1+6;
      var $m_velocities21=$this1+7;
      var $7=$vB;
      var $m_velocities24=$this1+7;
      var $q=$xfA+2;
      var $q28=$xfB+2;
      var $p=$xfA;
      var $q30=$xfA+2;
      var $8=$p;
      var $9=$ref_tmp;
      var $p31=$xfB;
      var $q34=$xfB+2;
      var $10=$p31;
      var $11=$ref_tmp32;
      var $normal35=$worldManifold;
      var $12=$normal35;
      var $13=$ref_tmp144;
      var $points43=$worldManifold+2;
      var $14=$ref_tmp42;
      var $points46=$worldManifold+2;
      var $15=$ref_tmp45;
      ;
      $for_body$4: while(1) { 

        var $16=IHEAP[$m_velocityConstraints];
        var $17=$i;
        var $add_ptr=$16+$17*38;
        $vc=$add_ptr;
        var $18=IHEAP[$m_positionConstraints];
        var $19=$i;
        var $add_ptr2=$18+$19*22;
        $pc=$add_ptr2;
        var $20=$pc;
        var $radiusA3=$20+19;
        var $21=FHEAP[$radiusA3];
        $radiusA=$21;
        var $22=$pc;
        var $radiusB4=$22+20;
        var $23=FHEAP[$radiusB4];
        $radiusB=$23;
        var $24=$vc;
        var $contactIndex=$24+37;
        var $25=IHEAP[$contactIndex];
        var $26=IHEAP[$m_contacts];
        var $arrayidx=$26+$25;
        var $27=IHEAP[$arrayidx];
        var $call=__ZN9b2Contact11GetManifoldEv($27);
        $manifold=$call;
        var $28=$vc;
        var $indexA5=$28+28;
        var $29=IHEAP[$indexA5];
        $indexA=$29;
        var $30=$vc;
        var $indexB6=$30+29;
        var $31=IHEAP[$indexB6];
        $indexB=$31;
        var $32=$vc;
        var $invMassA=$32+30;
        var $33=FHEAP[$invMassA];
        $mA=$33;
        var $34=$vc;
        var $invMassB=$34+31;
        var $35=FHEAP[$invMassB];
        $mB=$35;
        var $36=$vc;
        var $invIA=$36+32;
        var $37=FHEAP[$invIA];
        $iA=$37;
        var $38=$vc;
        var $invIB=$38+33;
        var $39=FHEAP[$invIB];
        $iB=$39;
        var $40=$pc;
        var $localCenterA7=$40+12;
        var $41=$localCenterA7;
        IHEAP[$2]=IHEAP[$41]; FHEAP[$2]=FHEAP[$41]; ; IHEAP[$2+1]=IHEAP[$41+1]; FHEAP[$2+1]=FHEAP[$41+1]; ;
        var $42=$pc;
        var $localCenterB8=$42+14;
        var $43=$localCenterB8;
        IHEAP[$3]=IHEAP[$43]; FHEAP[$3]=FHEAP[$43]; ; IHEAP[$3+1]=IHEAP[$43+1]; FHEAP[$3+1]=FHEAP[$43+1]; ;
        var $44=$indexA;
        var $45=IHEAP[$m_positions];
        var $arrayidx9=$45+$44*3;
        var $c=$arrayidx9;
        var $46=$c;
        IHEAP[$4]=IHEAP[$46]; FHEAP[$4]=FHEAP[$46]; ; IHEAP[$4+1]=IHEAP[$46+1]; FHEAP[$4+1]=FHEAP[$46+1]; ;
        var $47=$indexA;
        var $48=IHEAP[$m_positions10];
        var $arrayidx11=$48+$47*3;
        var $a=$arrayidx11+2;
        var $49=FHEAP[$a];
        $aA=$49;
        var $50=$indexA;
        var $51=IHEAP[$m_velocities];
        var $arrayidx12=$51+$50*3;
        var $v=$arrayidx12;
        var $52=$v;
        IHEAP[$5]=IHEAP[$52]; FHEAP[$5]=FHEAP[$52]; ; IHEAP[$5+1]=IHEAP[$52+1]; FHEAP[$5+1]=FHEAP[$52+1]; ;
        var $53=$indexA;
        var $54=IHEAP[$m_velocities13];
        var $arrayidx14=$54+$53*3;
        var $w=$arrayidx14+2;
        var $55=FHEAP[$w];
        $wA=$55;
        var $56=$indexB;
        var $57=IHEAP[$m_positions15];
        var $arrayidx16=$57+$56*3;
        var $c17=$arrayidx16;
        var $58=$c17;
        IHEAP[$6]=IHEAP[$58]; FHEAP[$6]=FHEAP[$58]; ; IHEAP[$6+1]=IHEAP[$58+1]; FHEAP[$6+1]=FHEAP[$58+1]; ;
        var $59=$indexB;
        var $60=IHEAP[$m_positions18];
        var $arrayidx19=$60+$59*3;
        var $a20=$arrayidx19+2;
        var $61=FHEAP[$a20];
        $aB=$61;
        var $62=$indexB;
        var $63=IHEAP[$m_velocities21];
        var $arrayidx22=$63+$62*3;
        var $v23=$arrayidx22;
        var $64=$v23;
        IHEAP[$7]=IHEAP[$64]; FHEAP[$7]=FHEAP[$64]; ; IHEAP[$7+1]=IHEAP[$64+1]; FHEAP[$7+1]=FHEAP[$64+1]; ;
        var $65=$indexB;
        var $66=IHEAP[$m_velocities24];
        var $arrayidx25=$66+$65*3;
        var $w26=$arrayidx25+2;
        var $67=FHEAP[$w26];
        $wB=$67;
        var $68=$manifold;
        var $pointCount=$68+15;
        var $69=IHEAP[$pointCount];
        var $cmp27=($69) > 0;
        if ($cmp27) { __label__ = 4;; } else { __label__ = 3;; }
        $cond_end$$cond_false$6: do { 
          if (__label__ == 3) {

            ___assert_func(__str77, 168, ___PRETTY_FUNCTION____ZN15b2ContactSolver29InitializeVelocityConstraintsEv, __str279);
            ;
          }
        } while(0);

        __ZN11b2TransformC1Ev($xfA);
        __ZN11b2TransformC1Ev($xfB);
        var $70=$aA;
        __ZN5b2Rot3SetEf($q, $70);
        var $71=$aB;
        __ZN5b2Rot3SetEf($q28, $71);
        __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp29, $q30, $localCenterA);
        __ZmiRK6b2Vec2S1_($ref_tmp, $cA, $ref_tmp29);
        IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
        __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp33, $q34, $localCenterB);
        __ZmiRK6b2Vec2S1_($ref_tmp32, $cB, $ref_tmp33);
        IHEAP[$10]=IHEAP[$11]; FHEAP[$10]=FHEAP[$11]; ; IHEAP[$10+1]=IHEAP[$11+1]; FHEAP[$10+1]=FHEAP[$11+1]; ;
        __ZN15b2WorldManifoldC1Ev($worldManifold);
        var $72=$manifold;
        var $73=$radiusA;
        var $74=$radiusB;
        __ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f($worldManifold, $72, $xfA, $73, $xfB, $74);
        var $75=$vc;
        var $normal=$75+18;
        var $76=$normal;
        IHEAP[$76]=IHEAP[$12]; FHEAP[$76]=FHEAP[$12]; ; IHEAP[$76+1]=IHEAP[$12+1]; FHEAP[$76+1]=FHEAP[$12+1]; ;
        var $77=$vc;
        var $pointCount37=$77+36;
        var $78=IHEAP[$pointCount37];
        $pointCount36=$78;
        $j=0;
        var $79=$j;
        var $80=$pointCount36;
        var $cmp391=($79) < ($80);
        var $81=$vc;
        if ($cmp391) { var $82 = $81;__label__ = 5;; } else { var $_lcssa = $81;__label__ = 12;; }
        $for_body40$$for_end$9: do { 
          if (__label__ == 5) {
            $for_body40$10: while(1) { 

              var $82;
              var $points=$82;
              var $arraydecay=$points;
              var $83=$j;
              var $add_ptr41=$arraydecay+$83*9;
              $vcp=$add_ptr41;
              var $84=$vcp;
              var $rA=$84;
              var $85=$j;
              var $arrayidx44=$points43+($85<<1);
              __ZmiRK6b2Vec2S1_($ref_tmp42, $arrayidx44, $cA);
              var $86=$rA;
              IHEAP[$86]=IHEAP[$14]; FHEAP[$86]=FHEAP[$14]; ; IHEAP[$86+1]=IHEAP[$14+1]; FHEAP[$86+1]=FHEAP[$14+1]; ;
              var $87=$vcp;
              var $rB=$87+2;
              var $88=$j;
              var $arrayidx47=$points46+($88<<1);
              __ZmiRK6b2Vec2S1_($ref_tmp45, $arrayidx47, $cB);
              var $89=$rB;
              IHEAP[$89]=IHEAP[$15]; FHEAP[$89]=FHEAP[$15]; ; IHEAP[$89+1]=IHEAP[$15+1]; FHEAP[$89+1]=FHEAP[$15+1]; ;
              var $90=$vcp;
              var $rA48=$90;
              var $91=$vc;
              var $normal49=$91+18;
              var $call50=__Z7b2CrossRK6b2Vec2S1_($rA48, $normal49);
              $rnA=$call50;
              var $92=$vcp;
              var $rB51=$92+2;
              var $93=$vc;
              var $normal52=$93+18;
              var $call53=__Z7b2CrossRK6b2Vec2S1_($rB51, $normal52);
              $rnB=$call53;
              var $94=$mA;
              var $95=$mB;
              var $add=($94)+($95);
              var $96=$iA;
              var $97=$rnA;
              var $mul=($96)*($97);
              var $98=$rnA;
              var $mul54=($mul)*($98);
              var $add55=($add)+($mul54);
              var $99=$iB;
              var $100=$rnB;
              var $mul56=($99)*($100);
              var $101=$rnB;
              var $mul57=($mul56)*($101);
              var $add58=($add55)+($mul57);
              $kNormal=$add58;
              var $cmp59=($add58) > 0;
              if ($cmp59) { __label__ = 6;; } else { var $cond = 0;__label__ = 7;; }
              $cond_true60$$cond_end62$12: do { 
                if (__label__ == 6) {

                  var $102=$kNormal;
                  var $div=1/($102);
                  var $cond = $div;;
                }
              } while(0);

              var $cond;
              var $103=$vcp;
              var $normalMass=$103+6;
              FHEAP[$normalMass]=$cond;
              var $104=$vc;
              var $normal63=$104+18;
              __Z7b2CrossRK6b2Vec2f($tangent, $normal63, 1);
              var $105=$vcp;
              var $rA64=$105;
              var $call65=__Z7b2CrossRK6b2Vec2S1_($rA64, $tangent);
              $rtA=$call65;
              var $106=$vcp;
              var $rB66=$106+2;
              var $call67=__Z7b2CrossRK6b2Vec2S1_($rB66, $tangent);
              $rtB=$call67;
              var $107=$mA;
              var $108=$mB;
              var $add68=($107)+($108);
              var $109=$iA;
              var $110=$rtA;
              var $mul69=($109)*($110);
              var $111=$rtA;
              var $mul70=($mul69)*($111);
              var $add71=($add68)+($mul70);
              var $112=$iB;
              var $113=$rtB;
              var $mul72=($112)*($113);
              var $114=$rtB;
              var $mul73=($mul72)*($114);
              var $add74=($add71)+($mul73);
              $kTangent=$add74;
              var $cmp75=($add74) > 0;
              if ($cmp75) { __label__ = 8;; } else { var $cond80 = 0;__label__ = 9;; }
              $cond_true76$$cond_end79$15: do { 
                if (__label__ == 8) {

                  var $115=$kTangent;
                  var $div77=1/($115);
                  var $cond80 = $div77;;
                }
              } while(0);

              var $cond80;
              var $116=$vcp;
              var $tangentMass=$116+7;
              FHEAP[$tangentMass]=$cond80;
              var $117=$vcp;
              var $velocityBias=$117+8;
              FHEAP[$velocityBias]=0;
              var $118=$vc;
              var $normal81=$118+18;
              var $119=$wB;
              var $120=$vcp;
              var $rB86=$120+2;
              __Z7b2CrossfRK6b2Vec2($ref_tmp85, $119, $rB86);
              __ZplRK6b2Vec2S1_($ref_tmp84, $vB, $ref_tmp85);
              __ZmiRK6b2Vec2S1_($ref_tmp83, $ref_tmp84, $vA);
              var $121=$wA;
              var $122=$vcp;
              var $rA88=$122;
              __Z7b2CrossfRK6b2Vec2($ref_tmp87, $121, $rA88);
              __ZmiRK6b2Vec2S1_($ref_tmp82, $ref_tmp83, $ref_tmp87);
              var $call89=__Z5b2DotRK6b2Vec2S1_($normal81, $ref_tmp82);
              $vRel=$call89;
              var $cmp90=($call89) < -1;
              if ($cmp90) { __label__ = 10;; } else { __label__ = 11;; }
              $if_then$$for_inc$18: do { 
                if (__label__ == 10) {

                  var $123=$vc;
                  var $restitution=$123+35;
                  var $124=FHEAP[$restitution];
                  var $sub=(-($124));
                  var $125=$vRel;
                  var $mul91=($sub)*($125);
                  var $126=$vcp;
                  var $velocityBias92=$126+8;
                  FHEAP[$velocityBias92]=$mul91;
                  ;
                }
              } while(0);

              var $127=$j;
              var $inc=($127)+1;
              $j=$inc;
              var $128=$j;
              var $129=$pointCount36;
              var $cmp39=($128) < ($129);
              var $130=$vc;
              if ($cmp39) { var $82 = $130;; } else { var $_lcssa = $130;__label__ = 12;break $for_body40$$for_end$9; }
            }
          }
        } while(0);

        var $_lcssa;
        var $pointCount93=$_lcssa+36;
        var $131=IHEAP[$pointCount93];
        var $cmp94=($131)==2;
        if ($cmp94) { __label__ = 13;; } else { __label__ = 16;; }
        $if_then95$$for_inc149$22: do { 
          if (__label__ == 13) {

            var $132=$vc;
            var $points96=$132;
            var $arraydecay97=$points96;
            var $add_ptr98=$arraydecay97;
            $vcp1=$add_ptr98;
            var $133=$vc;
            var $points99=$133;
            var $arraydecay100=$points99;
            var $add_ptr101=$arraydecay100+9;
            $vcp2=$add_ptr101;
            var $134=$vcp1;
            var $rA102=$134;
            var $135=$vc;
            var $normal103=$135+18;
            var $call104=__Z7b2CrossRK6b2Vec2S1_($rA102, $normal103);
            $rn1A=$call104;
            var $136=$vcp1;
            var $rB105=$136+2;
            var $137=$vc;
            var $normal106=$137+18;
            var $call107=__Z7b2CrossRK6b2Vec2S1_($rB105, $normal106);
            $rn1B=$call107;
            var $138=$vcp2;
            var $rA108=$138;
            var $139=$vc;
            var $normal109=$139+18;
            var $call110=__Z7b2CrossRK6b2Vec2S1_($rA108, $normal109);
            $rn2A=$call110;
            var $140=$vcp2;
            var $rB111=$140+2;
            var $141=$vc;
            var $normal112=$141+18;
            var $call113=__Z7b2CrossRK6b2Vec2S1_($rB111, $normal112);
            $rn2B=$call113;
            var $142=$mA;
            var $143=$mB;
            var $add114=($142)+($143);
            var $144=$iA;
            var $145=$rn1A;
            var $mul115=($144)*($145);
            var $146=$rn1A;
            var $mul116=($mul115)*($146);
            var $add117=($add114)+($mul116);
            var $147=$iB;
            var $148=$rn1B;
            var $mul118=($147)*($148);
            var $149=$rn1B;
            var $mul119=($mul118)*($149);
            var $add120=($add117)+($mul119);
            $k11=$add120;
            var $150=$mA;
            var $151=$mB;
            var $add121=($150)+($151);
            var $152=$iA;
            var $153=$rn2A;
            var $mul122=($152)*($153);
            var $154=$rn2A;
            var $mul123=($mul122)*($154);
            var $add124=($add121)+($mul123);
            var $155=$iB;
            var $156=$rn2B;
            var $mul125=($155)*($156);
            var $157=$rn2B;
            var $mul126=($mul125)*($157);
            var $add127=($add124)+($mul126);
            $k22=$add127;
            var $158=$mA;
            var $159=$mB;
            var $add128=($158)+($159);
            var $160=$iA;
            var $161=$rn1A;
            var $mul129=($160)*($161);
            var $162=$rn2A;
            var $mul130=($mul129)*($162);
            var $add131=($add128)+($mul130);
            var $163=$iB;
            var $164=$rn1B;
            var $mul132=($163)*($164);
            var $165=$rn2B;
            var $mul133=($mul132)*($165);
            var $add134=($add131)+($mul133);
            $k12=$add134;
            $k_maxConditionNumber=1000;
            var $166=$k11;
            var $167=$k11;
            var $mul135=($166)*($167);
            var $168=$k11;
            var $169=$k22;
            var $mul136=($168)*($169);
            var $170=$k12;
            var $171=$k12;
            var $mul137=($170)*($171);
            var $sub138=($mul136)-($mul137);
            var $mul139=($sub138)*1000;
            var $cmp140=($mul135) < ($mul139);
            var $172=$vc;
            if ($cmp140) { __label__ = 14;; } else { __label__ = 15;; }
            $if_then141$$if_else$24: do { 
              if (__label__ == 14) {

                var $K=$172+24;
                var $ex=$K;
                var $173=$k11;
                var $174=$k12;
                __ZN6b2Vec23SetEff($ex, $173, $174);
                var $175=$vc;
                var $K142=$175+24;
                var $ey=$K142+2;
                var $176=$k12;
                var $177=$k22;
                __ZN6b2Vec23SetEff($ey, $176, $177);
                var $178=$vc;
                var $normalMass143=$178+20;
                var $179=$vc;
                var $K145=$179+24;
                __ZNK7b2Mat2210GetInverseEv($ref_tmp144, $K145);
                var $180=$normalMass143;
                IHEAP[$180]=IHEAP[$13]; FHEAP[$180]=FHEAP[$13]; ; IHEAP[$180+1]=IHEAP[$13+1]; FHEAP[$180+1]=FHEAP[$13+1]; ; IHEAP[$180+2]=IHEAP[$13+2]; FHEAP[$180+2]=FHEAP[$13+2]; ; IHEAP[$180+3]=IHEAP[$13+3]; FHEAP[$180+3]=FHEAP[$13+3]; ;
                ;
              }
              else if (__label__ == 15) {

                var $pointCount146=$172+36;
                IHEAP[$pointCount146]=1;
                ;
              }
            } while(0);
          }
        } while(0);

        var $181=$i;
        var $inc150=($181)+1;
        $i=$inc150;
        var $182=$i;
        var $183=IHEAP[$m_count];
        var $cmp=($182) < ($183);
        if (!($cmp)) { __label__ = 17;break $for_body_lr_ph$$for_end151$2; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2ContactSolver29InitializeVelocityConstraintsEv["X"]=1;

function __ZN15b2ContactSolver9WarmStartEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 18;
  var __label__;

  var $this_addr;
  var $i;
  var $vc;
  var $indexA;
  var $indexB;
  var $mA;
  var $iA;
  var $mB;
  var $iB;
  var $pointCount;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $normal=__stackBase__+4;
  var $tangent=__stackBase__+6;
  var $j;
  var $vcp;
  var $P=__stackBase__+8;
  var $ref_tmp=__stackBase__+10;
  var $ref_tmp18=__stackBase__+12;
  var $ref_tmp19=__stackBase__+14;
  var $ref_tmp22=__stackBase__+16;
  $this_addr=$this;
  var $this1=$this_addr;
  $i=0;
  var $0=$i;
  var $m_count=$this1+12;
  var $1=IHEAP[$m_count];
  var $cmp2=($0) < ($1);
  if ($cmp2) { __label__ = 1;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end37$35: do { 
    if (__label__ == 1) {

      var $m_velocityConstraints=$this1+10;
      var $m_velocities=$this1+7;
      var $2=$vA;
      var $m_velocities5=$this1+7;
      var $m_velocities7=$this1+7;
      var $3=$vB;
      var $m_velocities10=$this1+7;
      var $4=$normal;
      var $m_velocities23=$this1+7;
      var $5=$vA;
      var $m_velocities26=$this1+7;
      var $m_velocities29=$this1+7;
      var $6=$vB;
      var $m_velocities32=$this1+7;
      ;
      $for_body$37: while(1) { 

        var $7=IHEAP[$m_velocityConstraints];
        var $8=$i;
        var $add_ptr=$7+$8*38;
        $vc=$add_ptr;
        var $9=$vc;
        var $indexA2=$9+28;
        var $10=IHEAP[$indexA2];
        $indexA=$10;
        var $11=$vc;
        var $indexB3=$11+29;
        var $12=IHEAP[$indexB3];
        $indexB=$12;
        var $13=$vc;
        var $invMassA=$13+30;
        var $14=FHEAP[$invMassA];
        $mA=$14;
        var $15=$vc;
        var $invIA=$15+32;
        var $16=FHEAP[$invIA];
        $iA=$16;
        var $17=$vc;
        var $invMassB=$17+31;
        var $18=FHEAP[$invMassB];
        $mB=$18;
        var $19=$vc;
        var $invIB=$19+33;
        var $20=FHEAP[$invIB];
        $iB=$20;
        var $21=$vc;
        var $pointCount4=$21+36;
        var $22=IHEAP[$pointCount4];
        $pointCount=$22;
        var $23=$indexA;
        var $24=IHEAP[$m_velocities];
        var $arrayidx=$24+$23*3;
        var $v=$arrayidx;
        var $25=$v;
        IHEAP[$2]=IHEAP[$25]; FHEAP[$2]=FHEAP[$25]; ; IHEAP[$2+1]=IHEAP[$25+1]; FHEAP[$2+1]=FHEAP[$25+1]; ;
        var $26=$indexA;
        var $27=IHEAP[$m_velocities5];
        var $arrayidx6=$27+$26*3;
        var $w=$arrayidx6+2;
        var $28=FHEAP[$w];
        $wA=$28;
        var $29=$indexB;
        var $30=IHEAP[$m_velocities7];
        var $arrayidx8=$30+$29*3;
        var $v9=$arrayidx8;
        var $31=$v9;
        IHEAP[$3]=IHEAP[$31]; FHEAP[$3]=FHEAP[$31]; ; IHEAP[$3+1]=IHEAP[$31+1]; FHEAP[$3+1]=FHEAP[$31+1]; ;
        var $32=$indexB;
        var $33=IHEAP[$m_velocities10];
        var $arrayidx11=$33+$32*3;
        var $w12=$arrayidx11+2;
        var $34=FHEAP[$w12];
        $wB=$34;
        var $35=$vc;
        var $normal13=$35+18;
        var $36=$normal13;
        IHEAP[$4]=IHEAP[$36]; FHEAP[$4]=FHEAP[$36]; ; IHEAP[$4+1]=IHEAP[$36+1]; FHEAP[$4+1]=FHEAP[$36+1]; ;
        __Z7b2CrossRK6b2Vec2f($tangent, $normal, 1);
        $j=0;
        var $37=$j;
        var $38=$pointCount;
        var $cmp151=($37) < ($38);
        if ($cmp151) { __label__ = 3;; } else { __label__ = 4;; }
        $for_body16$$for_end$39: do { 
          if (__label__ == 3) {
            $for_body16$40: while(1) { 

              var $39=$vc;
              var $points=$39;
              var $arraydecay=$points;
              var $40=$j;
              var $add_ptr17=$arraydecay+$40*9;
              $vcp=$add_ptr17;
              var $41=$vcp;
              var $normalImpulse=$41+4;
              var $42=FHEAP[$normalImpulse];
              __ZmlfRK6b2Vec2($ref_tmp, $42, $normal);
              var $43=$vcp;
              var $tangentImpulse=$43+5;
              var $44=FHEAP[$tangentImpulse];
              __ZmlfRK6b2Vec2($ref_tmp18, $44, $tangent);
              __ZplRK6b2Vec2S1_($P, $ref_tmp, $ref_tmp18);
              var $45=$iA;
              var $46=$vcp;
              var $rA=$46;
              var $call=__Z7b2CrossRK6b2Vec2S1_($rA, $P);
              var $mul=($45)*($call);
              var $47=$wA;
              var $sub=($47)-($mul);
              $wA=$sub;
              var $48=$mA;
              __ZmlfRK6b2Vec2($ref_tmp19, $48, $P);
              __ZN6b2Vec2mIERKS_($vA, $ref_tmp19);
              var $49=$iB;
              var $50=$vcp;
              var $rB=$50+2;
              var $call20=__Z7b2CrossRK6b2Vec2S1_($rB, $P);
              var $mul21=($49)*($call20);
              var $51=$wB;
              var $add=($51)+($mul21);
              $wB=$add;
              var $52=$mB;
              __ZmlfRK6b2Vec2($ref_tmp22, $52, $P);
              __ZN6b2Vec2pLERKS_($vB, $ref_tmp22);
              var $53=$j;
              var $inc=($53)+1;
              $j=$inc;
              var $54=$j;
              var $55=$pointCount;
              var $cmp15=($54) < ($55);
              if (!($cmp15)) { __label__ = 4;break $for_body16$$for_end$39; }
            }
          }
        } while(0);

        var $56=$indexA;
        var $57=IHEAP[$m_velocities23];
        var $arrayidx24=$57+$56*3;
        var $v25=$arrayidx24;
        var $58=$v25;
        IHEAP[$58]=IHEAP[$5]; FHEAP[$58]=FHEAP[$5]; ; IHEAP[$58+1]=IHEAP[$5+1]; FHEAP[$58+1]=FHEAP[$5+1]; ;
        var $59=$wA;
        var $60=$indexA;
        var $61=IHEAP[$m_velocities26];
        var $arrayidx27=$61+$60*3;
        var $w28=$arrayidx27+2;
        FHEAP[$w28]=$59;
        var $62=$indexB;
        var $63=IHEAP[$m_velocities29];
        var $arrayidx30=$63+$62*3;
        var $v31=$arrayidx30;
        var $64=$v31;
        IHEAP[$64]=IHEAP[$6]; FHEAP[$64]=FHEAP[$6]; ; IHEAP[$64+1]=IHEAP[$6+1]; FHEAP[$64+1]=FHEAP[$6+1]; ;
        var $65=$wB;
        var $66=$indexB;
        var $67=IHEAP[$m_velocities32];
        var $arrayidx33=$67+$66*3;
        var $w34=$arrayidx33+2;
        FHEAP[$w34]=$65;
        var $68=$i;
        var $inc36=($68)+1;
        $i=$inc36;
        var $69=$i;
        var $70=IHEAP[$m_count];
        var $cmp=($69) < ($70);
        if (!($cmp)) { __label__ = 5;break $for_body_lr_ph$$for_end37$35; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2ContactSolver9WarmStartEv["X"]=1;

function __Z5b2MulRK7b2Mat22RK6b2Vec2($agg_result, $A, $v) {
  ;
  var __label__;

  var $A_addr;
  var $v_addr;
  $A_addr=$A;
  $v_addr=$v;
  var $0=$A_addr;
  var $ex=$0;
  var $x=$ex;
  var $1=FHEAP[$x];
  var $2=$v_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $mul=($1)*($3);
  var $4=$A_addr;
  var $ey=$4+2;
  var $x2=$ey;
  var $5=FHEAP[$x2];
  var $6=$v_addr;
  var $y=$6+1;
  var $7=FHEAP[$y];
  var $mul3=($5)*($7);
  var $add=($mul)+($mul3);
  var $8=$A_addr;
  var $ex4=$8;
  var $y5=$ex4+1;
  var $9=FHEAP[$y5];
  var $10=$v_addr;
  var $x6=$10;
  var $11=FHEAP[$x6];
  var $mul7=($9)*($11);
  var $12=$A_addr;
  var $ey8=$12+2;
  var $y9=$ey8+1;
  var $13=FHEAP[$y9];
  var $14=$v_addr;
  var $y10=$14+1;
  var $15=FHEAP[$y10];
  var $mul11=($13)*($15);
  var $add12=($mul7)+($mul11);
  __ZN6b2Vec2C1Eff($agg_result, $add, $add12);
  ;
  return;
  return;
}


function __ZN15b2ContactSolver24SolveVelocityConstraintsEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 126;
  var __label__;

  var $this_addr;
  var $i;
  var $vc;
  var $indexA;
  var $indexB;
  var $mA;
  var $iA;
  var $mB;
  var $iB;
  var $pointCount;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $normal=__stackBase__+4;
  var $tangent=__stackBase__+6;
  var $friction;
  var $j;
  var $vcp;
  var $dv=__stackBase__+8;
  var $ref_tmp=__stackBase__+10;
  var $ref_tmp21=__stackBase__+12;
  var $ref_tmp22=__stackBase__+14;
  var $ref_tmp23=__stackBase__+16;
  var $vt;
  var $lambda;
  var $maxFriction;
  var $newImpulse;
  var $P=__stackBase__+18;
  var $ref_tmp30=__stackBase__+20;
  var $ref_tmp35=__stackBase__+22;
  var $vcp42;
  var $dv46=__stackBase__+24;
  var $ref_tmp47=__stackBase__+26;
  var $ref_tmp48=__stackBase__+28;
  var $ref_tmp49=__stackBase__+30;
  var $ref_tmp51=__stackBase__+32;
  var $vn;
  var $lambda54;
  var $newImpulse58;
  var $P65=__stackBase__+34;
  var $ref_tmp66=__stackBase__+36;
  var $ref_tmp71=__stackBase__+38;
  var $cp1;
  var $cp2;
  var $a=__stackBase__+40;
  var $dv1=__stackBase__+42;
  var $ref_tmp89=__stackBase__+44;
  var $ref_tmp90=__stackBase__+46;
  var $ref_tmp91=__stackBase__+48;
  var $ref_tmp93=__stackBase__+50;
  var $dv2=__stackBase__+52;
  var $ref_tmp95=__stackBase__+54;
  var $ref_tmp96=__stackBase__+56;
  var $ref_tmp97=__stackBase__+58;
  var $ref_tmp99=__stackBase__+60;
  var $vn1;
  var $vn2;
  var $b=__stackBase__+62;
  var $ref_tmp109=__stackBase__+64;
  var $k_errorTol;
  var $x111=__stackBase__+66;
  var $tmp=__stackBase__+68;
  var $d=__stackBase__+70;
  var $P1=__stackBase__+72;
  var $P2=__stackBase__+74;
  var $ref_tmp124=__stackBase__+76;
  var $ref_tmp125=__stackBase__+78;
  var $ref_tmp133=__stackBase__+80;
  var $ref_tmp134=__stackBase__+82;
  var $d164=__stackBase__+84;
  var $P1166=__stackBase__+86;
  var $P2169=__stackBase__+88;
  var $ref_tmp171=__stackBase__+90;
  var $ref_tmp172=__stackBase__+92;
  var $ref_tmp180=__stackBase__+94;
  var $ref_tmp181=__stackBase__+96;
  var $d212=__stackBase__+98;
  var $P1214=__stackBase__+100;
  var $P2217=__stackBase__+102;
  var $ref_tmp219=__stackBase__+104;
  var $ref_tmp220=__stackBase__+106;
  var $ref_tmp228=__stackBase__+108;
  var $ref_tmp229=__stackBase__+110;
  var $d251=__stackBase__+112;
  var $P1253=__stackBase__+114;
  var $P2256=__stackBase__+116;
  var $ref_tmp258=__stackBase__+118;
  var $ref_tmp259=__stackBase__+120;
  var $ref_tmp267=__stackBase__+122;
  var $ref_tmp268=__stackBase__+124;
  $this_addr=$this;
  var $this1=$this_addr;
  $i=0;
  var $0=$i;
  var $m_count=$this1+12;
  var $1=IHEAP[$m_count];
  var $cmp2=($0) < ($1);
  if ($cmp2) { __label__ = 1;; } else { __label__ = 24;; }
  $for_body_lr_ph$$for_end297$2: do { 
    if (__label__ == 1) {

      var $m_velocityConstraints=$this1+10;
      var $m_velocities=$this1+7;
      var $2=$vA;
      var $m_velocities5=$this1+7;
      var $m_velocities7=$this1+7;
      var $3=$vB;
      var $m_velocities10=$this1+7;
      var $4=$normal;
      var $m_velocities283=$this1+7;
      var $5=$vA;
      var $m_velocities286=$this1+7;
      var $m_velocities289=$this1+7;
      var $6=$vB;
      var $m_velocities292=$this1+7;
      var $x=$a;
      var $y=$a+1;
      var $x105=$b;
      var $y108=$b+1;
      var $x113=$x111;
      var $y116=$x111+1;
      var $x121=$d;
      var $y123=$d+1;
      var $x142=$x111;
      var $y144=$x111+1;
      var $x148=$b;
      var $x150=$x111;
      var $y151=$x111+1;
      var $x154=$x111;
      var $y156=$b+1;
      var $x158=$x111;
      var $x167=$d164;
      var $y170=$d164+1;
      var $x189=$x111;
      var $y191=$x111+1;
      var $x194=$x111;
      var $y197=$b+1;
      var $y199=$x111+1;
      var $y202=$x111+1;
      var $x204=$b;
      var $y206=$x111+1;
      var $x215=$d212;
      var $y218=$d212+1;
      var $x237=$x111;
      var $y239=$x111+1;
      var $x242=$x111;
      var $y243=$x111+1;
      var $x244=$b;
      var $y245=$b+1;
      var $x254=$d251;
      var $y257=$d251+1;
      var $x276=$x111;
      var $y278=$x111+1;
      ;
      $for_body$4: while(1) { 

        var $7=IHEAP[$m_velocityConstraints];
        var $8=$i;
        var $add_ptr=$7+$8*38;
        $vc=$add_ptr;
        var $9=$vc;
        var $indexA2=$9+28;
        var $10=IHEAP[$indexA2];
        $indexA=$10;
        var $11=$vc;
        var $indexB3=$11+29;
        var $12=IHEAP[$indexB3];
        $indexB=$12;
        var $13=$vc;
        var $invMassA=$13+30;
        var $14=FHEAP[$invMassA];
        $mA=$14;
        var $15=$vc;
        var $invIA=$15+32;
        var $16=FHEAP[$invIA];
        $iA=$16;
        var $17=$vc;
        var $invMassB=$17+31;
        var $18=FHEAP[$invMassB];
        $mB=$18;
        var $19=$vc;
        var $invIB=$19+33;
        var $20=FHEAP[$invIB];
        $iB=$20;
        var $21=$vc;
        var $pointCount4=$21+36;
        var $22=IHEAP[$pointCount4];
        $pointCount=$22;
        var $23=$indexA;
        var $24=IHEAP[$m_velocities];
        var $arrayidx=$24+$23*3;
        var $v=$arrayidx;
        var $25=$v;
        IHEAP[$2]=IHEAP[$25]; FHEAP[$2]=FHEAP[$25]; ; IHEAP[$2+1]=IHEAP[$25+1]; FHEAP[$2+1]=FHEAP[$25+1]; ;
        var $26=$indexA;
        var $27=IHEAP[$m_velocities5];
        var $arrayidx6=$27+$26*3;
        var $w=$arrayidx6+2;
        var $28=FHEAP[$w];
        $wA=$28;
        var $29=$indexB;
        var $30=IHEAP[$m_velocities7];
        var $arrayidx8=$30+$29*3;
        var $v9=$arrayidx8;
        var $31=$v9;
        IHEAP[$3]=IHEAP[$31]; FHEAP[$3]=FHEAP[$31]; ; IHEAP[$3+1]=IHEAP[$31+1]; FHEAP[$3+1]=FHEAP[$31+1]; ;
        var $32=$indexB;
        var $33=IHEAP[$m_velocities10];
        var $arrayidx11=$33+$32*3;
        var $w12=$arrayidx11+2;
        var $34=FHEAP[$w12];
        $wB=$34;
        var $35=$vc;
        var $normal13=$35+18;
        var $36=$normal13;
        IHEAP[$4]=IHEAP[$36]; FHEAP[$4]=FHEAP[$36]; ; IHEAP[$4+1]=IHEAP[$36+1]; FHEAP[$4+1]=FHEAP[$36+1]; ;
        __Z7b2CrossRK6b2Vec2f($tangent, $normal, 1);
        var $37=$vc;
        var $friction14=$37+34;
        var $38=FHEAP[$friction14];
        $friction=$38;
        var $39=$pointCount;
        var $cmp15=($39)==1;
        var $40=$pointCount;
        var $cmp16=($40)==2;
        var $or_cond=($cmp15) | ($cmp16);
        if ($or_cond) { __label__ = 4;; } else { __label__ = 3;; }
        $cond_end$$cond_false$6: do { 
          if (__label__ == 3) {

            ___assert_func(__str77, 311, ___PRETTY_FUNCTION____ZN15b2ContactSolver24SolveVelocityConstraintsEv, __str380);
            ;
          }
        } while(0);

        $j=0;
        var $41=$j;
        var $42=$pointCount;
        var $cmp181=($41) < ($42);
        var $43=$vc;
        if ($cmp181) { var $44 = $43;__label__ = 5;; } else { var $_lcssa = $43;__label__ = 6;; }
        $for_body19$$for_end$9: do { 
          if (__label__ == 5) {
            $for_body19$10: while(1) { 

              var $44;
              var $points=$44;
              var $arraydecay=$points;
              var $45=$j;
              var $add_ptr20=$arraydecay+$45*9;
              $vcp=$add_ptr20;
              var $46=$wB;
              var $47=$vcp;
              var $rB=$47+2;
              __Z7b2CrossfRK6b2Vec2($ref_tmp22, $46, $rB);
              __ZplRK6b2Vec2S1_($ref_tmp21, $vB, $ref_tmp22);
              __ZmiRK6b2Vec2S1_($ref_tmp, $ref_tmp21, $vA);
              var $48=$wA;
              var $49=$vcp;
              var $rA=$49;
              __Z7b2CrossfRK6b2Vec2($ref_tmp23, $48, $rA);
              __ZmiRK6b2Vec2S1_($dv, $ref_tmp, $ref_tmp23);
              var $call=__Z5b2DotRK6b2Vec2S1_($dv, $tangent);
              $vt=$call;
              var $50=$vcp;
              var $tangentMass=$50+7;
              var $51=FHEAP[$tangentMass];
              var $52=$vt;
              var $sub=(-($52));
              var $mul=($51)*($sub);
              $lambda=$mul;
              var $53=$friction;
              var $54=$vcp;
              var $normalImpulse=$54+4;
              var $55=FHEAP[$normalImpulse];
              var $mul24=($53)*($55);
              $maxFriction=$mul24;
              var $56=$vcp;
              var $tangentImpulse=$56+5;
              var $57=FHEAP[$tangentImpulse];
              var $58=$lambda;
              var $add=($57)+($58);
              var $59=$maxFriction;
              var $sub25=(-($59));
              var $60=$maxFriction;
              var $call26=__Z7b2ClampIfET_S0_S0_S0_($add, $sub25, $60);
              $newImpulse=$call26;
              var $61=$newImpulse;
              var $62=$vcp;
              var $tangentImpulse27=$62+5;
              var $63=FHEAP[$tangentImpulse27];
              var $sub28=($61)-($63);
              $lambda=$sub28;
              var $64=$newImpulse;
              var $65=$vcp;
              var $tangentImpulse29=$65+5;
              FHEAP[$tangentImpulse29]=$64;
              var $66=$lambda;
              __ZmlfRK6b2Vec2($P, $66, $tangent);
              var $67=$mA;
              __ZmlfRK6b2Vec2($ref_tmp30, $67, $P);
              __ZN6b2Vec2mIERKS_($vA, $ref_tmp30);
              var $68=$iA;
              var $69=$vcp;
              var $rA31=$69;
              var $call32=__Z7b2CrossRK6b2Vec2S1_($rA31, $P);
              var $mul33=($68)*($call32);
              var $70=$wA;
              var $sub34=($70)-($mul33);
              $wA=$sub34;
              var $71=$mB;
              __ZmlfRK6b2Vec2($ref_tmp35, $71, $P);
              __ZN6b2Vec2pLERKS_($vB, $ref_tmp35);
              var $72=$iB;
              var $73=$vcp;
              var $rB36=$73+2;
              var $call37=__Z7b2CrossRK6b2Vec2S1_($rB36, $P);
              var $mul38=($72)*($call37);
              var $74=$wB;
              var $add39=($74)+($mul38);
              $wB=$add39;
              var $75=$j;
              var $inc=($75)+1;
              $j=$inc;
              var $76=$j;
              var $77=$pointCount;
              var $cmp18=($76) < ($77);
              var $78=$vc;
              if ($cmp18) { var $44 = $78;; } else { var $_lcssa = $78;__label__ = 6;break $for_body19$$for_end$9; }
            }
          }
        } while(0);

        var $_lcssa;
        var $pointCount40=$_lcssa+36;
        var $79=IHEAP[$pointCount40];
        var $cmp41=($79)==1;
        var $80=$vc;
        var $points43=$80;
        var $arraydecay44=$points43;
        var $add_ptr45=$arraydecay44;
        if ($cmp41) { __label__ = 7;; } else { __label__ = 8;; }
        $if_then$$if_else$13: do { 
          if (__label__ == 7) {

            $vcp42=$add_ptr45;
            var $81=$wB;
            var $82=$vcp42;
            var $rB50=$82+2;
            __Z7b2CrossfRK6b2Vec2($ref_tmp49, $81, $rB50);
            __ZplRK6b2Vec2S1_($ref_tmp48, $vB, $ref_tmp49);
            __ZmiRK6b2Vec2S1_($ref_tmp47, $ref_tmp48, $vA);
            var $83=$wA;
            var $84=$vcp42;
            var $rA52=$84;
            __Z7b2CrossfRK6b2Vec2($ref_tmp51, $83, $rA52);
            __ZmiRK6b2Vec2S1_($dv46, $ref_tmp47, $ref_tmp51);
            var $call53=__Z5b2DotRK6b2Vec2S1_($dv46, $normal);
            $vn=$call53;
            var $85=$vcp42;
            var $normalMass=$85+6;
            var $86=FHEAP[$normalMass];
            var $sub55=(-($86));
            var $87=$vn;
            var $88=$vcp42;
            var $velocityBias=$88+8;
            var $89=FHEAP[$velocityBias];
            var $sub56=($87)-($89);
            var $mul57=($sub55)*($sub56);
            $lambda54=$mul57;
            var $90=$vcp42;
            var $normalImpulse59=$90+4;
            var $91=FHEAP[$normalImpulse59];
            var $92=$lambda54;
            var $add60=($91)+($92);
            var $call61=__Z5b2MaxIfET_S0_S0_($add60, 0);
            $newImpulse58=$call61;
            var $93=$newImpulse58;
            var $94=$vcp42;
            var $normalImpulse62=$94+4;
            var $95=FHEAP[$normalImpulse62];
            var $sub63=($93)-($95);
            $lambda54=$sub63;
            var $96=$newImpulse58;
            var $97=$vcp42;
            var $normalImpulse64=$97+4;
            FHEAP[$normalImpulse64]=$96;
            var $98=$lambda54;
            __ZmlfRK6b2Vec2($P65, $98, $normal);
            var $99=$mA;
            __ZmlfRK6b2Vec2($ref_tmp66, $99, $P65);
            __ZN6b2Vec2mIERKS_($vA, $ref_tmp66);
            var $100=$iA;
            var $101=$vcp42;
            var $rA67=$101;
            var $call68=__Z7b2CrossRK6b2Vec2S1_($rA67, $P65);
            var $mul69=($100)*($call68);
            var $102=$wA;
            var $sub70=($102)-($mul69);
            $wA=$sub70;
            var $103=$mB;
            __ZmlfRK6b2Vec2($ref_tmp71, $103, $P65);
            __ZN6b2Vec2pLERKS_($vB, $ref_tmp71);
            var $104=$iB;
            var $105=$vcp42;
            var $rB72=$105+2;
            var $call73=__Z7b2CrossRK6b2Vec2S1_($rB72, $P65);
            var $mul74=($104)*($call73);
            var $106=$wB;
            var $add75=($106)+($mul74);
            $wB=$add75;
            ;
          }
          else if (__label__ == 8) {

            $cp1=$add_ptr45;
            var $107=$vc;
            var $points79=$107;
            var $arraydecay80=$points79;
            var $add_ptr81=$arraydecay80+9;
            $cp2=$add_ptr81;
            var $108=$cp1;
            var $normalImpulse82=$108+4;
            var $109=FHEAP[$normalImpulse82];
            var $110=$cp2;
            var $normalImpulse83=$110+4;
            var $111=FHEAP[$normalImpulse83];
            __ZN6b2Vec2C1Eff($a, $109, $111);
            var $112=FHEAP[$x];
            var $cmp84=($112) >= 0;
            if ($cmp84) { __label__ = 9;; } else { __label__ = 10;; }
            $land_lhs_true$$cond_false87$16: do { 
              if (__label__ == 9) {

                var $113=FHEAP[$y];
                var $cmp85=($113) >= 0;
                if ($cmp85) { __label__ = 11;break $land_lhs_true$$cond_false87$16; } else { __label__ = 10;break $land_lhs_true$$cond_false87$16; }
              }
            } while(0);
            $cond_end88$$cond_false87$18: do { 
              if (__label__ == 10) {

                ___assert_func(__str77, 406, ___PRETTY_FUNCTION____ZN15b2ContactSolver24SolveVelocityConstraintsEv, __str481);
                ;
              }
            } while(0);

            var $114=$wB;
            var $115=$cp1;
            var $rB92=$115+2;
            __Z7b2CrossfRK6b2Vec2($ref_tmp91, $114, $rB92);
            __ZplRK6b2Vec2S1_($ref_tmp90, $vB, $ref_tmp91);
            __ZmiRK6b2Vec2S1_($ref_tmp89, $ref_tmp90, $vA);
            var $116=$wA;
            var $117=$cp1;
            var $rA94=$117;
            __Z7b2CrossfRK6b2Vec2($ref_tmp93, $116, $rA94);
            __ZmiRK6b2Vec2S1_($dv1, $ref_tmp89, $ref_tmp93);
            var $118=$wB;
            var $119=$cp2;
            var $rB98=$119+2;
            __Z7b2CrossfRK6b2Vec2($ref_tmp97, $118, $rB98);
            __ZplRK6b2Vec2S1_($ref_tmp96, $vB, $ref_tmp97);
            __ZmiRK6b2Vec2S1_($ref_tmp95, $ref_tmp96, $vA);
            var $120=$wA;
            var $121=$cp2;
            var $rA100=$121;
            __Z7b2CrossfRK6b2Vec2($ref_tmp99, $120, $rA100);
            __ZmiRK6b2Vec2S1_($dv2, $ref_tmp95, $ref_tmp99);
            var $call101=__Z5b2DotRK6b2Vec2S1_($dv1, $normal);
            $vn1=$call101;
            var $call102=__Z5b2DotRK6b2Vec2S1_($dv2, $normal);
            $vn2=$call102;
            __ZN6b2Vec2C1Ev($b);
            var $122=$vn1;
            var $123=$cp1;
            var $velocityBias103=$123+8;
            var $124=FHEAP[$velocityBias103];
            var $sub104=($122)-($124);
            FHEAP[$x105]=$sub104;
            var $125=$vn2;
            var $126=$cp2;
            var $velocityBias106=$126+8;
            var $127=FHEAP[$velocityBias106];
            var $sub107=($125)-($127);
            FHEAP[$y108]=$sub107;
            var $128=$vc;
            var $K=$128+24;
            __Z5b2MulRK7b2Mat22RK6b2Vec2($ref_tmp109, $K, $a);
            __ZN6b2Vec2mIERKS_($b, $ref_tmp109);
            $k_errorTol=0.0010000000474974513;
            var $129=$vc;
            var $normalMass112=$129+20;
            __Z5b2MulRK7b2Mat22RK6b2Vec2($tmp, $normalMass112, $b);
            __ZNK6b2Vec2ngEv($x111, $tmp);
            var $130=FHEAP[$x113];
            var $cmp114=($130) >= 0;
            if ($cmp114) { __label__ = 12;; } else { __label__ = 14;; }
            $land_lhs_true115$$if_end$21: do { 
              if (__label__ == 12) {

                var $131=FHEAP[$y116];
                var $cmp117=($131) >= 0;
                if (!($cmp117)) { __label__ = 14;break $land_lhs_true115$$if_end$21; }

                __ZmiRK6b2Vec2S1_($d, $x111, $a);
                var $132=FHEAP[$x121];
                __ZmlfRK6b2Vec2($P1, $132, $normal);
                var $133=FHEAP[$y123];
                __ZmlfRK6b2Vec2($P2, $133, $normal);
                var $134=$mA;
                __ZplRK6b2Vec2S1_($ref_tmp125, $P1, $P2);
                __ZmlfRK6b2Vec2($ref_tmp124, $134, $ref_tmp125);
                __ZN6b2Vec2mIERKS_($vA, $ref_tmp124);
                var $135=$iA;
                var $136=$cp1;
                var $rA126=$136;
                var $call127=__Z7b2CrossRK6b2Vec2S1_($rA126, $P1);
                var $137=$cp2;
                var $rA128=$137;
                var $call129=__Z7b2CrossRK6b2Vec2S1_($rA128, $P2);
                var $add130=($call127)+($call129);
                var $mul131=($135)*($add130);
                var $138=$wA;
                var $sub132=($138)-($mul131);
                $wA=$sub132;
                var $139=$mB;
                __ZplRK6b2Vec2S1_($ref_tmp134, $P1, $P2);
                __ZmlfRK6b2Vec2($ref_tmp133, $139, $ref_tmp134);
                __ZN6b2Vec2pLERKS_($vB, $ref_tmp133);
                var $140=$iB;
                var $141=$cp1;
                var $rB135=$141+2;
                var $call136=__Z7b2CrossRK6b2Vec2S1_($rB135, $P1);
                var $142=$cp2;
                var $rB137=$142+2;
                var $call138=__Z7b2CrossRK6b2Vec2S1_($rB137, $P2);
                var $add139=($call136)+($call138);
                var $mul140=($140)*($add139);
                var $143=$wB;
                var $add141=($143)+($mul140);
                $wB=$add141;
                var $144=FHEAP[$x142];
                var $145=$cp1;
                var $normalImpulse143=$145+4;
                FHEAP[$normalImpulse143]=$144;
                var $146=FHEAP[$y144];
                var $147=$cp2;
                var $normalImpulse145=$147+4;
                FHEAP[$normalImpulse145]=$146;
                __label__ = 23;break $if_then$$if_else$13;
              }
            } while(0);

            var $148=$cp1;
            var $normalMass146=$148+6;
            var $149=FHEAP[$normalMass146];
            var $sub147=(-($149));
            var $150=FHEAP[$x148];
            var $mul149=($sub147)*($150);
            FHEAP[$x150]=$mul149;
            FHEAP[$y151]=0;
            $vn1=0;
            var $151=$vc;
            var $K152=$151+24;
            var $ex=$K152;
            var $y153=$ex+1;
            var $152=FHEAP[$y153];
            var $153=FHEAP[$x154];
            var $mul155=($152)*($153);
            var $154=FHEAP[$y156];
            var $add157=($mul155)+($154);
            $vn2=$add157;
            var $155=FHEAP[$x158];
            var $cmp159=($155) >= 0;
            if ($cmp159) { __label__ = 15;; } else { __label__ = 17;; }
            $land_lhs_true160$$if_end193$25: do { 
              if (__label__ == 15) {

                var $156=$vn2;
                var $cmp161=($156) >= 0;
                if (!($cmp161)) { __label__ = 17;break $land_lhs_true160$$if_end193$25; }

                __ZmiRK6b2Vec2S1_($d164, $x111, $a);
                var $157=FHEAP[$x167];
                __ZmlfRK6b2Vec2($P1166, $157, $normal);
                var $158=FHEAP[$y170];
                __ZmlfRK6b2Vec2($P2169, $158, $normal);
                var $159=$mA;
                __ZplRK6b2Vec2S1_($ref_tmp172, $P1166, $P2169);
                __ZmlfRK6b2Vec2($ref_tmp171, $159, $ref_tmp172);
                __ZN6b2Vec2mIERKS_($vA, $ref_tmp171);
                var $160=$iA;
                var $161=$cp1;
                var $rA173=$161;
                var $call174=__Z7b2CrossRK6b2Vec2S1_($rA173, $P1166);
                var $162=$cp2;
                var $rA175=$162;
                var $call176=__Z7b2CrossRK6b2Vec2S1_($rA175, $P2169);
                var $add177=($call174)+($call176);
                var $mul178=($160)*($add177);
                var $163=$wA;
                var $sub179=($163)-($mul178);
                $wA=$sub179;
                var $164=$mB;
                __ZplRK6b2Vec2S1_($ref_tmp181, $P1166, $P2169);
                __ZmlfRK6b2Vec2($ref_tmp180, $164, $ref_tmp181);
                __ZN6b2Vec2pLERKS_($vB, $ref_tmp180);
                var $165=$iB;
                var $166=$cp1;
                var $rB182=$166+2;
                var $call183=__Z7b2CrossRK6b2Vec2S1_($rB182, $P1166);
                var $167=$cp2;
                var $rB184=$167+2;
                var $call185=__Z7b2CrossRK6b2Vec2S1_($rB184, $P2169);
                var $add186=($call183)+($call185);
                var $mul187=($165)*($add186);
                var $168=$wB;
                var $add188=($168)+($mul187);
                $wB=$add188;
                var $169=FHEAP[$x189];
                var $170=$cp1;
                var $normalImpulse190=$170+4;
                FHEAP[$normalImpulse190]=$169;
                var $171=FHEAP[$y191];
                var $172=$cp2;
                var $normalImpulse192=$172+4;
                FHEAP[$normalImpulse192]=$171;
                __label__ = 23;break $if_then$$if_else$13;
              }
            } while(0);

            FHEAP[$x194]=0;
            var $173=$cp2;
            var $normalMass195=$173+6;
            var $174=FHEAP[$normalMass195];
            var $sub196=(-($174));
            var $175=FHEAP[$y197];
            var $mul198=($sub196)*($175);
            FHEAP[$y199]=$mul198;
            var $176=$vc;
            var $K200=$176+24;
            var $ey=$K200+2;
            var $x201=$ey;
            var $177=FHEAP[$x201];
            var $178=FHEAP[$y202];
            var $mul203=($177)*($178);
            var $179=FHEAP[$x204];
            var $add205=($mul203)+($179);
            $vn1=$add205;
            $vn2=0;
            var $180=FHEAP[$y206];
            var $cmp207=($180) >= 0;
            if ($cmp207) { __label__ = 18;; } else { __label__ = 20;; }
            $land_lhs_true208$$if_end241$29: do { 
              if (__label__ == 18) {

                var $181=$vn1;
                var $cmp209=($181) >= 0;
                if (!($cmp209)) { __label__ = 20;break $land_lhs_true208$$if_end241$29; }

                __ZmiRK6b2Vec2S1_($d212, $x111, $a);
                var $182=FHEAP[$x215];
                __ZmlfRK6b2Vec2($P1214, $182, $normal);
                var $183=FHEAP[$y218];
                __ZmlfRK6b2Vec2($P2217, $183, $normal);
                var $184=$mA;
                __ZplRK6b2Vec2S1_($ref_tmp220, $P1214, $P2217);
                __ZmlfRK6b2Vec2($ref_tmp219, $184, $ref_tmp220);
                __ZN6b2Vec2mIERKS_($vA, $ref_tmp219);
                var $185=$iA;
                var $186=$cp1;
                var $rA221=$186;
                var $call222=__Z7b2CrossRK6b2Vec2S1_($rA221, $P1214);
                var $187=$cp2;
                var $rA223=$187;
                var $call224=__Z7b2CrossRK6b2Vec2S1_($rA223, $P2217);
                var $add225=($call222)+($call224);
                var $mul226=($185)*($add225);
                var $188=$wA;
                var $sub227=($188)-($mul226);
                $wA=$sub227;
                var $189=$mB;
                __ZplRK6b2Vec2S1_($ref_tmp229, $P1214, $P2217);
                __ZmlfRK6b2Vec2($ref_tmp228, $189, $ref_tmp229);
                __ZN6b2Vec2pLERKS_($vB, $ref_tmp228);
                var $190=$iB;
                var $191=$cp1;
                var $rB230=$191+2;
                var $call231=__Z7b2CrossRK6b2Vec2S1_($rB230, $P1214);
                var $192=$cp2;
                var $rB232=$192+2;
                var $call233=__Z7b2CrossRK6b2Vec2S1_($rB232, $P2217);
                var $add234=($call231)+($call233);
                var $mul235=($190)*($add234);
                var $193=$wB;
                var $add236=($193)+($mul235);
                $wB=$add236;
                var $194=FHEAP[$x237];
                var $195=$cp1;
                var $normalImpulse238=$195+4;
                FHEAP[$normalImpulse238]=$194;
                var $196=FHEAP[$y239];
                var $197=$cp2;
                var $normalImpulse240=$197+4;
                FHEAP[$normalImpulse240]=$196;
                __label__ = 23;break $if_then$$if_else$13;
              }
            } while(0);

            FHEAP[$x242]=0;
            FHEAP[$y243]=0;
            var $198=FHEAP[$x244];
            $vn1=$198;
            var $199=FHEAP[$y245];
            $vn2=$199;
            var $cmp246=($198) >= 0;
            if (!($cmp246)) { __label__ = 23;break $if_then$$if_else$13; }

            var $200=$vn2;
            var $cmp248=($200) >= 0;
            if (!($cmp248)) { __label__ = 23;break $if_then$$if_else$13; }

            __ZmiRK6b2Vec2S1_($d251, $x111, $a);
            var $201=FHEAP[$x254];
            __ZmlfRK6b2Vec2($P1253, $201, $normal);
            var $202=FHEAP[$y257];
            __ZmlfRK6b2Vec2($P2256, $202, $normal);
            var $203=$mA;
            __ZplRK6b2Vec2S1_($ref_tmp259, $P1253, $P2256);
            __ZmlfRK6b2Vec2($ref_tmp258, $203, $ref_tmp259);
            __ZN6b2Vec2mIERKS_($vA, $ref_tmp258);
            var $204=$iA;
            var $205=$cp1;
            var $rA260=$205;
            var $call261=__Z7b2CrossRK6b2Vec2S1_($rA260, $P1253);
            var $206=$cp2;
            var $rA262=$206;
            var $call263=__Z7b2CrossRK6b2Vec2S1_($rA262, $P2256);
            var $add264=($call261)+($call263);
            var $mul265=($204)*($add264);
            var $207=$wA;
            var $sub266=($207)-($mul265);
            $wA=$sub266;
            var $208=$mB;
            __ZplRK6b2Vec2S1_($ref_tmp268, $P1253, $P2256);
            __ZmlfRK6b2Vec2($ref_tmp267, $208, $ref_tmp268);
            __ZN6b2Vec2pLERKS_($vB, $ref_tmp267);
            var $209=$iB;
            var $210=$cp1;
            var $rB269=$210+2;
            var $call270=__Z7b2CrossRK6b2Vec2S1_($rB269, $P1253);
            var $211=$cp2;
            var $rB271=$211+2;
            var $call272=__Z7b2CrossRK6b2Vec2S1_($rB271, $P2256);
            var $add273=($call270)+($call272);
            var $mul274=($209)*($add273);
            var $212=$wB;
            var $add275=($212)+($mul274);
            $wB=$add275;
            var $213=FHEAP[$x276];
            var $214=$cp1;
            var $normalImpulse277=$214+4;
            FHEAP[$normalImpulse277]=$213;
            var $215=FHEAP[$y278];
            var $216=$cp2;
            var $normalImpulse279=$216+4;
            FHEAP[$normalImpulse279]=$215;
            ;
          }
        } while(0);

        var $217=$indexA;
        var $218=IHEAP[$m_velocities283];
        var $arrayidx284=$218+$217*3;
        var $v285=$arrayidx284;
        var $219=$v285;
        IHEAP[$219]=IHEAP[$5]; FHEAP[$219]=FHEAP[$5]; ; IHEAP[$219+1]=IHEAP[$5+1]; FHEAP[$219+1]=FHEAP[$5+1]; ;
        var $220=$wA;
        var $221=$indexA;
        var $222=IHEAP[$m_velocities286];
        var $arrayidx287=$222+$221*3;
        var $w288=$arrayidx287+2;
        FHEAP[$w288]=$220;
        var $223=$indexB;
        var $224=IHEAP[$m_velocities289];
        var $arrayidx290=$224+$223*3;
        var $v291=$arrayidx290;
        var $225=$v291;
        IHEAP[$225]=IHEAP[$6]; FHEAP[$225]=FHEAP[$6]; ; IHEAP[$225+1]=IHEAP[$6+1]; FHEAP[$225+1]=FHEAP[$6+1]; ;
        var $226=$wB;
        var $227=$indexB;
        var $228=IHEAP[$m_velocities292];
        var $arrayidx293=$228+$227*3;
        var $w294=$arrayidx293+2;
        FHEAP[$w294]=$226;
        var $229=$i;
        var $inc296=($229)+1;
        $i=$inc296;
        var $230=$i;
        var $231=IHEAP[$m_count];
        var $cmp=($230) < ($231);
        if (!($cmp)) { __label__ = 24;break $for_body_lr_ph$$for_end297$2; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2ContactSolver24SolveVelocityConstraintsEv["X"]=1;

function __Z7b2ClampIfET_S0_S0_S0_($a, $low, $high) {
  ;
  var __label__;

  var $a_addr;
  var $low_addr;
  var $high_addr;
  $a_addr=$a;
  $low_addr=$low;
  $high_addr=$high;
  var $0=$low_addr;
  var $1=$a_addr;
  var $2=$high_addr;
  var $call=__Z5b2MinIfET_S0_S0_($1, $2);
  var $call1=__Z5b2MaxIfET_S0_S0_($0, $call);
  ;
  return $call1;
  return null;
}


function __ZN15b2ContactSolver13StoreImpulsesEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $i;
  var $vc;
  var $manifold;
  var $j;
  $this_addr=$this;
  var $this1=$this_addr;
  $i=0;
  var $0=$i;
  var $m_count=$this1+12;
  var $1=IHEAP[$m_count];
  var $cmp4=($0) < ($1);
  if ($cmp4) { __label__ = 1;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end16$40: do { 
    if (__label__ == 1) {

      var $m_velocityConstraints=$this1+10;
      var $m_contacts=$this1+11;
      ;
      $for_body$42: while(1) { 

        var $2=IHEAP[$m_velocityConstraints];
        var $3=$i;
        var $add_ptr=$2+$3*38;
        $vc=$add_ptr;
        var $4=$vc;
        var $contactIndex=$4+37;
        var $5=IHEAP[$contactIndex];
        var $6=IHEAP[$m_contacts];
        var $arrayidx=$6+$5;
        var $7=IHEAP[$arrayidx];
        var $call=__ZN9b2Contact11GetManifoldEv($7);
        $manifold=$call;
        $j=0;
        var $8=$j;
        var $9=$vc;
        var $pointCount1=$9+36;
        var $10=IHEAP[$pointCount1];
        var $cmp32=($8) < ($10);
        if ($cmp32) { __label__ = 3;; } else { __label__ = 4;; }
        $for_body4$$for_inc14$44: do { 
          if (__label__ == 3) {
            $for_body4$45: while(1) { 

              var $11=$j;
              var $12=$vc;
              var $points=$12;
              var $arrayidx5=$points+$11*9;
              var $normalImpulse=$arrayidx5+4;
              var $13=FHEAP[$normalImpulse];
              var $14=$j;
              var $15=$manifold;
              var $points6=$15;
              var $arrayidx7=$points6+$14*5;
              var $normalImpulse8=$arrayidx7+2;
              FHEAP[$normalImpulse8]=$13;
              var $16=$j;
              var $17=$vc;
              var $points9=$17;
              var $arrayidx10=$points9+$16*9;
              var $tangentImpulse=$arrayidx10+5;
              var $18=FHEAP[$tangentImpulse];
              var $19=$j;
              var $20=$manifold;
              var $points11=$20;
              var $arrayidx12=$points11+$19*5;
              var $tangentImpulse13=$arrayidx12+3;
              FHEAP[$tangentImpulse13]=$18;
              var $21=$j;
              var $inc=($21)+1;
              $j=$inc;
              var $22=$j;
              var $23=$vc;
              var $pointCount=$23+36;
              var $24=IHEAP[$pointCount];
              var $cmp3=($22) < ($24);
              if (!($cmp3)) { __label__ = 4;break $for_body4$$for_inc14$44; }
            }
          }
        } while(0);

        var $25=$i;
        var $inc15=($25)+1;
        $i=$inc15;
        var $26=$i;
        var $27=IHEAP[$m_count];
        var $cmp=($26) < ($27);
        if (!($cmp)) { __label__ = 5;break $for_body_lr_ph$$for_end16$40; }
      }
    }
  } while(0);

  ;
  return;
  return;
}
__ZN15b2ContactSolver13StoreImpulsesEv["X"]=1;

function __ZN24b2PositionSolverManifoldC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN24b2PositionSolverManifoldC2Ev($this1);
  ;
  return;
  return;
}


function __ZN7b2Mat22C1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN7b2Mat22C2Ev($this1);
  ;
  return;
  return;
}


function __ZN24b2PositionSolverManifoldC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $normal=$this1;
  __ZN6b2Vec2C1Ev($normal);
  var $point=$this1+2;
  __ZN6b2Vec2C1Ev($point);
  ;
  return;
  return;
}


function __ZN7b2Mat22C2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $ex=$this1;
  __ZN6b2Vec2C1Ev($ex);
  var $ey=$this1+2;
  __ZN6b2Vec2C1Ev($ey);
  ;
  return;
  return;
}


function __ZN15b2WorldManifoldC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $normal=$this1;
  __ZN6b2Vec2C1Ev($normal);
  var $points=$this1+2;
  var $array_begin=$points;
  __ZN6b2Vec2C1Ev($array_begin);
  var $arrayctor_next=$array_begin+2;
  __ZN6b2Vec2C1Ev($arrayctor_next);
  ;
  return;
  return;
}


function __ZN15b2ContactSolver24SolvePositionConstraintsEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 43;
  var __label__;

  var $this_addr;
  var $minSeparation;
  var $i;
  var $pc;
  var $indexA;
  var $indexB;
  var $localCenterA=__stackBase__;
  var $mA;
  var $iA;
  var $localCenterB=__stackBase__+2;
  var $mB;
  var $iB;
  var $pointCount;
  var $cA=__stackBase__+4;
  var $aA;
  var $cB=__stackBase__+6;
  var $aB;
  var $j;
  var $xfA=__stackBase__+8;
  var $xfB=__stackBase__+12;
  var $ref_tmp=__stackBase__+16;
  var $ref_tmp19=__stackBase__+18;
  var $ref_tmp22=__stackBase__+20;
  var $ref_tmp23=__stackBase__+22;
  var $psm=__stackBase__+24;
  var $normal=__stackBase__+29;
  var $point=__stackBase__+31;
  var $separation;
  var $rA=__stackBase__+33;
  var $rB=__stackBase__+35;
  var $C;
  var $rnA;
  var $rnB;
  var $K;
  var $impulse;
  var $P=__stackBase__+37;
  var $ref_tmp39=__stackBase__+39;
  var $ref_tmp43=__stackBase__+41;
  $this_addr=$this;
  var $this1=$this_addr;
  $minSeparation=0;
  $i=0;
  var $0=$i;
  var $m_count=$this1+12;
  var $1=IHEAP[$m_count];
  var $cmp2=($0) < ($1);
  if ($cmp2) { __label__ = 1;; } else { __label__ = 7;; }
  $for_body_lr_ph$$for_end61$2: do { 
    if (__label__ == 1) {

      var $m_positionConstraints=$this1+9;
      var $2=$localCenterA;
      var $3=$localCenterB;
      var $m_positions=$this1+6;
      var $4=$cA;
      var $m_positions7=$this1+6;
      var $m_positions9=$this1+6;
      var $5=$cB;
      var $m_positions12=$this1+6;
      var $m_positions47=$this1+6;
      var $6=$cA;
      var $m_positions50=$this1+6;
      var $m_positions53=$this1+6;
      var $7=$cB;
      var $m_positions56=$this1+6;
      var $q=$xfA+2;
      var $q18=$xfB+2;
      var $p=$xfA;
      var $q20=$xfA+2;
      var $8=$p;
      var $9=$ref_tmp;
      var $p21=$xfB;
      var $q24=$xfB+2;
      var $10=$p21;
      var $11=$ref_tmp22;
      var $normal25=$psm;
      var $12=$normal;
      var $13=$normal25;
      var $point26=$psm+2;
      var $14=$point;
      var $15=$point26;
      var $separation27=$psm+4;
      ;
      $for_body$4: while(1) { 

        var $16=IHEAP[$m_positionConstraints];
        var $17=$i;
        var $add_ptr=$16+$17*22;
        $pc=$add_ptr;
        var $18=$pc;
        var $indexA2=$18+8;
        var $19=IHEAP[$indexA2];
        $indexA=$19;
        var $20=$pc;
        var $indexB3=$20+9;
        var $21=IHEAP[$indexB3];
        $indexB=$21;
        var $22=$pc;
        var $localCenterA4=$22+12;
        var $23=$localCenterA4;
        IHEAP[$2]=IHEAP[$23]; FHEAP[$2]=FHEAP[$23]; ; IHEAP[$2+1]=IHEAP[$23+1]; FHEAP[$2+1]=FHEAP[$23+1]; ;
        var $24=$pc;
        var $invMassA=$24+10;
        var $25=FHEAP[$invMassA];
        $mA=$25;
        var $26=$pc;
        var $invIA=$26+16;
        var $27=FHEAP[$invIA];
        $iA=$27;
        var $28=$pc;
        var $localCenterB5=$28+14;
        var $29=$localCenterB5;
        IHEAP[$3]=IHEAP[$29]; FHEAP[$3]=FHEAP[$29]; ; IHEAP[$3+1]=IHEAP[$29+1]; FHEAP[$3+1]=FHEAP[$29+1]; ;
        var $30=$pc;
        var $invMassB=$30+11;
        var $31=FHEAP[$invMassB];
        $mB=$31;
        var $32=$pc;
        var $invIB=$32+17;
        var $33=FHEAP[$invIB];
        $iB=$33;
        var $34=$pc;
        var $pointCount6=$34+21;
        var $35=IHEAP[$pointCount6];
        $pointCount=$35;
        var $36=$indexA;
        var $37=IHEAP[$m_positions];
        var $arrayidx=$37+$36*3;
        var $c=$arrayidx;
        var $38=$c;
        IHEAP[$4]=IHEAP[$38]; FHEAP[$4]=FHEAP[$38]; ; IHEAP[$4+1]=IHEAP[$38+1]; FHEAP[$4+1]=FHEAP[$38+1]; ;
        var $39=$indexA;
        var $40=IHEAP[$m_positions7];
        var $arrayidx8=$40+$39*3;
        var $a=$arrayidx8+2;
        var $41=FHEAP[$a];
        $aA=$41;
        var $42=$indexB;
        var $43=IHEAP[$m_positions9];
        var $arrayidx10=$43+$42*3;
        var $c11=$arrayidx10;
        var $44=$c11;
        IHEAP[$5]=IHEAP[$44]; FHEAP[$5]=FHEAP[$44]; ; IHEAP[$5+1]=IHEAP[$44+1]; FHEAP[$5+1]=FHEAP[$44+1]; ;
        var $45=$indexB;
        var $46=IHEAP[$m_positions12];
        var $arrayidx13=$46+$45*3;
        var $a14=$arrayidx13+2;
        var $47=FHEAP[$a14];
        $aB=$47;
        $j=0;
        var $48=$j;
        var $49=$pointCount;
        var $cmp161=($48) < ($49);
        if ($cmp161) { __label__ = 3;; } else { __label__ = 6;; }
        $for_body17$$for_end$6: do { 
          if (__label__ == 3) {
            $for_body17$7: while(1) { 

              __ZN11b2TransformC1Ev($xfA);
              __ZN11b2TransformC1Ev($xfB);
              var $50=$aA;
              __ZN5b2Rot3SetEf($q, $50);
              var $51=$aB;
              __ZN5b2Rot3SetEf($q18, $51);
              __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp19, $q20, $localCenterA);
              __ZmiRK6b2Vec2S1_($ref_tmp, $cA, $ref_tmp19);
              IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
              __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp23, $q24, $localCenterB);
              __ZmiRK6b2Vec2S1_($ref_tmp22, $cB, $ref_tmp23);
              IHEAP[$10]=IHEAP[$11]; FHEAP[$10]=FHEAP[$11]; ; IHEAP[$10+1]=IHEAP[$11+1]; FHEAP[$10+1]=FHEAP[$11+1]; ;
              __ZN24b2PositionSolverManifoldC1Ev($psm);
              var $52=$pc;
              var $53=$j;
              __ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i($psm, $52, $xfA, $xfB, $53);
              IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
              IHEAP[$14]=IHEAP[$15]; FHEAP[$14]=FHEAP[$15]; ; IHEAP[$14+1]=IHEAP[$15+1]; FHEAP[$14+1]=FHEAP[$15+1]; ;
              var $54=FHEAP[$separation27];
              $separation=$54;
              __ZmiRK6b2Vec2S1_($rA, $point, $cA);
              __ZmiRK6b2Vec2S1_($rB, $point, $cB);
              var $55=$minSeparation;
              var $56=$separation;
              var $call=__Z5b2MinIfET_S0_S0_($55, $56);
              $minSeparation=$call;
              var $57=$separation;
              var $add=($57)+0.004999999888241291;
              var $mul=($add)*0.20000000298023224;
              var $call28=__Z7b2ClampIfET_S0_S0_S0_($mul, -0.20000000298023224, 0);
              $C=$call28;
              var $call29=__Z7b2CrossRK6b2Vec2S1_($rA, $normal);
              $rnA=$call29;
              var $call30=__Z7b2CrossRK6b2Vec2S1_($rB, $normal);
              $rnB=$call30;
              var $58=$mA;
              var $59=$mB;
              var $add31=($58)+($59);
              var $60=$iA;
              var $61=$rnA;
              var $mul32=($60)*($61);
              var $62=$rnA;
              var $mul33=($mul32)*($62);
              var $add34=($add31)+($mul33);
              var $63=$iB;
              var $64=$rnB;
              var $mul35=($63)*($64);
              var $65=$rnB;
              var $mul36=($mul35)*($65);
              var $add37=($add34)+($mul36);
              $K=$add37;
              var $cmp38=($add37) > 0;
              if ($cmp38) { __label__ = 4;; } else { var $cond = 0;__label__ = 5;; }
              $cond_true$$cond_end$9: do { 
                if (__label__ == 4) {

                  var $66=$C;
                  var $sub=(-($66));
                  var $67=$K;
                  var $div=($sub)/($67);
                  var $cond = $div;;
                }
              } while(0);

              var $cond;
              $impulse=$cond;
              var $68=$impulse;
              __ZmlfRK6b2Vec2($P, $68, $normal);
              var $69=$mA;
              __ZmlfRK6b2Vec2($ref_tmp39, $69, $P);
              __ZN6b2Vec2mIERKS_($cA, $ref_tmp39);
              var $70=$iA;
              var $call40=__Z7b2CrossRK6b2Vec2S1_($rA, $P);
              var $mul41=($70)*($call40);
              var $71=$aA;
              var $sub42=($71)-($mul41);
              $aA=$sub42;
              var $72=$mB;
              __ZmlfRK6b2Vec2($ref_tmp43, $72, $P);
              __ZN6b2Vec2pLERKS_($cB, $ref_tmp43);
              var $73=$iB;
              var $call44=__Z7b2CrossRK6b2Vec2S1_($rB, $P);
              var $mul45=($73)*($call44);
              var $74=$aB;
              var $add46=($74)+($mul45);
              $aB=$add46;
              var $75=$j;
              var $inc=($75)+1;
              $j=$inc;
              var $76=$j;
              var $77=$pointCount;
              var $cmp16=($76) < ($77);
              if (!($cmp16)) { __label__ = 6;break $for_body17$$for_end$6; }
            }
          }
        } while(0);

        var $78=$indexA;
        var $79=IHEAP[$m_positions47];
        var $arrayidx48=$79+$78*3;
        var $c49=$arrayidx48;
        var $80=$c49;
        IHEAP[$80]=IHEAP[$6]; FHEAP[$80]=FHEAP[$6]; ; IHEAP[$80+1]=IHEAP[$6+1]; FHEAP[$80+1]=FHEAP[$6+1]; ;
        var $81=$aA;
        var $82=$indexA;
        var $83=IHEAP[$m_positions50];
        var $arrayidx51=$83+$82*3;
        var $a52=$arrayidx51+2;
        FHEAP[$a52]=$81;
        var $84=$indexB;
        var $85=IHEAP[$m_positions53];
        var $arrayidx54=$85+$84*3;
        var $c55=$arrayidx54;
        var $86=$c55;
        IHEAP[$86]=IHEAP[$7]; FHEAP[$86]=FHEAP[$7]; ; IHEAP[$86+1]=IHEAP[$7+1]; FHEAP[$86+1]=FHEAP[$7+1]; ;
        var $87=$aB;
        var $88=$indexB;
        var $89=IHEAP[$m_positions56];
        var $arrayidx57=$89+$88*3;
        var $a58=$arrayidx57+2;
        FHEAP[$a58]=$87;
        var $90=$i;
        var $inc60=($90)+1;
        $i=$inc60;
        var $91=$i;
        var $92=IHEAP[$m_count];
        var $cmp=($91) < ($92);
        if (!($cmp)) { __label__ = 7;break $for_body_lr_ph$$for_end61$2; }
      }
    }
  } while(0);

  var $93=$minSeparation;
  var $cmp62=($93) >= -0.014999999664723873;
  STACKTOP = __stackBase__;
  return $cmp62;
  return null;
}
__ZN15b2ContactSolver24SolvePositionConstraintsEv["X"]=1;

function __ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i($this, $pc, $xfA, $xfB, $index) {
  var __stackBase__  = STACKTOP; STACKTOP += 30;
  var __label__;

  var $this_addr;
  var $pc_addr;
  var $xfA_addr;
  var $xfB_addr;
  var $index_addr;
  var $pointA=__stackBase__;
  var $pointB=__stackBase__+2;
  var $ref_tmp=__stackBase__+4;
  var $ref_tmp3=__stackBase__+6;
  var $ref_tmp4=__stackBase__+8;
  var $ref_tmp5=__stackBase__+10;
  var $ref_tmp11=__stackBase__+12;
  var $planePoint=__stackBase__+14;
  var $clipPoint=__stackBase__+16;
  var $ref_tmp15=__stackBase__+18;
  var $ref_tmp26=__stackBase__+20;
  var $planePoint29=__stackBase__+22;
  var $clipPoint31=__stackBase__+24;
  var $ref_tmp34=__stackBase__+26;
  var $ref_tmp44=__stackBase__+28;
  $this_addr=$this;
  $pc_addr=$pc;
  $xfA_addr=$xfA;
  $xfB_addr=$xfB;
  $index_addr=$index;
  var $this1=$this_addr;
  var $0=$pc_addr;
  var $pointCount=$0+21;
  var $1=IHEAP[$pointCount];
  var $cmp=($1) > 0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$16: do { 
    if (__label__ == 1) {

      ___assert_func(__str77, 617, ___PRETTY_FUNCTION____ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i, __str582);
      ;
    }
  } while(0);

  var $2=$pc_addr;
  var $type=$2+18;
  var $3=IHEAP[$type];
  if ($3 == 0) {
    __label__ = 3;;
  }
  else if ($3 == 1) {
    __label__ = 4;;
  }
  else if ($3 == 2) {
    __label__ = 5;;
  }
  else {
  __label__ = 6;;
  }
  
  $sw_epilog$$sw_bb$$sw_bb9$$sw_bb24$19: do { 
    if (__label__ == 3) {

      var $4=$xfA_addr;
      var $5=$pc_addr;
      var $localPoint=$5+6;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointA, $4, $localPoint);
      var $6=$xfB_addr;
      var $7=$pc_addr;
      var $localPoints=$7;
      var $arrayidx=$localPoints;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointB, $6, $arrayidx);
      var $normal=$this1;
      __ZmiRK6b2Vec2S1_($ref_tmp, $pointB, $pointA);
      var $8=$normal;
      var $9=$ref_tmp;
      IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
      var $normal2=$this1;
      var $call=__ZN6b2Vec29NormalizeEv($normal2);
      var $point=$this1+2;
      __ZplRK6b2Vec2S1_($ref_tmp4, $pointA, $pointB);
      __ZmlfRK6b2Vec2($ref_tmp3, 0.5, $ref_tmp4);
      var $10=$point;
      var $11=$ref_tmp3;
      IHEAP[$10]=IHEAP[$11]; FHEAP[$10]=FHEAP[$11]; ; IHEAP[$10+1]=IHEAP[$11+1]; FHEAP[$10+1]=FHEAP[$11+1]; ;
      __ZmiRK6b2Vec2S1_($ref_tmp5, $pointB, $pointA);
      var $normal6=$this1;
      var $call7=__Z5b2DotRK6b2Vec2S1_($ref_tmp5, $normal6);
      var $12=$pc_addr;
      var $radiusA=$12+19;
      var $13=FHEAP[$radiusA];
      var $sub=($call7)-($13);
      var $14=$pc_addr;
      var $radiusB=$14+20;
      var $15=FHEAP[$radiusB];
      var $sub8=($sub)-($15);
      var $separation=$this1+4;
      FHEAP[$separation]=$sub8;
      ;
    }
    else if (__label__ == 4) {

      var $normal10=$this1;
      var $16=$xfA_addr;
      var $q=$16+2;
      var $17=$pc_addr;
      var $localNormal=$17+4;
      __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp11, $q, $localNormal);
      var $18=$normal10;
      var $19=$ref_tmp11;
      IHEAP[$18]=IHEAP[$19]; FHEAP[$18]=FHEAP[$19]; ; IHEAP[$18+1]=IHEAP[$19+1]; FHEAP[$18+1]=FHEAP[$19+1]; ;
      var $20=$xfA_addr;
      var $21=$pc_addr;
      var $localPoint12=$21+6;
      __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint, $20, $localPoint12);
      var $22=$xfB_addr;
      var $23=$index_addr;
      var $24=$pc_addr;
      var $localPoints13=$24;
      var $arrayidx14=$localPoints13+($23<<1);
      __Z5b2MulRK11b2TransformRK6b2Vec2($clipPoint, $22, $arrayidx14);
      __ZmiRK6b2Vec2S1_($ref_tmp15, $clipPoint, $planePoint);
      var $normal16=$this1;
      var $call17=__Z5b2DotRK6b2Vec2S1_($ref_tmp15, $normal16);
      var $25=$pc_addr;
      var $radiusA18=$25+19;
      var $26=FHEAP[$radiusA18];
      var $sub19=($call17)-($26);
      var $27=$pc_addr;
      var $radiusB20=$27+20;
      var $28=FHEAP[$radiusB20];
      var $sub21=($sub19)-($28);
      var $separation22=$this1+4;
      FHEAP[$separation22]=$sub21;
      var $point23=$this1+2;
      var $29=$point23;
      var $30=$clipPoint;
      IHEAP[$29]=IHEAP[$30]; FHEAP[$29]=FHEAP[$30]; ; IHEAP[$29+1]=IHEAP[$30+1]; FHEAP[$29+1]=FHEAP[$30+1]; ;
      ;
    }
    else if (__label__ == 5) {

      var $normal25=$this1;
      var $31=$xfB_addr;
      var $q27=$31+2;
      var $32=$pc_addr;
      var $localNormal28=$32+4;
      __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp26, $q27, $localNormal28);
      var $33=$normal25;
      var $34=$ref_tmp26;
      IHEAP[$33]=IHEAP[$34]; FHEAP[$33]=FHEAP[$34]; ; IHEAP[$33+1]=IHEAP[$34+1]; FHEAP[$33+1]=FHEAP[$34+1]; ;
      var $35=$xfB_addr;
      var $36=$pc_addr;
      var $localPoint30=$36+6;
      __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint29, $35, $localPoint30);
      var $37=$xfA_addr;
      var $38=$index_addr;
      var $39=$pc_addr;
      var $localPoints32=$39;
      var $arrayidx33=$localPoints32+($38<<1);
      __Z5b2MulRK11b2TransformRK6b2Vec2($clipPoint31, $37, $arrayidx33);
      __ZmiRK6b2Vec2S1_($ref_tmp34, $clipPoint31, $planePoint29);
      var $normal35=$this1;
      var $call36=__Z5b2DotRK6b2Vec2S1_($ref_tmp34, $normal35);
      var $40=$pc_addr;
      var $radiusA37=$40+19;
      var $41=FHEAP[$radiusA37];
      var $sub38=($call36)-($41);
      var $42=$pc_addr;
      var $radiusB39=$42+20;
      var $43=FHEAP[$radiusB39];
      var $sub40=($sub38)-($43);
      var $separation41=$this1+4;
      FHEAP[$separation41]=$sub40;
      var $point42=$this1+2;
      var $44=$point42;
      var $45=$clipPoint31;
      IHEAP[$44]=IHEAP[$45]; FHEAP[$44]=FHEAP[$45]; ; IHEAP[$44+1]=IHEAP[$45+1]; FHEAP[$44+1]=FHEAP[$45+1]; ;
      var $normal43=$this1;
      var $normal45=$this1;
      __ZNK6b2Vec2ngEv($ref_tmp44, $normal45);
      var $46=$normal43;
      var $47=$ref_tmp44;
      IHEAP[$46]=IHEAP[$47]; FHEAP[$46]=FHEAP[$47]; ; IHEAP[$46+1]=IHEAP[$47+1]; FHEAP[$46+1]=FHEAP[$47+1]; ;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i["X"]=1;

function __ZN15b2ContactSolver27SolveTOIPositionConstraintsEii($this, $toiIndexA, $toiIndexB) {
  var __stackBase__  = STACKTOP; STACKTOP += 43;
  var __label__;

  var $this_addr;
  var $toiIndexA_addr;
  var $toiIndexB_addr;
  var $minSeparation;
  var $i;
  var $pc;
  var $indexA;
  var $indexB;
  var $localCenterA=__stackBase__;
  var $localCenterB=__stackBase__+2;
  var $pointCount;
  var $mA;
  var $iA;
  var $mB;
  var $iB;
  var $cA=__stackBase__+4;
  var $aA;
  var $cB=__stackBase__+6;
  var $aB;
  var $j;
  var $xfA=__stackBase__+8;
  var $xfB=__stackBase__+12;
  var $ref_tmp=__stackBase__+16;
  var $ref_tmp28=__stackBase__+18;
  var $ref_tmp31=__stackBase__+20;
  var $ref_tmp32=__stackBase__+22;
  var $psm=__stackBase__+24;
  var $normal=__stackBase__+29;
  var $point=__stackBase__+31;
  var $separation;
  var $rA=__stackBase__+33;
  var $rB=__stackBase__+35;
  var $C;
  var $rnA;
  var $rnB;
  var $K;
  var $impulse;
  var $P=__stackBase__+37;
  var $ref_tmp48=__stackBase__+39;
  var $ref_tmp52=__stackBase__+41;
  $this_addr=$this;
  $toiIndexA_addr=$toiIndexA;
  $toiIndexB_addr=$toiIndexB;
  var $this1=$this_addr;
  $minSeparation=0;
  $i=0;
  var $0=$i;
  var $m_count=$this1+12;
  var $1=IHEAP[$m_count];
  var $cmp2=($0) < ($1);
  if ($cmp2) { __label__ = 1;; } else { __label__ = 13;; }
  $for_body_lr_ph$$for_end70$25: do { 
    if (__label__ == 1) {

      var $m_positionConstraints=$this1+9;
      var $2=$localCenterA;
      var $3=$localCenterB;
      var $m_positions=$this1+6;
      var $4=$cA;
      var $m_positions16=$this1+6;
      var $m_positions18=$this1+6;
      var $5=$cB;
      var $m_positions21=$this1+6;
      var $m_positions56=$this1+6;
      var $6=$cA;
      var $m_positions59=$this1+6;
      var $m_positions62=$this1+6;
      var $7=$cB;
      var $m_positions65=$this1+6;
      var $q=$xfA+2;
      var $q27=$xfB+2;
      var $p=$xfA;
      var $q29=$xfA+2;
      var $8=$p;
      var $9=$ref_tmp;
      var $p30=$xfB;
      var $q33=$xfB+2;
      var $10=$p30;
      var $11=$ref_tmp31;
      var $normal34=$psm;
      var $12=$normal;
      var $13=$normal34;
      var $point35=$psm+2;
      var $14=$point;
      var $15=$point35;
      var $separation36=$psm+4;
      ;
      $for_body$27: while(1) { 

        var $16=IHEAP[$m_positionConstraints];
        var $17=$i;
        var $add_ptr=$16+$17*22;
        $pc=$add_ptr;
        var $18=$pc;
        var $indexA2=$18+8;
        var $19=IHEAP[$indexA2];
        $indexA=$19;
        var $20=$pc;
        var $indexB3=$20+9;
        var $21=IHEAP[$indexB3];
        $indexB=$21;
        var $22=$pc;
        var $localCenterA4=$22+12;
        var $23=$localCenterA4;
        IHEAP[$2]=IHEAP[$23]; FHEAP[$2]=FHEAP[$23]; ; IHEAP[$2+1]=IHEAP[$23+1]; FHEAP[$2+1]=FHEAP[$23+1]; ;
        var $24=$pc;
        var $localCenterB5=$24+14;
        var $25=$localCenterB5;
        IHEAP[$3]=IHEAP[$25]; FHEAP[$3]=FHEAP[$25]; ; IHEAP[$3+1]=IHEAP[$25+1]; FHEAP[$3+1]=FHEAP[$25+1]; ;
        var $26=$pc;
        var $pointCount6=$26+21;
        var $27=IHEAP[$pointCount6];
        $pointCount=$27;
        $mA=0;
        $iA=0;
        var $28=$indexA;
        var $29=$toiIndexA_addr;
        var $cmp7=($28)==($29);
        if ($cmp7) { __label__ = 4;; } else { __label__ = 3;; }
        $if_then$$lor_lhs_false$29: do { 
          if (__label__ == 3) {

            var $30=$indexA;
            var $31=$toiIndexB_addr;
            var $cmp8=($30)==($31);
            if ($cmp8) { __label__ = 4;break $if_then$$lor_lhs_false$29; } else { __label__ = 5;break $if_then$$lor_lhs_false$29; }
          }
        } while(0);
        $if_then$$if_end$31: do { 
          if (__label__ == 4) {

            var $32=$pc;
            var $invMassA=$32+10;
            var $33=FHEAP[$invMassA];
            $mA=$33;
            var $34=$pc;
            var $invIA=$34+16;
            var $35=FHEAP[$invIA];
            $iA=$35;
            ;
          }
        } while(0);

        var $36=$pc;
        var $invMassB=$36+11;
        var $37=FHEAP[$invMassB];
        $mB=$37;
        var $38=$pc;
        var $invIB=$38+17;
        var $39=FHEAP[$invIB];
        $iB=$39;
        var $40=$indexB;
        var $41=$toiIndexA_addr;
        var $cmp9=($40)==($41);
        if ($cmp9) { __label__ = 7;; } else { __label__ = 6;; }
        $if_then12$$lor_lhs_false10$34: do { 
          if (__label__ == 6) {

            var $42=$indexB;
            var $43=$toiIndexB_addr;
            var $cmp11=($42)==($43);
            if ($cmp11) { __label__ = 7;break $if_then12$$lor_lhs_false10$34; } else { __label__ = 8;break $if_then12$$lor_lhs_false10$34; }
          }
        } while(0);
        $if_then12$$if_end15$36: do { 
          if (__label__ == 7) {

            var $44=$pc;
            var $invMassB13=$44+11;
            var $45=FHEAP[$invMassB13];
            $mB=$45;
            var $46=$pc;
            var $invIB14=$46+17;
            var $47=FHEAP[$invIB14];
            $iB=$47;
            ;
          }
        } while(0);

        var $48=$indexA;
        var $49=IHEAP[$m_positions];
        var $arrayidx=$49+$48*3;
        var $c=$arrayidx;
        var $50=$c;
        IHEAP[$4]=IHEAP[$50]; FHEAP[$4]=FHEAP[$50]; ; IHEAP[$4+1]=IHEAP[$50+1]; FHEAP[$4+1]=FHEAP[$50+1]; ;
        var $51=$indexA;
        var $52=IHEAP[$m_positions16];
        var $arrayidx17=$52+$51*3;
        var $a=$arrayidx17+2;
        var $53=FHEAP[$a];
        $aA=$53;
        var $54=$indexB;
        var $55=IHEAP[$m_positions18];
        var $arrayidx19=$55+$54*3;
        var $c20=$arrayidx19;
        var $56=$c20;
        IHEAP[$5]=IHEAP[$56]; FHEAP[$5]=FHEAP[$56]; ; IHEAP[$5+1]=IHEAP[$56+1]; FHEAP[$5+1]=FHEAP[$56+1]; ;
        var $57=$indexB;
        var $58=IHEAP[$m_positions21];
        var $arrayidx22=$58+$57*3;
        var $a23=$arrayidx22+2;
        var $59=FHEAP[$a23];
        $aB=$59;
        $j=0;
        var $60=$j;
        var $61=$pointCount;
        var $cmp251=($60) < ($61);
        if ($cmp251) { __label__ = 9;; } else { __label__ = 12;; }
        $for_body26$$for_end$39: do { 
          if (__label__ == 9) {
            $for_body26$40: while(1) { 

              __ZN11b2TransformC1Ev($xfA);
              __ZN11b2TransformC1Ev($xfB);
              var $62=$aA;
              __ZN5b2Rot3SetEf($q, $62);
              var $63=$aB;
              __ZN5b2Rot3SetEf($q27, $63);
              __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp28, $q29, $localCenterA);
              __ZmiRK6b2Vec2S1_($ref_tmp, $cA, $ref_tmp28);
              IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
              __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp32, $q33, $localCenterB);
              __ZmiRK6b2Vec2S1_($ref_tmp31, $cB, $ref_tmp32);
              IHEAP[$10]=IHEAP[$11]; FHEAP[$10]=FHEAP[$11]; ; IHEAP[$10+1]=IHEAP[$11+1]; FHEAP[$10+1]=FHEAP[$11+1]; ;
              __ZN24b2PositionSolverManifoldC1Ev($psm);
              var $64=$pc;
              var $65=$j;
              __ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i($psm, $64, $xfA, $xfB, $65);
              IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
              IHEAP[$14]=IHEAP[$15]; FHEAP[$14]=FHEAP[$15]; ; IHEAP[$14+1]=IHEAP[$15+1]; FHEAP[$14+1]=FHEAP[$15+1]; ;
              var $66=FHEAP[$separation36];
              $separation=$66;
              __ZmiRK6b2Vec2S1_($rA, $point, $cA);
              __ZmiRK6b2Vec2S1_($rB, $point, $cB);
              var $67=$minSeparation;
              var $68=$separation;
              var $call=__Z5b2MinIfET_S0_S0_($67, $68);
              $minSeparation=$call;
              var $69=$separation;
              var $add=($69)+0.004999999888241291;
              var $mul=($add)*0.75;
              var $call37=__Z7b2ClampIfET_S0_S0_S0_($mul, -0.20000000298023224, 0);
              $C=$call37;
              var $call38=__Z7b2CrossRK6b2Vec2S1_($rA, $normal);
              $rnA=$call38;
              var $call39=__Z7b2CrossRK6b2Vec2S1_($rB, $normal);
              $rnB=$call39;
              var $70=$mA;
              var $71=$mB;
              var $add40=($70)+($71);
              var $72=$iA;
              var $73=$rnA;
              var $mul41=($72)*($73);
              var $74=$rnA;
              var $mul42=($mul41)*($74);
              var $add43=($add40)+($mul42);
              var $75=$iB;
              var $76=$rnB;
              var $mul44=($75)*($76);
              var $77=$rnB;
              var $mul45=($mul44)*($77);
              var $add46=($add43)+($mul45);
              $K=$add46;
              var $cmp47=($add46) > 0;
              if ($cmp47) { __label__ = 10;; } else { var $cond = 0;__label__ = 11;; }
              $cond_true$$cond_end$42: do { 
                if (__label__ == 10) {

                  var $78=$C;
                  var $sub=(-($78));
                  var $79=$K;
                  var $div=($sub)/($79);
                  var $cond = $div;;
                }
              } while(0);

              var $cond;
              $impulse=$cond;
              var $80=$impulse;
              __ZmlfRK6b2Vec2($P, $80, $normal);
              var $81=$mA;
              __ZmlfRK6b2Vec2($ref_tmp48, $81, $P);
              __ZN6b2Vec2mIERKS_($cA, $ref_tmp48);
              var $82=$iA;
              var $call49=__Z7b2CrossRK6b2Vec2S1_($rA, $P);
              var $mul50=($82)*($call49);
              var $83=$aA;
              var $sub51=($83)-($mul50);
              $aA=$sub51;
              var $84=$mB;
              __ZmlfRK6b2Vec2($ref_tmp52, $84, $P);
              __ZN6b2Vec2pLERKS_($cB, $ref_tmp52);
              var $85=$iB;
              var $call53=__Z7b2CrossRK6b2Vec2S1_($rB, $P);
              var $mul54=($85)*($call53);
              var $86=$aB;
              var $add55=($86)+($mul54);
              $aB=$add55;
              var $87=$j;
              var $inc=($87)+1;
              $j=$inc;
              var $88=$j;
              var $89=$pointCount;
              var $cmp25=($88) < ($89);
              if (!($cmp25)) { __label__ = 12;break $for_body26$$for_end$39; }
            }
          }
        } while(0);

        var $90=$indexA;
        var $91=IHEAP[$m_positions56];
        var $arrayidx57=$91+$90*3;
        var $c58=$arrayidx57;
        var $92=$c58;
        IHEAP[$92]=IHEAP[$6]; FHEAP[$92]=FHEAP[$6]; ; IHEAP[$92+1]=IHEAP[$6+1]; FHEAP[$92+1]=FHEAP[$6+1]; ;
        var $93=$aA;
        var $94=$indexA;
        var $95=IHEAP[$m_positions59];
        var $arrayidx60=$95+$94*3;
        var $a61=$arrayidx60+2;
        FHEAP[$a61]=$93;
        var $96=$indexB;
        var $97=IHEAP[$m_positions62];
        var $arrayidx63=$97+$96*3;
        var $c64=$arrayidx63;
        var $98=$c64;
        IHEAP[$98]=IHEAP[$7]; FHEAP[$98]=FHEAP[$7]; ; IHEAP[$98+1]=IHEAP[$7+1]; FHEAP[$98+1]=FHEAP[$7+1]; ;
        var $99=$aB;
        var $100=$indexB;
        var $101=IHEAP[$m_positions65];
        var $arrayidx66=$101+$100*3;
        var $a67=$arrayidx66+2;
        FHEAP[$a67]=$99;
        var $102=$i;
        var $inc69=($102)+1;
        $i=$inc69;
        var $103=$i;
        var $104=IHEAP[$m_count];
        var $cmp=($103) < ($104);
        if (!($cmp)) { __label__ = 13;break $for_body_lr_ph$$for_end70$25; }
      }
    }
  } while(0);

  var $105=$minSeparation;
  var $cmp71=($105) >= -0.007499999832361937;
  STACKTOP = __stackBase__;
  return $cmp71;
  return null;
}
__ZN15b2ContactSolver27SolveTOIPositionConstraintsEii["X"]=1;

function __ZN9b2SimplexC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN9b2SimplexC2Ev($this1);
  ;
  return;
  return;
}


function __ZN15b2DistanceProxy3SetEPK7b2Shapei($this, $shape, $index) {
  ;
  var __label__;

  var $this_addr;
  var $shape_addr;
  var $index_addr;
  var $circle;
  var $polygon;
  var $chain;
  var $edge;
  $this_addr=$this;
  $shape_addr=$shape;
  $index_addr=$index;
  var $this1=$this_addr;
  var $0=$shape_addr;
  var $call=__ZNK7b2Shape7GetTypeEv($0);
  if ($call == 0) {
    __label__ = 1;;
  }
  else if ($call == 2) {
    __label__ = 2;;
  }
  else if ($call == 3) {
    __label__ = 3;;
  }
  else if ($call == 1) {
    __label__ = 10;;
  }
  else {
  __label__ = 11;;
  }
  
  $sw_default$$sw_bb$$sw_bb3$$sw_bb9$$sw_bb31$2: do { 
    if (__label__ == 11) {

      ___assert_func(__str83, 81, ___PRETTY_FUNCTION____ZN15b2DistanceProxy3SetEPK7b2Shapei, __str2368);
      ;
    }
    else if (__label__ == 1) {

      var $1=$shape_addr;
      var $2=$1;
      $circle=$2;
      var $3=$circle;
      var $m_p=$3+3;
      var $m_vertices=$this1+4;
      IHEAP[$m_vertices]=$m_p;
      var $m_count=$this1+5;
      IHEAP[$m_count]=1;
      var $4=$circle;
      var $5=$4;
      var $m_radius=$5+2;
      var $6=FHEAP[$m_radius];
      var $m_radius2=$this1+6;
      FHEAP[$m_radius2]=$6;
      ;
    }
    else if (__label__ == 2) {

      var $7=$shape_addr;
      var $8=$7;
      $polygon=$8;
      var $9=$polygon;
      var $m_vertices4=$9+5;
      var $arraydecay=$m_vertices4;
      var $m_vertices5=$this1+4;
      IHEAP[$m_vertices5]=$arraydecay;
      var $10=$polygon;
      var $m_vertexCount=$10+37;
      var $11=IHEAP[$m_vertexCount];
      var $m_count6=$this1+5;
      IHEAP[$m_count6]=$11;
      var $12=$polygon;
      var $13=$12;
      var $m_radius7=$13+2;
      var $14=FHEAP[$m_radius7];
      var $m_radius8=$this1+6;
      FHEAP[$m_radius8]=$14;
      ;
    }
    else if (__label__ == 3) {

      var $15=$shape_addr;
      var $16=$15;
      $chain=$16;
      var $17=$index_addr;
      var $cmp=0 <= ($17);
      if ($cmp) { __label__ = 4;; } else { __label__ = 5;; }
      $land_lhs_true$$cond_false$7: do { 
        if (__label__ == 4) {

          var $18=$index_addr;
          var $19=$chain;
          var $m_count10=$19+4;
          var $20=IHEAP[$m_count10];
          var $cmp11=($18) < ($20);
          if ($cmp11) { __label__ = 6;break $land_lhs_true$$cond_false$7; } else { __label__ = 5;break $land_lhs_true$$cond_false$7; }
        }
      } while(0);
      $cond_end$$cond_false$9: do { 
        if (__label__ == 5) {

          ___assert_func(__str83, 53, ___PRETTY_FUNCTION____ZN15b2DistanceProxy3SetEPK7b2Shapei, __str184);
          ;
        }
      } while(0);

      var $m_buffer=$this1;
      var $arrayidx=$m_buffer;
      var $21=$index_addr;
      var $22=$chain;
      var $m_vertices12=$22+3;
      var $23=IHEAP[$m_vertices12];
      var $arrayidx13=$23+($21<<1);
      var $24=$arrayidx;
      var $25=$arrayidx13;
      IHEAP[$24]=IHEAP[$25]; FHEAP[$24]=FHEAP[$25]; ; IHEAP[$24+1]=IHEAP[$25+1]; FHEAP[$24+1]=FHEAP[$25+1]; ;
      var $26=$index_addr;
      var $add=($26)+1;
      var $27=$chain;
      var $m_count14=$27+4;
      var $28=IHEAP[$m_count14];
      var $cmp15=($add) < ($28);
      var $m_buffer16=$this1;
      var $arrayidx17=$m_buffer16+2;
      if ($cmp15) { __label__ = 7;; } else { __label__ = 8;; }
      $if_then$$if_else$12: do { 
        if (__label__ == 7) {

          var $29=$index_addr;
          var $add18=($29)+1;
          var $30=$chain;
          var $m_vertices19=$30+3;
          var $31=IHEAP[$m_vertices19];
          var $arrayidx20=$31+($add18<<1);
          var $32=$arrayidx17;
          var $33=$arrayidx20;
          IHEAP[$32]=IHEAP[$33]; FHEAP[$32]=FHEAP[$33]; ; IHEAP[$32+1]=IHEAP[$33+1]; FHEAP[$32+1]=FHEAP[$33+1]; ;
          ;
        }
        else if (__label__ == 8) {

          var $34=$chain;
          var $m_vertices23=$34+3;
          var $35=IHEAP[$m_vertices23];
          var $arrayidx24=$35;
          var $36=$arrayidx17;
          var $37=$arrayidx24;
          IHEAP[$36]=IHEAP[$37]; FHEAP[$36]=FHEAP[$37]; ; IHEAP[$36+1]=IHEAP[$37+1]; FHEAP[$36+1]=FHEAP[$37+1]; ;
          ;
        }
      } while(0);

      var $m_buffer25=$this1;
      var $arraydecay26=$m_buffer25;
      var $m_vertices27=$this1+4;
      IHEAP[$m_vertices27]=$arraydecay26;
      var $m_count28=$this1+5;
      IHEAP[$m_count28]=2;
      var $38=$chain;
      var $39=$38;
      var $m_radius29=$39+2;
      var $40=FHEAP[$m_radius29];
      var $m_radius30=$this1+6;
      FHEAP[$m_radius30]=$40;
      ;
    }
    else if (__label__ == 10) {

      var $41=$shape_addr;
      var $42=$41;
      $edge=$42;
      var $43=$edge;
      var $m_vertex1=$43+3;
      var $m_vertices32=$this1+4;
      IHEAP[$m_vertices32]=$m_vertex1;
      var $m_count33=$this1+5;
      IHEAP[$m_count33]=2;
      var $44=$edge;
      var $45=$44;
      var $m_radius34=$45+2;
      var $46=FHEAP[$m_radius34];
      var $m_radius35=$this1+6;
      FHEAP[$m_radius35]=$46;
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN15b2DistanceProxy3SetEPK7b2Shapei["X"]=1;

function __ZN9b2Simplex6Solve2Ev($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $w1=__stackBase__;
  var $w2=__stackBase__+2;
  var $e12=__stackBase__+4;
  var $d12_2;
  var $d12_1;
  var $inv_d12;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_v1=$this1;
  var $w=$m_v1+4;
  var $0=$w1;
  var $1=$w;
  IHEAP[$0]=IHEAP[$1]; FHEAP[$0]=FHEAP[$1]; ; IHEAP[$0+1]=IHEAP[$1+1]; FHEAP[$0+1]=FHEAP[$1+1]; ;
  var $m_v2=$this1+9;
  var $w3=$m_v2+4;
  var $2=$w2;
  var $3=$w3;
  IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
  __ZmiRK6b2Vec2S1_($e12, $w2, $w1);
  var $call=__Z5b2DotRK6b2Vec2S1_($w1, $e12);
  var $sub=(-($call));
  $d12_2=$sub;
  var $4=$d12_2;
  var $cmp=($4) <= 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$19: do { 
    if (__label__ == 1) {

      var $m_v14=$this1;
      var $a=$m_v14+6;
      FHEAP[$a]=1;
      var $m_count=$this1+27;
      IHEAP[$m_count]=1;
      ;
    }
    else if (__label__ == 2) {

      var $call5=__Z5b2DotRK6b2Vec2S1_($w2, $e12);
      $d12_1=$call5;
      var $5=$d12_1;
      var $cmp6=($5) <= 0;
      if ($cmp6) { __label__ = 3;; } else { __label__ = 4;; }
      $if_then7$$if_end13$22: do { 
        if (__label__ == 3) {

          var $m_v28=$this1+9;
          var $a9=$m_v28+6;
          FHEAP[$a9]=1;
          var $m_count10=$this1+27;
          IHEAP[$m_count10]=1;
          var $m_v111=$this1;
          var $m_v212=$this1+9;
          var $6=$m_v111;
          var $7=$m_v212;
          for (var mcpi_s=$7,mcpi_e=$7+9,mcpi_d=$6; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
            IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
          };
          ;
        }
        else if (__label__ == 4) {

          var $8=$d12_1;
          var $9=$d12_2;
          var $add=($8)+($9);
          var $div=1/($add);
          $inv_d12=$div;
          var $10=$d12_1;
          var $11=$inv_d12;
          var $mul=($10)*($11);
          var $m_v114=$this1;
          var $a15=$m_v114+6;
          FHEAP[$a15]=$mul;
          var $12=$d12_2;
          var $13=$inv_d12;
          var $mul16=($12)*($13);
          var $m_v217=$this1+9;
          var $a18=$m_v217+6;
          FHEAP[$a18]=$mul16;
          var $m_count19=$this1+27;
          IHEAP[$m_count19]=2;
          ;
        }
      } while(0);
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN9b2Simplex6Solve2Ev["X"]=1;

function __ZN9b2Simplex6Solve3Ev($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 12;
  var __label__;

  var $this_addr;
  var $w1=__stackBase__;
  var $w2=__stackBase__+2;
  var $w34=__stackBase__+4;
  var $e12=__stackBase__+6;
  var $w1e12;
  var $w2e12;
  var $d12_1;
  var $d12_2;
  var $e13=__stackBase__+8;
  var $w1e13;
  var $w3e13;
  var $d13_1;
  var $d13_2;
  var $e23=__stackBase__+10;
  var $w2e23;
  var $w3e23;
  var $d23_1;
  var $d23_2;
  var $n123;
  var $d123_1;
  var $d123_2;
  var $d123_3;
  var $inv_d12;
  var $inv_d13;
  var $inv_d23;
  var $inv_d123;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_v1=$this1;
  var $w=$m_v1+4;
  var $0=$w1;
  var $1=$w;
  IHEAP[$0]=IHEAP[$1]; FHEAP[$0]=FHEAP[$1]; ; IHEAP[$0+1]=IHEAP[$1+1]; FHEAP[$0+1]=FHEAP[$1+1]; ;
  var $m_v2=$this1+9;
  var $w3=$m_v2+4;
  var $2=$w2;
  var $3=$w3;
  IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
  var $m_v3=$this1+18;
  var $w5=$m_v3+4;
  var $4=$w34;
  var $5=$w5;
  IHEAP[$4]=IHEAP[$5]; FHEAP[$4]=FHEAP[$5]; ; IHEAP[$4+1]=IHEAP[$5+1]; FHEAP[$4+1]=FHEAP[$5+1]; ;
  __ZmiRK6b2Vec2S1_($e12, $w2, $w1);
  var $call=__Z5b2DotRK6b2Vec2S1_($w1, $e12);
  $w1e12=$call;
  var $call6=__Z5b2DotRK6b2Vec2S1_($w2, $e12);
  $w2e12=$call6;
  var $6=$w2e12;
  $d12_1=$6;
  var $7=$w1e12;
  var $sub=(-($7));
  $d12_2=$sub;
  __ZmiRK6b2Vec2S1_($e13, $w34, $w1);
  var $call7=__Z5b2DotRK6b2Vec2S1_($w1, $e13);
  $w1e13=$call7;
  var $call8=__Z5b2DotRK6b2Vec2S1_($w34, $e13);
  $w3e13=$call8;
  var $8=$w3e13;
  $d13_1=$8;
  var $9=$w1e13;
  var $sub9=(-($9));
  $d13_2=$sub9;
  __ZmiRK6b2Vec2S1_($e23, $w34, $w2);
  var $call10=__Z5b2DotRK6b2Vec2S1_($w2, $e23);
  $w2e23=$call10;
  var $call11=__Z5b2DotRK6b2Vec2S1_($w34, $e23);
  $w3e23=$call11;
  var $10=$w3e23;
  $d23_1=$10;
  var $11=$w2e23;
  var $sub12=(-($11));
  $d23_2=$sub12;
  var $call13=__Z7b2CrossRK6b2Vec2S1_($e12, $e13);
  $n123=$call13;
  var $12=$n123;
  var $call14=__Z7b2CrossRK6b2Vec2S1_($w2, $w34);
  var $mul=($12)*($call14);
  $d123_1=$mul;
  var $13=$n123;
  var $call15=__Z7b2CrossRK6b2Vec2S1_($w34, $w1);
  var $mul16=($13)*($call15);
  $d123_2=$mul16;
  var $14=$n123;
  var $call17=__Z7b2CrossRK6b2Vec2S1_($w1, $w2);
  var $mul18=($14)*($call17);
  $d123_3=$mul18;
  var $15=$d12_2;
  var $cmp=($15) <= 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 3;; }
  $land_lhs_true$$if_end$27: do { 
    if (__label__ == 1) {

      var $16=$d13_2;
      var $cmp19=($16) <= 0;
      if (!($cmp19)) { __label__ = 3;break $land_lhs_true$$if_end$27; }

      var $m_v120=$this1;
      var $a=$m_v120+6;
      FHEAP[$a]=1;
      var $m_count=$this1+27;
      IHEAP[$m_count]=1;
      __label__ = 21;break $land_lhs_true$$if_end$27;
    }
  } while(0);
  $return$$if_end$30: do { 
    if (__label__ == 3) {

      var $17=$d12_1;
      var $cmp21=($17) > 0;
      if ($cmp21) { __label__ = 4;; } else { __label__ = 7;; }
      $land_lhs_true22$$if_end34$32: do { 
        if (__label__ == 4) {

          var $18=$d12_2;
          var $cmp23=($18) > 0;
          if (!($cmp23)) { __label__ = 7;break $land_lhs_true22$$if_end34$32; }

          var $19=$d123_3;
          var $cmp25=($19) <= 0;
          if (!($cmp25)) { __label__ = 7;break $land_lhs_true22$$if_end34$32; }

          var $20=$d12_1;
          var $21=$d12_2;
          var $add=($20)+($21);
          var $div=1/($add);
          $inv_d12=$div;
          var $22=$d12_1;
          var $23=$inv_d12;
          var $mul27=($22)*($23);
          var $m_v128=$this1;
          var $a29=$m_v128+6;
          FHEAP[$a29]=$mul27;
          var $24=$d12_2;
          var $25=$inv_d12;
          var $mul30=($24)*($25);
          var $m_v231=$this1+9;
          var $a32=$m_v231+6;
          FHEAP[$a32]=$mul30;
          var $m_count33=$this1+27;
          IHEAP[$m_count33]=2;
          __label__ = 21;break $return$$if_end$30;
        }
      } while(0);

      var $26=$d13_1;
      var $cmp35=($26) > 0;
      if ($cmp35) { __label__ = 8;; } else { __label__ = 11;; }
      $land_lhs_true36$$if_end52$37: do { 
        if (__label__ == 8) {

          var $27=$d13_2;
          var $cmp37=($27) > 0;
          if (!($cmp37)) { __label__ = 11;break $land_lhs_true36$$if_end52$37; }

          var $28=$d123_2;
          var $cmp39=($28) <= 0;
          if (!($cmp39)) { __label__ = 11;break $land_lhs_true36$$if_end52$37; }

          var $29=$d13_1;
          var $30=$d13_2;
          var $add41=($29)+($30);
          var $div42=1/($add41);
          $inv_d13=$div42;
          var $31=$d13_1;
          var $32=$inv_d13;
          var $mul43=($31)*($32);
          var $m_v144=$this1;
          var $a45=$m_v144+6;
          FHEAP[$a45]=$mul43;
          var $33=$d13_2;
          var $34=$inv_d13;
          var $mul46=($33)*($34);
          var $m_v347=$this1+18;
          var $a48=$m_v347+6;
          FHEAP[$a48]=$mul46;
          var $m_count49=$this1+27;
          IHEAP[$m_count49]=2;
          var $m_v250=$this1+9;
          var $m_v351=$this1+18;
          var $35=$m_v250;
          var $36=$m_v351;
          for (var mcpi_s=$36,mcpi_e=$36+9,mcpi_d=$35; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
            IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
          };
          __label__ = 21;break $return$$if_end$30;
        }
      } while(0);

      var $37=$d12_1;
      var $cmp53=($37) <= 0;
      if ($cmp53) { __label__ = 12;; } else { __label__ = 14;; }
      $land_lhs_true54$$if_end62$42: do { 
        if (__label__ == 12) {

          var $38=$d23_2;
          var $cmp55=($38) <= 0;
          if (!($cmp55)) { __label__ = 14;break $land_lhs_true54$$if_end62$42; }

          var $m_v257=$this1+9;
          var $a58=$m_v257+6;
          FHEAP[$a58]=1;
          var $m_count59=$this1+27;
          IHEAP[$m_count59]=1;
          var $m_v160=$this1;
          var $m_v261=$this1+9;
          var $39=$m_v160;
          var $40=$m_v261;
          for (var mcpi_s=$40,mcpi_e=$40+9,mcpi_d=$39; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
            IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
          };
          __label__ = 21;break $return$$if_end$30;
        }
      } while(0);

      var $41=$d13_1;
      var $cmp63=($41) <= 0;
      var $42=$d23_1;
      var $cmp65=($42) <= 0;
      var $or_cond=($cmp63) & ($cmp65);
      if ($or_cond) { __label__ = 15;; } else { __label__ = 16;; }
      $if_then66$$if_end72$46: do { 
        if (__label__ == 15) {

          var $m_v367=$this1+18;
          var $a68=$m_v367+6;
          FHEAP[$a68]=1;
          var $m_count69=$this1+27;
          IHEAP[$m_count69]=1;
          var $m_v170=$this1;
          var $m_v371=$this1+18;
          var $43=$m_v170;
          var $44=$m_v371;
          for (var mcpi_s=$44,mcpi_e=$44+9,mcpi_d=$43; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
            IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
          };
          ;
        }
        else if (__label__ == 16) {

          var $cmp73=($42) > 0;
          if ($cmp73) { __label__ = 17;; } else { __label__ = 20;; }
          $land_lhs_true74$$if_end90$49: do { 
            if (__label__ == 17) {

              var $45=$d23_2;
              var $cmp75=($45) > 0;
              if (!($cmp75)) { __label__ = 20;break $land_lhs_true74$$if_end90$49; }

              var $46=$d123_1;
              var $cmp77=($46) <= 0;
              if (!($cmp77)) { __label__ = 20;break $land_lhs_true74$$if_end90$49; }

              var $47=$d23_1;
              var $48=$d23_2;
              var $add79=($47)+($48);
              var $div80=1/($add79);
              $inv_d23=$div80;
              var $49=$d23_1;
              var $50=$inv_d23;
              var $mul81=($49)*($50);
              var $m_v282=$this1+9;
              var $a83=$m_v282+6;
              FHEAP[$a83]=$mul81;
              var $51=$d23_2;
              var $52=$inv_d23;
              var $mul84=($51)*($52);
              var $m_v385=$this1+18;
              var $a86=$m_v385+6;
              FHEAP[$a86]=$mul84;
              var $m_count87=$this1+27;
              IHEAP[$m_count87]=2;
              var $m_v188=$this1;
              var $m_v389=$this1+18;
              var $53=$m_v188;
              var $54=$m_v389;
              for (var mcpi_s=$54,mcpi_e=$54+9,mcpi_d=$53; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
                IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
              };
              __label__ = 21;break $return$$if_end$30;
            }
          } while(0);

          var $55=$d123_1;
          var $56=$d123_2;
          var $add91=($55)+($56);
          var $57=$d123_3;
          var $add92=($add91)+($57);
          var $div93=1/($add92);
          $inv_d123=$div93;
          var $58=$d123_1;
          var $59=$inv_d123;
          var $mul94=($58)*($59);
          var $m_v195=$this1;
          var $a96=$m_v195+6;
          FHEAP[$a96]=$mul94;
          var $60=$d123_2;
          var $61=$inv_d123;
          var $mul97=($60)*($61);
          var $m_v298=$this1+9;
          var $a99=$m_v298+6;
          FHEAP[$a99]=$mul97;
          var $62=$d123_3;
          var $63=$inv_d123;
          var $mul100=($62)*($63);
          var $m_v3101=$this1+18;
          var $a102=$m_v3101+6;
          FHEAP[$a102]=$mul100;
          var $m_count103=$this1+27;
          IHEAP[$m_count103]=3;
          ;
        }
      } while(0);
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN9b2Simplex6Solve3Ev["X"]=1;

function __Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput($output, $cache, $input) {
  var __stackBase__  = STACKTOP; STACKTOP += 72;
  var __label__;

  var $output_addr;
  var $cache_addr;
  var $input_addr;
  var $proxyA;
  var $proxyB;
  var $transformA=__stackBase__;
  var $transformB=__stackBase__+4;
  var $simplex=__stackBase__+8;
  var $vertices;
  var $k_maxIters;
  var $saveA=__stackBase__+36;
  var $saveB=__stackBase__+39;
  var $saveCount;
  var $closestPoint=__stackBase__+42;
  var $distanceSqr1;
  var $distanceSqr2;
  var $iter;
  var $i;
  var $p=__stackBase__+44;
  var $d=__stackBase__+46;
  var $vertex;
  var $ref_tmp=__stackBase__+48;
  var $ref_tmp23=__stackBase__+50;
  var $ref_tmp26=__stackBase__+52;
  var $wBLocal=__stackBase__+54;
  var $ref_tmp29=__stackBase__+56;
  var $ref_tmp33=__stackBase__+58;
  var $ref_tmp36=__stackBase__+60;
  var $duplicate;
  var $i41;
  var $rA;
  var $rB;
  var $normal=__stackBase__+62;
  var $ref_tmp79=__stackBase__+64;
  var $ref_tmp81=__stackBase__+66;
  var $p82=__stackBase__+68;
  var $ref_tmp83=__stackBase__+70;
  $output_addr=$output;
  $cache_addr=$cache;
  $input_addr=$input;
  var $0=IHEAP[_b2_gjkCalls];
  var $inc=($0)+1;
  IHEAP[_b2_gjkCalls]=$inc;
  var $1=$input_addr;
  var $proxyA1=$1;
  $proxyA=$proxyA1;
  var $2=$input_addr;
  var $proxyB2=$2+7;
  $proxyB=$proxyB2;
  var $3=$input_addr;
  var $transformA3=$3+14;
  var $4=$transformA;
  var $5=$transformA3;
  IHEAP[$4]=IHEAP[$5]; FHEAP[$4]=FHEAP[$5]; ; IHEAP[$4+1]=IHEAP[$5+1]; FHEAP[$4+1]=FHEAP[$5+1]; ; IHEAP[$4+2]=IHEAP[$5+2]; FHEAP[$4+2]=FHEAP[$5+2]; ; IHEAP[$4+3]=IHEAP[$5+3]; FHEAP[$4+3]=FHEAP[$5+3]; ;
  var $6=$input_addr;
  var $transformB4=$6+18;
  var $7=$transformB;
  var $8=$transformB4;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ; IHEAP[$7+2]=IHEAP[$8+2]; FHEAP[$7+2]=FHEAP[$8+2]; ; IHEAP[$7+3]=IHEAP[$8+3]; FHEAP[$7+3]=FHEAP[$8+3]; ;
  __ZN9b2SimplexC1Ev($simplex);
  var $9=$cache_addr;
  var $10=$proxyA;
  var $11=$proxyB;
  __ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_($simplex, $9, $10, $transformA, $11, $transformB);
  var $m_v1=$simplex;
  $vertices=$m_v1;
  $k_maxIters=20;
  $saveCount=0;
  __ZNK9b2Simplex15GetClosestPointEv($closestPoint, $simplex);
  var $call=__ZNK6b2Vec213LengthSquaredEv($closestPoint);
  $distanceSqr1=$call;
  var $12=$distanceSqr1;
  $distanceSqr2=$12;
  $iter=0;
  var $m_count=$simplex+27;
  var $m_count10=$simplex+27;
  var $m_count12=$simplex+27;
  var $m_count22=$simplex+27;
  var $q=$transformA+2;
  var $13=$ref_tmp26;
  var $q30=$transformB+2;
  var $14=$ref_tmp33;
  var $15=$ref_tmp36;
  var $m_count58=$simplex+27;
  var $16 = 0;;
  $while_cond$56: while(1) { 

    var $16;
    var $cmp=($16) < 20;
    if (!($cmp)) { __label__ = 18;break $while_cond$56; }

    var $17=IHEAP[$m_count];
    $saveCount=$17;
    $i=0;
    var $18=$i;
    var $19=$saveCount;
    var $cmp51=($18) < ($19);
    if ($cmp51) { __label__ = 3;; } else { __label__ = 4;; }
    $for_body$$for_end$59: do { 
      if (__label__ == 3) {
        $for_body$60: while(1) { 

          var $20=$i;
          var $21=$vertices;
          var $arrayidx=$21+$20*9;
          var $indexA=$arrayidx+7;
          var $22=IHEAP[$indexA];
          var $23=$i;
          var $arrayidx6=$saveA+$23;
          IHEAP[$arrayidx6]=$22;
          var $24=$i;
          var $25=$vertices;
          var $arrayidx7=$25+$24*9;
          var $indexB=$arrayidx7+8;
          var $26=IHEAP[$indexB];
          var $27=$i;
          var $arrayidx8=$saveB+$27;
          IHEAP[$arrayidx8]=$26;
          var $28=$i;
          var $inc9=($28)+1;
          $i=$inc9;
          var $29=$i;
          var $30=$saveCount;
          var $cmp5=($29) < ($30);
          if (!($cmp5)) { __label__ = 4;break $for_body$$for_end$59; }
        }
      }
    } while(0);

    var $31=IHEAP[$m_count10];
    if ($31 == 1) {
      __label__ = 9;;
    }
    else if ($31 == 2) {
      __label__ = 5;;
    }
    else if ($31 == 3) {
      __label__ = 6;;
    }
    else {
    __label__ = 7;;
    }
    
    $sw_default$$if_end$$sw_bb$$sw_bb11$63: do { 
      if (__label__ == 7) {

        ___assert_func(__str83, 498, ___PRETTY_FUNCTION____Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput, __str2368);
        __label__ = 8;break $sw_default$$if_end$$sw_bb$$sw_bb11$63;
      }
      else if (__label__ == 5) {

        __ZN9b2Simplex6Solve2Ev($simplex);
        __label__ = 8;break $sw_default$$if_end$$sw_bb$$sw_bb11$63;
      }
      else if (__label__ == 6) {

        __ZN9b2Simplex6Solve3Ev($simplex);
        __label__ = 8;break $sw_default$$if_end$$sw_bb$$sw_bb11$63;
      }
    } while(0);
    $sw_epilog$$if_end$67: do { 
      if (__label__ == 8) {

        var $_pr2=IHEAP[$m_count12];
        var $cmp13=($_pr2)==3;
        if ($cmp13) { __label__ = 18;break $while_cond$56; }
      }
    } while(0);

    __ZNK9b2Simplex15GetClosestPointEv($p, $simplex);
    var $call14=__ZNK6b2Vec213LengthSquaredEv($p);
    $distanceSqr2=$call14;
    var $32=$distanceSqr2;
    $distanceSqr1=$32;
    __ZNK9b2Simplex18GetSearchDirectionEv($d, $simplex);
    var $call18=__ZNK6b2Vec213LengthSquaredEv($d);
    var $cmp19=($call18) < 1.4210854715202004e-14;
    if ($cmp19) { __label__ = 18;break $while_cond$56; }

    var $33=$vertices;
    var $34=IHEAP[$m_count22];
    var $add_ptr=$33+$34*9;
    $vertex=$add_ptr;
    var $35=$proxyA;
    __ZNK6b2Vec2ngEv($ref_tmp23, $d);
    __Z6b2MulTRK5b2RotRK6b2Vec2($ref_tmp, $q, $ref_tmp23);
    var $call24=__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($35, $ref_tmp);
    var $36=$vertex;
    var $indexA25=$36+7;
    IHEAP[$indexA25]=$call24;
    var $37=$vertex;
    var $wA=$37;
    var $38=$proxyA;
    var $39=$vertex;
    var $indexA27=$39+7;
    var $40=IHEAP[$indexA27];
    var $call28=__ZNK15b2DistanceProxy9GetVertexEi($38, $40);
    __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp26, $transformA, $call28);
    var $41=$wA;
    IHEAP[$41]=IHEAP[$13]; FHEAP[$41]=FHEAP[$13]; ; IHEAP[$41+1]=IHEAP[$13+1]; FHEAP[$41+1]=FHEAP[$13+1]; ;
    __ZN6b2Vec2C1Ev($wBLocal);
    var $42=$proxyB;
    __Z6b2MulTRK5b2RotRK6b2Vec2($ref_tmp29, $q30, $d);
    var $call31=__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($42, $ref_tmp29);
    var $43=$vertex;
    var $indexB32=$43+8;
    IHEAP[$indexB32]=$call31;
    var $44=$vertex;
    var $wB=$44+2;
    var $45=$proxyB;
    var $46=$vertex;
    var $indexB34=$46+8;
    var $47=IHEAP[$indexB34];
    var $call35=__ZNK15b2DistanceProxy9GetVertexEi($45, $47);
    __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp33, $transformB, $call35);
    var $48=$wB;
    IHEAP[$48]=IHEAP[$14]; FHEAP[$48]=FHEAP[$14]; ; IHEAP[$48+1]=IHEAP[$14+1]; FHEAP[$48+1]=FHEAP[$14+1]; ;
    var $49=$vertex;
    var $w=$49+4;
    var $50=$vertex;
    var $wB37=$50+2;
    var $51=$vertex;
    var $wA38=$51;
    __ZmiRK6b2Vec2S1_($ref_tmp36, $wB37, $wA38);
    var $52=$w;
    IHEAP[$52]=IHEAP[$15]; FHEAP[$52]=FHEAP[$15]; ; IHEAP[$52+1]=IHEAP[$15+1]; FHEAP[$52+1]=FHEAP[$15+1]; ;
    var $53=$iter;
    var $inc39=($53)+1;
    $iter=$inc39;
    var $54=IHEAP[_b2_gjkIters];
    var $inc40=($54)+1;
    IHEAP[_b2_gjkIters]=$inc40;
    $duplicate=0;
    $i41=0;
    ;
    $for_cond42$71: while(1) { 

      var $55=$i41;
      var $56=$saveCount;
      var $cmp43=($55) < ($56);
      if (!($cmp43)) { __label__ = 16;break $for_cond42$71; }

      var $57=$vertex;
      var $indexA45=$57+7;
      var $58=IHEAP[$indexA45];
      var $59=$i41;
      var $arrayidx46=$saveA+$59;
      var $60=IHEAP[$arrayidx46];
      var $cmp47=($58)==($60);
      if ($cmp47) { __label__ = 13;; } else { __label__ = 15;; }
      $land_lhs_true$$for_inc53$74: do { 
        if (__label__ == 13) {

          var $61=$vertex;
          var $indexB48=$61+8;
          var $62=IHEAP[$indexB48];
          var $63=$i41;
          var $arrayidx49=$saveB+$63;
          var $64=IHEAP[$arrayidx49];
          var $cmp50=($62)==($64);
          if ($cmp50) { __label__ = 14;break $for_cond42$71; }
        }
      } while(0);

      var $65=$i41;
      var $inc54=($65)+1;
      $i41=$inc54;
      ;
    }
    $for_end55$$if_then51$77: do { 
      if (__label__ == 14) {

        $duplicate=1;
        ;
      }
    } while(0);

    var $66=$duplicate;
    var $tobool=((($66)) & 1);
    if ($tobool) { __label__ = 18;break $while_cond$56; }

    var $67=IHEAP[$m_count58];
    var $inc59=($67)+1;
    IHEAP[$m_count58]=$inc59;
    var $_pr=$iter;
    var $16 = $_pr;;
  }

  var $68=IHEAP[_b2_gjkMaxIters];
  var $69=$iter;
  var $call60=__Z5b2MaxIiET_S0_S0_($68, $69);
  IHEAP[_b2_gjkMaxIters]=$call60;
  var $70=$output_addr;
  var $pointA=$70;
  var $71=$output_addr;
  var $pointB=$71+2;
  __ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_($simplex, $pointA, $pointB);
  var $72=$output_addr;
  var $pointA61=$72;
  var $73=$output_addr;
  var $pointB62=$73+2;
  var $call63=__Z10b2DistanceRK6b2Vec2S1_($pointA61, $pointB62);
  var $74=$output_addr;
  var $distance=$74+4;
  FHEAP[$distance]=$call63;
  var $75=$iter;
  var $76=$output_addr;
  var $iterations=$76+5;
  IHEAP[$iterations]=$75;
  var $77=$cache_addr;
  __ZNK9b2Simplex10WriteCacheEP14b2SimplexCache($simplex, $77);
  var $78=$input_addr;
  var $useRadii=$78+22;
  var $79=IHEAP[$useRadii];
  var $tobool64=((($79)) & 1);
  if ($tobool64) { __label__ = 19;; } else { __label__ = 23;; }
  $if_then65$$if_end90$82: do { 
    if (__label__ == 19) {

      var $80=$proxyA;
      var $m_radius=$80+6;
      var $81=FHEAP[$m_radius];
      $rA=$81;
      var $82=$proxyB;
      var $m_radius66=$82+6;
      var $83=FHEAP[$m_radius66];
      $rB=$83;
      var $84=$output_addr;
      var $distance67=$84+4;
      var $85=FHEAP[$distance67];
      var $86=$rA;
      var $87=$rB;
      var $add=($86)+($87);
      var $cmp68=($85) > ($add);
      if ($cmp68) { __label__ = 20;; } else { __label__ = 22;; }
      $land_lhs_true69$$if_else$84: do { 
        if (__label__ == 20) {

          var $88=$output_addr;
          var $distance70=$88+4;
          var $89=FHEAP[$distance70];
          var $cmp71=($89) > 1.1920928955078125e-7;
          if (!($cmp71)) { __label__ = 22;break $land_lhs_true69$$if_else$84; }

          var $90=$rA;
          var $91=$rB;
          var $add73=($90)+($91);
          var $92=$output_addr;
          var $distance74=$92+4;
          var $93=FHEAP[$distance74];
          var $sub=($93)-($add73);
          FHEAP[$distance74]=$sub;
          var $94=$output_addr;
          var $pointB75=$94+2;
          var $95=$output_addr;
          var $pointA76=$95;
          __ZmiRK6b2Vec2S1_($normal, $pointB75, $pointA76);
          var $call77=__ZN6b2Vec29NormalizeEv($normal);
          var $96=$output_addr;
          var $pointA78=$96;
          var $97=$rA;
          __ZmlfRK6b2Vec2($ref_tmp79, $97, $normal);
          __ZN6b2Vec2pLERKS_($pointA78, $ref_tmp79);
          var $98=$output_addr;
          var $pointB80=$98+2;
          var $99=$rB;
          __ZmlfRK6b2Vec2($ref_tmp81, $99, $normal);
          __ZN6b2Vec2mIERKS_($pointB80, $ref_tmp81);
          __label__ = 23;break $if_then65$$if_end90$82;
        }
      } while(0);

      var $100=$output_addr;
      var $pointA84=$100;
      var $101=$output_addr;
      var $pointB85=$101+2;
      __ZplRK6b2Vec2S1_($ref_tmp83, $pointA84, $pointB85);
      __ZmlfRK6b2Vec2($p82, 0.5, $ref_tmp83);
      var $102=$output_addr;
      var $pointA86=$102;
      var $103=$pointA86;
      var $104=$p82;
      IHEAP[$103]=IHEAP[$104]; FHEAP[$103]=FHEAP[$104]; ; IHEAP[$103+1]=IHEAP[$104+1]; FHEAP[$103+1]=FHEAP[$104+1]; ;
      var $105=$output_addr;
      var $pointB87=$105+2;
      var $106=$pointB87;
      var $107=$p82;
      IHEAP[$106]=IHEAP[$107]; FHEAP[$106]=FHEAP[$107]; ; IHEAP[$106+1]=IHEAP[$107+1]; FHEAP[$106+1]=FHEAP[$107+1]; ;
      var $108=$output_addr;
      var $distance88=$108+4;
      FHEAP[$distance88]=0;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput["X"]=1;

function __ZN7b2JointD2Ev($this) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN15b2SimplexVertexC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2SimplexVertexC2Ev($this1);
  ;
  return;
  return;
}


function __ZNK9b2Simplex15GetClosestPointEv($agg_result, $this) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp7=__stackBase__+2;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_count=$this1+27;
  var $0=IHEAP[$m_count];
  if ($0 == 0) {
    __label__ = 1;;
  }
  else if ($0 == 1) {
    __label__ = 2;;
  }
  else if ($0 == 2) {
    __label__ = 3;;
  }
  else if ($0 == 3) {
    __label__ = 4;;
  }
  else {
  __label__ = 5;;
  }
  
  $sw_default$$sw_bb$$sw_bb2$$sw_bb3$$sw_bb11$20: do { 
    if (__label__ == 5) {

      ___assert_func(__str83, 207, ___PRETTY_FUNCTION____ZNK9b2Simplex15GetClosestPointEv, __str2368);
      var $7=$agg_result;
      IHEAP[$7]=IHEAP[(_b2Vec2_zero)]; FHEAP[$7]=FHEAP[(_b2Vec2_zero)]; ; IHEAP[$7+1]=IHEAP[(_b2Vec2_zero)+1]; FHEAP[$7+1]=FHEAP[(_b2Vec2_zero)+1]; ;
      ;
    }
    else if (__label__ == 1) {

      ___assert_func(__str83, 194, ___PRETTY_FUNCTION____ZNK9b2Simplex15GetClosestPointEv, __str2368);
      var $1=$agg_result;
      IHEAP[$1]=IHEAP[(_b2Vec2_zero)]; FHEAP[$1]=FHEAP[(_b2Vec2_zero)]; ; IHEAP[$1+1]=IHEAP[(_b2Vec2_zero)+1]; FHEAP[$1+1]=FHEAP[(_b2Vec2_zero)+1]; ;
      ;
    }
    else if (__label__ == 2) {

      var $m_v1=$this1;
      var $w=$m_v1+4;
      var $2=$agg_result;
      var $3=$w;
      IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
      ;
    }
    else if (__label__ == 3) {

      var $m_v14=$this1;
      var $a=$m_v14+6;
      var $4=FHEAP[$a];
      var $m_v15=$this1;
      var $w6=$m_v15+4;
      __ZmlfRK6b2Vec2($ref_tmp, $4, $w6);
      var $m_v2=$this1+9;
      var $a8=$m_v2+6;
      var $5=FHEAP[$a8];
      var $m_v29=$this1+9;
      var $w10=$m_v29+4;
      __ZmlfRK6b2Vec2($ref_tmp7, $5, $w10);
      __ZplRK6b2Vec2S1_($agg_result, $ref_tmp, $ref_tmp7);
      ;
    }
    else if (__label__ == 4) {

      var $6=$agg_result;
      IHEAP[$6]=IHEAP[(_b2Vec2_zero)]; FHEAP[$6]=FHEAP[(_b2Vec2_zero)]; ; IHEAP[$6+1]=IHEAP[(_b2Vec2_zero)+1]; FHEAP[$6+1]=FHEAP[(_b2Vec2_zero)+1]; ;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK6b2Vec213LengthSquaredEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $x=$this1;
  var $0=FHEAP[$x];
  var $x2=$this1;
  var $1=FHEAP[$x2];
  var $mul=($0)*($1);
  var $y=$this1+1;
  var $2=FHEAP[$y];
  var $y3=$this1+1;
  var $3=FHEAP[$y3];
  var $mul4=($2)*($3);
  var $add=($mul)+($mul4);
  ;
  return $add;
  return null;
}


function __ZNK15b2DistanceProxy9GetVertexEi($this, $index) {
  ;
  var __label__;

  var $this_addr;
  var $index_addr;
  $this_addr=$this;
  $index_addr=$index;
  var $this1=$this_addr;
  var $0=$index_addr;
  var $cmp=0 <= ($0);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$47: do { 
    if (__label__ == 1) {

      var $1=$index_addr;
      var $m_count=$this1+5;
      var $2=IHEAP[$m_count];
      var $cmp2=($1) < ($2);
      if ($cmp2) { __label__ = 3;break $land_lhs_true$$cond_false$47; } else { __label__ = 2;break $land_lhs_true$$cond_false$47; }
    }
  } while(0);
  $cond_end$$cond_false$49: do { 
    if (__label__ == 2) {

      ___assert_func(__str386, 103, ___PRETTY_FUNCTION____ZNK15b2DistanceProxy9GetVertexEi, __str487);
      ;
    }
  } while(0);

  var $3=$index_addr;
  var $m_vertices=$this1+4;
  var $4=IHEAP[$m_vertices];
  var $arrayidx=$4+($3<<1);
  ;
  return $arrayidx;
  return null;
}


function __ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_($this, $pA, $pB) {
  var __stackBase__  = STACKTOP; STACKTOP += 22;
  var __label__;

  var $this_addr;
  var $pA_addr;
  var $pB_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp5=__stackBase__+2;
  var $ref_tmp9=__stackBase__+4;
  var $ref_tmp13=__stackBase__+6;
  var $ref_tmp14=__stackBase__+8;
  var $ref_tmp19=__stackBase__+10;
  var $ref_tmp25=__stackBase__+12;
  var $ref_tmp26=__stackBase__+14;
  var $ref_tmp27=__stackBase__+16;
  var $ref_tmp32=__stackBase__+18;
  var $ref_tmp37=__stackBase__+20;
  $this_addr=$this;
  $pA_addr=$pA;
  $pB_addr=$pB;
  var $this1=$this_addr;
  var $m_count=$this1+27;
  var $0=IHEAP[$m_count];
  if ($0 == 0) {
    __label__ = 1;;
  }
  else if ($0 == 1) {
    __label__ = 2;;
  }
  else if ($0 == 2) {
    __label__ = 3;;
  }
  else if ($0 == 3) {
    __label__ = 4;;
  }
  else {
  __label__ = 5;;
  }
  
  $sw_default$$sw_bb$$sw_bb2$$sw_bb4$$sw_bb24$53: do { 
    if (__label__ == 5) {

      ___assert_func(__str83, 236, ___PRETTY_FUNCTION____ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_, __str2368);
      ;
    }
    else if (__label__ == 1) {

      ___assert_func(__str83, 217, ___PRETTY_FUNCTION____ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_, __str2368);
      ;
    }
    else if (__label__ == 2) {

      var $1=$pA_addr;
      var $m_v1=$this1;
      var $wA=$m_v1;
      var $2=$1;
      var $3=$wA;
      IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
      var $4=$pB_addr;
      var $m_v13=$this1;
      var $wB=$m_v13+2;
      var $5=$4;
      var $6=$wB;
      IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
      ;
    }
    else if (__label__ == 3) {

      var $7=$pA_addr;
      var $m_v16=$this1;
      var $a=$m_v16+6;
      var $8=FHEAP[$a];
      var $m_v17=$this1;
      var $wA8=$m_v17;
      __ZmlfRK6b2Vec2($ref_tmp5, $8, $wA8);
      var $m_v2=$this1+9;
      var $a10=$m_v2+6;
      var $9=FHEAP[$a10];
      var $m_v211=$this1+9;
      var $wA12=$m_v211;
      __ZmlfRK6b2Vec2($ref_tmp9, $9, $wA12);
      __ZplRK6b2Vec2S1_($ref_tmp, $ref_tmp5, $ref_tmp9);
      var $10=$7;
      var $11=$ref_tmp;
      IHEAP[$10]=IHEAP[$11]; FHEAP[$10]=FHEAP[$11]; ; IHEAP[$10+1]=IHEAP[$11+1]; FHEAP[$10+1]=FHEAP[$11+1]; ;
      var $12=$pB_addr;
      var $m_v115=$this1;
      var $a16=$m_v115+6;
      var $13=FHEAP[$a16];
      var $m_v117=$this1;
      var $wB18=$m_v117+2;
      __ZmlfRK6b2Vec2($ref_tmp14, $13, $wB18);
      var $m_v220=$this1+9;
      var $a21=$m_v220+6;
      var $14=FHEAP[$a21];
      var $m_v222=$this1+9;
      var $wB23=$m_v222+2;
      __ZmlfRK6b2Vec2($ref_tmp19, $14, $wB23);
      __ZplRK6b2Vec2S1_($ref_tmp13, $ref_tmp14, $ref_tmp19);
      var $15=$12;
      var $16=$ref_tmp13;
      IHEAP[$15]=IHEAP[$16]; FHEAP[$15]=FHEAP[$16]; ; IHEAP[$15+1]=IHEAP[$16+1]; FHEAP[$15+1]=FHEAP[$16+1]; ;
      ;
    }
    else if (__label__ == 4) {

      var $17=$pA_addr;
      var $m_v128=$this1;
      var $a29=$m_v128+6;
      var $18=FHEAP[$a29];
      var $m_v130=$this1;
      var $wA31=$m_v130;
      __ZmlfRK6b2Vec2($ref_tmp27, $18, $wA31);
      var $m_v233=$this1+9;
      var $a34=$m_v233+6;
      var $19=FHEAP[$a34];
      var $m_v235=$this1+9;
      var $wA36=$m_v235;
      __ZmlfRK6b2Vec2($ref_tmp32, $19, $wA36);
      __ZplRK6b2Vec2S1_($ref_tmp26, $ref_tmp27, $ref_tmp32);
      var $m_v3=$this1+18;
      var $a38=$m_v3+6;
      var $20=FHEAP[$a38];
      var $m_v339=$this1+18;
      var $wA40=$m_v339;
      __ZmlfRK6b2Vec2($ref_tmp37, $20, $wA40);
      __ZplRK6b2Vec2S1_($ref_tmp25, $ref_tmp26, $ref_tmp37);
      var $21=$17;
      var $22=$ref_tmp25;
      IHEAP[$21]=IHEAP[$22]; FHEAP[$21]=FHEAP[$22]; ; IHEAP[$21+1]=IHEAP[$22+1]; FHEAP[$21+1]=FHEAP[$22+1]; ;
      var $23=$pB_addr;
      var $24=$pA_addr;
      var $25=$23;
      var $26=$24;
      IHEAP[$25]=IHEAP[$26]; FHEAP[$25]=FHEAP[$26]; ; IHEAP[$25+1]=IHEAP[$26+1]; FHEAP[$25+1]=FHEAP[$26+1]; ;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_["X"]=1;

function __ZN9b2SimplexC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_v1=$this1;
  __ZN15b2SimplexVertexC1Ev($m_v1);
  var $m_v2=$this1+9;
  __ZN15b2SimplexVertexC1Ev($m_v2);
  var $m_v3=$this1+18;
  __ZN15b2SimplexVertexC1Ev($m_v3);
  ;
  return;
  return;
}


function __ZN15b2SimplexVertexC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $wA=$this1;
  __ZN6b2Vec2C1Ev($wA);
  var $wB=$this1+2;
  __ZN6b2Vec2C1Ev($wB);
  var $w=$this1+4;
  __ZN6b2Vec2C1Ev($w);
  ;
  return;
  return;
}


function __ZNK6b2Body13GetLocalPointERK6b2Vec2($agg_result, $this, $worldPoint) {
  ;
  var __label__;

  var $this_addr;
  var $worldPoint_addr;
  $this_addr=$this;
  $worldPoint_addr=$worldPoint;
  var $this1=$this_addr;
  var $m_xf=$this1+3;
  var $0=$worldPoint_addr;
  __Z6b2MulTRK11b2TransformRK6b2Vec2($agg_result, $m_xf, $0);
  ;
  return;
  return;
}


function __ZN15b2DistanceJointC2EPK18b2DistanceJointDef($this, $def) {
  ;
  var __label__;

  var $this_addr;
  var $def_addr;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$def_addr;
  var $2=$1;
  __ZN7b2JointC2EPK10b2JointDef($0, $2);
  var $3=$this1;
  IHEAP[$3]=__ZTV15b2DistanceJoint+2;
  var $m_localAnchorA=$this1+21;
  __ZN6b2Vec2C1Ev($m_localAnchorA);
  var $m_localAnchorB=$this1+23;
  __ZN6b2Vec2C1Ev($m_localAnchorB);
  var $m_u=$this1+30;
  __ZN6b2Vec2C1Ev($m_u);
  var $m_rA=$this1+32;
  __ZN6b2Vec2C1Ev($m_rA);
  var $m_rB=$this1+34;
  __ZN6b2Vec2C1Ev($m_rB);
  var $m_localCenterA=$this1+36;
  __ZN6b2Vec2C1Ev($m_localCenterA);
  var $m_localCenterB=$this1+38;
  __ZN6b2Vec2C1Ev($m_localCenterB);
  var $m_localAnchorA8=$this1+21;
  var $4=$def_addr;
  var $localAnchorA=$4+5;
  var $5=$m_localAnchorA8;
  var $6=$localAnchorA;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_localAnchorB9=$this1+23;
  var $7=$def_addr;
  var $localAnchorB=$7+7;
  var $8=$m_localAnchorB9;
  var $9=$localAnchorB;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $10=$def_addr;
  var $length=$10+9;
  var $11=FHEAP[$length];
  var $m_length=$this1+27;
  FHEAP[$m_length]=$11;
  var $12=$def_addr;
  var $frequencyHz=$12+10;
  var $13=FHEAP[$frequencyHz];
  var $m_frequencyHz=$this1+18;
  FHEAP[$m_frequencyHz]=$13;
  var $14=$def_addr;
  var $dampingRatio=$14+11;
  var $15=FHEAP[$dampingRatio];
  var $m_dampingRatio=$this1+19;
  FHEAP[$m_dampingRatio]=$15;
  var $m_impulse=$this1+26;
  FHEAP[$m_impulse]=0;
  var $m_gamma=$this1+25;
  FHEAP[$m_gamma]=0;
  var $m_bias=$this1+20;
  FHEAP[$m_bias]=0;
  ;
  return;
  return;
}
__ZN15b2DistanceJointC2EPK18b2DistanceJointDef["X"]=1;

function __ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_($this, $cache, $proxyA, $transformA, $proxyB, $transformB) {
  var __stackBase__  = STACKTOP; STACKTOP += 20;
  var __label__;

  var $this_addr;
  var $cache_addr;
  var $proxyA_addr;
  var $transformA_addr;
  var $proxyB_addr;
  var $transformB_addr;
  var $vertices;
  var $i;
  var $v;
  var $wALocal=__stackBase__;
  var $wBLocal=__stackBase__+2;
  var $ref_tmp=__stackBase__+4;
  var $ref_tmp14=__stackBase__+6;
  var $ref_tmp15=__stackBase__+8;
  var $metric1;
  var $metric2;
  var $v32;
  var $wALocal36=__stackBase__+10;
  var $wBLocal38=__stackBase__+12;
  var $ref_tmp41=__stackBase__+14;
  var $ref_tmp43=__stackBase__+16;
  var $ref_tmp45=__stackBase__+18;
  $this_addr=$this;
  $cache_addr=$cache;
  $proxyA_addr=$proxyA;
  $transformA_addr=$transformA;
  $proxyB_addr=$proxyB;
  $transformB_addr=$transformB;
  var $this1=$this_addr;
  var $0=$cache_addr;
  var $count=$0+1;
  var $1=IHEAP[$count];
  var $conv=($1);
  var $cmp=($conv) <= 3;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$2: do { 
    if (__label__ == 1) {

      ___assert_func(__str83, 102, ___PRETTY_FUNCTION____ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_, __str588);
      ;
    }
  } while(0);

  var $2=$cache_addr;
  var $count2=$2+1;
  var $3=IHEAP[$count2];
  var $conv3=($3);
  var $m_count=$this1+27;
  IHEAP[$m_count]=$conv3;
  var $m_v1=$this1;
  $vertices=$m_v1;
  $i=0;
  var $4=$i;
  var $m_count4=$this1+27;
  var $5=IHEAP[$m_count4];
  var $cmp51=($4) < ($5);
  if ($cmp51) { __label__ = 3;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end$5: do { 
    if (__label__ == 3) {

      var $6=$wALocal;
      var $7=$wBLocal;
      var $8=$ref_tmp;
      var $9=$ref_tmp14;
      var $10=$ref_tmp15;
      ;
      $for_body$7: while(1) { 

        var $11=$vertices;
        var $12=$i;
        var $add_ptr=$11+$12*9;
        $v=$add_ptr;
        var $13=$i;
        var $14=$cache_addr;
        var $indexA=$14+2;
        var $arrayidx=$indexA+$13;
        var $15=IHEAP[$arrayidx];
        var $conv6=($15);
        var $16=$v;
        var $indexA7=$16+7;
        IHEAP[$indexA7]=$conv6;
        var $17=$i;
        var $18=$cache_addr;
        var $indexB=$18+5;
        var $arrayidx8=$indexB+$17;
        var $19=IHEAP[$arrayidx8];
        var $conv9=($19);
        var $20=$v;
        var $indexB10=$20+8;
        IHEAP[$indexB10]=$conv9;
        var $21=$proxyA_addr;
        var $22=$v;
        var $indexA11=$22+7;
        var $23=IHEAP[$indexA11];
        var $call=__ZNK15b2DistanceProxy9GetVertexEi($21, $23);
        var $24=$call;
        IHEAP[$6]=IHEAP[$24]; FHEAP[$6]=FHEAP[$24]; ; IHEAP[$6+1]=IHEAP[$24+1]; FHEAP[$6+1]=FHEAP[$24+1]; ;
        var $25=$proxyB_addr;
        var $26=$v;
        var $indexB12=$26+8;
        var $27=IHEAP[$indexB12];
        var $call13=__ZNK15b2DistanceProxy9GetVertexEi($25, $27);
        var $28=$call13;
        IHEAP[$7]=IHEAP[$28]; FHEAP[$7]=FHEAP[$28]; ; IHEAP[$7+1]=IHEAP[$28+1]; FHEAP[$7+1]=FHEAP[$28+1]; ;
        var $29=$v;
        var $wA=$29;
        var $30=$transformA_addr;
        __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp, $30, $wALocal);
        var $31=$wA;
        IHEAP[$31]=IHEAP[$8]; FHEAP[$31]=FHEAP[$8]; ; IHEAP[$31+1]=IHEAP[$8+1]; FHEAP[$31+1]=FHEAP[$8+1]; ;
        var $32=$v;
        var $wB=$32+2;
        var $33=$transformB_addr;
        __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp14, $33, $wBLocal);
        var $34=$wB;
        IHEAP[$34]=IHEAP[$9]; FHEAP[$34]=FHEAP[$9]; ; IHEAP[$34+1]=IHEAP[$9+1]; FHEAP[$34+1]=FHEAP[$9+1]; ;
        var $35=$v;
        var $w=$35+4;
        var $36=$v;
        var $wB16=$36+2;
        var $37=$v;
        var $wA17=$37;
        __ZmiRK6b2Vec2S1_($ref_tmp15, $wB16, $wA17);
        var $38=$w;
        IHEAP[$38]=IHEAP[$10]; FHEAP[$38]=FHEAP[$10]; ; IHEAP[$38+1]=IHEAP[$10+1]; FHEAP[$38+1]=FHEAP[$10+1]; ;
        var $39=$v;
        var $a=$39+6;
        FHEAP[$a]=0;
        var $40=$i;
        var $inc=($40)+1;
        $i=$inc;
        var $41=$i;
        var $42=IHEAP[$m_count4];
        var $cmp5=($41) < ($42);
        if (!($cmp5)) { __label__ = 5;break $for_body_lr_ph$$for_end$5; }
      }
    }
  } while(0);

  var $m_count18=$this1+27;
  var $43=IHEAP[$m_count18];
  var $cmp19=($43) > 1;
  if ($cmp19) { __label__ = 6;; } else { __label__ = 9;; }
  $if_then$$if_end28$10: do { 
    if (__label__ == 6) {

      var $44=$cache_addr;
      var $metric=$44;
      var $45=FHEAP[$metric];
      $metric1=$45;
      var $call20=__ZNK9b2Simplex9GetMetricEv($this1);
      $metric2=$call20;
      var $46=$metric2;
      var $47=$metric1;
      var $mul=($47)*0.5;
      var $cmp21=($46) < ($mul);
      if ($cmp21) { __label__ = 8;; } else { __label__ = 7;; }
      $if_then26$$lor_lhs_false$12: do { 
        if (__label__ == 7) {

          var $48=$metric1;
          var $mul22=($48)*2;
          var $49=$metric2;
          var $cmp23=($mul22) < ($49);
          var $50=$metric2;
          var $cmp25=($50) < 1.1920928955078125e-7;
          var $or_cond=($cmp23) | ($cmp25);
          if (!($or_cond)) { __label__ = 9;break $if_then$$if_end28$10; }
        }
      } while(0);

      var $m_count27=$this1+27;
      IHEAP[$m_count27]=0;
      ;
    }
  } while(0);

  var $m_count29=$this1+27;
  var $51=IHEAP[$m_count29];
  var $cmp30=($51)==0;
  if ($cmp30) { __label__ = 10;; } else { __label__ = 11;; }
  $if_then31$$if_end49$16: do { 
    if (__label__ == 10) {

      var $52=$vertices;
      var $add_ptr33=$52;
      $v32=$add_ptr33;
      var $53=$v32;
      var $indexA34=$53+7;
      IHEAP[$indexA34]=0;
      var $54=$v32;
      var $indexB35=$54+8;
      IHEAP[$indexB35]=0;
      var $55=$proxyA_addr;
      var $call37=__ZNK15b2DistanceProxy9GetVertexEi($55, 0);
      var $56=$wALocal36;
      var $57=$call37;
      IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
      var $58=$proxyB_addr;
      var $call39=__ZNK15b2DistanceProxy9GetVertexEi($58, 0);
      var $59=$wBLocal38;
      var $60=$call39;
      IHEAP[$59]=IHEAP[$60]; FHEAP[$59]=FHEAP[$60]; ; IHEAP[$59+1]=IHEAP[$60+1]; FHEAP[$59+1]=FHEAP[$60+1]; ;
      var $61=$v32;
      var $wA40=$61;
      var $62=$transformA_addr;
      __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp41, $62, $wALocal36);
      var $63=$wA40;
      var $64=$ref_tmp41;
      IHEAP[$63]=IHEAP[$64]; FHEAP[$63]=FHEAP[$64]; ; IHEAP[$63+1]=IHEAP[$64+1]; FHEAP[$63+1]=FHEAP[$64+1]; ;
      var $65=$v32;
      var $wB42=$65+2;
      var $66=$transformB_addr;
      __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp43, $66, $wBLocal38);
      var $67=$wB42;
      var $68=$ref_tmp43;
      IHEAP[$67]=IHEAP[$68]; FHEAP[$67]=FHEAP[$68]; ; IHEAP[$67+1]=IHEAP[$68+1]; FHEAP[$67+1]=FHEAP[$68+1]; ;
      var $69=$v32;
      var $w44=$69+4;
      var $70=$v32;
      var $wB46=$70+2;
      var $71=$v32;
      var $wA47=$71;
      __ZmiRK6b2Vec2S1_($ref_tmp45, $wB46, $wA47);
      var $72=$w44;
      var $73=$ref_tmp45;
      IHEAP[$72]=IHEAP[$73]; FHEAP[$72]=FHEAP[$73]; ; IHEAP[$72+1]=IHEAP[$73+1]; FHEAP[$72+1]=FHEAP[$73+1]; ;
      var $m_count48=$this1+27;
      IHEAP[$m_count48]=1;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_["X"]=1;

function __ZNK9b2Simplex18GetSearchDirectionEv($agg_result, $this) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $e12=__stackBase__;
  var $sgn;
  var $ref_tmp=__stackBase__+2;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_count=$this1+27;
  var $0=IHEAP[$m_count];
  if ($0 == 1) {
    __label__ = 1;;
  }
  else if ($0 == 2) {
    __label__ = 2;;
  }
  else {
  __label__ = 5;;
  }
  
  $sw_default$$sw_bb$$sw_bb2$29: do { 
    if (__label__ == 5) {

      ___assert_func(__str83, 184, ___PRETTY_FUNCTION____ZNK9b2Simplex18GetSearchDirectionEv, __str2368);
      var $2=$agg_result;
      IHEAP[$2]=IHEAP[(_b2Vec2_zero)]; FHEAP[$2]=FHEAP[(_b2Vec2_zero)]; ; IHEAP[$2+1]=IHEAP[(_b2Vec2_zero)+1]; FHEAP[$2+1]=FHEAP[(_b2Vec2_zero)+1]; ;
      ;
    }
    else if (__label__ == 1) {

      var $m_v1=$this1;
      var $w=$m_v1+4;
      __ZNK6b2Vec2ngEv($agg_result, $w);
      ;
    }
    else if (__label__ == 2) {

      var $m_v2=$this1+9;
      var $w3=$m_v2+4;
      var $m_v14=$this1;
      var $w5=$m_v14+4;
      __ZmiRK6b2Vec2S1_($e12, $w3, $w5);
      var $m_v16=$this1;
      var $w7=$m_v16+4;
      __ZNK6b2Vec2ngEv($ref_tmp, $w7);
      var $call=__Z7b2CrossRK6b2Vec2S1_($e12, $ref_tmp);
      $sgn=$call;
      var $1=$sgn;
      var $cmp=($1) > 0;
      if ($cmp) { __label__ = 3;; } else { __label__ = 4;; }
      $if_then$$if_else$33: do { 
        if (__label__ == 3) {

          __Z7b2CrossfRK6b2Vec2($agg_result, 1, $e12);
          ;
        }
        else if (__label__ == 4) {

          __Z7b2CrossRK6b2Vec2f($agg_result, $e12, 1);
          ;
        }
      } while(0);
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($this, $d) {
  ;
  var __label__;

  var $this_addr;
  var $d_addr;
  var $bestIndex;
  var $bestValue;
  var $i;
  var $value;
  $this_addr=$this;
  $d_addr=$d;
  var $this1=$this_addr;
  $bestIndex=0;
  var $m_vertices=$this1+4;
  var $0=IHEAP[$m_vertices];
  var $arrayidx=$0;
  var $1=$d_addr;
  var $call=__Z5b2DotRK6b2Vec2S1_($arrayidx, $1);
  $bestValue=$call;
  $i=1;
  var $2=$i;
  var $m_count=$this1+5;
  var $3=IHEAP[$m_count];
  var $cmp1=($2) < ($3);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end$38: do { 
    if (__label__ == 1) {

      var $m_vertices2=$this1+4;
      ;
      $for_body$40: while(1) { 

        var $4=$i;
        var $5=IHEAP[$m_vertices2];
        var $arrayidx3=$5+($4<<1);
        var $6=$d_addr;
        var $call4=__Z5b2DotRK6b2Vec2S1_($arrayidx3, $6);
        $value=$call4;
        var $7=$value;
        var $8=$bestValue;
        var $cmp5=($7) > ($8);
        if ($cmp5) { __label__ = 3;; } else { __label__ = 4;; }
        $if_then$$for_inc$42: do { 
          if (__label__ == 3) {

            var $9=$i;
            $bestIndex=$9;
            var $10=$value;
            $bestValue=$10;
            ;
          }
        } while(0);

        var $11=$i;
        var $inc=($11)+1;
        $i=$inc;
        var $12=$i;
        var $13=IHEAP[$m_count];
        var $cmp=($12) < ($13);
        if (!($cmp)) { __label__ = 5;break $for_body_lr_ph$$for_end$38; }
      }
    }
  } while(0);

  var $14=$bestIndex;
  ;
  return $14;
  return null;
}


function __Z10b2DistanceRK6b2Vec2S1_($a, $b) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $a_addr;
  var $b_addr;
  var $c=__stackBase__;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $1=$b_addr;
  __ZmiRK6b2Vec2S1_($c, $0, $1);
  var $call=__ZNK6b2Vec26LengthEv($c);
  STACKTOP = __stackBase__;
  return $call;
  return null;
}


function __ZNK9b2Simplex10WriteCacheEP14b2SimplexCache($this, $cache) {
  ;
  var __label__;

  var $this_addr;
  var $cache_addr;
  var $vertices;
  var $i;
  $this_addr=$this;
  $cache_addr=$cache;
  var $this1=$this_addr;
  var $call=__ZNK9b2Simplex9GetMetricEv($this1);
  var $0=$cache_addr;
  var $metric=$0;
  FHEAP[$metric]=$call;
  var $m_count=$this1+27;
  var $1=IHEAP[$m_count];
  var $conv=((($1)) & 65535);
  var $2=$cache_addr;
  var $count=$2+1;
  IHEAP[$count]=$conv;
  var $m_v1=$this1;
  $vertices=$m_v1;
  $i=0;
  var $3=$i;
  var $m_count2=$this1+27;
  var $4=IHEAP[$m_count2];
  var $cmp1=($3) < ($4);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 2;; }
  $for_body$$for_end$62: do { 
    if (__label__ == 1) {
      $for_body$63: while(1) { 

        var $5=$i;
        var $6=$vertices;
        var $arrayidx=$6+$5*9;
        var $indexA=$arrayidx+7;
        var $7=IHEAP[$indexA];
        var $conv3=((($7)) & 255);
        var $8=$i;
        var $9=$cache_addr;
        var $indexA4=$9+2;
        var $arrayidx5=$indexA4+$8;
        IHEAP[$arrayidx5]=$conv3;
        var $10=$i;
        var $11=$vertices;
        var $arrayidx6=$11+$10*9;
        var $indexB=$arrayidx6+8;
        var $12=IHEAP[$indexB];
        var $conv7=((($12)) & 255);
        var $13=$i;
        var $14=$cache_addr;
        var $indexB8=$14+5;
        var $arrayidx9=$indexB8+$13;
        IHEAP[$arrayidx9]=$conv7;
        var $15=$i;
        var $inc=($15)+1;
        $i=$inc;
        var $16=$i;
        var $17=IHEAP[$m_count2];
        var $cmp=($16) < ($17);
        if (!($cmp)) { __label__ = 2;break $for_body$$for_end$62; }
      }
    }
  } while(0);

  ;
  return;
  return;
}
__ZNK9b2Simplex10WriteCacheEP14b2SimplexCache["X"]=1;

function __ZNK9b2Simplex9GetMetricEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $retval;
  var $this_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp10=__stackBase__+2;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_count=$this1+27;
  var $0=IHEAP[$m_count];
  if ($0 == 0) {
    __label__ = 1;;
  }
  else if ($0 == 1) {
    __label__ = 2;;
  }
  else if ($0 == 2) {
    __label__ = 3;;
  }
  else if ($0 == 3) {
    __label__ = 4;;
  }
  else {
  __label__ = 5;;
  }
  
  $sw_default$$sw_bb$$sw_bb2$$sw_bb3$$sw_bb5$67: do { 
    if (__label__ == 5) {

      ___assert_func(__str83, 259, ___PRETTY_FUNCTION____ZNK9b2Simplex9GetMetricEv, __str2368);
      $retval=0;
      ;
    }
    else if (__label__ == 1) {

      ___assert_func(__str83, 246, ___PRETTY_FUNCTION____ZNK9b2Simplex9GetMetricEv, __str2368);
      $retval=0;
      ;
    }
    else if (__label__ == 2) {

      $retval=0;
      ;
    }
    else if (__label__ == 3) {

      var $m_v1=$this1;
      var $w=$m_v1+4;
      var $m_v2=$this1+9;
      var $w4=$m_v2+4;
      var $call=__Z10b2DistanceRK6b2Vec2S1_($w, $w4);
      $retval=$call;
      ;
    }
    else if (__label__ == 4) {

      var $m_v26=$this1+9;
      var $w7=$m_v26+4;
      var $m_v18=$this1;
      var $w9=$m_v18+4;
      __ZmiRK6b2Vec2S1_($ref_tmp, $w7, $w9);
      var $m_v3=$this1+18;
      var $w11=$m_v3+4;
      var $m_v112=$this1;
      var $w13=$m_v112+4;
      __ZmiRK6b2Vec2S1_($ref_tmp10, $w11, $w13);
      var $call14=__Z7b2CrossRK6b2Vec2S1_($ref_tmp, $ref_tmp10);
      $retval=$call14;
      ;
    }
  } while(0);

  var $1=$retval;
  STACKTOP = __stackBase__;
  return $1;
  return null;
}


function __ZN18b2DistanceJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($this, $b1, $b2, $anchor1, $anchor2) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $b1_addr;
  var $b2_addr;
  var $anchor1_addr;
  var $anchor2_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp3=__stackBase__+2;
  var $d=__stackBase__+4;
  $this_addr=$this;
  $b1_addr=$b1;
  $b2_addr=$b2;
  $anchor1_addr=$anchor1;
  $anchor2_addr=$anchor2;
  var $this1=$this_addr;
  var $0=$b1_addr;
  var $1=$this1;
  var $bodyA=$1+2;
  IHEAP[$bodyA]=$0;
  var $2=$b2_addr;
  var $3=$this1;
  var $bodyB=$3+3;
  IHEAP[$bodyB]=$2;
  var $localAnchorA=$this1+5;
  var $4=$this1;
  var $bodyA2=$4+2;
  var $5=IHEAP[$bodyA2];
  var $6=$anchor1_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp, $5, $6);
  var $7=$localAnchorA;
  var $8=$ref_tmp;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
  var $localAnchorB=$this1+7;
  var $9=$this1;
  var $bodyB4=$9+3;
  var $10=IHEAP[$bodyB4];
  var $11=$anchor2_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp3, $10, $11);
  var $12=$localAnchorB;
  var $13=$ref_tmp3;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$anchor2_addr;
  var $15=$anchor1_addr;
  __ZmiRK6b2Vec2S1_($d, $14, $15);
  var $call=__ZNK6b2Vec26LengthEv($d);
  var $length=$this1+9;
  FHEAP[$length]=$call;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK15b2DistanceJoint17GetReactionTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  ;
  return 0;
  return null;
}


function __ZN5b2RotC1Ef($this, $angle) {
  ;
  var __label__;

  var $this_addr;
  var $angle_addr;
  $this_addr=$this;
  $angle_addr=$angle;
  var $this1=$this_addr;
  var $0=$angle_addr;
  __ZN5b2RotC2Ef($this1, $0);
  ;
  return;
  return;
}


function __ZN15b2DistanceJointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2DistanceJointD2Ev($this1);
  ;
  return;
  return;
}


function __ZN15b2DistanceJointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2DistanceJointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN15b2DistanceJointD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2JointD2Ev($0);
  ;
  return;
  return;
}


function __ZNK15b2DistanceJoint10GetAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+21;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorA);
  ;
  return;
  return;
}


function __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $this, $localPoint) {
  ;
  var __label__;

  var $this_addr;
  var $localPoint_addr;
  $this_addr=$this;
  $localPoint_addr=$localPoint;
  var $this1=$this_addr;
  var $m_xf=$this1+3;
  var $0=$localPoint_addr;
  __Z5b2MulRK11b2TransformRK6b2Vec2($agg_result, $m_xf, $0);
  ;
  return;
  return;
}


function __ZNK15b2DistanceJoint10GetAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+23;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorB);
  ;
  return;
  return;
}


function __ZNK15b2DistanceJoint16GetReactionForceEf($agg_result, $this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_impulse=$this1+26;
  var $1=FHEAP[$m_impulse];
  var $mul=($0)*($1);
  var $m_u=$this1+30;
  __ZmlfRK6b2Vec2($agg_result, $mul, $m_u);
  ;
  return;
  return;
}


function __ZN15b2DistanceJoint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $indexA;
  var $indexB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  $indexA=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  $indexB=$5;
  __Z5b2LogPKcz(__str93, allocate(1, "i32", ALLOC_STACK));
  var $6=$indexA;
  __Z5b2LogPKcz(__str1392, allocate([$6], "i32", ALLOC_STACK));
  var $7=$indexB;
  __Z5b2LogPKcz(__str2393, allocate([$7], "i32", ALLOC_STACK));
  var $8=$this1;
  var $m_collideConnected=$8+16;
  var $9=IHEAP[$m_collideConnected];
  var $tobool=((($9)) & 1);
  var $conv=($tobool);
  __Z5b2LogPKcz(__str3394, allocate([$conv], "i32", ALLOC_STACK));
  var $m_localAnchorA=$this1+21;
  var $x=$m_localAnchorA;
  var $10=FHEAP[$x];
  var $conv3=($10);
  var $m_localAnchorA4=$this1+21;
  var $y=$m_localAnchorA4+1;
  var $11=FHEAP[$y];
  var $conv5=($11);
  __Z5b2LogPKcz(__str4395, allocate([$conv3,$conv5], "double", ALLOC_STACK));
  var $m_localAnchorB=$this1+23;
  var $x6=$m_localAnchorB;
  var $12=FHEAP[$x6];
  var $conv7=($12);
  var $m_localAnchorB8=$this1+23;
  var $y9=$m_localAnchorB8+1;
  var $13=FHEAP[$y9];
  var $conv10=($13);
  __Z5b2LogPKcz(__str5396, allocate([$conv7,$conv10], "double", ALLOC_STACK));
  var $m_length=$this1+27;
  var $14=FHEAP[$m_length];
  var $conv11=($14);
  __Z5b2LogPKcz(__str699, allocate([$conv11], "double", ALLOC_STACK));
  var $m_frequencyHz=$this1+18;
  var $15=FHEAP[$m_frequencyHz];
  var $conv12=($15);
  __Z5b2LogPKcz(__str10401, allocate([$conv12], "double", ALLOC_STACK));
  var $m_dampingRatio=$this1+19;
  var $16=FHEAP[$m_dampingRatio];
  var $conv13=($16);
  __Z5b2LogPKcz(__str11402, allocate([$conv13], "double", ALLOC_STACK));
  var $17=$this1;
  var $m_index=$17+14;
  var $18=IHEAP[$m_index];
  __Z5b2LogPKcz(__str12403, allocate([$18], "i32", ALLOC_STACK));
  ;
  return;
  return;
}
__ZN15b2DistanceJoint4DumpEv["X"]=1;

function __ZN6b2DrawC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  IHEAP[$0]=__ZTV6b2Draw+2;
  var $m_drawFlags=$this1+1;
  IHEAP[$m_drawFlags]=0;
  ;
  return;
  return;
}


function __ZN6b2Draw8SetFlagsEj($this, $flags) {
  ;
  var __label__;

  var $this_addr;
  var $flags_addr;
  $this_addr=$this;
  $flags_addr=$flags;
  var $this1=$this_addr;
  var $0=$flags_addr;
  var $m_drawFlags=$this1+1;
  IHEAP[$m_drawFlags]=$0;
  ;
  return;
  return;
}


function __ZNK6b2Draw8GetFlagsEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_drawFlags=$this1+1;
  var $0=IHEAP[$m_drawFlags];
  ;
  return $0;
  return null;
}


function __ZN15b2DistanceJoint23InitVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 32;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $vA=__stackBase__+2;
  var $wA;
  var $cB=__stackBase__+4;
  var $aB;
  var $vB=__stackBase__+6;
  var $wB;
  var $qA=__stackBase__+8;
  var $qB=__stackBase__+10;
  var $ref_tmp=__stackBase__+12;
  var $ref_tmp38=__stackBase__+14;
  var $ref_tmp40=__stackBase__+16;
  var $ref_tmp41=__stackBase__+18;
  var $ref_tmp43=__stackBase__+20;
  var $ref_tmp44=__stackBase__+22;
  var $ref_tmp45=__stackBase__+24;
  var $length;
  var $crAu;
  var $crBu;
  var $invMass;
  var $C;
  var $omega;
  var $d;
  var $k;
  var $h;
  var $P=__stackBase__+26;
  var $ref_tmp114=__stackBase__+28;
  var $ref_tmp121=__stackBase__+30;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  var $m_indexA=$this1+28;
  IHEAP[$m_indexA]=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  var $m_indexB=$this1+29;
  IHEAP[$m_indexB]=$5;
  var $m_localCenterA=$this1+36;
  var $6=$this1;
  var $m_bodyA3=$6+12;
  var $7=IHEAP[$m_bodyA3];
  var $m_sweep=$7+7;
  var $localCenter=$m_sweep;
  var $8=$m_localCenterA;
  var $9=$localCenter;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localCenterB=$this1+38;
  var $10=$this1;
  var $m_bodyB4=$10+13;
  var $11=IHEAP[$m_bodyB4];
  var $m_sweep5=$11+7;
  var $localCenter6=$m_sweep5;
  var $12=$m_localCenterB;
  var $13=$localCenter6;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$this1;
  var $m_bodyA7=$14+12;
  var $15=IHEAP[$m_bodyA7];
  var $m_invMass=$15+30;
  var $16=FHEAP[$m_invMass];
  var $m_invMassA=$this1+40;
  FHEAP[$m_invMassA]=$16;
  var $17=$this1;
  var $m_bodyB8=$17+13;
  var $18=IHEAP[$m_bodyB8];
  var $m_invMass9=$18+30;
  var $19=FHEAP[$m_invMass9];
  var $m_invMassB=$this1+41;
  FHEAP[$m_invMassB]=$19;
  var $20=$this1;
  var $m_bodyA10=$20+12;
  var $21=IHEAP[$m_bodyA10];
  var $m_invI=$21+32;
  var $22=FHEAP[$m_invI];
  var $m_invIA=$this1+42;
  FHEAP[$m_invIA]=$22;
  var $23=$this1;
  var $m_bodyB11=$23+13;
  var $24=IHEAP[$m_bodyB11];
  var $m_invI12=$24+32;
  var $25=FHEAP[$m_invI12];
  var $m_invIB=$this1+43;
  FHEAP[$m_invIB]=$25;
  var $m_indexA13=$this1+28;
  var $26=IHEAP[$m_indexA13];
  var $27=$data_addr;
  var $positions=$27+6;
  var $28=IHEAP[$positions];
  var $arrayidx=$28+$26*3;
  var $c=$arrayidx;
  var $29=$cA;
  var $30=$c;
  IHEAP[$29]=IHEAP[$30]; FHEAP[$29]=FHEAP[$30]; ; IHEAP[$29+1]=IHEAP[$30+1]; FHEAP[$29+1]=FHEAP[$30+1]; ;
  var $m_indexA14=$this1+28;
  var $31=IHEAP[$m_indexA14];
  var $32=$data_addr;
  var $positions15=$32+6;
  var $33=IHEAP[$positions15];
  var $arrayidx16=$33+$31*3;
  var $a=$arrayidx16+2;
  var $34=FHEAP[$a];
  $aA=$34;
  var $m_indexA17=$this1+28;
  var $35=IHEAP[$m_indexA17];
  var $36=$data_addr;
  var $velocities=$36+7;
  var $37=IHEAP[$velocities];
  var $arrayidx18=$37+$35*3;
  var $v=$arrayidx18;
  var $38=$vA;
  var $39=$v;
  IHEAP[$38]=IHEAP[$39]; FHEAP[$38]=FHEAP[$39]; ; IHEAP[$38+1]=IHEAP[$39+1]; FHEAP[$38+1]=FHEAP[$39+1]; ;
  var $m_indexA19=$this1+28;
  var $40=IHEAP[$m_indexA19];
  var $41=$data_addr;
  var $velocities20=$41+7;
  var $42=IHEAP[$velocities20];
  var $arrayidx21=$42+$40*3;
  var $w=$arrayidx21+2;
  var $43=FHEAP[$w];
  $wA=$43;
  var $m_indexB22=$this1+29;
  var $44=IHEAP[$m_indexB22];
  var $45=$data_addr;
  var $positions23=$45+6;
  var $46=IHEAP[$positions23];
  var $arrayidx24=$46+$44*3;
  var $c25=$arrayidx24;
  var $47=$cB;
  var $48=$c25;
  IHEAP[$47]=IHEAP[$48]; FHEAP[$47]=FHEAP[$48]; ; IHEAP[$47+1]=IHEAP[$48+1]; FHEAP[$47+1]=FHEAP[$48+1]; ;
  var $m_indexB26=$this1+29;
  var $49=IHEAP[$m_indexB26];
  var $50=$data_addr;
  var $positions27=$50+6;
  var $51=IHEAP[$positions27];
  var $arrayidx28=$51+$49*3;
  var $a29=$arrayidx28+2;
  var $52=FHEAP[$a29];
  $aB=$52;
  var $m_indexB30=$this1+29;
  var $53=IHEAP[$m_indexB30];
  var $54=$data_addr;
  var $velocities31=$54+7;
  var $55=IHEAP[$velocities31];
  var $arrayidx32=$55+$53*3;
  var $v33=$arrayidx32;
  var $56=$vB;
  var $57=$v33;
  IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
  var $m_indexB34=$this1+29;
  var $58=IHEAP[$m_indexB34];
  var $59=$data_addr;
  var $velocities35=$59+7;
  var $60=IHEAP[$velocities35];
  var $arrayidx36=$60+$58*3;
  var $w37=$arrayidx36+2;
  var $61=FHEAP[$w37];
  $wB=$61;
  var $62=$aA;
  __ZN5b2RotC1Ef($qA, $62);
  var $63=$aB;
  __ZN5b2RotC1Ef($qB, $63);
  var $m_rA=$this1+32;
  var $m_localAnchorA=$this1+21;
  var $m_localCenterA39=$this1+36;
  __ZmiRK6b2Vec2S1_($ref_tmp38, $m_localAnchorA, $m_localCenterA39);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $qA, $ref_tmp38);
  var $64=$m_rA;
  var $65=$ref_tmp;
  IHEAP[$64]=IHEAP[$65]; FHEAP[$64]=FHEAP[$65]; ; IHEAP[$64+1]=IHEAP[$65+1]; FHEAP[$64+1]=FHEAP[$65+1]; ;
  var $m_rB=$this1+34;
  var $m_localAnchorB=$this1+23;
  var $m_localCenterB42=$this1+38;
  __ZmiRK6b2Vec2S1_($ref_tmp41, $m_localAnchorB, $m_localCenterB42);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp40, $qB, $ref_tmp41);
  var $66=$m_rB;
  var $67=$ref_tmp40;
  IHEAP[$66]=IHEAP[$67]; FHEAP[$66]=FHEAP[$67]; ; IHEAP[$66+1]=IHEAP[$67+1]; FHEAP[$66+1]=FHEAP[$67+1]; ;
  var $m_u=$this1+30;
  var $m_rB46=$this1+34;
  __ZplRK6b2Vec2S1_($ref_tmp45, $cB, $m_rB46);
  __ZmiRK6b2Vec2S1_($ref_tmp44, $ref_tmp45, $cA);
  var $m_rA47=$this1+32;
  __ZmiRK6b2Vec2S1_($ref_tmp43, $ref_tmp44, $m_rA47);
  var $68=$m_u;
  var $69=$ref_tmp43;
  IHEAP[$68]=IHEAP[$69]; FHEAP[$68]=FHEAP[$69]; ; IHEAP[$68+1]=IHEAP[$69+1]; FHEAP[$68+1]=FHEAP[$69+1]; ;
  var $m_u48=$this1+30;
  var $call=__ZNK6b2Vec26LengthEv($m_u48);
  $length=$call;
  var $70=$length;
  var $cmp=($70) > 0.004999999888241291;
  var $m_u49=$this1+30;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_else$2: do { 
    if (__label__ == 1) {

      var $71=$length;
      var $div=1/($71);
      __ZN6b2Vec2mLEf($m_u49, $div);
      ;
    }
    else if (__label__ == 2) {

      __ZN6b2Vec23SetEff($m_u49, 0, 0);
      ;
    }
  } while(0);

  var $m_rA51=$this1+32;
  var $m_u52=$this1+30;
  var $call53=__Z7b2CrossRK6b2Vec2S1_($m_rA51, $m_u52);
  $crAu=$call53;
  var $m_rB54=$this1+34;
  var $m_u55=$this1+30;
  var $call56=__Z7b2CrossRK6b2Vec2S1_($m_rB54, $m_u55);
  $crBu=$call56;
  var $m_invMassA57=$this1+40;
  var $72=FHEAP[$m_invMassA57];
  var $m_invIA58=$this1+42;
  var $73=FHEAP[$m_invIA58];
  var $74=$crAu;
  var $mul=($73)*($74);
  var $75=$crAu;
  var $mul59=($mul)*($75);
  var $add=($72)+($mul59);
  var $m_invMassB60=$this1+41;
  var $76=FHEAP[$m_invMassB60];
  var $add61=($add)+($76);
  var $m_invIB62=$this1+43;
  var $77=FHEAP[$m_invIB62];
  var $78=$crBu;
  var $mul63=($77)*($78);
  var $79=$crBu;
  var $mul64=($mul63)*($79);
  var $add65=($add61)+($mul64);
  $invMass=$add65;
  var $cmp66=($add65) != 0;
  if ($cmp66) { __label__ = 4;; } else { var $cond = 0;__label__ = 5;; }
  $cond_true$$cond_end$6: do { 
    if (__label__ == 4) {

      var $80=$invMass;
      var $div67=1/($80);
      var $cond = $div67;;
    }
  } while(0);

  var $cond;
  var $m_mass=$this1+44;
  FHEAP[$m_mass]=$cond;
  var $m_frequencyHz=$this1+18;
  var $81=FHEAP[$m_frequencyHz];
  var $cmp68=($81) > 0;
  if ($cmp68) { __label__ = 6;; } else { __label__ = 11;; }
  $if_then69$$if_else104$9: do { 
    if (__label__ == 6) {

      var $82=$length;
      var $m_length=$this1+27;
      var $83=FHEAP[$m_length];
      var $sub=($82)-($83);
      $C=$sub;
      var $m_frequencyHz70=$this1+18;
      var $84=FHEAP[$m_frequencyHz70];
      var $mul71=($84)*6.2831854820251465;
      $omega=$mul71;
      var $m_mass72=$this1+44;
      var $85=FHEAP[$m_mass72];
      var $mul73=($85)*2;
      var $m_dampingRatio=$this1+19;
      var $86=FHEAP[$m_dampingRatio];
      var $mul74=($mul73)*($86);
      var $87=$omega;
      var $mul75=($mul74)*($87);
      $d=$mul75;
      var $m_mass76=$this1+44;
      var $88=FHEAP[$m_mass76];
      var $89=$omega;
      var $mul77=($88)*($89);
      var $90=$omega;
      var $mul78=($mul77)*($90);
      $k=$mul78;
      var $91=$data_addr;
      var $step=$91;
      var $dt=$step;
      var $92=FHEAP[$dt];
      $h=$92;
      var $93=$h;
      var $94=$d;
      var $95=$h;
      var $96=$k;
      var $mul79=($95)*($96);
      var $add80=($94)+($mul79);
      var $mul81=($93)*($add80);
      var $m_gamma=$this1+25;
      FHEAP[$m_gamma]=$mul81;
      var $m_gamma82=$this1+25;
      var $97=FHEAP[$m_gamma82];
      var $cmp83=($97) != 0;
      if ($cmp83) { __label__ = 7;; } else { var $cond89 = 0;__label__ = 8;; }
      $cond_true84$$cond_end88$11: do { 
        if (__label__ == 7) {

          var $m_gamma85=$this1+25;
          var $98=FHEAP[$m_gamma85];
          var $div86=1/($98);
          var $cond89 = $div86;;
        }
      } while(0);

      var $cond89;
      var $m_gamma90=$this1+25;
      FHEAP[$m_gamma90]=$cond89;
      var $99=$C;
      var $100=$h;
      var $mul91=($99)*($100);
      var $101=$k;
      var $mul92=($mul91)*($101);
      var $m_gamma93=$this1+25;
      var $102=FHEAP[$m_gamma93];
      var $mul94=($mul92)*($102);
      var $m_bias=$this1+20;
      FHEAP[$m_bias]=$mul94;
      var $m_gamma95=$this1+25;
      var $103=FHEAP[$m_gamma95];
      var $104=$invMass;
      var $add96=($104)+($103);
      $invMass=$add96;
      var $cmp97=($add96) != 0;
      if ($cmp97) { __label__ = 9;; } else { var $cond102 = 0;__label__ = 10;; }
      $cond_true98$$cond_end101$14: do { 
        if (__label__ == 9) {

          var $105=$invMass;
          var $div99=1/($105);
          var $cond102 = $div99;;
        }
      } while(0);

      var $cond102;
      var $m_mass103=$this1+44;
      FHEAP[$m_mass103]=$cond102;
      ;
    }
    else if (__label__ == 11) {

      var $m_gamma105=$this1+25;
      FHEAP[$m_gamma105]=0;
      var $m_bias106=$this1+20;
      FHEAP[$m_bias106]=0;
      ;
    }
  } while(0);

  var $106=$data_addr;
  var $step108=$106;
  var $warmStarting=$step108+5;
  var $107=IHEAP[$warmStarting];
  var $tobool=((($107)) & 1);
  if ($tobool) { __label__ = 13;; } else { __label__ = 14;; }
  $if_then109$$if_else128$19: do { 
    if (__label__ == 13) {

      var $108=$data_addr;
      var $step110=$108;
      var $dtRatio=$step110+2;
      var $109=FHEAP[$dtRatio];
      var $m_impulse=$this1+26;
      var $110=FHEAP[$m_impulse];
      var $mul111=($110)*($109);
      FHEAP[$m_impulse]=$mul111;
      var $m_impulse112=$this1+26;
      var $111=FHEAP[$m_impulse112];
      var $m_u113=$this1+30;
      __ZmlfRK6b2Vec2($P, $111, $m_u113);
      var $m_invMassA115=$this1+40;
      var $112=FHEAP[$m_invMassA115];
      __ZmlfRK6b2Vec2($ref_tmp114, $112, $P);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp114);
      var $m_invIA116=$this1+42;
      var $113=FHEAP[$m_invIA116];
      var $m_rA117=$this1+32;
      var $call118=__Z7b2CrossRK6b2Vec2S1_($m_rA117, $P);
      var $mul119=($113)*($call118);
      var $114=$wA;
      var $sub120=($114)-($mul119);
      $wA=$sub120;
      var $m_invMassB122=$this1+41;
      var $115=FHEAP[$m_invMassB122];
      __ZmlfRK6b2Vec2($ref_tmp121, $115, $P);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp121);
      var $m_invIB123=$this1+43;
      var $116=FHEAP[$m_invIB123];
      var $m_rB124=$this1+34;
      var $call125=__Z7b2CrossRK6b2Vec2S1_($m_rB124, $P);
      var $mul126=($116)*($call125);
      var $117=$wB;
      var $add127=($117)+($mul126);
      $wB=$add127;
      ;
    }
    else if (__label__ == 14) {

      var $m_impulse129=$this1+26;
      FHEAP[$m_impulse129]=0;
      ;
    }
  } while(0);

  var $m_indexA131=$this1+28;
  var $118=IHEAP[$m_indexA131];
  var $119=$data_addr;
  var $velocities132=$119+7;
  var $120=IHEAP[$velocities132];
  var $arrayidx133=$120+$118*3;
  var $v134=$arrayidx133;
  var $121=$v134;
  var $122=$vA;
  IHEAP[$121]=IHEAP[$122]; FHEAP[$121]=FHEAP[$122]; ; IHEAP[$121+1]=IHEAP[$122+1]; FHEAP[$121+1]=FHEAP[$122+1]; ;
  var $123=$wA;
  var $m_indexA135=$this1+28;
  var $124=IHEAP[$m_indexA135];
  var $125=$data_addr;
  var $velocities136=$125+7;
  var $126=IHEAP[$velocities136];
  var $arrayidx137=$126+$124*3;
  var $w138=$arrayidx137+2;
  FHEAP[$w138]=$123;
  var $m_indexB139=$this1+29;
  var $127=IHEAP[$m_indexB139];
  var $128=$data_addr;
  var $velocities140=$128+7;
  var $129=IHEAP[$velocities140];
  var $arrayidx141=$129+$127*3;
  var $v142=$arrayidx141;
  var $130=$v142;
  var $131=$vB;
  IHEAP[$130]=IHEAP[$131]; FHEAP[$130]=FHEAP[$131]; ; IHEAP[$130+1]=IHEAP[$131+1]; FHEAP[$130+1]=FHEAP[$131+1]; ;
  var $132=$wB;
  var $m_indexB143=$this1+29;
  var $133=IHEAP[$m_indexB143];
  var $134=$data_addr;
  var $velocities144=$134+7;
  var $135=IHEAP[$velocities144];
  var $arrayidx145=$135+$133*3;
  var $w146=$arrayidx145+2;
  FHEAP[$w146]=$132;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2DistanceJoint23InitVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN15b2DistanceJoint24SolveVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 20;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $vpA=__stackBase__+4;
  var $ref_tmp=__stackBase__+6;
  var $vpB=__stackBase__+8;
  var $ref_tmp12=__stackBase__+10;
  var $Cdot;
  var $ref_tmp13=__stackBase__+12;
  var $impulse;
  var $P=__stackBase__+14;
  var $ref_tmp19=__stackBase__+16;
  var $ref_tmp24=__stackBase__+18;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+28;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $velocities=$1+7;
  var $2=IHEAP[$velocities];
  var $arrayidx=$2+$0*3;
  var $v=$arrayidx;
  var $3=$vA;
  var $4=$v;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+28;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $velocities3=$6+7;
  var $7=IHEAP[$velocities3];
  var $arrayidx4=$7+$5*3;
  var $w=$arrayidx4+2;
  var $8=FHEAP[$w];
  $wA=$8;
  var $m_indexB=$this1+29;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $velocities5=$10+7;
  var $11=IHEAP[$velocities5];
  var $arrayidx6=$11+$9*3;
  var $v7=$arrayidx6;
  var $12=$vB;
  var $13=$v7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+29;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $velocities9=$15+7;
  var $16=IHEAP[$velocities9];
  var $arrayidx10=$16+$14*3;
  var $w11=$arrayidx10+2;
  var $17=FHEAP[$w11];
  $wB=$17;
  var $18=$wA;
  var $m_rA=$this1+32;
  __Z7b2CrossfRK6b2Vec2($ref_tmp, $18, $m_rA);
  __ZplRK6b2Vec2S1_($vpA, $vA, $ref_tmp);
  var $19=$wB;
  var $m_rB=$this1+34;
  __Z7b2CrossfRK6b2Vec2($ref_tmp12, $19, $m_rB);
  __ZplRK6b2Vec2S1_($vpB, $vB, $ref_tmp12);
  var $m_u=$this1+30;
  __ZmiRK6b2Vec2S1_($ref_tmp13, $vpB, $vpA);
  var $call=__Z5b2DotRK6b2Vec2S1_($m_u, $ref_tmp13);
  $Cdot=$call;
  var $m_mass=$this1+44;
  var $20=FHEAP[$m_mass];
  var $sub=(-($20));
  var $21=$Cdot;
  var $m_bias=$this1+20;
  var $22=FHEAP[$m_bias];
  var $add=($21)+($22);
  var $m_gamma=$this1+25;
  var $23=FHEAP[$m_gamma];
  var $m_impulse=$this1+26;
  var $24=FHEAP[$m_impulse];
  var $mul=($23)*($24);
  var $add14=($add)+($mul);
  var $mul15=($sub)*($add14);
  $impulse=$mul15;
  var $25=$impulse;
  var $m_impulse16=$this1+26;
  var $26=FHEAP[$m_impulse16];
  var $add17=($26)+($25);
  FHEAP[$m_impulse16]=$add17;
  var $27=$impulse;
  var $m_u18=$this1+30;
  __ZmlfRK6b2Vec2($P, $27, $m_u18);
  var $m_invMassA=$this1+40;
  var $28=FHEAP[$m_invMassA];
  __ZmlfRK6b2Vec2($ref_tmp19, $28, $P);
  __ZN6b2Vec2mIERKS_($vA, $ref_tmp19);
  var $m_invIA=$this1+42;
  var $29=FHEAP[$m_invIA];
  var $m_rA20=$this1+32;
  var $call21=__Z7b2CrossRK6b2Vec2S1_($m_rA20, $P);
  var $mul22=($29)*($call21);
  var $30=$wA;
  var $sub23=($30)-($mul22);
  $wA=$sub23;
  var $m_invMassB=$this1+41;
  var $31=FHEAP[$m_invMassB];
  __ZmlfRK6b2Vec2($ref_tmp24, $31, $P);
  __ZN6b2Vec2pLERKS_($vB, $ref_tmp24);
  var $m_invIB=$this1+43;
  var $32=FHEAP[$m_invIB];
  var $m_rB25=$this1+34;
  var $call26=__Z7b2CrossRK6b2Vec2S1_($m_rB25, $P);
  var $mul27=($32)*($call26);
  var $33=$wB;
  var $add28=($33)+($mul27);
  $wB=$add28;
  var $m_indexA29=$this1+28;
  var $34=IHEAP[$m_indexA29];
  var $35=$data_addr;
  var $velocities30=$35+7;
  var $36=IHEAP[$velocities30];
  var $arrayidx31=$36+$34*3;
  var $v32=$arrayidx31;
  var $37=$v32;
  var $38=$vA;
  IHEAP[$37]=IHEAP[$38]; FHEAP[$37]=FHEAP[$38]; ; IHEAP[$37+1]=IHEAP[$38+1]; FHEAP[$37+1]=FHEAP[$38+1]; ;
  var $39=$wA;
  var $m_indexA33=$this1+28;
  var $40=IHEAP[$m_indexA33];
  var $41=$data_addr;
  var $velocities34=$41+7;
  var $42=IHEAP[$velocities34];
  var $arrayidx35=$42+$40*3;
  var $w36=$arrayidx35+2;
  FHEAP[$w36]=$39;
  var $m_indexB37=$this1+29;
  var $43=IHEAP[$m_indexB37];
  var $44=$data_addr;
  var $velocities38=$44+7;
  var $45=IHEAP[$velocities38];
  var $arrayidx39=$45+$43*3;
  var $v40=$arrayidx39;
  var $46=$v40;
  var $47=$vB;
  IHEAP[$46]=IHEAP[$47]; FHEAP[$46]=FHEAP[$47]; ; IHEAP[$46+1]=IHEAP[$47+1]; FHEAP[$46+1]=FHEAP[$47+1]; ;
  var $48=$wB;
  var $m_indexB41=$this1+29;
  var $49=IHEAP[$m_indexB41];
  var $50=$data_addr;
  var $velocities42=$50+7;
  var $51=IHEAP[$velocities42];
  var $arrayidx43=$51+$49*3;
  var $w44=$arrayidx43+2;
  FHEAP[$w44]=$48;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2DistanceJoint24SolveVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN15b2DistanceJoint24SolvePositionConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 28;
  var __label__;

  var $retval;
  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $cB=__stackBase__+2;
  var $aB;
  var $qA=__stackBase__+4;
  var $qB=__stackBase__+6;
  var $rA=__stackBase__+8;
  var $ref_tmp=__stackBase__+10;
  var $rB=__stackBase__+12;
  var $ref_tmp12=__stackBase__+14;
  var $u=__stackBase__+16;
  var $ref_tmp13=__stackBase__+18;
  var $ref_tmp14=__stackBase__+20;
  var $length;
  var $C;
  var $impulse;
  var $P=__stackBase__+22;
  var $ref_tmp17=__stackBase__+24;
  var $ref_tmp21=__stackBase__+26;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_frequencyHz=$this1+18;
  var $0=FHEAP[$m_frequencyHz];
  var $cmp=($0) > 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$26: do { 
    if (__label__ == 1) {

      $retval=1;
      ;
    }
    else if (__label__ == 2) {

      var $m_indexA=$this1+28;
      var $1=IHEAP[$m_indexA];
      var $2=$data_addr;
      var $positions=$2+6;
      var $3=IHEAP[$positions];
      var $arrayidx=$3+$1*3;
      var $c=$arrayidx;
      var $4=$cA;
      var $5=$c;
      IHEAP[$4]=IHEAP[$5]; FHEAP[$4]=FHEAP[$5]; ; IHEAP[$4+1]=IHEAP[$5+1]; FHEAP[$4+1]=FHEAP[$5+1]; ;
      var $m_indexA2=$this1+28;
      var $6=IHEAP[$m_indexA2];
      var $7=$data_addr;
      var $positions3=$7+6;
      var $8=IHEAP[$positions3];
      var $arrayidx4=$8+$6*3;
      var $a=$arrayidx4+2;
      var $9=FHEAP[$a];
      $aA=$9;
      var $m_indexB=$this1+29;
      var $10=IHEAP[$m_indexB];
      var $11=$data_addr;
      var $positions5=$11+6;
      var $12=IHEAP[$positions5];
      var $arrayidx6=$12+$10*3;
      var $c7=$arrayidx6;
      var $13=$cB;
      var $14=$c7;
      IHEAP[$13]=IHEAP[$14]; FHEAP[$13]=FHEAP[$14]; ; IHEAP[$13+1]=IHEAP[$14+1]; FHEAP[$13+1]=FHEAP[$14+1]; ;
      var $m_indexB8=$this1+29;
      var $15=IHEAP[$m_indexB8];
      var $16=$data_addr;
      var $positions9=$16+6;
      var $17=IHEAP[$positions9];
      var $arrayidx10=$17+$15*3;
      var $a11=$arrayidx10+2;
      var $18=FHEAP[$a11];
      $aB=$18;
      var $19=$aA;
      __ZN5b2RotC1Ef($qA, $19);
      var $20=$aB;
      __ZN5b2RotC1Ef($qB, $20);
      var $m_localAnchorA=$this1+21;
      var $m_localCenterA=$this1+36;
      __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorA, $m_localCenterA);
      __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp);
      var $m_localAnchorB=$this1+23;
      var $m_localCenterB=$this1+38;
      __ZmiRK6b2Vec2S1_($ref_tmp12, $m_localAnchorB, $m_localCenterB);
      __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp12);
      __ZplRK6b2Vec2S1_($ref_tmp14, $cB, $rB);
      __ZmiRK6b2Vec2S1_($ref_tmp13, $ref_tmp14, $cA);
      __ZmiRK6b2Vec2S1_($u, $ref_tmp13, $rA);
      var $call=__ZN6b2Vec29NormalizeEv($u);
      $length=$call;
      var $21=$length;
      var $m_length=$this1+27;
      var $22=FHEAP[$m_length];
      var $sub=($21)-($22);
      $C=$sub;
      var $23=$C;
      var $call15=__Z7b2ClampIfET_S0_S0_S0_($23, -0.20000000298023224, 0.20000000298023224);
      $C=$call15;
      var $m_mass=$this1+44;
      var $24=FHEAP[$m_mass];
      var $sub16=(-($24));
      var $25=$C;
      var $mul=($sub16)*($25);
      $impulse=$mul;
      var $26=$impulse;
      __ZmlfRK6b2Vec2($P, $26, $u);
      var $m_invMassA=$this1+40;
      var $27=FHEAP[$m_invMassA];
      __ZmlfRK6b2Vec2($ref_tmp17, $27, $P);
      __ZN6b2Vec2mIERKS_($cA, $ref_tmp17);
      var $m_invIA=$this1+42;
      var $28=FHEAP[$m_invIA];
      var $call18=__Z7b2CrossRK6b2Vec2S1_($rA, $P);
      var $mul19=($28)*($call18);
      var $29=$aA;
      var $sub20=($29)-($mul19);
      $aA=$sub20;
      var $m_invMassB=$this1+41;
      var $30=FHEAP[$m_invMassB];
      __ZmlfRK6b2Vec2($ref_tmp21, $30, $P);
      __ZN6b2Vec2pLERKS_($cB, $ref_tmp21);
      var $m_invIB=$this1+43;
      var $31=FHEAP[$m_invIB];
      var $call22=__Z7b2CrossRK6b2Vec2S1_($rB, $P);
      var $mul23=($31)*($call22);
      var $32=$aB;
      var $add=($32)+($mul23);
      $aB=$add;
      var $m_indexA24=$this1+28;
      var $33=IHEAP[$m_indexA24];
      var $34=$data_addr;
      var $positions25=$34+6;
      var $35=IHEAP[$positions25];
      var $arrayidx26=$35+$33*3;
      var $c27=$arrayidx26;
      var $36=$c27;
      var $37=$cA;
      IHEAP[$36]=IHEAP[$37]; FHEAP[$36]=FHEAP[$37]; ; IHEAP[$36+1]=IHEAP[$37+1]; FHEAP[$36+1]=FHEAP[$37+1]; ;
      var $38=$aA;
      var $m_indexA28=$this1+28;
      var $39=IHEAP[$m_indexA28];
      var $40=$data_addr;
      var $positions29=$40+6;
      var $41=IHEAP[$positions29];
      var $arrayidx30=$41+$39*3;
      var $a31=$arrayidx30+2;
      FHEAP[$a31]=$38;
      var $m_indexB32=$this1+29;
      var $42=IHEAP[$m_indexB32];
      var $43=$data_addr;
      var $positions33=$43+6;
      var $44=IHEAP[$positions33];
      var $arrayidx34=$44+$42*3;
      var $c35=$arrayidx34;
      var $45=$c35;
      var $46=$cB;
      IHEAP[$45]=IHEAP[$46]; FHEAP[$45]=FHEAP[$46]; ; IHEAP[$45+1]=IHEAP[$46+1]; FHEAP[$45+1]=FHEAP[$46+1]; ;
      var $47=$aB;
      var $m_indexB36=$this1+29;
      var $48=IHEAP[$m_indexB36];
      var $49=$data_addr;
      var $positions37=$49+6;
      var $50=IHEAP[$positions37];
      var $arrayidx38=$50+$48*3;
      var $a39=$arrayidx38+2;
      FHEAP[$a39]=$47;
      var $51=$C;
      var $call40=__Z5b2AbsIfET_S0_($51);
      var $cmp41=($call40) < 0.004999999888241291;
      $retval=$cmp41;
      ;
    }
  } while(0);

  var $52=$retval;
  STACKTOP = __stackBase__;
  return $52;
  return null;
}
__ZN15b2DistanceJoint24SolvePositionConstraintsERK12b2SolverData["X"]=1;

function __ZN5b2RotC2Ef($this, $angle) {
  ;
  var __label__;

  var $this_addr;
  var $angle_addr;
  $this_addr=$this;
  $angle_addr=$angle;
  var $this1=$this_addr;
  var $0=$angle_addr;
  var $call=_sinf($0);
  var $s=$this1;
  FHEAP[$s]=$call;
  var $1=$angle_addr;
  var $call2=_cosf($1);
  var $c=$this1+1;
  FHEAP[$c]=$call2;
  ;
  return;
  return;
}


function __ZN6b2DrawD2Ev($this) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN6b2DrawD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN6b2DrawD2Ev($this1);
  ;
  return;
  return;
}


function __ZN6b2DrawD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN6b2DrawD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN6b2Draw11AppendFlagsEj($this, $flags) {
  ;
  var __label__;

  var $this_addr;
  var $flags_addr;
  $this_addr=$this;
  $flags_addr=$flags;
  var $this1=$this_addr;
  var $0=$flags_addr;
  var $m_drawFlags=$this1+1;
  var $1=IHEAP[$m_drawFlags];
  var $or=($1) | ($0);
  IHEAP[$m_drawFlags]=$or;
  ;
  return;
  return;
}


function __ZN6b2Draw10ClearFlagsEj($this, $flags) {
  ;
  var __label__;

  var $this_addr;
  var $flags_addr;
  $this_addr=$this;
  $flags_addr=$flags;
  var $this1=$this_addr;
  var $0=$flags_addr;
  var $neg=($0) ^ -1;
  var $m_drawFlags=$this1+1;
  var $1=IHEAP[$m_drawFlags];
  var $and=($1) & ($neg);
  IHEAP[$m_drawFlags]=$and;
  ;
  return;
  return;
}


function __ZN13b2DynamicTreeD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_nodes=$this1+1;
  var $0=IHEAP[$m_nodes];
  var $1=$0;
  __Z6b2FreePv($1);
  ;
  return;
  return;
}


function __ZN13b2DynamicTree8FreeNodeEi($this, $nodeId) {
  ;
  var __label__;

  var $this_addr;
  var $nodeId_addr;
  $this_addr=$this;
  $nodeId_addr=$nodeId;
  var $this1=$this_addr;
  var $0=$nodeId_addr;
  var $cmp=0 <= ($0);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$26: do { 
    if (__label__ == 1) {

      var $1=$nodeId_addr;
      var $m_nodeCapacity=$this1+3;
      var $2=IHEAP[$m_nodeCapacity];
      var $cmp2=($1) < ($2);
      if ($cmp2) { __label__ = 3;break $land_lhs_true$$cond_false$26; } else { __label__ = 2;break $land_lhs_true$$cond_false$26; }
    }
  } while(0);
  $cond_end$$cond_false$28: do { 
    if (__label__ == 2) {

      ___assert_func(__str103, 97, ___PRETTY_FUNCTION____ZN13b2DynamicTree8FreeNodeEi, __str2105);
      ;
    }
  } while(0);

  var $m_nodeCount=$this1+2;
  var $3=IHEAP[$m_nodeCount];
  var $cmp3=0 < ($3);
  if ($cmp3) { __label__ = 5;; } else { __label__ = 4;; }
  $cond_end6$$cond_false5$31: do { 
    if (__label__ == 4) {

      ___assert_func(__str103, 98, ___PRETTY_FUNCTION____ZN13b2DynamicTree8FreeNodeEi, __str3106);
      ;
    }
  } while(0);

  var $m_freeList=$this1+4;
  var $4=IHEAP[$m_freeList];
  var $5=$nodeId_addr;
  var $m_nodes=$this1+1;
  var $6=IHEAP[$m_nodes];
  var $arrayidx=$6+$5*9;
  var $7=$arrayidx+5;
  var $next=$7;
  IHEAP[$next]=$4;
  var $8=$nodeId_addr;
  var $m_nodes7=$this1+1;
  var $9=IHEAP[$m_nodes7];
  var $arrayidx8=$9+$8*9;
  var $height=$arrayidx8+8;
  IHEAP[$height]=-1;
  var $10=$nodeId_addr;
  var $m_freeList9=$this1+4;
  IHEAP[$m_freeList9]=$10;
  var $m_nodeCount10=$this1+2;
  var $11=IHEAP[$m_nodeCount10];
  var $dec=($11)-1;
  IHEAP[$m_nodeCount10]=$dec;
  ;
  return;
  return;
}


function __ZN13b2DynamicTreeC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  var $i;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_root=$this1;
  IHEAP[$m_root]=-1;
  var $m_nodeCapacity=$this1+3;
  IHEAP[$m_nodeCapacity]=16;
  var $m_nodeCount=$this1+2;
  IHEAP[$m_nodeCount]=0;
  var $m_nodeCapacity2=$this1+3;
  var $0=IHEAP[$m_nodeCapacity2];
  var $mul=($0)*36;
  var $call=__Z7b2Alloci($mul);
  var $1=$call;
  var $m_nodes=$this1+1;
  IHEAP[$m_nodes]=$1;
  var $m_nodes3=$this1+1;
  var $2=IHEAP[$m_nodes3];
  var $3=$2;
  var $m_nodeCapacity4=$this1+3;
  var $4=IHEAP[$m_nodeCapacity4];
  var $mul5=($4)*36;
  for (var mspi = 0; mspi < 9*($mul5/36); mspi++) {
  IHEAP[$3+mspi]=0; FHEAP[$3+mspi]=0
  };
  $i=0;
  var $5=$i;
  var $m_nodeCapacity6=$this1+3;
  var $6=IHEAP[$m_nodeCapacity6];
  var $sub1=($6)-1;
  var $cmp2=($5) < ($sub1);
  if ($cmp2) { __label__ = 1;; } else { __label__ = 3;; }
  $for_body_lr_ph$$for_end$7: do { 
    if (__label__ == 1) {

      var $m_nodes7=$this1+1;
      var $m_nodes8=$this1+1;
      ;
      $for_body$9: while(1) { 

        var $7=$i;
        var $add=($7)+1;
        var $8=$i;
        var $9=IHEAP[$m_nodes7];
        var $arrayidx=$9+$8*9;
        var $10=$arrayidx+5;
        var $next=$10;
        IHEAP[$next]=$add;
        var $11=$i;
        var $12=IHEAP[$m_nodes8];
        var $arrayidx9=$12+$11*9;
        var $height=$arrayidx9+8;
        IHEAP[$height]=-1;
        var $13=$i;
        var $inc=($13)+1;
        $i=$inc;
        var $14=$i;
        var $15=IHEAP[$m_nodeCapacity6];
        var $sub=($15)-1;
        var $cmp=($14) < ($sub);
        if (!($cmp)) { __label__ = 3;break $for_body_lr_ph$$for_end$7; }
      }
    }
  } while(0);

  var $m_nodeCapacity10=$this1+3;
  var $16=IHEAP[$m_nodeCapacity10];
  var $sub11=($16)-1;
  var $m_nodes12=$this1+1;
  var $17=IHEAP[$m_nodes12];
  var $arrayidx13=$17+$sub11*9;
  var $18=$arrayidx13+5;
  var $next14=$18;
  IHEAP[$next14]=-1;
  var $m_nodeCapacity15=$this1+3;
  var $19=IHEAP[$m_nodeCapacity15];
  var $sub16=($19)-1;
  var $m_nodes17=$this1+1;
  var $20=IHEAP[$m_nodes17];
  var $arrayidx18=$20+$sub16*9;
  var $height19=$arrayidx18+8;
  IHEAP[$height19]=-1;
  var $m_freeList=$this1+4;
  IHEAP[$m_freeList]=0;
  var $m_path=$this1+5;
  IHEAP[$m_path]=0;
  var $m_insertionCount=$this1+6;
  IHEAP[$m_insertionCount]=0;
  ;
  return;
  return;
}
__ZN13b2DynamicTreeC2Ev["X"]=1;

function __ZN13b2DynamicTree12AllocateNodeEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $oldNodes;
  var $i;
  var $nodeId;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_freeList=$this1+4;
  var $0=IHEAP[$m_freeList];
  var $cmp=($0)==-1;
  if ($cmp) { __label__ = 1;; } else { __label__ = 7;; }
  $if_then$$if_end$14: do { 
    if (__label__ == 1) {

      var $m_nodeCount=$this1+2;
      var $1=IHEAP[$m_nodeCount];
      var $m_nodeCapacity=$this1+3;
      var $2=IHEAP[$m_nodeCapacity];
      var $cmp2=($1)==($2);
      if ($cmp2) { __label__ = 3;; } else { __label__ = 2;; }
      $cond_end$$cond_false$16: do { 
        if (__label__ == 2) {

          ___assert_func(__str103, 61, ___PRETTY_FUNCTION____ZN13b2DynamicTree12AllocateNodeEv, __str1104);
          ;
        }
      } while(0);

      var $m_nodes=$this1+1;
      var $3=IHEAP[$m_nodes];
      $oldNodes=$3;
      var $m_nodeCapacity3=$this1+3;
      var $4=IHEAP[$m_nodeCapacity3];
      var $mul=(($4)<<1);
      IHEAP[$m_nodeCapacity3]=$mul;
      var $m_nodeCapacity4=$this1+3;
      var $5=IHEAP[$m_nodeCapacity4];
      var $mul5=($5)*36;
      var $call=__Z7b2Alloci($mul5);
      var $6=$call;
      var $m_nodes6=$this1+1;
      IHEAP[$m_nodes6]=$6;
      var $m_nodes7=$this1+1;
      var $7=IHEAP[$m_nodes7];
      var $8=$7;
      var $9=$oldNodes;
      var $10=$9;
      var $m_nodeCount8=$this1+2;
      var $11=IHEAP[$m_nodeCount8];
      var $mul9=($11)*36;
      for (var mcpi_s=$10,mcpi_e=$10+9*($mul9/36),mcpi_d=$8; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
        IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
      };
      var $12=$oldNodes;
      var $13=$12;
      __Z6b2FreePv($13);
      var $m_nodeCount10=$this1+2;
      var $14=IHEAP[$m_nodeCount10];
      $i=$14;
      var $15=$i;
      var $m_nodeCapacity11=$this1+3;
      var $16=IHEAP[$m_nodeCapacity11];
      var $sub1=($16)-1;
      var $cmp122=($15) < ($sub1);
      if ($cmp122) { __label__ = 4;; } else { __label__ = 6;; }
      $for_body_lr_ph$$for_end$19: do { 
        if (__label__ == 4) {

          var $m_nodes13=$this1+1;
          var $m_nodes14=$this1+1;
          ;
          $for_body$21: while(1) { 

            var $17=$i;
            var $add=($17)+1;
            var $18=$i;
            var $19=IHEAP[$m_nodes13];
            var $arrayidx=$19+$18*9;
            var $20=$arrayidx+5;
            var $next=$20;
            IHEAP[$next]=$add;
            var $21=$i;
            var $22=IHEAP[$m_nodes14];
            var $arrayidx15=$22+$21*9;
            var $height=$arrayidx15+8;
            IHEAP[$height]=-1;
            var $23=$i;
            var $inc=($23)+1;
            $i=$inc;
            var $24=$i;
            var $25=IHEAP[$m_nodeCapacity11];
            var $sub=($25)-1;
            var $cmp12=($24) < ($sub);
            if (!($cmp12)) { __label__ = 6;break $for_body_lr_ph$$for_end$19; }
          }
        }
      } while(0);

      var $m_nodeCapacity16=$this1+3;
      var $26=IHEAP[$m_nodeCapacity16];
      var $sub17=($26)-1;
      var $m_nodes18=$this1+1;
      var $27=IHEAP[$m_nodes18];
      var $arrayidx19=$27+$sub17*9;
      var $28=$arrayidx19+5;
      var $next20=$28;
      IHEAP[$next20]=-1;
      var $m_nodeCapacity21=$this1+3;
      var $29=IHEAP[$m_nodeCapacity21];
      var $sub22=($29)-1;
      var $m_nodes23=$this1+1;
      var $30=IHEAP[$m_nodes23];
      var $arrayidx24=$30+$sub22*9;
      var $height25=$arrayidx24+8;
      IHEAP[$height25]=-1;
      var $m_nodeCount26=$this1+2;
      var $31=IHEAP[$m_nodeCount26];
      var $m_freeList27=$this1+4;
      IHEAP[$m_freeList27]=$31;
      ;
    }
  } while(0);

  var $m_freeList28=$this1+4;
  var $32=IHEAP[$m_freeList28];
  $nodeId=$32;
  var $33=$nodeId;
  var $m_nodes29=$this1+1;
  var $34=IHEAP[$m_nodes29];
  var $arrayidx30=$34+$33*9;
  var $35=$arrayidx30+5;
  var $next31=$35;
  var $36=IHEAP[$next31];
  var $m_freeList32=$this1+4;
  IHEAP[$m_freeList32]=$36;
  var $37=$nodeId;
  var $m_nodes33=$this1+1;
  var $38=IHEAP[$m_nodes33];
  var $arrayidx34=$38+$37*9;
  var $39=$arrayidx34+5;
  var $parent=$39;
  IHEAP[$parent]=-1;
  var $40=$nodeId;
  var $m_nodes35=$this1+1;
  var $41=IHEAP[$m_nodes35];
  var $arrayidx36=$41+$40*9;
  var $child1=$arrayidx36+6;
  IHEAP[$child1]=-1;
  var $42=$nodeId;
  var $m_nodes37=$this1+1;
  var $43=IHEAP[$m_nodes37];
  var $arrayidx38=$43+$42*9;
  var $child2=$arrayidx38+7;
  IHEAP[$child2]=-1;
  var $44=$nodeId;
  var $m_nodes39=$this1+1;
  var $45=IHEAP[$m_nodes39];
  var $arrayidx40=$45+$44*9;
  var $height41=$arrayidx40+8;
  IHEAP[$height41]=0;
  var $46=$nodeId;
  var $m_nodes42=$this1+1;
  var $47=IHEAP[$m_nodes42];
  var $arrayidx43=$47+$46*9;
  var $userData=$arrayidx43+4;
  IHEAP[$userData]=0;
  var $m_nodeCount44=$this1+2;
  var $48=IHEAP[$m_nodeCount44];
  var $inc45=($48)+1;
  IHEAP[$m_nodeCount44]=$inc45;
  var $49=$nodeId;
  ;
  return $49;
  return null;
}
__ZN13b2DynamicTree12AllocateNodeEv["X"]=1;

function __ZN13b2DynamicTree11CreateProxyERK6b2AABBPv($this, $aabb, $userData) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $aabb_addr;
  var $userData_addr;
  var $proxyId;
  var $r=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $ref_tmp7=__stackBase__+4;
  $this_addr=$this;
  $aabb_addr=$aabb;
  $userData_addr=$userData;
  var $this1=$this_addr;
  var $call=__ZN13b2DynamicTree12AllocateNodeEv($this1);
  $proxyId=$call;
  __ZN6b2Vec2C1Eff($r, 0.10000000149011612, 0.10000000149011612);
  var $0=$proxyId;
  var $m_nodes=$this1+1;
  var $1=IHEAP[$m_nodes];
  var $arrayidx=$1+$0*9;
  var $aabb2=$arrayidx;
  var $lowerBound=$aabb2;
  var $2=$aabb_addr;
  var $lowerBound3=$2;
  __ZmiRK6b2Vec2S1_($ref_tmp, $lowerBound3, $r);
  var $3=$lowerBound;
  var $4=$ref_tmp;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $5=$proxyId;
  var $m_nodes4=$this1+1;
  var $6=IHEAP[$m_nodes4];
  var $arrayidx5=$6+$5*9;
  var $aabb6=$arrayidx5;
  var $upperBound=$aabb6+2;
  var $7=$aabb_addr;
  var $upperBound8=$7+2;
  __ZplRK6b2Vec2S1_($ref_tmp7, $upperBound8, $r);
  var $8=$upperBound;
  var $9=$ref_tmp7;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $10=$userData_addr;
  var $11=$proxyId;
  var $m_nodes9=$this1+1;
  var $12=IHEAP[$m_nodes9];
  var $arrayidx10=$12+$11*9;
  var $userData11=$arrayidx10+4;
  IHEAP[$userData11]=$10;
  var $13=$proxyId;
  var $m_nodes12=$this1+1;
  var $14=IHEAP[$m_nodes12];
  var $arrayidx13=$14+$13*9;
  var $height=$arrayidx13+8;
  IHEAP[$height]=0;
  var $15=$proxyId;
  __ZN13b2DynamicTree10InsertLeafEi($this1, $15);
  var $16=$proxyId;
  STACKTOP = __stackBase__;
  return $16;
  return null;
}
__ZN13b2DynamicTree11CreateProxyERK6b2AABBPv["X"]=1;

function __ZN13b2DynamicTree10InsertLeafEi($this, $leaf) {
  var __stackBase__  = STACKTOP; STACKTOP += 24;
  var __label__;

  var $this_addr;
  var $leaf_addr;
  var $leafAABB=__stackBase__;
  var $index;
  var $child1;
  var $child2;
  var $area;
  var $combinedAABB=__stackBase__+4;
  var $combinedArea;
  var $cost;
  var $inheritanceCost;
  var $cost1;
  var $aabb29=__stackBase__+8;
  var $aabb34=__stackBase__+12;
  var $oldArea;
  var $newArea;
  var $cost2;
  var $aabb50=__stackBase__+16;
  var $aabb57=__stackBase__+20;
  var $oldArea61;
  var $newArea66;
  var $sibling;
  var $oldParent;
  var $newParent;
  var $child1149;
  var $child2153;
  $this_addr=$this;
  $leaf_addr=$leaf;
  var $this1=$this_addr;
  var $m_insertionCount=$this1+6;
  var $0=IHEAP[$m_insertionCount];
  var $inc=($0)+1;
  IHEAP[$m_insertionCount]=$inc;
  var $m_root=$this1;
  var $1=IHEAP[$m_root];
  var $cmp=($1)==-1;
  var $2=$leaf_addr;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$36: do { 
    if (__label__ == 1) {

      var $m_root2=$this1;
      IHEAP[$m_root2]=$2;
      var $m_root3=$this1;
      var $3=IHEAP[$m_root3];
      var $m_nodes=$this1+1;
      var $4=IHEAP[$m_nodes];
      var $arrayidx=$4+$3*9;
      var $5=$arrayidx+5;
      var $parent=$5;
      IHEAP[$parent]=-1;
      ;
    }
    else if (__label__ == 2) {

      var $m_nodes4=$this1+1;
      var $6=IHEAP[$m_nodes4];
      var $arrayidx5=$6+$2*9;
      var $aabb=$arrayidx5;
      var $7=$leafAABB;
      var $8=$aabb;
      IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ; IHEAP[$7+2]=IHEAP[$8+2]; FHEAP[$7+2]=FHEAP[$8+2]; ; IHEAP[$7+3]=IHEAP[$8+3]; FHEAP[$7+3]=FHEAP[$8+3]; ;
      var $m_root6=$this1;
      var $9=IHEAP[$m_root6];
      $index=$9;
      var $m_nodes7=$this1+1;
      var $m_nodes10=$this1+1;
      var $m_nodes13=$this1+1;
      var $m_nodes16=$this1+1;
      var $m_nodes20=$this1+1;
      var $m_nodes25=$this1+1;
      var $m_nodes30=$this1+1;
      var $m_nodes46=$this1+1;
      var $m_nodes51=$this1+1;
      var $m_nodes58=$this1+1;
      var $m_nodes62=$this1+1;
      var $m_nodes35=$this1+1;
      var $m_nodes38=$this1+1;
      ;
      $while_cond$39: while(1) { 

        var $10=$index;
        var $11=IHEAP[$m_nodes7];
        var $arrayidx8=$11+$10*9;
        var $call=__ZNK10b2TreeNode6IsLeafEv($arrayidx8);
        var $conv=($call);
        var $cmp9=($conv)==0;
        if (!($cmp9)) { __label__ = 15;break $while_cond$39; }

        var $12=$index;
        var $13=IHEAP[$m_nodes10];
        var $arrayidx11=$13+$12*9;
        var $child112=$arrayidx11+6;
        var $14=IHEAP[$child112];
        $child1=$14;
        var $15=$index;
        var $16=IHEAP[$m_nodes13];
        var $arrayidx14=$16+$15*9;
        var $child215=$arrayidx14+7;
        var $17=IHEAP[$child215];
        $child2=$17;
        var $18=$index;
        var $19=IHEAP[$m_nodes16];
        var $arrayidx17=$19+$18*9;
        var $aabb18=$arrayidx17;
        var $call19=__ZNK6b2AABB12GetPerimeterEv($aabb18);
        $area=$call19;
        __ZN6b2AABBC1Ev($combinedAABB);
        var $20=$index;
        var $21=IHEAP[$m_nodes20];
        var $arrayidx21=$21+$20*9;
        var $aabb22=$arrayidx21;
        __ZN6b2AABB7CombineERKS_S1_($combinedAABB, $aabb22, $leafAABB);
        var $call23=__ZNK6b2AABB12GetPerimeterEv($combinedAABB);
        $combinedArea=$call23;
        var $22=$combinedArea;
        var $mul=($22)*2;
        $cost=$mul;
        var $23=$combinedArea;
        var $24=$area;
        var $sub=($23)-($24);
        var $mul24=($sub)*2;
        $inheritanceCost=$mul24;
        var $25=$child1;
        var $26=IHEAP[$m_nodes25];
        var $arrayidx26=$26+$25*9;
        var $call27=__ZNK10b2TreeNode6IsLeafEv($arrayidx26);
        if ($call27) { __label__ = 5;; } else { __label__ = 6;; }
        $if_then28$$if_else$42: do { 
          if (__label__ == 5) {

            __ZN6b2AABBC1Ev($aabb29);
            var $27=$child1;
            var $28=IHEAP[$m_nodes30];
            var $arrayidx31=$28+$27*9;
            var $aabb32=$arrayidx31;
            __ZN6b2AABB7CombineERKS_S1_($aabb29, $leafAABB, $aabb32);
            var $call33=__ZNK6b2AABB12GetPerimeterEv($aabb29);
            var $29=$inheritanceCost;
            var $add=($call33)+($29);
            $cost1=$add;
            ;
          }
          else if (__label__ == 6) {

            __ZN6b2AABBC1Ev($aabb34);
            var $30=$child1;
            var $31=IHEAP[$m_nodes35];
            var $arrayidx36=$31+$30*9;
            var $aabb37=$arrayidx36;
            __ZN6b2AABB7CombineERKS_S1_($aabb34, $leafAABB, $aabb37);
            var $32=$child1;
            var $33=IHEAP[$m_nodes38];
            var $arrayidx39=$33+$32*9;
            var $aabb40=$arrayidx39;
            var $call41=__ZNK6b2AABB12GetPerimeterEv($aabb40);
            $oldArea=$call41;
            var $call42=__ZNK6b2AABB12GetPerimeterEv($aabb34);
            $newArea=$call42;
            var $34=$newArea;
            var $35=$oldArea;
            var $sub43=($34)-($35);
            var $36=$inheritanceCost;
            var $add44=($sub43)+($36);
            $cost1=$add44;
            ;
          }
        } while(0);

        var $37=$child2;
        var $38=IHEAP[$m_nodes46];
        var $arrayidx47=$38+$37*9;
        var $call48=__ZNK10b2TreeNode6IsLeafEv($arrayidx47);
        if ($call48) { __label__ = 8;; } else { __label__ = 9;; }
        $if_then49$$if_else56$46: do { 
          if (__label__ == 8) {

            __ZN6b2AABBC1Ev($aabb50);
            var $39=$child2;
            var $40=IHEAP[$m_nodes51];
            var $arrayidx52=$40+$39*9;
            var $aabb53=$arrayidx52;
            __ZN6b2AABB7CombineERKS_S1_($aabb50, $leafAABB, $aabb53);
            var $call54=__ZNK6b2AABB12GetPerimeterEv($aabb50);
            var $41=$inheritanceCost;
            var $add55=($call54)+($41);
            $cost2=$add55;
            ;
          }
          else if (__label__ == 9) {

            __ZN6b2AABBC1Ev($aabb57);
            var $42=$child2;
            var $43=IHEAP[$m_nodes58];
            var $arrayidx59=$43+$42*9;
            var $aabb60=$arrayidx59;
            __ZN6b2AABB7CombineERKS_S1_($aabb57, $leafAABB, $aabb60);
            var $44=$child2;
            var $45=IHEAP[$m_nodes62];
            var $arrayidx63=$45+$44*9;
            var $aabb64=$arrayidx63;
            var $call65=__ZNK6b2AABB12GetPerimeterEv($aabb64);
            $oldArea61=$call65;
            var $call67=__ZNK6b2AABB12GetPerimeterEv($aabb57);
            $newArea66=$call67;
            var $46=$newArea66;
            var $47=$oldArea61;
            var $sub68=($46)-($47);
            var $48=$inheritanceCost;
            var $add69=($sub68)+($48);
            $cost2=$add69;
            ;
          }
        } while(0);

        var $49=$cost;
        var $50=$cost1;
        var $cmp71=($49) < ($50);
        if ($cmp71) { __label__ = 11;; } else { __label__ = 12;; }
        $land_lhs_true$$if_end74$50: do { 
          if (__label__ == 11) {

            var $51=$cost;
            var $52=$cost2;
            var $cmp72=($51) < ($52);
            if ($cmp72) { __label__ = 15;break $while_cond$39; }
          }
        } while(0);

        var $53=$cost1;
        var $54=$cost2;
        var $cmp75=($53) < ($54);
        if ($cmp75) { __label__ = 13;; } else { __label__ = 14;; }
        $if_then76$$if_else77$53: do { 
          if (__label__ == 13) {

            var $55=$child1;
            $index=$55;
            ;
          }
          else if (__label__ == 14) {

            var $56=$child2;
            $index=$56;
            ;
          }
        } while(0);
      }

      var $57=$index;
      $sibling=$57;
      var $58=$sibling;
      var $m_nodes79=$this1+1;
      var $59=IHEAP[$m_nodes79];
      var $arrayidx80=$59+$58*9;
      var $60=$arrayidx80+5;
      var $parent81=$60;
      var $61=IHEAP[$parent81];
      $oldParent=$61;
      var $call82=__ZN13b2DynamicTree12AllocateNodeEv($this1);
      $newParent=$call82;
      var $62=$oldParent;
      var $63=$newParent;
      var $m_nodes83=$this1+1;
      var $64=IHEAP[$m_nodes83];
      var $arrayidx84=$64+$63*9;
      var $65=$arrayidx84+5;
      var $parent85=$65;
      IHEAP[$parent85]=$62;
      var $66=$newParent;
      var $m_nodes86=$this1+1;
      var $67=IHEAP[$m_nodes86];
      var $arrayidx87=$67+$66*9;
      var $userData=$arrayidx87+4;
      IHEAP[$userData]=0;
      var $68=$newParent;
      var $m_nodes88=$this1+1;
      var $69=IHEAP[$m_nodes88];
      var $arrayidx89=$69+$68*9;
      var $aabb90=$arrayidx89;
      var $70=$sibling;
      var $m_nodes91=$this1+1;
      var $71=IHEAP[$m_nodes91];
      var $arrayidx92=$71+$70*9;
      var $aabb93=$arrayidx92;
      __ZN6b2AABB7CombineERKS_S1_($aabb90, $leafAABB, $aabb93);
      var $72=$sibling;
      var $m_nodes94=$this1+1;
      var $73=IHEAP[$m_nodes94];
      var $arrayidx95=$73+$72*9;
      var $height=$arrayidx95+8;
      var $74=IHEAP[$height];
      var $add96=($74)+1;
      var $75=$newParent;
      var $m_nodes97=$this1+1;
      var $76=IHEAP[$m_nodes97];
      var $arrayidx98=$76+$75*9;
      var $height99=$arrayidx98+8;
      IHEAP[$height99]=$add96;
      var $77=$oldParent;
      var $cmp100=($77)!=-1;
      if ($cmp100) { __label__ = 16;; } else { __label__ = 20;; }
      $if_then101$$if_else127$57: do { 
        if (__label__ == 16) {

          var $78=$oldParent;
          var $m_nodes102=$this1+1;
          var $79=IHEAP[$m_nodes102];
          var $arrayidx103=$79+$78*9;
          var $child1104=$arrayidx103+6;
          var $80=IHEAP[$child1104];
          var $81=$sibling;
          var $cmp105=($80)==($81);
          var $82=$newParent;
          var $83=$oldParent;
          var $m_nodes107=$this1+1;
          var $84=IHEAP[$m_nodes107];
          var $arrayidx108=$84+$83*9;
          if ($cmp105) { __label__ = 17;; } else { __label__ = 18;; }
          $if_then106$$if_else110$59: do { 
            if (__label__ == 17) {

              var $child1109=$arrayidx108+6;
              IHEAP[$child1109]=$82;
              ;
            }
            else if (__label__ == 18) {

              var $child2113=$arrayidx108+7;
              IHEAP[$child2113]=$82;
              ;
            }
          } while(0);

          var $85=$sibling;
          var $86=$newParent;
          var $m_nodes115=$this1+1;
          var $87=IHEAP[$m_nodes115];
          var $arrayidx116=$87+$86*9;
          var $child1117=$arrayidx116+6;
          IHEAP[$child1117]=$85;
          var $88=$leaf_addr;
          var $89=$newParent;
          var $m_nodes118=$this1+1;
          var $90=IHEAP[$m_nodes118];
          var $arrayidx119=$90+$89*9;
          var $child2120=$arrayidx119+7;
          IHEAP[$child2120]=$88;
          var $91=$newParent;
          var $92=$sibling;
          var $m_nodes121=$this1+1;
          var $93=IHEAP[$m_nodes121];
          var $arrayidx122=$93+$92*9;
          var $94=$arrayidx122+5;
          var $parent123=$94;
          IHEAP[$parent123]=$91;
          var $95=$newParent;
          var $96=$leaf_addr;
          var $m_nodes124=$this1+1;
          var $97=IHEAP[$m_nodes124];
          var $arrayidx125=$97+$96*9;
          var $98=$arrayidx125+5;
          var $parent126=$98;
          IHEAP[$parent126]=$95;
          ;
        }
        else if (__label__ == 20) {

          var $99=$sibling;
          var $100=$newParent;
          var $m_nodes128=$this1+1;
          var $101=IHEAP[$m_nodes128];
          var $arrayidx129=$101+$100*9;
          var $child1130=$arrayidx129+6;
          IHEAP[$child1130]=$99;
          var $102=$leaf_addr;
          var $103=$newParent;
          var $m_nodes131=$this1+1;
          var $104=IHEAP[$m_nodes131];
          var $arrayidx132=$104+$103*9;
          var $child2133=$arrayidx132+7;
          IHEAP[$child2133]=$102;
          var $105=$newParent;
          var $106=$sibling;
          var $m_nodes134=$this1+1;
          var $107=IHEAP[$m_nodes134];
          var $arrayidx135=$107+$106*9;
          var $108=$arrayidx135+5;
          var $parent136=$108;
          IHEAP[$parent136]=$105;
          var $109=$newParent;
          var $110=$leaf_addr;
          var $m_nodes137=$this1+1;
          var $111=IHEAP[$m_nodes137];
          var $arrayidx138=$111+$110*9;
          var $112=$arrayidx138+5;
          var $parent139=$112;
          IHEAP[$parent139]=$109;
          var $113=$newParent;
          var $m_root140=$this1;
          IHEAP[$m_root140]=$113;
          ;
        }
      } while(0);

      var $114=$leaf_addr;
      var $m_nodes142=$this1+1;
      var $115=IHEAP[$m_nodes142];
      var $arrayidx143=$115+$114*9;
      var $116=$arrayidx143+5;
      var $parent144=$116;
      var $117=IHEAP[$parent144];
      $index=$117;
      var $cmp1461=($117)!=-1;
      if (!($cmp1461)) { __label__ = 28;break $if_then$$if_end$36; }

      var $m_nodes150=$this1+1;
      var $m_nodes154=$this1+1;
      var $m_nodes162=$this1+1;
      var $m_nodes165=$this1+1;
      var $m_nodes170=$this1+1;
      var $m_nodes173=$this1+1;
      var $m_nodes176=$this1+1;
      var $m_nodes179=$this1+1;
      var $m_nodes182=$this1+1;
      ;
      $while_body147$66: while(1) { 

        var $118=$index;
        var $call148=__ZN13b2DynamicTree7BalanceEi($this1, $118);
        $index=$call148;
        var $119=$index;
        var $120=IHEAP[$m_nodes150];
        var $arrayidx151=$120+$119*9;
        var $child1152=$arrayidx151+6;
        var $121=IHEAP[$child1152];
        $child1149=$121;
        var $122=$index;
        var $123=IHEAP[$m_nodes154];
        var $arrayidx155=$123+$122*9;
        var $child2156=$arrayidx155+7;
        var $124=IHEAP[$child2156];
        $child2153=$124;
        var $125=$child1149;
        var $cmp157=($125)!=-1;
        if ($cmp157) { var $126 = $124;__label__ = 25;; } else { __label__ = 24;; }
        $cond_end$$cond_false$68: do { 
          if (__label__ == 24) {

            ___assert_func(__str103, 307, ___PRETTY_FUNCTION____ZN13b2DynamicTree10InsertLeafEi, __str6109);
            var $_pr=$child2153;
            var $126 = $_pr;;
          }
        } while(0);

        var $126;
        var $cmp158=($126)!=-1;
        if ($cmp158) { __label__ = 27;; } else { __label__ = 26;; }
        $cond_end161$$cond_false160$71: do { 
          if (__label__ == 26) {

            ___assert_func(__str103, 308, ___PRETTY_FUNCTION____ZN13b2DynamicTree10InsertLeafEi, __str7110);
            ;
          }
        } while(0);

        var $127=$child1149;
        var $128=IHEAP[$m_nodes162];
        var $arrayidx163=$128+$127*9;
        var $height164=$arrayidx163+8;
        var $129=IHEAP[$height164];
        var $130=$child2153;
        var $131=IHEAP[$m_nodes165];
        var $arrayidx166=$131+$130*9;
        var $height167=$arrayidx166+8;
        var $132=IHEAP[$height167];
        var $call168=__Z5b2MaxIiET_S0_S0_($129, $132);
        var $add169=($call168)+1;
        var $133=$index;
        var $134=IHEAP[$m_nodes170];
        var $arrayidx171=$134+$133*9;
        var $height172=$arrayidx171+8;
        IHEAP[$height172]=$add169;
        var $135=$index;
        var $136=IHEAP[$m_nodes173];
        var $arrayidx174=$136+$135*9;
        var $aabb175=$arrayidx174;
        var $137=$child1149;
        var $138=IHEAP[$m_nodes176];
        var $arrayidx177=$138+$137*9;
        var $aabb178=$arrayidx177;
        var $139=$child2153;
        var $140=IHEAP[$m_nodes179];
        var $arrayidx180=$140+$139*9;
        var $aabb181=$arrayidx180;
        __ZN6b2AABB7CombineERKS_S1_($aabb175, $aabb178, $aabb181);
        var $141=$index;
        var $142=IHEAP[$m_nodes182];
        var $arrayidx183=$142+$141*9;
        var $143=$arrayidx183+5;
        var $parent184=$143;
        var $144=IHEAP[$parent184];
        $index=$144;
        var $cmp146=($144)!=-1;
        if (!($cmp146)) { __label__ = 28;break $if_then$$if_end$36; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN13b2DynamicTree10InsertLeafEi["X"]=1;

function __ZN13b2DynamicTree12DestroyProxyEi($this, $proxyId) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $0=$proxyId_addr;
  var $cmp=0 <= ($0);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$76: do { 
    if (__label__ == 1) {

      var $1=$proxyId_addr;
      var $m_nodeCapacity=$this1+3;
      var $2=IHEAP[$m_nodeCapacity];
      var $cmp2=($1) < ($2);
      if ($cmp2) { __label__ = 3;break $land_lhs_true$$cond_false$76; } else { __label__ = 2;break $land_lhs_true$$cond_false$76; }
    }
  } while(0);
  $cond_end$$cond_false$78: do { 
    if (__label__ == 2) {

      ___assert_func(__str103, 126, ___PRETTY_FUNCTION____ZN13b2DynamicTree12DestroyProxyEi, __str4107);
      ;
    }
  } while(0);

  var $3=$proxyId_addr;
  var $m_nodes=$this1+1;
  var $4=IHEAP[$m_nodes];
  var $arrayidx=$4+$3*9;
  var $call=__ZNK10b2TreeNode6IsLeafEv($arrayidx);
  if ($call) { __label__ = 5;; } else { __label__ = 4;; }
  $cond_end5$$cond_false4$81: do { 
    if (__label__ == 4) {

      ___assert_func(__str103, 127, ___PRETTY_FUNCTION____ZN13b2DynamicTree12DestroyProxyEi, __str5108);
      ;
    }
  } while(0);

  var $5=$proxyId_addr;
  __ZN13b2DynamicTree10RemoveLeafEi($this1, $5);
  var $6=$proxyId_addr;
  __ZN13b2DynamicTree8FreeNodeEi($this1, $6);
  ;
  return;
  return;
}


function __ZN6b2AABBC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN6b2AABBC2Ev($this1);
  ;
  return;
  return;
}


function __ZNK6b2AABB8ContainsERKS_($this, $aabb) {
  ;
  var __label__;

  var $this_addr;
  var $aabb_addr;
  var $result;
  $this_addr=$this;
  $aabb_addr=$aabb;
  var $this1=$this_addr;
  $result=1;
  var $0=$result;
  var $tobool=((($0)) & 1);
  if ($tobool) { __label__ = 1;; } else { var $4 = 0;__label__ = 2;; }
  $land_rhs$$land_end$42: do { 
    if (__label__ == 1) {

      var $lowerBound=$this1;
      var $x=$lowerBound;
      var $1=FHEAP[$x];
      var $2=$aabb_addr;
      var $lowerBound2=$2;
      var $x3=$lowerBound2;
      var $3=FHEAP[$x3];
      var $cmp=($1) <= ($3);
      var $4 = $cmp;;
    }
  } while(0);

  var $4;
  var $frombool=($4);
  $result=$frombool;
  var $5=$result;
  var $tobool4=((($5)) & 1);
  if ($tobool4) { __label__ = 3;; } else { var $9 = 0;__label__ = 4;; }
  $land_rhs5$$land_end10$45: do { 
    if (__label__ == 3) {

      var $lowerBound6=$this1;
      var $y=$lowerBound6+1;
      var $6=FHEAP[$y];
      var $7=$aabb_addr;
      var $lowerBound7=$7;
      var $y8=$lowerBound7+1;
      var $8=FHEAP[$y8];
      var $cmp9=($6) <= ($8);
      var $9 = $cmp9;;
    }
  } while(0);

  var $9;
  var $frombool11=($9);
  $result=$frombool11;
  var $10=$result;
  var $tobool12=((($10)) & 1);
  if ($tobool12) { __label__ = 5;; } else { var $14 = 0;__label__ = 6;; }
  $land_rhs13$$land_end18$48: do { 
    if (__label__ == 5) {

      var $11=$aabb_addr;
      var $upperBound=$11+2;
      var $x14=$upperBound;
      var $12=FHEAP[$x14];
      var $upperBound15=$this1+2;
      var $x16=$upperBound15;
      var $13=FHEAP[$x16];
      var $cmp17=($12) <= ($13);
      var $14 = $cmp17;;
    }
  } while(0);

  var $14;
  var $frombool19=($14);
  $result=$frombool19;
  var $15=$result;
  var $tobool20=((($15)) & 1);
  if ($tobool20) { __label__ = 7;; } else { var $19 = 0;__label__ = 8;; }
  $land_rhs21$$land_end27$51: do { 
    if (__label__ == 7) {

      var $16=$aabb_addr;
      var $upperBound22=$16+2;
      var $y23=$upperBound22+1;
      var $17=FHEAP[$y23];
      var $upperBound24=$this1+2;
      var $y25=$upperBound24+1;
      var $18=FHEAP[$y25];
      var $cmp26=($17) <= ($18);
      var $19 = $cmp26;;
    }
  } while(0);

  var $19;
  var $frombool28=($19);
  $result=$frombool28;
  var $20=$result;
  var $tobool29=((($20)) & 1);
  ;
  return $tobool29;
  return null;
}
__ZNK6b2AABB8ContainsERKS_["X"]=1;

function __ZNK6b2AABB12GetPerimeterEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $wx;
  var $wy;
  $this_addr=$this;
  var $this1=$this_addr;
  var $upperBound=$this1+2;
  var $x=$upperBound;
  var $0=FHEAP[$x];
  var $lowerBound=$this1;
  var $x2=$lowerBound;
  var $1=FHEAP[$x2];
  var $sub=($0)-($1);
  $wx=$sub;
  var $upperBound3=$this1+2;
  var $y=$upperBound3+1;
  var $2=FHEAP[$y];
  var $lowerBound4=$this1;
  var $y5=$lowerBound4+1;
  var $3=FHEAP[$y5];
  var $sub6=($2)-($3);
  $wy=$sub6;
  var $4=$wx;
  var $5=$wy;
  var $add=($4)+($5);
  var $mul=($add)*2;
  ;
  return $mul;
  return null;
}


function __ZN6b2AABB7CombineERKS_S1_($this, $aabb1, $aabb2) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $aabb1_addr;
  var $aabb2_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp4=__stackBase__+2;
  $this_addr=$this;
  $aabb1_addr=$aabb1;
  $aabb2_addr=$aabb2;
  var $this1=$this_addr;
  var $lowerBound=$this1;
  var $0=$aabb1_addr;
  var $lowerBound2=$0;
  var $1=$aabb2_addr;
  var $lowerBound3=$1;
  __Z5b2MinRK6b2Vec2S1_($ref_tmp, $lowerBound2, $lowerBound3);
  var $2=$lowerBound;
  var $3=$ref_tmp;
  IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
  var $upperBound=$this1+2;
  var $4=$aabb1_addr;
  var $upperBound5=$4+2;
  var $5=$aabb2_addr;
  var $upperBound6=$5+2;
  __Z5b2MaxRK6b2Vec2S1_($ref_tmp4, $upperBound5, $upperBound6);
  var $6=$upperBound;
  var $7=$ref_tmp4;
  IHEAP[$6]=IHEAP[$7]; FHEAP[$6]=FHEAP[$7]; ; IHEAP[$6+1]=IHEAP[$7+1]; FHEAP[$6+1]=FHEAP[$7+1]; ;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN13b2DynamicTree10RemoveLeafEi($this, $leaf) {
  ;
  var __label__;

  var $this_addr;
  var $leaf_addr;
  var $parent;
  var $grandParent;
  var $sibling;
  var $index;
  var $child136;
  var $child240;
  $this_addr=$this;
  $leaf_addr=$leaf;
  var $this1=$this_addr;
  var $0=$leaf_addr;
  var $m_root=$this1;
  var $1=IHEAP[$m_root];
  var $cmp=($0)==($1);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$2: do { 
    if (__label__ == 1) {

      var $m_root2=$this1;
      IHEAP[$m_root2]=-1;
      ;
    }
    else if (__label__ == 2) {

      var $2=$leaf_addr;
      var $m_nodes=$this1+1;
      var $3=IHEAP[$m_nodes];
      var $arrayidx=$3+$2*9;
      var $4=$arrayidx+5;
      var $parent3=$4;
      var $5=IHEAP[$parent3];
      $parent=$5;
      var $6=$parent;
      var $m_nodes4=$this1+1;
      var $7=IHEAP[$m_nodes4];
      var $arrayidx5=$7+$6*9;
      var $8=$arrayidx5+5;
      var $parent6=$8;
      var $9=IHEAP[$parent6];
      $grandParent=$9;
      var $10=$parent;
      var $m_nodes7=$this1+1;
      var $11=IHEAP[$m_nodes7];
      var $arrayidx8=$11+$10*9;
      var $child1=$arrayidx8+6;
      var $12=IHEAP[$child1];
      var $13=$leaf_addr;
      var $cmp9=($12)==($13);
      var $14=$parent;
      var $m_nodes11=$this1+1;
      var $15=IHEAP[$m_nodes11];
      var $arrayidx12=$15+$14*9;
      if ($cmp9) { __label__ = 3;; } else { __label__ = 4;; }
      $if_then10$$if_else$5: do { 
        if (__label__ == 3) {

          var $child2=$arrayidx12+7;
          var $16=IHEAP[$child2];
          $sibling=$16;
          ;
        }
        else if (__label__ == 4) {

          var $child115=$arrayidx12+6;
          var $17=IHEAP[$child115];
          $sibling=$17;
          ;
        }
      } while(0);

      var $18=$grandParent;
      var $cmp17=($18)!=-1;
      if ($cmp17) { __label__ = 6;; } else { __label__ = 12;; }
      $if_then18$$if_else64$9: do { 
        if (__label__ == 6) {

          var $19=$grandParent;
          var $m_nodes19=$this1+1;
          var $20=IHEAP[$m_nodes19];
          var $arrayidx20=$20+$19*9;
          var $child121=$arrayidx20+6;
          var $21=IHEAP[$child121];
          var $22=$parent;
          var $cmp22=($21)==($22);
          var $23=$sibling;
          var $24=$grandParent;
          var $m_nodes24=$this1+1;
          var $25=IHEAP[$m_nodes24];
          var $arrayidx25=$25+$24*9;
          if ($cmp22) { __label__ = 7;; } else { __label__ = 8;; }
          $if_then23$$if_else27$11: do { 
            if (__label__ == 7) {

              var $child126=$arrayidx25+6;
              IHEAP[$child126]=$23;
              ;
            }
            else if (__label__ == 8) {

              var $child230=$arrayidx25+7;
              IHEAP[$child230]=$23;
              ;
            }
          } while(0);

          var $26=$grandParent;
          var $27=$sibling;
          var $m_nodes32=$this1+1;
          var $28=IHEAP[$m_nodes32];
          var $arrayidx33=$28+$27*9;
          var $29=$arrayidx33+5;
          var $parent34=$29;
          IHEAP[$parent34]=$26;
          var $30=$parent;
          __ZN13b2DynamicTree8FreeNodeEi($this1, $30);
          var $31=$grandParent;
          $index=$31;
          var $cmp351=($31)!=-1;
          if (!($cmp351)) { __label__ = 13;break $if_then$$if_end$2; }

          var $m_nodes37=$this1+1;
          var $m_nodes41=$this1+1;
          var $m_nodes44=$this1+1;
          var $m_nodes46=$this1+1;
          var $m_nodes49=$this1+1;
          var $m_nodes52=$this1+1;
          var $m_nodes54=$this1+1;
          var $m_nodes58=$this1+1;
          var $m_nodes61=$this1+1;
          ;
          $while_body$16: while(1) { 

            var $32=$index;
            var $call=__ZN13b2DynamicTree7BalanceEi($this1, $32);
            $index=$call;
            var $33=$index;
            var $34=IHEAP[$m_nodes37];
            var $arrayidx38=$34+$33*9;
            var $child139=$arrayidx38+6;
            var $35=IHEAP[$child139];
            $child136=$35;
            var $36=$index;
            var $37=IHEAP[$m_nodes41];
            var $arrayidx42=$37+$36*9;
            var $child243=$arrayidx42+7;
            var $38=IHEAP[$child243];
            $child240=$38;
            var $39=$index;
            var $40=IHEAP[$m_nodes44];
            var $arrayidx45=$40+$39*9;
            var $aabb=$arrayidx45;
            var $41=$child136;
            var $42=IHEAP[$m_nodes46];
            var $arrayidx47=$42+$41*9;
            var $aabb48=$arrayidx47;
            var $43=$child240;
            var $44=IHEAP[$m_nodes49];
            var $arrayidx50=$44+$43*9;
            var $aabb51=$arrayidx50;
            __ZN6b2AABB7CombineERKS_S1_($aabb, $aabb48, $aabb51);
            var $45=$child136;
            var $46=IHEAP[$m_nodes52];
            var $arrayidx53=$46+$45*9;
            var $height=$arrayidx53+8;
            var $47=IHEAP[$height];
            var $48=$child240;
            var $49=IHEAP[$m_nodes54];
            var $arrayidx55=$49+$48*9;
            var $height56=$arrayidx55+8;
            var $50=IHEAP[$height56];
            var $call57=__Z5b2MaxIiET_S0_S0_($47, $50);
            var $add=($call57)+1;
            var $51=$index;
            var $52=IHEAP[$m_nodes58];
            var $arrayidx59=$52+$51*9;
            var $height60=$arrayidx59+8;
            IHEAP[$height60]=$add;
            var $53=$index;
            var $54=IHEAP[$m_nodes61];
            var $arrayidx62=$54+$53*9;
            var $55=$arrayidx62+5;
            var $parent63=$55;
            var $56=IHEAP[$parent63];
            $index=$56;
            var $cmp35=($56)!=-1;
            if (!($cmp35)) { __label__ = 13;break $if_then$$if_end$2; }
          }
        }
        else if (__label__ == 12) {

          var $57=$sibling;
          var $m_root65=$this1;
          IHEAP[$m_root65]=$57;
          var $58=$sibling;
          var $m_nodes66=$this1+1;
          var $59=IHEAP[$m_nodes66];
          var $arrayidx67=$59+$58*9;
          var $60=$arrayidx67+5;
          var $parent68=$60;
          IHEAP[$parent68]=-1;
          var $61=$parent;
          __ZN13b2DynamicTree8FreeNodeEi($this1, $61);
          ;
        }
      } while(0);
    }
  } while(0);

  ;
  return;
  return;
}
__ZN13b2DynamicTree10RemoveLeafEi["X"]=1;

function __ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2($this, $proxyId, $aabb, $displacement) {
  var __stackBase__  = STACKTOP; STACKTOP += 12;
  var __label__;

  var $retval;
  var $this_addr;
  var $proxyId_addr;
  var $aabb_addr;
  var $displacement_addr;
  var $b=__stackBase__;
  var $r=__stackBase__+4;
  var $ref_tmp=__stackBase__+6;
  var $ref_tmp11=__stackBase__+8;
  var $d=__stackBase__+10;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  $aabb_addr=$aabb;
  $displacement_addr=$displacement;
  var $this1=$this_addr;
  var $0=$proxyId_addr;
  var $cmp=0 <= ($0);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$21: do { 
    if (__label__ == 1) {

      var $1=$proxyId_addr;
      var $m_nodeCapacity=$this1+3;
      var $2=IHEAP[$m_nodeCapacity];
      var $cmp2=($1) < ($2);
      if ($cmp2) { __label__ = 3;break $land_lhs_true$$cond_false$21; } else { __label__ = 2;break $land_lhs_true$$cond_false$21; }
    }
  } while(0);
  $cond_end$$cond_false$23: do { 
    if (__label__ == 2) {

      ___assert_func(__str103, 135, ___PRETTY_FUNCTION____ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2, __str4107);
      ;
    }
  } while(0);

  var $3=$proxyId_addr;
  var $m_nodes=$this1+1;
  var $4=IHEAP[$m_nodes];
  var $arrayidx=$4+$3*9;
  var $call=__ZNK10b2TreeNode6IsLeafEv($arrayidx);
  if ($call) { __label__ = 5;; } else { __label__ = 4;; }
  $cond_end5$$cond_false4$26: do { 
    if (__label__ == 4) {

      ___assert_func(__str103, 137, ___PRETTY_FUNCTION____ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2, __str5108);
      ;
    }
  } while(0);

  var $5=$proxyId_addr;
  var $m_nodes6=$this1+1;
  var $6=IHEAP[$m_nodes6];
  var $arrayidx7=$6+$5*9;
  var $aabb8=$arrayidx7;
  var $7=$aabb_addr;
  var $call9=__ZNK6b2AABB8ContainsERKS_($aabb8, $7);
  if ($call9) { __label__ = 6;; } else { __label__ = 7;; }
  $if_then$$if_end$29: do { 
    if (__label__ == 6) {

      $retval=0;
      ;
    }
    else if (__label__ == 7) {

      var $8=$proxyId_addr;
      __ZN13b2DynamicTree10RemoveLeafEi($this1, $8);
      var $9=$aabb_addr;
      var $10=$b;
      var $11=$9;
      IHEAP[$10]=IHEAP[$11]; FHEAP[$10]=FHEAP[$11]; ; IHEAP[$10+1]=IHEAP[$11+1]; FHEAP[$10+1]=FHEAP[$11+1]; ; IHEAP[$10+2]=IHEAP[$11+2]; FHEAP[$10+2]=FHEAP[$11+2]; ; IHEAP[$10+3]=IHEAP[$11+3]; FHEAP[$10+3]=FHEAP[$11+3]; ;
      __ZN6b2Vec2C1Eff($r, 0.10000000149011612, 0.10000000149011612);
      var $lowerBound=$b;
      var $lowerBound10=$b;
      __ZmiRK6b2Vec2S1_($ref_tmp, $lowerBound10, $r);
      var $12=$lowerBound;
      var $13=$ref_tmp;
      IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
      var $upperBound=$b+2;
      var $upperBound12=$b+2;
      __ZplRK6b2Vec2S1_($ref_tmp11, $upperBound12, $r);
      var $14=$upperBound;
      var $15=$ref_tmp11;
      IHEAP[$14]=IHEAP[$15]; FHEAP[$14]=FHEAP[$15]; ; IHEAP[$14+1]=IHEAP[$15+1]; FHEAP[$14+1]=FHEAP[$15+1]; ;
      var $16=$displacement_addr;
      __ZmlfRK6b2Vec2($d, 2, $16);
      var $x=$d;
      var $17=FHEAP[$x];
      var $cmp13=($17) < 0;
      var $x15=$d;
      var $18=FHEAP[$x15];
      if ($cmp13) { __label__ = 8;; } else { __label__ = 9;; }
      $if_then14$$if_else$32: do { 
        if (__label__ == 8) {

          var $lowerBound16=$b;
          var $x17=$lowerBound16;
          var $19=FHEAP[$x17];
          var $add=($19)+($18);
          FHEAP[$x17]=$add;
          ;
        }
        else if (__label__ == 9) {

          var $upperBound19=$b+2;
          var $x20=$upperBound19;
          var $20=FHEAP[$x20];
          var $add21=($20)+($18);
          FHEAP[$x20]=$add21;
          ;
        }
      } while(0);

      var $y=$d+1;
      var $21=FHEAP[$y];
      var $cmp23=($21) < 0;
      var $y25=$d+1;
      var $22=FHEAP[$y25];
      if ($cmp23) { __label__ = 11;; } else { __label__ = 12;; }
      $if_then24$$if_else29$36: do { 
        if (__label__ == 11) {

          var $lowerBound26=$b;
          var $y27=$lowerBound26+1;
          var $23=FHEAP[$y27];
          var $add28=($23)+($22);
          FHEAP[$y27]=$add28;
          ;
        }
        else if (__label__ == 12) {

          var $upperBound31=$b+2;
          var $y32=$upperBound31+1;
          var $24=FHEAP[$y32];
          var $add33=($24)+($22);
          FHEAP[$y32]=$add33;
          ;
        }
      } while(0);

      var $25=$proxyId_addr;
      var $m_nodes35=$this1+1;
      var $26=IHEAP[$m_nodes35];
      var $arrayidx36=$26+$25*9;
      var $aabb37=$arrayidx36;
      var $27=$aabb37;
      var $28=$b;
      IHEAP[$27]=IHEAP[$28]; FHEAP[$27]=FHEAP[$28]; ; IHEAP[$27+1]=IHEAP[$28+1]; FHEAP[$27+1]=FHEAP[$28+1]; ; IHEAP[$27+2]=IHEAP[$28+2]; FHEAP[$27+2]=FHEAP[$28+2]; ; IHEAP[$27+3]=IHEAP[$28+3]; FHEAP[$27+3]=FHEAP[$28+3]; ;
      var $29=$proxyId_addr;
      __ZN13b2DynamicTree10InsertLeafEi($this1, $29);
      $retval=1;
      ;
    }
  } while(0);

  var $30=$retval;
  STACKTOP = __stackBase__;
  return $30;
  return null;
}
__ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2["X"]=1;

function __ZNK13b2DynamicTree9GetHeightEv($this) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_root=$this1;
  var $0=IHEAP[$m_root];
  var $cmp=($0)==-1;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$76: do { 
    if (__label__ == 1) {

      $retval=0;
      ;
    }
    else if (__label__ == 2) {

      var $m_root2=$this1;
      var $1=IHEAP[$m_root2];
      var $m_nodes=$this1+1;
      var $2=IHEAP[$m_nodes];
      var $arrayidx=$2+$1*9;
      var $height=$arrayidx+8;
      var $3=IHEAP[$height];
      $retval=$3;
      ;
    }
  } while(0);

  var $4=$retval;
  ;
  return $4;
  return null;
}


function __ZN13b2DynamicTree7BalanceEi($this, $iA) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $iA_addr;
  var $A;
  var $iB;
  var $iC;
  var $B;
  var $C;
  var $balance;
  var $iF;
  var $iG;
  var $F;
  var $G;
  var $iD;
  var $iE;
  var $D;
  var $E;
  $this_addr=$this;
  $iA_addr=$iA;
  var $this1=$this_addr;
  var $0=$iA_addr;
  var $cmp=($0)!=-1;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$2: do { 
    if (__label__ == 1) {

      ___assert_func(__str103, 382, ___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi, __str8111);
      ;
    }
  } while(0);

  var $m_nodes=$this1+1;
  var $1=IHEAP[$m_nodes];
  var $2=$iA_addr;
  var $add_ptr=$1+$2*9;
  $A=$add_ptr;
  var $3=$A;
  var $call=__ZNK10b2TreeNode6IsLeafEv($3);
  if ($call) { __label__ = 4;; } else { __label__ = 3;; }
  $if_then$$lor_lhs_false$5: do { 
    if (__label__ == 3) {

      var $4=$A;
      var $height=$4+8;
      var $5=IHEAP[$height];
      var $cmp2=($5) < 2;
      if ($cmp2) { __label__ = 4;break $if_then$$lor_lhs_false$5; }

      var $7=$A;
      var $child1=$7+6;
      var $8=IHEAP[$child1];
      $iB=$8;
      var $9=$A;
      var $child2=$9+7;
      var $10=IHEAP[$child2];
      $iC=$10;
      var $11=$iB;
      var $cmp3=0 <= ($11);
      if ($cmp3) { __label__ = 6;; } else { __label__ = 7;; }
      $land_lhs_true$$cond_false6$8: do { 
        if (__label__ == 6) {

          var $12=$iB;
          var $m_nodeCapacity=$this1+3;
          var $13=IHEAP[$m_nodeCapacity];
          var $cmp4=($12) < ($13);
          if ($cmp4) { __label__ = 8;break $land_lhs_true$$cond_false6$8; } else { __label__ = 7;break $land_lhs_true$$cond_false6$8; }
        }
      } while(0);
      $cond_end7$$cond_false6$10: do { 
        if (__label__ == 7) {

          ___assert_func(__str103, 392, ___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi, __str9112);
          ;
        }
      } while(0);

      var $14=$iC;
      var $cmp8=0 <= ($14);
      if ($cmp8) { __label__ = 9;; } else { __label__ = 10;; }
      $land_lhs_true9$$cond_false13$13: do { 
        if (__label__ == 9) {

          var $15=$iC;
          var $m_nodeCapacity10=$this1+3;
          var $16=IHEAP[$m_nodeCapacity10];
          var $cmp11=($15) < ($16);
          if ($cmp11) { __label__ = 11;break $land_lhs_true9$$cond_false13$13; } else { __label__ = 10;break $land_lhs_true9$$cond_false13$13; }
        }
      } while(0);
      $cond_end14$$cond_false13$15: do { 
        if (__label__ == 10) {

          ___assert_func(__str103, 393, ___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi, __str10113);
          ;
        }
      } while(0);

      var $m_nodes15=$this1+1;
      var $17=IHEAP[$m_nodes15];
      var $18=$iB;
      var $add_ptr16=$17+$18*9;
      $B=$add_ptr16;
      var $m_nodes17=$this1+1;
      var $19=IHEAP[$m_nodes17];
      var $20=$iC;
      var $add_ptr18=$19+$20*9;
      $C=$add_ptr18;
      var $21=$C;
      var $height19=$21+8;
      var $22=IHEAP[$height19];
      var $23=$B;
      var $height20=$23+8;
      var $24=IHEAP[$height20];
      var $sub=($22)-($24);
      $balance=$sub;
      var $cmp21=($sub) > 1;
      if ($cmp21) { __label__ = 12;; } else { __label__ = 29;; }
      $if_then22$$if_end115$18: do { 
        if (__label__ == 12) {

          var $25=$C;
          var $child123=$25+6;
          var $26=IHEAP[$child123];
          $iF=$26;
          var $27=$C;
          var $child224=$27+7;
          var $28=IHEAP[$child224];
          $iG=$28;
          var $m_nodes25=$this1+1;
          var $29=IHEAP[$m_nodes25];
          var $30=$iF;
          var $add_ptr26=$29+$30*9;
          $F=$add_ptr26;
          var $m_nodes27=$this1+1;
          var $31=IHEAP[$m_nodes27];
          var $32=$iG;
          var $add_ptr28=$31+$32*9;
          $G=$add_ptr28;
          var $33=$iF;
          var $cmp29=0 <= ($33);
          if ($cmp29) { __label__ = 13;; } else { __label__ = 14;; }
          $land_lhs_true30$$cond_false34$20: do { 
            if (__label__ == 13) {

              var $34=$iF;
              var $m_nodeCapacity31=$this1+3;
              var $35=IHEAP[$m_nodeCapacity31];
              var $cmp32=($34) < ($35);
              if ($cmp32) { __label__ = 15;break $land_lhs_true30$$cond_false34$20; } else { __label__ = 14;break $land_lhs_true30$$cond_false34$20; }
            }
          } while(0);
          $cond_end35$$cond_false34$22: do { 
            if (__label__ == 14) {

              ___assert_func(__str103, 407, ___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi, __str11114);
              ;
            }
          } while(0);

          var $36=$iG;
          var $cmp36=0 <= ($36);
          if ($cmp36) { __label__ = 16;; } else { __label__ = 17;; }
          $land_lhs_true37$$cond_false41$25: do { 
            if (__label__ == 16) {

              var $37=$iG;
              var $m_nodeCapacity38=$this1+3;
              var $38=IHEAP[$m_nodeCapacity38];
              var $cmp39=($37) < ($38);
              if ($cmp39) { __label__ = 18;break $land_lhs_true37$$cond_false41$25; } else { __label__ = 17;break $land_lhs_true37$$cond_false41$25; }
            }
          } while(0);
          $cond_end42$$cond_false41$27: do { 
            if (__label__ == 17) {

              ___assert_func(__str103, 408, ___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi, __str12115);
              ;
            }
          } while(0);

          var $39=$iA_addr;
          var $40=$C;
          var $child143=$40+6;
          IHEAP[$child143]=$39;
          var $41=$A;
          var $42=$41+5;
          var $parent=$42;
          var $43=IHEAP[$parent];
          var $44=$C;
          var $45=$44+5;
          var $parent44=$45;
          IHEAP[$parent44]=$43;
          var $46=$iC;
          var $47=$A;
          var $48=$47+5;
          var $parent45=$48;
          IHEAP[$parent45]=$46;
          var $49=$C;
          var $50=$49+5;
          var $parent46=$50;
          var $51=IHEAP[$parent46];
          var $cmp47=($51)!=-1;
          if ($cmp47) { __label__ = 19;; } else { __label__ = 24;; }
          $if_then48$$if_else71$30: do { 
            if (__label__ == 19) {

              var $52=$C;
              var $53=$52+5;
              var $parent49=$53;
              var $54=IHEAP[$parent49];
              var $m_nodes50=$this1+1;
              var $55=IHEAP[$m_nodes50];
              var $arrayidx=$55+$54*9;
              var $child151=$arrayidx+6;
              var $56=IHEAP[$child151];
              var $57=$iA_addr;
              var $cmp52=($56)==($57);
              if ($cmp52) { __label__ = 20;; } else { __label__ = 21;; }
              $if_then53$$if_else$32: do { 
                if (__label__ == 20) {

                  var $58=$iC;
                  var $59=$C;
                  var $60=$59+5;
                  var $parent54=$60;
                  var $61=IHEAP[$parent54];
                  var $m_nodes55=$this1+1;
                  var $62=IHEAP[$m_nodes55];
                  var $arrayidx56=$62+$61*9;
                  var $child157=$arrayidx56+6;
                  IHEAP[$child157]=$58;
                  ;
                }
                else if (__label__ == 21) {

                  var $63=$C;
                  var $64=$63+5;
                  var $parent58=$64;
                  var $65=IHEAP[$parent58];
                  var $m_nodes59=$this1+1;
                  var $66=IHEAP[$m_nodes59];
                  var $arrayidx60=$66+$65*9;
                  var $child261=$arrayidx60+7;
                  var $67=IHEAP[$child261];
                  var $68=$iA_addr;
                  var $cmp62=($67)==($68);
                  if ($cmp62) { __label__ = 23;; } else { __label__ = 22;; }
                  $cond_end65$$cond_false64$35: do { 
                    if (__label__ == 22) {

                      ___assert_func(__str103, 424, ___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi, __str13116);
                      ;
                    }
                  } while(0);

                  var $69=$iC;
                  var $70=$C;
                  var $71=$70+5;
                  var $parent66=$71;
                  var $72=IHEAP[$parent66];
                  var $m_nodes67=$this1+1;
                  var $73=IHEAP[$m_nodes67];
                  var $arrayidx68=$73+$72*9;
                  var $child269=$arrayidx68+7;
                  IHEAP[$child269]=$69;
                  ;
                }
              } while(0);
            }
            else if (__label__ == 24) {

              var $74=$iC;
              var $m_root=$this1;
              IHEAP[$m_root]=$74;
              ;
            }
          } while(0);

          var $75=$F;
          var $height73=$75+8;
          var $76=IHEAP[$height73];
          var $77=$G;
          var $height74=$77+8;
          var $78=IHEAP[$height74];
          var $cmp75=($76) > ($78);
          if ($cmp75) { __label__ = 26;; } else { __label__ = 27;; }
          $if_then76$$if_else94$40: do { 
            if (__label__ == 26) {

              var $79=$iF;
              var $80=$C;
              var $child277=$80+7;
              IHEAP[$child277]=$79;
              var $81=$iG;
              var $82=$A;
              var $child278=$82+7;
              IHEAP[$child278]=$81;
              var $83=$iA_addr;
              var $84=$G;
              var $85=$84+5;
              var $parent79=$85;
              IHEAP[$parent79]=$83;
              var $86=$A;
              var $aabb=$86;
              var $87=$B;
              var $aabb80=$87;
              var $88=$G;
              var $aabb81=$88;
              __ZN6b2AABB7CombineERKS_S1_($aabb, $aabb80, $aabb81);
              var $89=$C;
              var $aabb82=$89;
              var $90=$A;
              var $aabb83=$90;
              var $91=$F;
              var $aabb84=$91;
              __ZN6b2AABB7CombineERKS_S1_($aabb82, $aabb83, $aabb84);
              var $92=$B;
              var $height85=$92+8;
              var $93=IHEAP[$height85];
              var $94=$G;
              var $height86=$94+8;
              var $95=IHEAP[$height86];
              var $call87=__Z5b2MaxIiET_S0_S0_($93, $95);
              var $add=($call87)+1;
              var $96=$A;
              var $height88=$96+8;
              IHEAP[$height88]=$add;
              var $97=$A;
              var $height89=$97+8;
              var $98=IHEAP[$height89];
              var $99=$F;
              var $height90=$99+8;
              var $100=IHEAP[$height90];
              var $call91=__Z5b2MaxIiET_S0_S0_($98, $100);
              var $add92=($call91)+1;
              var $101=$C;
              var $height93=$101+8;
              IHEAP[$height93]=$add92;
              ;
            }
            else if (__label__ == 27) {

              var $102=$iG;
              var $103=$C;
              var $child295=$103+7;
              IHEAP[$child295]=$102;
              var $104=$iF;
              var $105=$A;
              var $child296=$105+7;
              IHEAP[$child296]=$104;
              var $106=$iA_addr;
              var $107=$F;
              var $108=$107+5;
              var $parent97=$108;
              IHEAP[$parent97]=$106;
              var $109=$A;
              var $aabb98=$109;
              var $110=$B;
              var $aabb99=$110;
              var $111=$F;
              var $aabb100=$111;
              __ZN6b2AABB7CombineERKS_S1_($aabb98, $aabb99, $aabb100);
              var $112=$C;
              var $aabb101=$112;
              var $113=$A;
              var $aabb102=$113;
              var $114=$G;
              var $aabb103=$114;
              __ZN6b2AABB7CombineERKS_S1_($aabb101, $aabb102, $aabb103);
              var $115=$B;
              var $height104=$115+8;
              var $116=IHEAP[$height104];
              var $117=$F;
              var $height105=$117+8;
              var $118=IHEAP[$height105];
              var $call106=__Z5b2MaxIiET_S0_S0_($116, $118);
              var $add107=($call106)+1;
              var $119=$A;
              var $height108=$119+8;
              IHEAP[$height108]=$add107;
              var $120=$A;
              var $height109=$120+8;
              var $121=IHEAP[$height109];
              var $122=$G;
              var $height110=$122+8;
              var $123=IHEAP[$height110];
              var $call111=__Z5b2MaxIiET_S0_S0_($121, $123);
              var $add112=($call111)+1;
              var $124=$C;
              var $height113=$124+8;
              IHEAP[$height113]=$add112;
              ;
            }
          } while(0);

          var $125=$iC;
          $retval=$125;
          __label__ = 48;break $if_then$$lor_lhs_false$5;
        }
        else if (__label__ == 29) {

          var $126=$balance;
          var $cmp116=($126) < -1;
          if ($cmp116) { __label__ = 30;; } else { __label__ = 47;; }
          $if_then117$$if_end216$45: do { 
            if (__label__ == 30) {

              var $127=$B;
              var $child1118=$127+6;
              var $128=IHEAP[$child1118];
              $iD=$128;
              var $129=$B;
              var $child2119=$129+7;
              var $130=IHEAP[$child2119];
              $iE=$130;
              var $m_nodes120=$this1+1;
              var $131=IHEAP[$m_nodes120];
              var $132=$iD;
              var $add_ptr121=$131+$132*9;
              $D=$add_ptr121;
              var $m_nodes122=$this1+1;
              var $133=IHEAP[$m_nodes122];
              var $134=$iE;
              var $add_ptr123=$133+$134*9;
              $E=$add_ptr123;
              var $135=$iD;
              var $cmp124=0 <= ($135);
              if ($cmp124) { __label__ = 31;; } else { __label__ = 32;; }
              $land_lhs_true125$$cond_false129$47: do { 
                if (__label__ == 31) {

                  var $136=$iD;
                  var $m_nodeCapacity126=$this1+3;
                  var $137=IHEAP[$m_nodeCapacity126];
                  var $cmp127=($136) < ($137);
                  if ($cmp127) { __label__ = 33;break $land_lhs_true125$$cond_false129$47; } else { __label__ = 32;break $land_lhs_true125$$cond_false129$47; }
                }
              } while(0);
              $cond_end130$$cond_false129$49: do { 
                if (__label__ == 32) {

                  ___assert_func(__str103, 467, ___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi, __str14117);
                  ;
                }
              } while(0);

              var $138=$iE;
              var $cmp131=0 <= ($138);
              if ($cmp131) { __label__ = 34;; } else { __label__ = 35;; }
              $land_lhs_true132$$cond_false136$52: do { 
                if (__label__ == 34) {

                  var $139=$iE;
                  var $m_nodeCapacity133=$this1+3;
                  var $140=IHEAP[$m_nodeCapacity133];
                  var $cmp134=($139) < ($140);
                  if ($cmp134) { __label__ = 36;break $land_lhs_true132$$cond_false136$52; } else { __label__ = 35;break $land_lhs_true132$$cond_false136$52; }
                }
              } while(0);
              $cond_end137$$cond_false136$54: do { 
                if (__label__ == 35) {

                  ___assert_func(__str103, 468, ___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi, __str15118);
                  ;
                }
              } while(0);

              var $141=$iA_addr;
              var $142=$B;
              var $child1138=$142+6;
              IHEAP[$child1138]=$141;
              var $143=$A;
              var $144=$143+5;
              var $parent139=$144;
              var $145=IHEAP[$parent139];
              var $146=$B;
              var $147=$146+5;
              var $parent140=$147;
              IHEAP[$parent140]=$145;
              var $148=$iB;
              var $149=$A;
              var $150=$149+5;
              var $parent141=$150;
              IHEAP[$parent141]=$148;
              var $151=$B;
              var $152=$151+5;
              var $parent142=$152;
              var $153=IHEAP[$parent142];
              var $cmp143=($153)!=-1;
              if ($cmp143) { __label__ = 37;; } else { __label__ = 42;; }
              $if_then144$$if_else169$57: do { 
                if (__label__ == 37) {

                  var $154=$B;
                  var $155=$154+5;
                  var $parent145=$155;
                  var $156=IHEAP[$parent145];
                  var $m_nodes146=$this1+1;
                  var $157=IHEAP[$m_nodes146];
                  var $arrayidx147=$157+$156*9;
                  var $child1148=$arrayidx147+6;
                  var $158=IHEAP[$child1148];
                  var $159=$iA_addr;
                  var $cmp149=($158)==($159);
                  if ($cmp149) { __label__ = 38;; } else { __label__ = 39;; }
                  $if_then150$$if_else155$59: do { 
                    if (__label__ == 38) {

                      var $160=$iB;
                      var $161=$B;
                      var $162=$161+5;
                      var $parent151=$162;
                      var $163=IHEAP[$parent151];
                      var $m_nodes152=$this1+1;
                      var $164=IHEAP[$m_nodes152];
                      var $arrayidx153=$164+$163*9;
                      var $child1154=$arrayidx153+6;
                      IHEAP[$child1154]=$160;
                      ;
                    }
                    else if (__label__ == 39) {

                      var $165=$B;
                      var $166=$165+5;
                      var $parent156=$166;
                      var $167=IHEAP[$parent156];
                      var $m_nodes157=$this1+1;
                      var $168=IHEAP[$m_nodes157];
                      var $arrayidx158=$168+$167*9;
                      var $child2159=$arrayidx158+7;
                      var $169=IHEAP[$child2159];
                      var $170=$iA_addr;
                      var $cmp160=($169)==($170);
                      if ($cmp160) { __label__ = 41;; } else { __label__ = 40;; }
                      $cond_end163$$cond_false162$62: do { 
                        if (__label__ == 40) {

                          ___assert_func(__str103, 484, ___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi, __str16119);
                          ;
                        }
                      } while(0);

                      var $171=$iB;
                      var $172=$B;
                      var $173=$172+5;
                      var $parent164=$173;
                      var $174=IHEAP[$parent164];
                      var $m_nodes165=$this1+1;
                      var $175=IHEAP[$m_nodes165];
                      var $arrayidx166=$175+$174*9;
                      var $child2167=$arrayidx166+7;
                      IHEAP[$child2167]=$171;
                      ;
                    }
                  } while(0);
                }
                else if (__label__ == 42) {

                  var $176=$iB;
                  var $m_root170=$this1;
                  IHEAP[$m_root170]=$176;
                  ;
                }
              } while(0);

              var $177=$D;
              var $height172=$177+8;
              var $178=IHEAP[$height172];
              var $179=$E;
              var $height173=$179+8;
              var $180=IHEAP[$height173];
              var $cmp174=($178) > ($180);
              if ($cmp174) { __label__ = 44;; } else { __label__ = 45;; }
              $if_then175$$if_else195$67: do { 
                if (__label__ == 44) {

                  var $181=$iD;
                  var $182=$B;
                  var $child2176=$182+7;
                  IHEAP[$child2176]=$181;
                  var $183=$iE;
                  var $184=$A;
                  var $child1177=$184+6;
                  IHEAP[$child1177]=$183;
                  var $185=$iA_addr;
                  var $186=$E;
                  var $187=$186+5;
                  var $parent178=$187;
                  IHEAP[$parent178]=$185;
                  var $188=$A;
                  var $aabb179=$188;
                  var $189=$C;
                  var $aabb180=$189;
                  var $190=$E;
                  var $aabb181=$190;
                  __ZN6b2AABB7CombineERKS_S1_($aabb179, $aabb180, $aabb181);
                  var $191=$B;
                  var $aabb182=$191;
                  var $192=$A;
                  var $aabb183=$192;
                  var $193=$D;
                  var $aabb184=$193;
                  __ZN6b2AABB7CombineERKS_S1_($aabb182, $aabb183, $aabb184);
                  var $194=$C;
                  var $height185=$194+8;
                  var $195=IHEAP[$height185];
                  var $196=$E;
                  var $height186=$196+8;
                  var $197=IHEAP[$height186];
                  var $call187=__Z5b2MaxIiET_S0_S0_($195, $197);
                  var $add188=($call187)+1;
                  var $198=$A;
                  var $height189=$198+8;
                  IHEAP[$height189]=$add188;
                  var $199=$A;
                  var $height190=$199+8;
                  var $200=IHEAP[$height190];
                  var $201=$D;
                  var $height191=$201+8;
                  var $202=IHEAP[$height191];
                  var $call192=__Z5b2MaxIiET_S0_S0_($200, $202);
                  var $add193=($call192)+1;
                  var $203=$B;
                  var $height194=$203+8;
                  IHEAP[$height194]=$add193;
                  ;
                }
                else if (__label__ == 45) {

                  var $204=$iE;
                  var $205=$B;
                  var $child2196=$205+7;
                  IHEAP[$child2196]=$204;
                  var $206=$iD;
                  var $207=$A;
                  var $child1197=$207+6;
                  IHEAP[$child1197]=$206;
                  var $208=$iA_addr;
                  var $209=$D;
                  var $210=$209+5;
                  var $parent198=$210;
                  IHEAP[$parent198]=$208;
                  var $211=$A;
                  var $aabb199=$211;
                  var $212=$C;
                  var $aabb200=$212;
                  var $213=$D;
                  var $aabb201=$213;
                  __ZN6b2AABB7CombineERKS_S1_($aabb199, $aabb200, $aabb201);
                  var $214=$B;
                  var $aabb202=$214;
                  var $215=$A;
                  var $aabb203=$215;
                  var $216=$E;
                  var $aabb204=$216;
                  __ZN6b2AABB7CombineERKS_S1_($aabb202, $aabb203, $aabb204);
                  var $217=$C;
                  var $height205=$217+8;
                  var $218=IHEAP[$height205];
                  var $219=$D;
                  var $height206=$219+8;
                  var $220=IHEAP[$height206];
                  var $call207=__Z5b2MaxIiET_S0_S0_($218, $220);
                  var $add208=($call207)+1;
                  var $221=$A;
                  var $height209=$221+8;
                  IHEAP[$height209]=$add208;
                  var $222=$A;
                  var $height210=$222+8;
                  var $223=IHEAP[$height210];
                  var $224=$E;
                  var $height211=$224+8;
                  var $225=IHEAP[$height211];
                  var $call212=__Z5b2MaxIiET_S0_S0_($223, $225);
                  var $add213=($call212)+1;
                  var $226=$B;
                  var $height214=$226+8;
                  IHEAP[$height214]=$add213;
                  ;
                }
              } while(0);

              var $227=$iB;
              $retval=$227;
              __label__ = 48;break $if_then$$lor_lhs_false$5;
            }
            else if (__label__ == 47) {

              var $228=$iA_addr;
              $retval=$228;
              __label__ = 48;break $if_then$$lor_lhs_false$5;
            }
          } while(0);
        }
      } while(0);
    }
  } while(0);
  $if_then$$return$72: do { 
    if (__label__ == 4) {

      var $6=$iA_addr;
      $retval=$6;
      ;
    }
  } while(0);

  var $229=$retval;
  ;
  return $229;
  return null;
}
__ZN13b2DynamicTree7BalanceEi["X"]=1;

function __ZNK13b2DynamicTree12GetAreaRatioEv($this) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $root;
  var $rootArea;
  var $totalArea;
  var $i;
  var $node;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_root=$this1;
  var $0=IHEAP[$m_root];
  var $cmp=($0)==-1;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$81: do { 
    if (__label__ == 1) {

      $retval=0;
      ;
    }
    else if (__label__ == 2) {

      var $m_nodes=$this1+1;
      var $1=IHEAP[$m_nodes];
      var $m_root2=$this1;
      var $2=IHEAP[$m_root2];
      var $add_ptr=$1+$2*9;
      $root=$add_ptr;
      var $3=$root;
      var $aabb=$3;
      var $call=__ZNK6b2AABB12GetPerimeterEv($aabb);
      $rootArea=$call;
      $totalArea=0;
      $i=0;
      var $4=$i;
      var $m_nodeCapacity=$this1+3;
      var $5=IHEAP[$m_nodeCapacity];
      var $cmp31=($4) < ($5);
      if ($cmp31) { __label__ = 3;; } else { __label__ = 7;; }
      $for_body_lr_ph$$for_end$84: do { 
        if (__label__ == 3) {

          var $m_nodes4=$this1+1;
          ;
          $for_body$86: while(1) { 

            var $6=IHEAP[$m_nodes4];
            var $7=$i;
            var $add_ptr5=$6+$7*9;
            $node=$add_ptr5;
            var $8=$node;
            var $height=$8+8;
            var $9=IHEAP[$height];
            var $cmp6=($9) < 0;
            if ($cmp6) { __label__ = 6;; } else { __label__ = 5;; }
            $for_inc$$if_end8$88: do { 
              if (__label__ == 5) {

                var $10=$node;
                var $aabb9=$10;
                var $call10=__ZNK6b2AABB12GetPerimeterEv($aabb9);
                var $11=$totalArea;
                var $add=($11)+($call10);
                $totalArea=$add;
                ;
              }
            } while(0);

            var $12=$i;
            var $inc=($12)+1;
            $i=$inc;
            var $13=$i;
            var $14=IHEAP[$m_nodeCapacity];
            var $cmp3=($13) < ($14);
            if (!($cmp3)) { __label__ = 7;break $for_body_lr_ph$$for_end$84; }
          }
        }
      } while(0);

      var $15=$totalArea;
      var $16=$rootArea;
      var $div=($15)/($16);
      $retval=$div;
      ;
    }
  } while(0);

  var $17=$retval;
  ;
  return $17;
  return null;
}
__ZNK13b2DynamicTree12GetAreaRatioEv["X"]=1;

function __ZNK13b2DynamicTree13ComputeHeightEi($this, $nodeId) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $nodeId_addr;
  var $node;
  var $height1;
  var $height2;
  $this_addr=$this;
  $nodeId_addr=$nodeId;
  var $this1=$this_addr;
  var $0=$nodeId_addr;
  var $cmp=0 <= ($0);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $land_lhs_true$$cond_false$94: do { 
    if (__label__ == 1) {

      var $1=$nodeId_addr;
      var $m_nodeCapacity=$this1+3;
      var $2=IHEAP[$m_nodeCapacity];
      var $cmp2=($1) < ($2);
      if ($cmp2) { __label__ = 3;break $land_lhs_true$$cond_false$94; } else { __label__ = 2;break $land_lhs_true$$cond_false$94; }
    }
  } while(0);
  $cond_end$$cond_false$96: do { 
    if (__label__ == 2) {

      ___assert_func(__str103, 563, ___PRETTY_FUNCTION____ZNK13b2DynamicTree13ComputeHeightEi, __str2105);
      ;
    }
  } while(0);

  var $m_nodes=$this1+1;
  var $3=IHEAP[$m_nodes];
  var $4=$nodeId_addr;
  var $add_ptr=$3+$4*9;
  $node=$add_ptr;
  var $5=$node;
  var $call=__ZNK10b2TreeNode6IsLeafEv($5);
  if ($call) { __label__ = 4;; } else { __label__ = 5;; }
  $if_then$$if_end$99: do { 
    if (__label__ == 4) {

      $retval=0;
      ;
    }
    else if (__label__ == 5) {

      var $6=$node;
      var $child1=$6+6;
      var $7=IHEAP[$child1];
      var $call3=__ZNK13b2DynamicTree13ComputeHeightEi($this1, $7);
      $height1=$call3;
      var $8=$node;
      var $child2=$8+7;
      var $9=IHEAP[$child2];
      var $call4=__ZNK13b2DynamicTree13ComputeHeightEi($this1, $9);
      $height2=$call4;
      var $10=$height1;
      var $11=$height2;
      var $call5=__Z5b2MaxIiET_S0_S0_($10, $11);
      var $add=($call5)+1;
      $retval=$add;
      ;
    }
  } while(0);

  var $12=$retval;
  ;
  return $12;
  return null;
}


function __ZNK13b2DynamicTree13ComputeHeightEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $height;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_root=$this1;
  var $0=IHEAP[$m_root];
  var $call=__ZNK13b2DynamicTree13ComputeHeightEi($this1, $0);
  $height=$call;
  var $1=$height;
  ;
  return $1;
  return null;
}


function __ZNK13b2DynamicTree17ValidateStructureEi($this, $index) {
  ;
  var __label__;

  var $this_addr;
  var $index_addr;
  var $node;
  var $child1;
  var $child2;
  $this_addr=$this;
  $index_addr=$index;
  var $this1=$this_addr;
  var $0=$index_addr;
  var $cmp=($0)==-1;
  if ($cmp) { __label__ = 22;; } else { __label__ = 1;; }
  $return$$if_end$105: do { 
    if (__label__ == 1) {

      var $1=$index_addr;
      var $m_root=$this1;
      var $2=IHEAP[$m_root];
      var $cmp2=($1)==($2);
      if ($cmp2) { __label__ = 2;; } else { __label__ = 4;; }
      $if_then3$$if_end5$107: do { 
        if (__label__ == 2) {

          var $3=$index_addr;
          var $m_nodes=$this1+1;
          var $4=IHEAP[$m_nodes];
          var $arrayidx=$4+$3*9;
          var $5=$arrayidx+5;
          var $parent=$5;
          var $6=IHEAP[$parent];
          var $cmp4=($6)==-1;
          if ($cmp4) { __label__ = 4;break $if_then3$$if_end5$107; }

          ___assert_func(__str103, 591, ___PRETTY_FUNCTION____ZNK13b2DynamicTree17ValidateStructureEi, __str17120);
          ;
        }
      } while(0);

      var $m_nodes6=$this1+1;
      var $7=IHEAP[$m_nodes6];
      var $8=$index_addr;
      var $add_ptr=$7+$8*9;
      $node=$add_ptr;
      var $9=$node;
      var $child17=$9+6;
      var $10=IHEAP[$child17];
      $child1=$10;
      var $11=$node;
      var $child28=$11+7;
      var $12=IHEAP[$child28];
      $child2=$12;
      var $13=$node;
      var $call=__ZNK10b2TreeNode6IsLeafEv($13);
      var $14=$child1;
      if ($call) { __label__ = 5;; } else { __label__ = 11;; }
      $if_then9$$if_end22$111: do { 
        if (__label__ == 5) {

          var $cmp10=($14)==-1;
          if ($cmp10) { __label__ = 7;; } else { __label__ = 6;; }
          $cond_end13$$cond_false12$113: do { 
            if (__label__ == 6) {

              ___assert_func(__str103, 601, ___PRETTY_FUNCTION____ZNK13b2DynamicTree17ValidateStructureEi, __str18121);
              ;
            }
          } while(0);

          var $15=$child2;
          var $cmp14=($15)==-1;
          if ($cmp14) { __label__ = 9;; } else { __label__ = 8;; }
          $cond_end17$$cond_false16$116: do { 
            if (__label__ == 8) {

              ___assert_func(__str103, 602, ___PRETTY_FUNCTION____ZNK13b2DynamicTree17ValidateStructureEi, __str19122);
              ;
            }
          } while(0);

          var $16=$node;
          var $height=$16+8;
          var $17=IHEAP[$height];
          var $cmp18=($17)==0;
          if ($cmp18) { __label__ = 22;break $return$$if_end$105; }

          ___assert_func(__str103, 603, ___PRETTY_FUNCTION____ZNK13b2DynamicTree17ValidateStructureEi, __str20123);
          ;
        }
        else if (__label__ == 11) {

          var $cmp23=0 <= ($14);
          if ($cmp23) { __label__ = 12;; } else { __label__ = 13;; }
          $land_lhs_true$$cond_false26$121: do { 
            if (__label__ == 12) {

              var $18=$child1;
              var $m_nodeCapacity=$this1+3;
              var $19=IHEAP[$m_nodeCapacity];
              var $cmp24=($18) < ($19);
              if ($cmp24) { __label__ = 14;break $land_lhs_true$$cond_false26$121; } else { __label__ = 13;break $land_lhs_true$$cond_false26$121; }
            }
          } while(0);
          $cond_end27$$cond_false26$123: do { 
            if (__label__ == 13) {

              ___assert_func(__str103, 607, ___PRETTY_FUNCTION____ZNK13b2DynamicTree17ValidateStructureEi, __str21124);
              ;
            }
          } while(0);

          var $20=$child2;
          var $cmp28=0 <= ($20);
          if ($cmp28) { __label__ = 15;; } else { __label__ = 16;; }
          $land_lhs_true29$$cond_false33$126: do { 
            if (__label__ == 15) {

              var $21=$child2;
              var $m_nodeCapacity30=$this1+3;
              var $22=IHEAP[$m_nodeCapacity30];
              var $cmp31=($21) < ($22);
              if ($cmp31) { __label__ = 17;break $land_lhs_true29$$cond_false33$126; } else { __label__ = 16;break $land_lhs_true29$$cond_false33$126; }
            }
          } while(0);
          $cond_end34$$cond_false33$128: do { 
            if (__label__ == 16) {

              ___assert_func(__str103, 608, ___PRETTY_FUNCTION____ZNK13b2DynamicTree17ValidateStructureEi, __str22125);
              ;
            }
          } while(0);

          var $23=$child1;
          var $m_nodes35=$this1+1;
          var $24=IHEAP[$m_nodes35];
          var $arrayidx36=$24+$23*9;
          var $25=$arrayidx36+5;
          var $parent37=$25;
          var $26=IHEAP[$parent37];
          var $27=$index_addr;
          var $cmp38=($26)==($27);
          if ($cmp38) { __label__ = 19;; } else { __label__ = 18;; }
          $cond_end41$$cond_false40$131: do { 
            if (__label__ == 18) {

              ___assert_func(__str103, 610, ___PRETTY_FUNCTION____ZNK13b2DynamicTree17ValidateStructureEi, __str23126);
              ;
            }
          } while(0);

          var $28=$child2;
          var $m_nodes42=$this1+1;
          var $29=IHEAP[$m_nodes42];
          var $arrayidx43=$29+$28*9;
          var $30=$arrayidx43+5;
          var $parent44=$30;
          var $31=IHEAP[$parent44];
          var $32=$index_addr;
          var $cmp45=($31)==($32);
          if ($cmp45) { __label__ = 21;; } else { __label__ = 20;; }
          $cond_end48$$cond_false47$134: do { 
            if (__label__ == 20) {

              ___assert_func(__str103, 611, ___PRETTY_FUNCTION____ZNK13b2DynamicTree17ValidateStructureEi, __str24127);
              ;
            }
          } while(0);

          var $33=$child1;
          __ZNK13b2DynamicTree17ValidateStructureEi($this1, $33);
          var $34=$child2;
          __ZNK13b2DynamicTree17ValidateStructureEi($this1, $34);
          ;
        }
      } while(0);
    }
  } while(0);

  ;
  return;
  return;
}
__ZNK13b2DynamicTree17ValidateStructureEi["X"]=1;

function __ZN22b2EdgeAndCircleContactD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN22b2EdgeAndCircleContactD2Ev($this1);
  ;
  return;
  return;
}


function __ZN23b2EdgeAndPolygonContactD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN23b2EdgeAndPolygonContactD2Ev($this1);
  ;
  return;
  return;
}


function __Z5b2AbsIiET_S0_($a) {
  ;
  var __label__;

  var $a_addr;
  $a_addr=$a;
  var $0=$a_addr;
  var $cmp=($0) > 0;
  var $1=$a_addr;
  var $sub=(-($1));
  var $cond=($cmp) ? ($1) : ($sub);
  ;
  return $cond;
  return null;
}


function __ZN22b2EdgeAndCircleContactD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN22b2EdgeAndCircleContactD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN22b2EdgeAndCircleContactD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN9b2ContactD2Ev($0);
  ;
  return;
  return;
}


function __ZN23b2EdgeAndPolygonContactD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN23b2EdgeAndPolygonContactD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN23b2EdgeAndPolygonContactD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN9b2ContactD2Ev($0);
  ;
  return;
  return;
}


function __ZeqRK6b2Vec2S1_($a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$b_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $cmp=($1) == ($3);
  if ($cmp) { __label__ = 1;; } else { var $8 = 0;__label__ = 2;; }
  $land_rhs$$land_end$35: do { 
    if (__label__ == 1) {

      var $4=$a_addr;
      var $y=$4+1;
      var $5=FHEAP[$y];
      var $6=$b_addr;
      var $y2=$6+1;
      var $7=FHEAP[$y2];
      var $cmp3=($5) == ($7);
      var $8 = $cmp3;;
    }
  } while(0);

  var $8;
  ;
  return $8;
  return null;
}


function __ZN6b2AABBC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $lowerBound=$this1;
  __ZN6b2Vec2C1Ev($lowerBound);
  var $upperBound=$this1+2;
  __ZN6b2Vec2C1Ev($upperBound);
  ;
  return;
  return;
}


function __ZN22b2EdgeAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact, $allocator) {
  ;
  var __label__;

  var $contact_addr;
  var $allocator_addr;
  $contact_addr=$contact;
  $allocator_addr=$allocator;
  var $0=$contact_addr;
  var $1=$0;
  var $2=$1;
  var $vtable=IHEAP[$2];
  var $vfn=$vtable+1;
  var $3=IHEAP[$vfn];
  FUNCTION_TABLE[$3]($1);
  var $4=$allocator_addr;
  var $5=$contact_addr;
  var $6=$5;
  __ZN16b2BlockAllocator4FreeEPvi($4, $6, 144);
  ;
  return;
  return;
}


function __ZN23b2EdgeAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator($contact, $allocator) {
  ;
  var __label__;

  var $contact_addr;
  var $allocator_addr;
  $contact_addr=$contact;
  $allocator_addr=$allocator;
  var $0=$contact_addr;
  var $1=$0;
  var $2=$1;
  var $vtable=IHEAP[$2];
  var $vfn=$vtable+1;
  var $3=IHEAP[$vfn];
  FUNCTION_TABLE[$3]($1);
  var $4=$allocator_addr;
  var $5=$contact_addr;
  var $6=$5;
  __ZN16b2BlockAllocator4FreeEPvi($4, $6, 144);
  ;
  return;
  return;
}


function __ZNK13b2DynamicTree15ValidateMetricsEi($this, $index) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $index_addr;
  var $node;
  var $child1;
  var $child2;
  var $height1;
  var $height2;
  var $height32;
  var $aabb=__stackBase__;
  $this_addr=$this;
  $index_addr=$index;
  var $this1=$this_addr;
  var $0=$index_addr;
  var $cmp=($0)==-1;
  if ($cmp) { __label__ = 21;; } else { __label__ = 1;; }
  $return$$if_end$2: do { 
    if (__label__ == 1) {

      var $m_nodes=$this1+1;
      var $1=IHEAP[$m_nodes];
      var $2=$index_addr;
      var $add_ptr=$1+$2*9;
      $node=$add_ptr;
      var $3=$node;
      var $child12=$3+6;
      var $4=IHEAP[$child12];
      $child1=$4;
      var $5=$node;
      var $child23=$5+7;
      var $6=IHEAP[$child23];
      $child2=$6;
      var $7=$node;
      var $call=__ZNK10b2TreeNode6IsLeafEv($7);
      var $8=$child1;
      if ($call) { __label__ = 2;; } else { __label__ = 8;; }
      $if_then4$$if_end14$4: do { 
        if (__label__ == 2) {

          var $cmp5=($8)==-1;
          if ($cmp5) { __label__ = 4;; } else { __label__ = 3;; }
          $cond_end$$cond_false$6: do { 
            if (__label__ == 3) {

              ___assert_func(__str103, 631, ___PRETTY_FUNCTION____ZNK13b2DynamicTree15ValidateMetricsEi, __str18121);
              ;
            }
          } while(0);

          var $9=$child2;
          var $cmp6=($9)==-1;
          if ($cmp6) { __label__ = 6;; } else { __label__ = 5;; }
          $cond_end9$$cond_false8$9: do { 
            if (__label__ == 5) {

              ___assert_func(__str103, 632, ___PRETTY_FUNCTION____ZNK13b2DynamicTree15ValidateMetricsEi, __str19122);
              ;
            }
          } while(0);

          var $10=$node;
          var $height=$10+8;
          var $11=IHEAP[$height];
          var $cmp10=($11)==0;
          if ($cmp10) { __label__ = 21;break $return$$if_end$2; }

          ___assert_func(__str103, 633, ___PRETTY_FUNCTION____ZNK13b2DynamicTree15ValidateMetricsEi, __str20123);
          ;
        }
        else if (__label__ == 8) {

          var $cmp15=0 <= ($8);
          if ($cmp15) { __label__ = 9;; } else { __label__ = 10;; }
          $land_lhs_true$$cond_false18$14: do { 
            if (__label__ == 9) {

              var $12=$child1;
              var $m_nodeCapacity=$this1+3;
              var $13=IHEAP[$m_nodeCapacity];
              var $cmp16=($12) < ($13);
              if ($cmp16) { __label__ = 11;break $land_lhs_true$$cond_false18$14; } else { __label__ = 10;break $land_lhs_true$$cond_false18$14; }
            }
          } while(0);
          $cond_end19$$cond_false18$16: do { 
            if (__label__ == 10) {

              ___assert_func(__str103, 637, ___PRETTY_FUNCTION____ZNK13b2DynamicTree15ValidateMetricsEi, __str21124);
              ;
            }
          } while(0);

          var $14=$child2;
          var $cmp20=0 <= ($14);
          if ($cmp20) { __label__ = 12;; } else { __label__ = 13;; }
          $land_lhs_true21$$cond_false25$19: do { 
            if (__label__ == 12) {

              var $15=$child2;
              var $m_nodeCapacity22=$this1+3;
              var $16=IHEAP[$m_nodeCapacity22];
              var $cmp23=($15) < ($16);
              if ($cmp23) { __label__ = 14;break $land_lhs_true21$$cond_false25$19; } else { __label__ = 13;break $land_lhs_true21$$cond_false25$19; }
            }
          } while(0);
          $cond_end26$$cond_false25$21: do { 
            if (__label__ == 13) {

              ___assert_func(__str103, 638, ___PRETTY_FUNCTION____ZNK13b2DynamicTree15ValidateMetricsEi, __str22125);
              ;
            }
          } while(0);

          var $17=$child1;
          var $m_nodes27=$this1+1;
          var $18=IHEAP[$m_nodes27];
          var $arrayidx=$18+$17*9;
          var $height28=$arrayidx+8;
          var $19=IHEAP[$height28];
          $height1=$19;
          var $20=$child2;
          var $m_nodes29=$this1+1;
          var $21=IHEAP[$m_nodes29];
          var $arrayidx30=$21+$20*9;
          var $height31=$arrayidx30+8;
          var $22=IHEAP[$height31];
          $height2=$22;
          var $23=$height1;
          var $24=$height2;
          var $call33=__Z5b2MaxIiET_S0_S0_($23, $24);
          var $add=($call33)+1;
          $height32=$add;
          var $25=$node;
          var $height34=$25+8;
          var $26=IHEAP[$height34];
          var $27=$height32;
          var $cmp35=($26)==($27);
          if ($cmp35) { __label__ = 16;; } else { __label__ = 15;; }
          $cond_end38$$cond_false37$24: do { 
            if (__label__ == 15) {

              ___assert_func(__str103, 644, ___PRETTY_FUNCTION____ZNK13b2DynamicTree15ValidateMetricsEi, __str25128);
              ;
            }
          } while(0);

          __ZN6b2AABBC1Ev($aabb);
          var $28=$child1;
          var $m_nodes39=$this1+1;
          var $29=IHEAP[$m_nodes39];
          var $arrayidx40=$29+$28*9;
          var $aabb41=$arrayidx40;
          var $30=$child2;
          var $m_nodes42=$this1+1;
          var $31=IHEAP[$m_nodes42];
          var $arrayidx43=$31+$30*9;
          var $aabb44=$arrayidx43;
          __ZN6b2AABB7CombineERKS_S1_($aabb, $aabb41, $aabb44);
          var $lowerBound=$aabb;
          var $32=$node;
          var $aabb45=$32;
          var $lowerBound46=$aabb45;
          var $call47=__ZeqRK6b2Vec2S1_($lowerBound, $lowerBound46);
          if ($call47) { __label__ = 18;; } else { __label__ = 17;; }
          $cond_end50$$cond_false49$27: do { 
            if (__label__ == 17) {

              ___assert_func(__str103, 649, ___PRETTY_FUNCTION____ZNK13b2DynamicTree15ValidateMetricsEi, __str26129);
              ;
            }
          } while(0);

          var $upperBound=$aabb+2;
          var $33=$node;
          var $aabb51=$33;
          var $upperBound52=$aabb51+2;
          var $call53=__ZeqRK6b2Vec2S1_($upperBound, $upperBound52);
          if ($call53) { __label__ = 20;; } else { __label__ = 19;; }
          $cond_end56$$cond_false55$30: do { 
            if (__label__ == 19) {

              ___assert_func(__str103, 650, ___PRETTY_FUNCTION____ZNK13b2DynamicTree15ValidateMetricsEi, __str27130);
              ;
            }
          } while(0);

          var $34=$child1;
          __ZNK13b2DynamicTree15ValidateMetricsEi($this1, $34);
          var $35=$child2;
          __ZNK13b2DynamicTree15ValidateMetricsEi($this1, $35);
          ;
        }
      } while(0);
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNK13b2DynamicTree15ValidateMetricsEi["X"]=1;

function __ZNK13b2DynamicTree8ValidateEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $freeCount;
  var $freeIndex;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_root=$this1;
  var $0=IHEAP[$m_root];
  __ZNK13b2DynamicTree17ValidateStructureEi($this1, $0);
  var $m_root2=$this1;
  var $1=IHEAP[$m_root2];
  __ZNK13b2DynamicTree15ValidateMetricsEi($this1, $1);
  $freeCount=0;
  var $m_freeList=$this1+4;
  var $2=IHEAP[$m_freeList];
  $freeIndex=$2;
  var $cmp1=($2)!=-1;
  if ($cmp1) { __label__ = 1;; } else { __label__ = 6;; }
  $while_body_lr_ph$$while_end$39: do { 
    if (__label__ == 1) {

      var $m_nodeCapacity=$this1+3;
      var $m_nodes=$this1+1;
      ;
      $while_body$41: while(1) { 

        var $3=$freeIndex;
        var $cmp3=0 <= ($3);
        if ($cmp3) { __label__ = 3;; } else { __label__ = 4;; }
        $land_lhs_true$$cond_false$43: do { 
          if (__label__ == 3) {

            var $4=$freeIndex;
            var $5=IHEAP[$m_nodeCapacity];
            var $cmp4=($4) < ($5);
            if ($cmp4) { __label__ = 5;break $land_lhs_true$$cond_false$43; } else { __label__ = 4;break $land_lhs_true$$cond_false$43; }
          }
        } while(0);
        $cond_end$$cond_false$45: do { 
          if (__label__ == 4) {

            ___assert_func(__str103, 665, ___PRETTY_FUNCTION____ZNK13b2DynamicTree8ValidateEv, __str28131);
            ;
          }
        } while(0);

        var $6=$freeIndex;
        var $7=IHEAP[$m_nodes];
        var $arrayidx=$7+$6*9;
        var $8=$arrayidx+5;
        var $next=$8;
        var $9=IHEAP[$next];
        $freeIndex=$9;
        var $10=$freeCount;
        var $inc=($10)+1;
        $freeCount=$inc;
        var $cmp=($9)!=-1;
        if (!($cmp)) { __label__ = 6;break $while_body_lr_ph$$while_end$39; }
      }
    }
  } while(0);

  var $call=__ZNK13b2DynamicTree9GetHeightEv($this1);
  var $call5=__ZNK13b2DynamicTree13ComputeHeightEv($this1);
  var $cmp6=($call)==($call5);
  if ($cmp6) { __label__ = 8;; } else { __label__ = 7;; }
  $cond_end9$$cond_false8$49: do { 
    if (__label__ == 7) {

      ___assert_func(__str103, 670, ___PRETTY_FUNCTION____ZNK13b2DynamicTree8ValidateEv, __str29132);
      ;
    }
  } while(0);

  var $m_nodeCount=$this1+2;
  var $11=IHEAP[$m_nodeCount];
  var $12=$freeCount;
  var $add=($12)+($11);
  var $m_nodeCapacity10=$this1+3;
  var $13=IHEAP[$m_nodeCapacity10];
  var $cmp11=($add)==($13);
  if ($cmp11) { __label__ = 10;; } else { __label__ = 9;; }
  $cond_end14$$cond_false13$52: do { 
    if (__label__ == 9) {

      ___assert_func(__str103, 672, ___PRETTY_FUNCTION____ZNK13b2DynamicTree8ValidateEv, __str30133);
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZNK13b2DynamicTree8ValidateEv["X"]=1;

function __ZNK13b2DynamicTree13GetMaxBalanceEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $maxBalance;
  var $i;
  var $node;
  var $child1;
  var $child2;
  var $balance;
  $this_addr=$this;
  var $this1=$this_addr;
  $maxBalance=0;
  $i=0;
  var $0=$i;
  var $m_nodeCapacity=$this1+3;
  var $1=IHEAP[$m_nodeCapacity];
  var $cmp1=($0) < ($1);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 7;; }
  $for_body_lr_ph$$for_end$56: do { 
    if (__label__ == 1) {

      var $m_nodes=$this1+1;
      var $m_nodes6=$this1+1;
      var $m_nodes8=$this1+1;
      ;
      $for_body$58: while(1) { 

        var $2=IHEAP[$m_nodes];
        var $3=$i;
        var $add_ptr=$2+$3*9;
        $node=$add_ptr;
        var $4=$node;
        var $height=$4+8;
        var $5=IHEAP[$height];
        var $cmp2=($5) <= 1;
        if ($cmp2) { __label__ = 6;; } else { __label__ = 3;; }
        $for_inc$$if_end$60: do { 
          if (__label__ == 3) {

            var $6=$node;
            var $call=__ZNK10b2TreeNode6IsLeafEv($6);
            var $conv=($call);
            var $cmp3=($conv)==0;
            if ($cmp3) { __label__ = 5;; } else { __label__ = 4;; }
            $cond_end$$cond_false$62: do { 
              if (__label__ == 4) {

                ___assert_func(__str103, 686, ___PRETTY_FUNCTION____ZNK13b2DynamicTree13GetMaxBalanceEv, __str31134);
                ;
              }
            } while(0);

            var $7=$node;
            var $child14=$7+6;
            var $8=IHEAP[$child14];
            $child1=$8;
            var $9=$node;
            var $child25=$9+7;
            var $10=IHEAP[$child25];
            $child2=$10;
            var $11=$child2;
            var $12=IHEAP[$m_nodes6];
            var $arrayidx=$12+$11*9;
            var $height7=$arrayidx+8;
            var $13=IHEAP[$height7];
            var $14=$child1;
            var $15=IHEAP[$m_nodes8];
            var $arrayidx9=$15+$14*9;
            var $height10=$arrayidx9+8;
            var $16=IHEAP[$height10];
            var $sub=($13)-($16);
            var $call11=__Z5b2AbsIiET_S0_($sub);
            $balance=$call11;
            var $17=$maxBalance;
            var $18=$balance;
            var $call12=__Z5b2MaxIiET_S0_S0_($17, $18);
            $maxBalance=$call12;
            ;
          }
        } while(0);

        var $19=$i;
        var $inc=($19)+1;
        $i=$inc;
        var $20=$i;
        var $21=IHEAP[$m_nodeCapacity];
        var $cmp=($20) < ($21);
        if (!($cmp)) { __label__ = 7;break $for_body_lr_ph$$for_end$56; }
      }
    }
  } while(0);

  var $22=$maxBalance;
  ;
  return $22;
  return null;
}
__ZNK13b2DynamicTree13GetMaxBalanceEv["X"]=1;

function __ZN13b2DynamicTree15RebuildBottomUpEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 12;
  var __label__;

  var $this_addr;
  var $nodes;
  var $count;
  var $i;
  var $minCost;
  var $iMin;
  var $jMin;
  var $i13;
  var $aabbi=__stackBase__;
  var $j;
  var $aabbj=__stackBase__+4;
  var $b=__stackBase__+8;
  var $cost;
  var $index1;
  var $index2;
  var $child1;
  var $child2;
  var $parentIndex;
  var $parent43;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_nodeCount=$this1+2;
  var $0=IHEAP[$m_nodeCount];
  var $mul=(($0)<<2);
  var $call=__Z7b2Alloci($mul);
  var $1=$call;
  $nodes=$1;
  $count=0;
  $i=0;
  var $2=$i;
  var $m_nodeCapacity=$this1+3;
  var $3=IHEAP[$m_nodeCapacity];
  var $cmp4=($2) < ($3);
  if ($cmp4) { __label__ = 1;; } else { __label__ = 7;; }
  $for_body_lr_ph$$while_condthread_pre_split$69: do { 
    if (__label__ == 1) {

      var $m_nodes=$this1+1;
      var $m_nodes3=$this1+1;
      var $m_nodes7=$this1+1;
      ;
      $for_body$71: while(1) { 

        var $4=$i;
        var $5=IHEAP[$m_nodes];
        var $arrayidx=$5+$4*9;
        var $height=$arrayidx+8;
        var $6=IHEAP[$height];
        var $cmp2=($6) < 0;
        if ($cmp2) { __label__ = 6;; } else { __label__ = 3;; }
        $for_inc$$if_end$73: do { 
          if (__label__ == 3) {

            var $7=$i;
            var $8=IHEAP[$m_nodes3];
            var $arrayidx4=$8+$7*9;
            var $call5=__ZNK10b2TreeNode6IsLeafEv($arrayidx4);
            var $9=$i;
            if ($call5) { __label__ = 4;; } else { __label__ = 5;; }
            $if_then6$$if_else$75: do { 
              if (__label__ == 4) {

                var $10=IHEAP[$m_nodes7];
                var $arrayidx8=$10+$9*9;
                var $11=$arrayidx8+5;
                var $parent=$11;
                IHEAP[$parent]=-1;
                var $12=$i;
                var $13=$count;
                var $14=$nodes;
                var $arrayidx9=$14+$13;
                IHEAP[$arrayidx9]=$12;
                var $15=$count;
                var $inc=($15)+1;
                $count=$inc;
                ;
              }
              else if (__label__ == 5) {

                __ZN13b2DynamicTree8FreeNodeEi($this1, $9);
                ;
              }
            } while(0);
          }
        } while(0);

        var $16=$i;
        var $inc11=($16)+1;
        $i=$inc11;
        var $17=$i;
        var $18=IHEAP[$m_nodeCapacity];
        var $cmp=($17) < ($18);
        if (!($cmp)) { __label__ = 7;break $for_body_lr_ph$$while_condthread_pre_split$69; }
      }
    }
  } while(0);

  var $_pr=$count;
  var $cmp123=($_pr) > 1;
  if ($cmp123) { __label__ = 8;; } else { __label__ = 16;; }
  $while_body_lr_ph$$while_end$80: do { 
    if (__label__ == 8) {

      var $m_nodes39=$this1+1;
      var $m_nodes40=$this1+1;
      var $m_nodes44=$this1+1;
      var $m_nodes18=$this1+1;
      var $19=$aabbi;
      var $m_nodes24=$this1+1;
      var $20=$aabbj;
      ;
      $while_body$82: while(1) { 

        $minCost=3.4028234663852886e+38;
        $iMin=-1;
        $jMin=-1;
        $i13=0;
        var $21=$i13;
        var $22=$count;
        var $cmp152=($21) < ($22);
        if ($cmp152) { __label__ = 10;; } else { __label__ = 15;; }
        $for_body16$$for_end36$84: do { 
          if (__label__ == 10) {
            $for_body16$85: while(1) { 

              var $23=$i13;
              var $24=$nodes;
              var $arrayidx17=$24+$23;
              var $25=IHEAP[$arrayidx17];
              var $26=IHEAP[$m_nodes18];
              var $arrayidx19=$26+$25*9;
              var $aabb=$arrayidx19;
              var $27=$aabb;
              IHEAP[$19]=IHEAP[$27]; FHEAP[$19]=FHEAP[$27]; ; IHEAP[$19+1]=IHEAP[$27+1]; FHEAP[$19+1]=FHEAP[$27+1]; ; IHEAP[$19+2]=IHEAP[$27+2]; FHEAP[$19+2]=FHEAP[$27+2]; ; IHEAP[$19+3]=IHEAP[$27+3]; FHEAP[$19+3]=FHEAP[$27+3]; ;
              var $28=$i13;
              var $add=($28)+1;
              $j=$add;
              var $29=$j;
              var $30=$count;
              var $cmp211=($29) < ($30);
              if ($cmp211) { __label__ = 11;; } else { __label__ = 14;; }
              $for_body22$$for_inc34$87: do { 
                if (__label__ == 11) {
                  $for_body22$88: while(1) { 

                    var $31=$j;
                    var $32=$nodes;
                    var $arrayidx23=$32+$31;
                    var $33=IHEAP[$arrayidx23];
                    var $34=IHEAP[$m_nodes24];
                    var $arrayidx25=$34+$33*9;
                    var $aabb26=$arrayidx25;
                    var $35=$aabb26;
                    IHEAP[$20]=IHEAP[$35]; FHEAP[$20]=FHEAP[$35]; ; IHEAP[$20+1]=IHEAP[$35+1]; FHEAP[$20+1]=FHEAP[$35+1]; ; IHEAP[$20+2]=IHEAP[$35+2]; FHEAP[$20+2]=FHEAP[$35+2]; ; IHEAP[$20+3]=IHEAP[$35+3]; FHEAP[$20+3]=FHEAP[$35+3]; ;
                    __ZN6b2AABBC1Ev($b);
                    __ZN6b2AABB7CombineERKS_S1_($b, $aabbi, $aabbj);
                    var $call27=__ZNK6b2AABB12GetPerimeterEv($b);
                    $cost=$call27;
                    var $36=$cost;
                    var $37=$minCost;
                    var $cmp28=($36) < ($37);
                    if ($cmp28) { __label__ = 12;; } else { __label__ = 13;; }
                    $if_then29$$for_inc31$90: do { 
                      if (__label__ == 12) {

                        var $38=$i13;
                        $iMin=$38;
                        var $39=$j;
                        $jMin=$39;
                        var $40=$cost;
                        $minCost=$40;
                        ;
                      }
                    } while(0);

                    var $41=$j;
                    var $inc32=($41)+1;
                    $j=$inc32;
                    var $42=$j;
                    var $43=$count;
                    var $cmp21=($42) < ($43);
                    if (!($cmp21)) { __label__ = 14;break $for_body22$$for_inc34$87; }
                  }
                }
              } while(0);

              var $44=$i13;
              var $inc35=($44)+1;
              $i13=$inc35;
              var $45=$i13;
              var $46=$count;
              var $cmp15=($45) < ($46);
              if (!($cmp15)) { __label__ = 15;break $for_body16$$for_end36$84; }
            }
          }
        } while(0);

        var $47=$iMin;
        var $48=$nodes;
        var $arrayidx37=$48+$47;
        var $49=IHEAP[$arrayidx37];
        $index1=$49;
        var $50=$jMin;
        var $51=$nodes;
        var $arrayidx38=$51+$50;
        var $52=IHEAP[$arrayidx38];
        $index2=$52;
        var $53=IHEAP[$m_nodes39];
        var $54=$index1;
        var $add_ptr=$53+$54*9;
        $child1=$add_ptr;
        var $55=IHEAP[$m_nodes40];
        var $56=$index2;
        var $add_ptr41=$55+$56*9;
        $child2=$add_ptr41;
        var $call42=__ZN13b2DynamicTree12AllocateNodeEv($this1);
        $parentIndex=$call42;
        var $57=IHEAP[$m_nodes44];
        var $58=$parentIndex;
        var $add_ptr45=$57+$58*9;
        $parent43=$add_ptr45;
        var $59=$index1;
        var $60=$parent43;
        var $child146=$60+6;
        IHEAP[$child146]=$59;
        var $61=$index2;
        var $62=$parent43;
        var $child247=$62+7;
        IHEAP[$child247]=$61;
        var $63=$child1;
        var $height48=$63+8;
        var $64=IHEAP[$height48];
        var $65=$child2;
        var $height49=$65+8;
        var $66=IHEAP[$height49];
        var $call50=__Z5b2MaxIiET_S0_S0_($64, $66);
        var $add51=($call50)+1;
        var $67=$parent43;
        var $height52=$67+8;
        IHEAP[$height52]=$add51;
        var $68=$parent43;
        var $aabb53=$68;
        var $69=$child1;
        var $aabb54=$69;
        var $70=$child2;
        var $aabb55=$70;
        __ZN6b2AABB7CombineERKS_S1_($aabb53, $aabb54, $aabb55);
        var $71=$parent43;
        var $72=$71+5;
        var $parent56=$72;
        IHEAP[$parent56]=-1;
        var $73=$parentIndex;
        var $74=$child1;
        var $75=$74+5;
        var $parent57=$75;
        IHEAP[$parent57]=$73;
        var $76=$parentIndex;
        var $77=$child2;
        var $78=$77+5;
        var $parent58=$78;
        IHEAP[$parent58]=$76;
        var $79=$count;
        var $sub=($79)-1;
        var $80=$nodes;
        var $arrayidx59=$80+$sub;
        var $81=IHEAP[$arrayidx59];
        var $82=$jMin;
        var $83=$nodes;
        var $arrayidx60=$83+$82;
        IHEAP[$arrayidx60]=$81;
        var $84=$parentIndex;
        var $85=$iMin;
        var $86=$nodes;
        var $arrayidx61=$86+$85;
        IHEAP[$arrayidx61]=$84;
        var $87=$count;
        var $dec=($87)-1;
        $count=$dec;
        var $cmp12=($dec) > 1;
        if (!($cmp12)) { __label__ = 16;break $while_body_lr_ph$$while_end$80; }
      }
    }
  } while(0);

  var $88=$nodes;
  var $arrayidx62=$88;
  var $89=IHEAP[$arrayidx62];
  var $m_root=$this1;
  IHEAP[$m_root]=$89;
  var $90=$nodes;
  var $91=$90;
  __Z6b2FreePv($91);
  __ZNK13b2DynamicTree8ValidateEv($this1);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN13b2DynamicTree15RebuildBottomUpEv["X"]=1;

function __ZN22b2EdgeAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA, $0, $fixtureB, $1, $allocator) {
  ;
  var __label__;

  var $fixtureA_addr;
  var $_addr;
  var $fixtureB_addr;
  var $_addr1;
  var $allocator_addr;
  var $mem;
  $fixtureA_addr=$fixtureA;
  $_addr=$0;
  $fixtureB_addr=$fixtureB;
  $_addr1=$1;
  $allocator_addr=$allocator;
  var $2=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($2, 144);
  $mem=$call;
  var $3=$mem;
  var $new_isnull=($3)==0;
  if ($new_isnull) { var $7 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$98: do { 
    if (__label__ == 1) {

      var $4=$3;
      var $5=$fixtureA_addr;
      var $6=$fixtureB_addr;
      __ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_($4, $5, $6);
      var $7 = $4;;
    }
  } while(0);

  var $7;
  var $8=$7;
  ;
  return $8;
  return null;
}


function __ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_($this, $fixtureA, $fixtureB) {
  ;
  var __label__;

  var $this_addr;
  var $fixtureA_addr;
  var $fixtureB_addr;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $fixtureA_addr=$fixtureA;
  $fixtureB_addr=$fixtureB;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$fixtureA_addr;
  var $2=$fixtureB_addr;
  __ZN9b2ContactC2EP9b2FixtureiS1_i($0, $1, 0, $2, 0);
  var $3=$this1;
  IHEAP[$3]=__ZTV22b2EdgeAndCircleContact+2;
  var $4=$this1;
  var $m_fixtureA=$4+12;
  var $5=IHEAP[$m_fixtureA];
  var $call=__ZNK9b2Fixture7GetTypeEv($5);
  var $cmp=($call)==1;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $invoke_cont3$$cond_false$103: do { 
    if (__label__ == 1) {

      ___assert_func(__str145, 41, ___PRETTY_FUNCTION____ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_, __str1153);
      ;
    }
  } while(0);

  var $6=$this1;
  var $m_fixtureB=$6+13;
  var $7=IHEAP[$m_fixtureB];
  var $call4=__ZNK9b2Fixture7GetTypeEv($7);
  var $cmp5=($call4)==0;
  if ($cmp5) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end9$$cond_false7$106: do { 
    if (__label__ == 3) {

      ___assert_func(__str145, 42, ___PRETTY_FUNCTION____ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_, __str2264);
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN22b2EdgeAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this, $manifold, $xfA, $xfB) {
  ;
  var __label__;

  var $this_addr;
  var $manifold_addr;
  var $xfA_addr;
  var $xfB_addr;
  $this_addr=$this;
  $manifold_addr=$manifold;
  $xfA_addr=$xfA;
  $xfB_addr=$xfB;
  var $this1=$this_addr;
  var $0=$manifold_addr;
  var $1=$this1;
  var $m_fixtureA=$1+12;
  var $2=IHEAP[$m_fixtureA];
  var $call=__ZN9b2Fixture8GetShapeEv($2);
  var $3=$call;
  var $4=$xfA_addr;
  var $5=$this1;
  var $m_fixtureB=$5+13;
  var $6=IHEAP[$m_fixtureB];
  var $call2=__ZN9b2Fixture8GetShapeEv($6);
  var $7=$call2;
  var $8=$xfB_addr;
  __Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_($0, $3, $4, $7, $8);
  ;
  return;
  return;
}


function __ZN23b2EdgeAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA, $0, $fixtureB, $1, $allocator) {
  ;
  var __label__;

  var $fixtureA_addr;
  var $_addr;
  var $fixtureB_addr;
  var $_addr1;
  var $allocator_addr;
  var $mem;
  $fixtureA_addr=$fixtureA;
  $_addr=$0;
  $fixtureB_addr=$fixtureB;
  $_addr1=$1;
  $allocator_addr=$allocator;
  var $2=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($2, 144);
  $mem=$call;
  var $3=$mem;
  var $new_isnull=($3)==0;
  if ($new_isnull) { var $7 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$114: do { 
    if (__label__ == 1) {

      var $4=$3;
      var $5=$fixtureA_addr;
      var $6=$fixtureB_addr;
      __ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_($4, $5, $6);
      var $7 = $4;;
    }
  } while(0);

  var $7;
  var $8=$7;
  ;
  return $8;
  return null;
}


function __ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_($this, $fixtureA, $fixtureB) {
  ;
  var __label__;

  var $this_addr;
  var $fixtureA_addr;
  var $fixtureB_addr;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $fixtureA_addr=$fixtureA;
  $fixtureB_addr=$fixtureB;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$fixtureA_addr;
  var $2=$fixtureB_addr;
  __ZN9b2ContactC2EP9b2FixtureiS1_i($0, $1, 0, $2, 0);
  var $3=$this1;
  IHEAP[$3]=__ZTV23b2EdgeAndPolygonContact+2;
  var $4=$this1;
  var $m_fixtureA=$4+12;
  var $5=IHEAP[$m_fixtureA];
  var $call=__ZNK9b2Fixture7GetTypeEv($5);
  var $cmp=($call)==1;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $invoke_cont3$$cond_false$119: do { 
    if (__label__ == 1) {

      ___assert_func(__str152, 41, ___PRETTY_FUNCTION____ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_, __str1153);
      ;
    }
  } while(0);

  var $6=$this1;
  var $m_fixtureB=$6+13;
  var $7=IHEAP[$m_fixtureB];
  var $call4=__ZNK9b2Fixture7GetTypeEv($7);
  var $cmp5=($call4)==2;
  if ($cmp5) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end9$$cond_false7$122: do { 
    if (__label__ == 3) {

      ___assert_func(__str152, 42, ___PRETTY_FUNCTION____ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_, __str2271);
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN23b2EdgeAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this, $manifold, $xfA, $xfB) {
  ;
  var __label__;

  var $this_addr;
  var $manifold_addr;
  var $xfA_addr;
  var $xfB_addr;
  $this_addr=$this;
  $manifold_addr=$manifold;
  $xfA_addr=$xfA;
  $xfB_addr=$xfB;
  var $this1=$this_addr;
  var $0=$manifold_addr;
  var $1=$this1;
  var $m_fixtureA=$1+12;
  var $2=IHEAP[$m_fixtureA];
  var $call=__ZN9b2Fixture8GetShapeEv($2);
  var $3=$call;
  var $4=$xfA_addr;
  var $5=$this1;
  var $m_fixtureB=$5+13;
  var $6=IHEAP[$m_fixtureB];
  var $call2=__ZN9b2Fixture8GetShapeEv($6);
  var $7=$call2;
  var $8=$xfB_addr;
  __Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_($0, $3, $4, $7, $8);
  ;
  return;
  return;
}


function __ZNK11b2EdgeShape13GetChildCountEv($this) {
  ;
  var __label__;

  ;
  return 1;
  return null;
}


function __ZNK11b2EdgeShape9TestPointERK11b2TransformRK6b2Vec2($this, $xf, $p) {
  ;
  var __label__;

  ;
  return 0;
  return null;
}


function __ZN11b2EdgeShapeD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2EdgeShapeD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN11b2EdgeShape3SetERK6b2Vec2S2_($this, $v1, $v2) {
  ;
  var __label__;

  var $this_addr;
  var $v1_addr;
  var $v2_addr;
  $this_addr=$this;
  $v1_addr=$v1;
  $v2_addr=$v2;
  var $this1=$this_addr;
  var $m_vertex1=$this1+3;
  var $0=$v1_addr;
  var $1=$m_vertex1;
  var $2=$0;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ;
  var $m_vertex2=$this1+5;
  var $3=$v2_addr;
  var $4=$m_vertex2;
  var $5=$3;
  IHEAP[$4]=IHEAP[$5]; FHEAP[$4]=FHEAP[$5]; ; IHEAP[$4+1]=IHEAP[$5+1]; FHEAP[$4+1]=FHEAP[$5+1]; ;
  var $m_hasVertex0=$this1+11;
  IHEAP[$m_hasVertex0]=0;
  var $m_hasVertex3=$this1+12;
  IHEAP[$m_hasVertex3]=0;
  ;
  return;
  return;
}


function __ZNK11b2EdgeShape11ComputeAABBEP6b2AABBRK11b2Transformi($this, $aabb, $xf, $childIndex) {
  var __stackBase__  = STACKTOP; STACKTOP += 14;
  var __label__;

  var $this_addr;
  var $aabb_addr;
  var $xf_addr;
  var $childIndex_addr;
  var $v1=__stackBase__;
  var $v2=__stackBase__+2;
  var $lower=__stackBase__+4;
  var $upper=__stackBase__+6;
  var $r=__stackBase__+8;
  var $ref_tmp=__stackBase__+10;
  var $ref_tmp3=__stackBase__+12;
  $this_addr=$this;
  $aabb_addr=$aabb;
  $xf_addr=$xf;
  $childIndex_addr=$childIndex;
  var $this1=$this_addr;
  var $0=$xf_addr;
  var $m_vertex1=$this1+3;
  __Z5b2MulRK11b2TransformRK6b2Vec2($v1, $0, $m_vertex1);
  var $1=$xf_addr;
  var $m_vertex2=$this1+5;
  __Z5b2MulRK11b2TransformRK6b2Vec2($v2, $1, $m_vertex2);
  __Z5b2MinRK6b2Vec2S1_($lower, $v1, $v2);
  __Z5b2MaxRK6b2Vec2S1_($upper, $v1, $v2);
  var $2=$this1;
  var $m_radius=$2+2;
  var $3=FHEAP[$m_radius];
  var $4=$this1;
  var $m_radius2=$4+2;
  var $5=FHEAP[$m_radius2];
  __ZN6b2Vec2C1Eff($r, $3, $5);
  var $6=$aabb_addr;
  var $lowerBound=$6;
  __ZmiRK6b2Vec2S1_($ref_tmp, $lower, $r);
  var $7=$lowerBound;
  var $8=$ref_tmp;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
  var $9=$aabb_addr;
  var $upperBound=$9+2;
  __ZplRK6b2Vec2S1_($ref_tmp3, $upper, $r);
  var $10=$upperBound;
  var $11=$ref_tmp3;
  IHEAP[$10]=IHEAP[$11]; FHEAP[$10]=FHEAP[$11]; ; IHEAP[$10+1]=IHEAP[$11+1]; FHEAP[$10+1]=FHEAP[$11+1]; ;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK11b2EdgeShape11ComputeMassEP10b2MassDataf($this, $massData, $density) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $massData_addr;
  var $density_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp2=__stackBase__+2;
  $this_addr=$this;
  $massData_addr=$massData;
  $density_addr=$density;
  var $this1=$this_addr;
  var $0=$massData_addr;
  var $mass=$0;
  FHEAP[$mass]=0;
  var $1=$massData_addr;
  var $center=$1+1;
  var $m_vertex1=$this1+3;
  var $m_vertex2=$this1+5;
  __ZplRK6b2Vec2S1_($ref_tmp2, $m_vertex1, $m_vertex2);
  __ZmlfRK6b2Vec2($ref_tmp, 0.5, $ref_tmp2);
  var $2=$center;
  var $3=$ref_tmp;
  IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
  var $4=$massData_addr;
  var $I=$4+3;
  FHEAP[$I]=0;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN9b2FixtureC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_filter=$this1+8;
  __ZN8b2FilterC1Ev($m_filter);
  var $m_userData=$this1+12;
  IHEAP[$m_userData]=0;
  var $m_body=$this1+2;
  IHEAP[$m_body]=0;
  var $m_next=$this1+1;
  IHEAP[$m_next]=0;
  var $m_proxies=$this1+6;
  IHEAP[$m_proxies]=0;
  var $m_proxyCount=$this1+7;
  IHEAP[$m_proxyCount]=0;
  var $m_shape=$this1+3;
  IHEAP[$m_shape]=0;
  var $m_density=$this1;
  FHEAP[$m_density]=0;
  ;
  return;
  return;
}


function __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($this, $broadPhase) {
  ;
  var __label__;

  var $this_addr;
  var $broadPhase_addr;
  var $i;
  var $proxy;
  $this_addr=$this;
  $broadPhase_addr=$broadPhase;
  var $this1=$this_addr;
  $i=0;
  var $0=$i;
  var $m_proxyCount=$this1+7;
  var $1=IHEAP[$m_proxyCount];
  var $cmp1=($0) < ($1);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 3;; }
  $for_body_lr_ph$$for_end$59: do { 
    if (__label__ == 1) {

      var $m_proxies=$this1+6;
      ;
      $for_body$61: while(1) { 

        var $2=IHEAP[$m_proxies];
        var $3=$i;
        var $add_ptr=$2+$3*7;
        $proxy=$add_ptr;
        var $4=$broadPhase_addr;
        var $5=$proxy;
        var $proxyId=$5+6;
        var $6=IHEAP[$proxyId];
        __ZN12b2BroadPhase12DestroyProxyEi($4, $6);
        var $7=$proxy;
        var $proxyId2=$7+6;
        IHEAP[$proxyId2]=-1;
        var $8=$i;
        var $inc=($8)+1;
        $i=$inc;
        var $9=$i;
        var $10=IHEAP[$m_proxyCount];
        var $cmp=($9) < ($10);
        if (!($cmp)) { __label__ = 3;break $for_body_lr_ph$$for_end$59; }
      }
    }
  } while(0);

  var $m_proxyCount3=$this1+7;
  IHEAP[$m_proxyCount3]=0;
  ;
  return;
  return;
}


function __ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_($this, $broadPhase, $transform1, $transform2) {
  var __stackBase__  = STACKTOP; STACKTOP += 10;
  var __label__;

  var $this_addr;
  var $broadPhase_addr;
  var $transform1_addr;
  var $transform2_addr;
  var $i;
  var $proxy;
  var $aabb1=__stackBase__;
  var $aabb2=__stackBase__+4;
  var $displacement=__stackBase__+8;
  $this_addr=$this;
  $broadPhase_addr=$broadPhase;
  $transform1_addr=$transform1;
  $transform2_addr=$transform2;
  var $this1=$this_addr;
  var $m_proxyCount=$this1+7;
  var $0=IHEAP[$m_proxyCount];
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 4;; } else { __label__ = 1;; }
  $for_end$$if_end$65: do { 
    if (__label__ == 1) {

      $i=0;
      var $1=$i;
      var $m_proxyCount2=$this1+7;
      var $2=IHEAP[$m_proxyCount2];
      var $cmp31=($1) < ($2);
      if (!($cmp31)) { __label__ = 4;break $for_end$$if_end$65; }

      var $m_proxies=$this1+6;
      var $m_shape=$this1+3;
      var $m_shape4=$this1+3;
      ;
      $for_body$68: while(1) { 

        var $3=IHEAP[$m_proxies];
        var $4=$i;
        var $add_ptr=$3+$4*7;
        $proxy=$add_ptr;
        __ZN6b2AABBC1Ev($aabb1);
        __ZN6b2AABBC1Ev($aabb2);
        var $5=IHEAP[$m_shape];
        var $6=$5;
        var $vtable=IHEAP[$6];
        var $vfn=$vtable+6;
        var $7=IHEAP[$vfn];
        var $8=$transform1_addr;
        var $9=$proxy;
        var $childIndex=$9+5;
        var $10=IHEAP[$childIndex];
        FUNCTION_TABLE[$7]($5, $aabb1, $8, $10);
        var $11=IHEAP[$m_shape4];
        var $12=$11;
        var $vtable5=IHEAP[$12];
        var $vfn6=$vtable5+6;
        var $13=IHEAP[$vfn6];
        var $14=$transform2_addr;
        var $15=$proxy;
        var $childIndex7=$15+5;
        var $16=IHEAP[$childIndex7];
        FUNCTION_TABLE[$13]($11, $aabb2, $14, $16);
        var $17=$proxy;
        var $aabb=$17;
        __ZN6b2AABB7CombineERKS_S1_($aabb, $aabb1, $aabb2);
        var $18=$transform2_addr;
        var $p=$18;
        var $19=$transform1_addr;
        var $p8=$19;
        __ZmiRK6b2Vec2S1_($displacement, $p, $p8);
        var $20=$broadPhase_addr;
        var $21=$proxy;
        var $proxyId=$21+6;
        var $22=IHEAP[$proxyId];
        var $23=$proxy;
        var $aabb9=$23;
        __ZN12b2BroadPhase9MoveProxyEiRK6b2AABBRK6b2Vec2($20, $22, $aabb9, $displacement);
        var $24=$i;
        var $inc=($24)+1;
        $i=$inc;
        var $25=$i;
        var $26=IHEAP[$m_proxyCount2];
        var $cmp3=($25) < ($26);
        if (!($cmp3)) { __label__ = 4;break $for_end$$if_end$65; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_["X"]=1;

function __ZN9b2Fixture13SetFilterDataERK8b2Filter($this, $filter) {
  ;
  var __label__;

  var $this_addr;
  var $filter_addr;
  $this_addr=$this;
  $filter_addr=$filter;
  var $this1=$this_addr;
  var $m_filter=$this1+8;
  var $0=$filter_addr;
  var $1=$m_filter;
  var $2=$0;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ; IHEAP[$1+2]=IHEAP[$2+2]; FHEAP[$1+2]=FHEAP[$2+2]; ;
  __ZN9b2Fixture8RefilterEv($this1);
  ;
  return;
  return;
}


function __ZN9b2Contact16FlagForFilteringEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_flags=$this1+1;
  var $0=IHEAP[$m_flags];
  var $or=($0) | 8;
  IHEAP[$m_flags]=$or;
  ;
  return;
  return;
}


function __ZN6b2Body8GetWorldEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_world=$this1+22;
  var $0=IHEAP[$m_world];
  ;
  return $0;
  return null;
}


function __ZNK11b2EdgeShape5CloneEP16b2BlockAllocator($this, $allocator) {
  ;
  var __label__;

  var $this_addr;
  var $allocator_addr;
  var $mem;
  var $clone;
  $this_addr=$this;
  $allocator_addr=$allocator;
  var $this1=$this_addr;
  var $0=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($0, 48);
  $mem=$call;
  var $1=$mem;
  var $new_isnull=($1)==0;
  if ($new_isnull) { var $3 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$3: do { 
    if (__label__ == 1) {

      var $2=$1;
      __ZN11b2EdgeShapeC1Ev($2);
      var $3 = $2;;
    }
  } while(0);

  var $3;
  $clone=$3;
  var $4=$clone;
  var $call2=__ZN11b2EdgeShapeaSERKS_($4, $this1);
  var $5=$clone;
  var $6=$5;
  ;
  return $6;
  return null;
}


function __ZN11b2EdgeShapeaSERKS_($this, $0) {
  ;
  var __label__;

  var $this_addr;
  var $_addr;
  $this_addr=$this;
  $_addr=$0;
  var $this1=$this_addr;
  var $1=$this1;
  var $2=$_addr;
  var $3=$2;
  var $call=__ZN7b2ShapeaSERKS_($1, $3);
  var $m_vertex1=$this1+3;
  var $4=$_addr;
  var $m_vertex12=$4+3;
  var $5=$m_vertex1;
  var $6=$m_vertex12;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_vertex2=$this1+5;
  var $7=$_addr;
  var $m_vertex23=$7+5;
  var $8=$m_vertex2;
  var $9=$m_vertex23;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_vertex0=$this1+7;
  var $10=$_addr;
  var $m_vertex04=$10+7;
  var $11=$m_vertex0;
  var $12=$m_vertex04;
  IHEAP[$11]=IHEAP[$12]; FHEAP[$11]=FHEAP[$12]; ; IHEAP[$11+1]=IHEAP[$12+1]; FHEAP[$11+1]=FHEAP[$12+1]; ;
  var $m_vertex3=$this1+9;
  var $13=$_addr;
  var $m_vertex35=$13+9;
  var $14=$m_vertex3;
  var $15=$m_vertex35;
  IHEAP[$14]=IHEAP[$15]; FHEAP[$14]=FHEAP[$15]; ; IHEAP[$14+1]=IHEAP[$15+1]; FHEAP[$14+1]=FHEAP[$15+1]; ;
  var $16=$_addr;
  var $m_hasVertex0=$16+11;
  var $17=IHEAP[$m_hasVertex0];
  var $tobool=((($17)) & 1);
  var $m_hasVertex06=$this1+11;
  var $frombool=($tobool);
  IHEAP[$m_hasVertex06]=$frombool;
  var $18=$_addr;
  var $m_hasVertex3=$18+12;
  var $19=IHEAP[$m_hasVertex3];
  var $tobool7=((($19)) & 1);
  var $m_hasVertex38=$this1+12;
  var $frombool9=($tobool7);
  IHEAP[$m_hasVertex38]=$frombool9;
  ;
  return $this1;
  return null;
}


function __ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this, $output, $input, $xf, $childIndex) {
  var __stackBase__  = STACKTOP; STACKTOP += 30;
  var __label__;

  var $retval;
  var $this_addr;
  var $output_addr;
  var $input_addr;
  var $xf_addr;
  var $childIndex_addr;
  var $p1=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $p2=__stackBase__+4;
  var $ref_tmp4=__stackBase__+6;
  var $d=__stackBase__+8;
  var $v1=__stackBase__+10;
  var $v2=__stackBase__+12;
  var $e=__stackBase__+14;
  var $normal=__stackBase__+16;
  var $numerator;
  var $ref_tmp7=__stackBase__+18;
  var $denominator;
  var $t;
  var $q14=__stackBase__+20;
  var $ref_tmp15=__stackBase__+22;
  var $r=__stackBase__+24;
  var $rr;
  var $s;
  var $ref_tmp20=__stackBase__+26;
  var $ref_tmp31=__stackBase__+28;
  $this_addr=$this;
  $output_addr=$output;
  $input_addr=$input;
  $xf_addr=$xf;
  $childIndex_addr=$childIndex;
  var $this1=$this_addr;
  var $0=$xf_addr;
  var $q=$0+2;
  var $1=$input_addr;
  var $p12=$1;
  var $2=$xf_addr;
  var $p=$2;
  __ZmiRK6b2Vec2S1_($ref_tmp, $p12, $p);
  __Z6b2MulTRK5b2RotRK6b2Vec2($p1, $q, $ref_tmp);
  var $3=$xf_addr;
  var $q3=$3+2;
  var $4=$input_addr;
  var $p25=$4+2;
  var $5=$xf_addr;
  var $p6=$5;
  __ZmiRK6b2Vec2S1_($ref_tmp4, $p25, $p6);
  __Z6b2MulTRK5b2RotRK6b2Vec2($p2, $q3, $ref_tmp4);
  __ZmiRK6b2Vec2S1_($d, $p2, $p1);
  var $m_vertex1=$this1+3;
  var $6=$v1;
  var $7=$m_vertex1;
  IHEAP[$6]=IHEAP[$7]; FHEAP[$6]=FHEAP[$7]; ; IHEAP[$6+1]=IHEAP[$7+1]; FHEAP[$6+1]=FHEAP[$7+1]; ;
  var $m_vertex2=$this1+5;
  var $8=$v2;
  var $9=$m_vertex2;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  __ZmiRK6b2Vec2S1_($e, $v2, $v1);
  var $y=$e+1;
  var $10=FHEAP[$y];
  var $x=$e;
  var $11=FHEAP[$x];
  var $sub=(-($11));
  __ZN6b2Vec2C1Eff($normal, $10, $sub);
  var $call=__ZN6b2Vec29NormalizeEv($normal);
  __ZmiRK6b2Vec2S1_($ref_tmp7, $v1, $p1);
  var $call8=__Z5b2DotRK6b2Vec2S1_($normal, $ref_tmp7);
  $numerator=$call8;
  var $call9=__Z5b2DotRK6b2Vec2S1_($normal, $d);
  $denominator=$call9;
  var $12=$denominator;
  var $cmp=($12) == 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$10: do { 
    if (__label__ == 1) {

      $retval=0;
      ;
    }
    else if (__label__ == 2) {

      var $13=$numerator;
      var $14=$denominator;
      var $div=($13)/($14);
      $t=$div;
      var $15=$t;
      var $cmp10=($15) < 0;
      if ($cmp10) { __label__ = 4;; } else { __label__ = 3;; }
      $if_then12$$lor_lhs_false$13: do { 
        if (__label__ == 3) {

          var $16=$input_addr;
          var $maxFraction=$16+4;
          var $17=FHEAP[$maxFraction];
          var $18=$t;
          var $cmp11=($17) < ($18);
          if ($cmp11) { __label__ = 4;break $if_then12$$lor_lhs_false$13; }

          var $19=$t;
          __ZmlfRK6b2Vec2($ref_tmp15, $19, $d);
          __ZplRK6b2Vec2S1_($q14, $p1, $ref_tmp15);
          __ZmiRK6b2Vec2S1_($r, $v2, $v1);
          var $call16=__Z5b2DotRK6b2Vec2S1_($r, $r);
          $rr=$call16;
          var $20=$rr;
          var $cmp17=($20) == 0;
          if ($cmp17) { __label__ = 6;; } else { __label__ = 7;; }
          $if_then18$$if_end19$16: do { 
            if (__label__ == 6) {

              $retval=0;
              __label__ = 13;break $if_then$$if_end$10;
            }
            else if (__label__ == 7) {

              __ZmiRK6b2Vec2S1_($ref_tmp20, $q14, $v1);
              var $call21=__Z5b2DotRK6b2Vec2S1_($ref_tmp20, $r);
              var $21=$rr;
              var $div22=($call21)/($21);
              $s=$div22;
              var $22=$s;
              var $cmp23=($22) < 0;
              var $23=$s;
              var $cmp25=1 < ($23);
              var $or_cond=($cmp23) | ($cmp25);
              if ($or_cond) { __label__ = 8;; } else { __label__ = 9;; }
              $if_then26$$if_end27$19: do { 
                if (__label__ == 8) {

                  $retval=0;
                  __label__ = 13;break $if_then$$if_end$10;
                }
                else if (__label__ == 9) {

                  var $24=$t;
                  var $25=$output_addr;
                  var $fraction=$25+2;
                  FHEAP[$fraction]=$24;
                  var $26=$numerator;
                  var $cmp28=($26) > 0;
                  var $27=$output_addr;
                  var $normal30=$27;
                  if ($cmp28) { __label__ = 10;; } else { __label__ = 11;; }
                  $if_then29$$if_else$22: do { 
                    if (__label__ == 10) {

                      __ZNK6b2Vec2ngEv($ref_tmp31, $normal);
                      var $28=$normal30;
                      var $29=$ref_tmp31;
                      IHEAP[$28]=IHEAP[$29]; FHEAP[$28]=FHEAP[$29]; ; IHEAP[$28+1]=IHEAP[$29+1]; FHEAP[$28+1]=FHEAP[$29+1]; ;
                      ;
                    }
                    else if (__label__ == 11) {

                      var $30=$normal30;
                      var $31=$normal;
                      IHEAP[$30]=IHEAP[$31]; FHEAP[$30]=FHEAP[$31]; ; IHEAP[$30+1]=IHEAP[$31+1]; FHEAP[$30+1]=FHEAP[$31+1]; ;
                      ;
                    }
                  } while(0);

                  $retval=1;
                  __label__ = 13;break $if_then$$if_end$10;
                }
              } while(0);
            }
          } while(0);
        }
      } while(0);

      $retval=0;
      ;
    }
  } while(0);

  var $32=$retval;
  STACKTOP = __stackBase__;
  return $32;
  return null;
}
__ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi["X"]=1;

function __ZN9b2Fixture6CreateEP16b2BlockAllocatorP6b2BodyPK12b2FixtureDef($this, $allocator, $body, $def) {
  ;
  var __label__;

  var $this_addr;
  var $allocator_addr;
  var $body_addr;
  var $def_addr;
  var $childCount;
  var $i;
  $this_addr=$this;
  $allocator_addr=$allocator;
  $body_addr=$body;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$def_addr;
  var $userData=$0+1;
  var $1=IHEAP[$userData];
  var $m_userData=$this1+12;
  IHEAP[$m_userData]=$1;
  var $2=$def_addr;
  var $friction=$2+2;
  var $3=FHEAP[$friction];
  var $m_friction=$this1+4;
  FHEAP[$m_friction]=$3;
  var $4=$def_addr;
  var $restitution=$4+3;
  var $5=FHEAP[$restitution];
  var $m_restitution=$this1+5;
  FHEAP[$m_restitution]=$5;
  var $6=$body_addr;
  var $m_body=$this1+2;
  IHEAP[$m_body]=$6;
  var $m_next=$this1+1;
  IHEAP[$m_next]=0;
  var $m_filter=$this1+8;
  var $7=$def_addr;
  var $filter=$7+6;
  var $8=$m_filter;
  var $9=$filter;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ; IHEAP[$8+2]=IHEAP[$9+2]; FHEAP[$8+2]=FHEAP[$9+2]; ;
  var $10=$def_addr;
  var $isSensor=$10+5;
  var $11=IHEAP[$isSensor];
  var $tobool=((($11)) & 1);
  var $m_isSensor=$this1+11;
  var $frombool=($tobool);
  IHEAP[$m_isSensor]=$frombool;
  var $12=$def_addr;
  var $shape=$12;
  var $13=IHEAP[$shape];
  var $14=$13;
  var $vtable=IHEAP[$14];
  var $vfn=$vtable+2;
  var $15=IHEAP[$vfn];
  var $16=$allocator_addr;
  var $call=FUNCTION_TABLE[$15]($13, $16);
  var $m_shape=$this1+3;
  IHEAP[$m_shape]=$call;
  var $m_shape2=$this1+3;
  var $17=IHEAP[$m_shape2];
  var $18=$17;
  var $vtable3=IHEAP[$18];
  var $vfn4=$vtable3+3;
  var $19=IHEAP[$vfn4];
  var $call5=FUNCTION_TABLE[$19]($17);
  $childCount=$call5;
  var $20=$allocator_addr;
  var $21=$childCount;
  var $mul=($21)*28;
  var $call6=__ZN16b2BlockAllocator8AllocateEi($20, $mul);
  var $22=$call6;
  var $m_proxies=$this1+6;
  IHEAP[$m_proxies]=$22;
  $i=0;
  var $23=$i;
  var $24=$childCount;
  var $cmp1=($23) < ($24);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 3;; }
  $for_body_lr_ph$$for_end$33: do { 
    if (__label__ == 1) {

      var $m_proxies7=$this1+6;
      var $m_proxies8=$this1+6;
      ;
      $for_body$35: while(1) { 

        var $25=$i;
        var $26=IHEAP[$m_proxies7];
        var $arrayidx=$26+$25*7;
        var $fixture=$arrayidx+4;
        IHEAP[$fixture]=0;
        var $27=$i;
        var $28=IHEAP[$m_proxies8];
        var $arrayidx9=$28+$27*7;
        var $proxyId=$arrayidx9+6;
        IHEAP[$proxyId]=-1;
        var $29=$i;
        var $inc=($29)+1;
        $i=$inc;
        var $30=$i;
        var $31=$childCount;
        var $cmp=($30) < ($31);
        if (!($cmp)) { __label__ = 3;break $for_body_lr_ph$$for_end$33; }
      }
    }
  } while(0);

  var $m_proxyCount=$this1+7;
  IHEAP[$m_proxyCount]=0;
  var $32=$def_addr;
  var $density=$32+4;
  var $33=FHEAP[$density];
  var $m_density=$this1;
  FHEAP[$m_density]=$33;
  ;
  return;
  return;
}
__ZN9b2Fixture6CreateEP16b2BlockAllocatorP6b2BodyPK12b2FixtureDef["X"]=1;

function __ZN9b2Fixture7DestroyEP16b2BlockAllocator($this, $allocator) {
  ;
  var __label__;

  var $this_addr;
  var $allocator_addr;
  var $childCount;
  var $s;
  var $s8;
  var $s13;
  var $s18;
  $this_addr=$this;
  $allocator_addr=$allocator;
  var $this1=$this_addr;
  var $m_proxyCount=$this1+7;
  var $0=IHEAP[$m_proxyCount];
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$39: do { 
    if (__label__ == 1) {

      ___assert_func(__str164, 72, ___PRETTY_FUNCTION____ZN9b2Fixture7DestroyEP16b2BlockAllocator, __str1165);
      ;
    }
  } while(0);

  var $m_shape=$this1+3;
  var $1=IHEAP[$m_shape];
  var $2=$1;
  var $vtable=IHEAP[$2];
  var $vfn=$vtable+3;
  var $3=IHEAP[$vfn];
  var $call=FUNCTION_TABLE[$3]($1);
  $childCount=$call;
  var $4=$allocator_addr;
  var $m_proxies=$this1+6;
  var $5=IHEAP[$m_proxies];
  var $6=$5;
  var $7=$childCount;
  var $mul=($7)*28;
  __ZN16b2BlockAllocator4FreeEPvi($4, $6, $mul);
  var $m_proxies2=$this1+6;
  IHEAP[$m_proxies2]=0;
  var $m_shape3=$this1+3;
  var $8=IHEAP[$m_shape3];
  var $m_type=$8+1;
  var $9=IHEAP[$m_type];
  if ($9 == 0) {
    __label__ = 3;;
  }
  else if ($9 == 1) {
    __label__ = 4;;
  }
  else if ($9 == 2) {
    __label__ = 5;;
  }
  else if ($9 == 3) {
    __label__ = 6;;
  }
  else {
  __label__ = 7;;
  }
  
  $sw_default$$sw_bb$$sw_bb7$$sw_bb12$$sw_bb17$42: do { 
    if (__label__ == 7) {

      ___assert_func(__str164, 115, ___PRETTY_FUNCTION____ZN9b2Fixture7DestroyEP16b2BlockAllocator, __str2368);
      ;
    }
    else if (__label__ == 3) {

      var $m_shape4=$this1+3;
      var $10=IHEAP[$m_shape4];
      var $11=$10;
      $s=$11;
      var $12=$s;
      var $13=$12;
      var $vtable5=IHEAP[$13];
      var $vfn6=$vtable5;
      var $14=IHEAP[$vfn6];
      FUNCTION_TABLE[$14]($12);
      var $15=$allocator_addr;
      var $16=$s;
      var $17=$16;
      __ZN16b2BlockAllocator4FreeEPvi($15, $17, 20);
      ;
    }
    else if (__label__ == 4) {

      var $m_shape9=$this1+3;
      var $18=IHEAP[$m_shape9];
      var $19=$18;
      $s8=$19;
      var $20=$s8;
      var $21=$20;
      var $vtable10=IHEAP[$21];
      var $vfn11=$vtable10;
      var $22=IHEAP[$vfn11];
      FUNCTION_TABLE[$22]($20);
      var $23=$allocator_addr;
      var $24=$s8;
      var $25=$24;
      __ZN16b2BlockAllocator4FreeEPvi($23, $25, 48);
      ;
    }
    else if (__label__ == 5) {

      var $m_shape14=$this1+3;
      var $26=IHEAP[$m_shape14];
      var $27=$26;
      $s13=$27;
      var $28=$s13;
      var $29=$28;
      var $vtable15=IHEAP[$29];
      var $vfn16=$vtable15;
      var $30=IHEAP[$vfn16];
      FUNCTION_TABLE[$30]($28);
      var $31=$allocator_addr;
      var $32=$s13;
      var $33=$32;
      __ZN16b2BlockAllocator4FreeEPvi($31, $33, 152);
      ;
    }
    else if (__label__ == 6) {

      var $m_shape19=$this1+3;
      var $34=IHEAP[$m_shape19];
      var $35=$34;
      $s18=$35;
      var $36=$s18;
      var $37=$36;
      var $vtable20=IHEAP[$37];
      var $vfn21=$vtable20;
      var $38=IHEAP[$vfn21];
      FUNCTION_TABLE[$38]($36);
      var $39=$allocator_addr;
      var $40=$s18;
      var $41=$40;
      __ZN16b2BlockAllocator4FreeEPvi($39, $41, 40);
      ;
    }
  } while(0);

  var $m_shape22=$this1+3;
  IHEAP[$m_shape22]=0;
  ;
  return;
  return;
}
__ZN9b2Fixture7DestroyEP16b2BlockAllocator["X"]=1;

function __ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform($this, $broadPhase, $xf) {
  ;
  var __label__;

  var $this_addr;
  var $broadPhase_addr;
  var $xf_addr;
  var $i;
  var $proxy;
  $this_addr=$this;
  $broadPhase_addr=$broadPhase;
  $xf_addr=$xf;
  var $this1=$this_addr;
  var $m_proxyCount=$this1+7;
  var $0=IHEAP[$m_proxyCount];
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$50: do { 
    if (__label__ == 1) {

      ___assert_func(__str164, 124, ___PRETTY_FUNCTION____ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform, __str1165);
      ;
    }
  } while(0);

  var $m_shape=$this1+3;
  var $1=IHEAP[$m_shape];
  var $2=$1;
  var $vtable=IHEAP[$2];
  var $vfn=$vtable+3;
  var $3=IHEAP[$vfn];
  var $call=FUNCTION_TABLE[$3]($1);
  var $m_proxyCount2=$this1+7;
  IHEAP[$m_proxyCount2]=$call;
  $i=0;
  var $4=$i;
  var $m_proxyCount3=$this1+7;
  var $5=IHEAP[$m_proxyCount3];
  var $cmp41=($4) < ($5);
  if ($cmp41) { __label__ = 3;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end$53: do { 
    if (__label__ == 3) {

      var $m_proxies=$this1+6;
      var $m_shape5=$this1+3;
      ;
      $for_body$55: while(1) { 

        var $6=IHEAP[$m_proxies];
        var $7=$i;
        var $add_ptr=$6+$7*7;
        $proxy=$add_ptr;
        var $8=IHEAP[$m_shape5];
        var $9=$8;
        var $vtable6=IHEAP[$9];
        var $vfn7=$vtable6+6;
        var $10=IHEAP[$vfn7];
        var $11=$proxy;
        var $aabb=$11;
        var $12=$xf_addr;
        var $13=$i;
        FUNCTION_TABLE[$10]($8, $aabb, $12, $13);
        var $14=$broadPhase_addr;
        var $15=$proxy;
        var $aabb8=$15;
        var $16=$proxy;
        var $17=$16;
        var $call9=__ZN12b2BroadPhase11CreateProxyERK6b2AABBPv($14, $aabb8, $17);
        var $18=$proxy;
        var $proxyId=$18+6;
        IHEAP[$proxyId]=$call9;
        var $19=$proxy;
        var $fixture=$19+4;
        IHEAP[$fixture]=$this1;
        var $20=$i;
        var $21=$proxy;
        var $childIndex=$21+5;
        IHEAP[$childIndex]=$20;
        var $22=$i;
        var $inc=($22)+1;
        $i=$inc;
        var $23=$i;
        var $24=IHEAP[$m_proxyCount3];
        var $cmp4=($23) < ($24);
        if (!($cmp4)) { __label__ = 5;break $for_body_lr_ph$$for_end$53; }
      }
    }
  } while(0);

  ;
  return;
  return;
}
__ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform["X"]=1;

function __ZN9b2Fixture8RefilterEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $edge;
  var $contact;
  var $fixtureA;
  var $fixtureB;
  var $world;
  var $broadPhase;
  var $i;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_body=$this1+2;
  var $0=IHEAP[$m_body];
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 10;; } else { __label__ = 1;; }
  $for_end$$if_end$73: do { 
    if (__label__ == 1) {

      var $m_body2=$this1+2;
      var $1=IHEAP[$m_body2];
      var $call=__ZN6b2Body14GetContactListEv($1);
      $edge=$call;
      var $tobool2=($call)!=0;
      if ($tobool2) { __label__ = 2;; } else { __label__ = 6;; }
      $while_body$$while_end$75: do { 
        if (__label__ == 2) {
          $while_body$76: while(1) { 

            var $2=$edge;
            var $contact3=$2+1;
            var $3=IHEAP[$contact3];
            $contact=$3;
            var $4=$contact;
            var $call4=__ZN9b2Contact11GetFixtureAEv($4);
            $fixtureA=$call4;
            var $5=$contact;
            var $call5=__ZN9b2Contact11GetFixtureBEv($5);
            $fixtureB=$call5;
            var $6=$fixtureA;
            var $cmp6=($6)==($this1);
            if ($cmp6) { __label__ = 4;; } else { __label__ = 3;; }
            $if_then8$$lor_lhs_false$78: do { 
              if (__label__ == 3) {

                var $7=$fixtureB;
                var $cmp7=($7)==($this1);
                if ($cmp7) { __label__ = 4;break $if_then8$$lor_lhs_false$78; } else { __label__ = 5;break $if_then8$$lor_lhs_false$78; }
              }
            } while(0);
            $if_then8$$if_end9$80: do { 
              if (__label__ == 4) {

                var $8=$contact;
                __ZN9b2Contact16FlagForFilteringEv($8);
                ;
              }
            } while(0);

            var $9=$edge;
            var $next=$9+3;
            var $10=IHEAP[$next];
            $edge=$10;
            var $tobool=($10)!=0;
            if (!($tobool)) { __label__ = 6;break $while_body$$while_end$75; }
          }
        }
      } while(0);

      var $m_body10=$this1+2;
      var $11=IHEAP[$m_body10];
      var $call11=__ZN6b2Body8GetWorldEv($11);
      $world=$call11;
      var $cmp12=($call11)==0;
      if ($cmp12) { __label__ = 10;break $for_end$$if_end$73; }

      var $12=$world;
      var $m_contactManager=$12+102518;
      var $m_broadPhase=$m_contactManager;
      $broadPhase=$m_broadPhase;
      $i=0;
      var $13=$i;
      var $m_proxyCount=$this1+7;
      var $14=IHEAP[$m_proxyCount];
      var $cmp151=($13) < ($14);
      if (!($cmp151)) { __label__ = 10;break $for_end$$if_end$73; }

      var $m_proxies=$this1+6;
      ;
      $for_body$86: while(1) { 

        var $15=$broadPhase;
        var $16=$i;
        var $17=IHEAP[$m_proxies];
        var $arrayidx=$17+$16*7;
        var $proxyId=$arrayidx+6;
        var $18=IHEAP[$proxyId];
        __ZN12b2BroadPhase10TouchProxyEi($15, $18);
        var $19=$i;
        var $inc=($19)+1;
        $i=$inc;
        var $20=$i;
        var $21=IHEAP[$m_proxyCount];
        var $cmp15=($20) < ($21);
        if (!($cmp15)) { __label__ = 10;break $for_end$$if_end$73; }
      }
    }
  } while(0);

  ;
  return;
  return;
}
__ZN9b2Fixture8RefilterEv["X"]=1;

function __ZN9b2Fixture9SetSensorEb($this, $sensor) {
  ;
  var __label__;

  var $this_addr;
  var $sensor_addr;
  $this_addr=$this;
  var $frombool=($sensor);
  $sensor_addr=$frombool;
  var $this1=$this_addr;
  var $0=$sensor_addr;
  var $tobool=((($0)) & 1);
  var $conv=($tobool);
  var $m_isSensor=$this1+11;
  var $1=IHEAP[$m_isSensor];
  var $tobool2=((($1)) & 1);
  var $conv3=($tobool2);
  var $cmp=($conv)!=($conv3);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$2: do { 
    if (__label__ == 1) {

      var $m_body=$this1+2;
      var $2=IHEAP[$m_body];
      __ZN6b2Body8SetAwakeEb($2, 1);
      var $3=$sensor_addr;
      var $tobool4=((($3)) & 1);
      var $m_isSensor5=$this1+11;
      var $frombool6=($tobool4);
      IHEAP[$m_isSensor5]=$frombool6;
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN9b2Fixture4DumpEi($this, $bodyIndex) {
  ;
  var __label__;

  var $this_addr;
  var $bodyIndex_addr;
  var $s;
  var $s16;
  var $s45;
  var $i;
  var $s55;
  var $i57;
  $this_addr=$this;
  $bodyIndex_addr=$bodyIndex;
  var $this1=$this_addr;
  __Z5b2LogPKcz(__str3167, allocate(1, "i32", ALLOC_STACK));
  var $m_friction=$this1+4;
  var $0=FHEAP[$m_friction];
  var $conv=($0);
  __Z5b2LogPKcz(__str4168, allocate([$conv], "double", ALLOC_STACK));
  var $m_restitution=$this1+5;
  var $1=FHEAP[$m_restitution];
  var $conv2=($1);
  __Z5b2LogPKcz(__str5169, allocate([$conv2], "double", ALLOC_STACK));
  var $m_density=$this1;
  var $2=FHEAP[$m_density];
  var $conv3=($2);
  __Z5b2LogPKcz(__str6170, allocate([$conv3], "double", ALLOC_STACK));
  var $m_isSensor=$this1+11;
  var $3=IHEAP[$m_isSensor];
  var $tobool=((($3)) & 1);
  var $conv4=($tobool);
  __Z5b2LogPKcz(__str7171, allocate([$conv4], "i32", ALLOC_STACK));
  var $m_filter=$this1+8;
  var $categoryBits=$m_filter;
  var $4=IHEAP[$categoryBits];
  var $conv5=($4);
  __Z5b2LogPKcz(__str8172, allocate([$conv5], "i32", ALLOC_STACK));
  var $m_filter6=$this1+8;
  var $maskBits=$m_filter6+1;
  var $5=IHEAP[$maskBits];
  var $conv7=($5);
  __Z5b2LogPKcz(__str9173, allocate([$conv7], "i32", ALLOC_STACK));
  var $m_filter8=$this1+8;
  var $groupIndex=$m_filter8+2;
  var $6=IHEAP[$groupIndex];
  var $conv9=($6);
  __Z5b2LogPKcz(__str10174, allocate([$conv9], "i32", ALLOC_STACK));
  var $m_shape=$this1+3;
  var $7=IHEAP[$m_shape];
  var $m_type=$7+1;
  var $8=IHEAP[$m_type];
  if ($8 == 0) {
    __label__ = 1;;
  }
  else if ($8 == 1) {
    __label__ = 2;;
  }
  else if ($8 == 2) {
    __label__ = 3;;
  }
  else if ($8 == 3) {
    __label__ = 6;;
  }
  else {
  __label__ = 10;;
  }
  
  $return$$sw_bb$$sw_bb15$$sw_bb44$$sw_bb54$6: do { 
    if (__label__ == 1) {

      var $m_shape10=$this1+3;
      var $9=IHEAP[$m_shape10];
      var $10=$9;
      $s=$10;
      __Z5b2LogPKcz(__str11175, allocate(1, "i32", ALLOC_STACK));
      var $11=$s;
      var $12=$11;
      var $m_radius=$12+2;
      var $13=FHEAP[$m_radius];
      var $conv11=($13);
      __Z5b2LogPKcz(__str12176, allocate([$conv11], "double", ALLOC_STACK));
      var $14=$s;
      var $m_p=$14+3;
      var $x=$m_p;
      var $15=FHEAP[$x];
      var $conv12=($15);
      var $16=$s;
      var $m_p13=$16+3;
      var $y=$m_p13+1;
      var $17=FHEAP[$y];
      var $conv14=($17);
      __Z5b2LogPKcz(__str13177, allocate([$conv12,$conv14], "double", ALLOC_STACK));
      __label__ = 9;break $return$$sw_bb$$sw_bb15$$sw_bb44$$sw_bb54$6;
    }
    else if (__label__ == 2) {

      var $m_shape17=$this1+3;
      var $18=IHEAP[$m_shape17];
      var $19=$18;
      $s16=$19;
      __Z5b2LogPKcz(__str14178, allocate(1, "i32", ALLOC_STACK));
      var $20=$s16;
      var $21=$20;
      var $m_radius18=$21+2;
      var $22=FHEAP[$m_radius18];
      var $conv19=($22);
      __Z5b2LogPKcz(__str12176, allocate([$conv19], "double", ALLOC_STACK));
      var $23=$s16;
      var $m_vertex0=$23+7;
      var $x20=$m_vertex0;
      var $24=FHEAP[$x20];
      var $conv21=($24);
      var $25=$s16;
      var $m_vertex022=$25+7;
      var $y23=$m_vertex022+1;
      var $26=FHEAP[$y23];
      var $conv24=($26);
      __Z5b2LogPKcz(__str15179, allocate([$conv21,$conv24], "double", ALLOC_STACK));
      var $27=$s16;
      var $m_vertex1=$27+3;
      var $x25=$m_vertex1;
      var $28=FHEAP[$x25];
      var $conv26=($28);
      var $29=$s16;
      var $m_vertex127=$29+3;
      var $y28=$m_vertex127+1;
      var $30=FHEAP[$y28];
      var $conv29=($30);
      __Z5b2LogPKcz(__str16180, allocate([$conv26,$conv29], "double", ALLOC_STACK));
      var $31=$s16;
      var $m_vertex2=$31+5;
      var $x30=$m_vertex2;
      var $32=FHEAP[$x30];
      var $conv31=($32);
      var $33=$s16;
      var $m_vertex232=$33+5;
      var $y33=$m_vertex232+1;
      var $34=FHEAP[$y33];
      var $conv34=($34);
      __Z5b2LogPKcz(__str17181, allocate([$conv31,$conv34], "double", ALLOC_STACK));
      var $35=$s16;
      var $m_vertex3=$35+9;
      var $x35=$m_vertex3;
      var $36=FHEAP[$x35];
      var $conv36=($36);
      var $37=$s16;
      var $m_vertex337=$37+9;
      var $y38=$m_vertex337+1;
      var $38=FHEAP[$y38];
      var $conv39=($38);
      __Z5b2LogPKcz(__str18182, allocate([$conv36,$conv39], "double", ALLOC_STACK));
      var $39=$s16;
      var $m_hasVertex0=$39+11;
      var $40=IHEAP[$m_hasVertex0];
      var $tobool40=((($40)) & 1);
      var $conv41=($tobool40);
      __Z5b2LogPKcz(__str19183, allocate([$conv41], "i32", ALLOC_STACK));
      var $41=$s16;
      var $m_hasVertex3=$41+12;
      var $42=IHEAP[$m_hasVertex3];
      var $tobool42=((($42)) & 1);
      var $conv43=($tobool42);
      __Z5b2LogPKcz(__str20184, allocate([$conv43], "i32", ALLOC_STACK));
      __label__ = 9;break $return$$sw_bb$$sw_bb15$$sw_bb44$$sw_bb54$6;
    }
    else if (__label__ == 3) {

      var $m_shape46=$this1+3;
      var $43=IHEAP[$m_shape46];
      var $44=$43;
      $s45=$44;
      __Z5b2LogPKcz(__str21185, allocate(1, "i32", ALLOC_STACK));
      __Z5b2LogPKcz(__str22186, allocate([8], "i32", ALLOC_STACK));
      $i=0;
      var $45=$i;
      var $46=$s45;
      var $m_vertexCount3=$46+37;
      var $47=IHEAP[$m_vertexCount3];
      var $cmp4=($45) < ($47);
      if ($cmp4) { __label__ = 4;; } else { __label__ = 5;; }
      $for_body$$for_end$10: do { 
        if (__label__ == 4) {
          $for_body$11: while(1) { 

            var $48=$i;
            var $49=$i;
            var $50=$s45;
            var $m_vertices=$50+5;
            var $arrayidx=$m_vertices+($49<<1);
            var $x47=$arrayidx;
            var $51=FHEAP[$x47];
            var $conv48=($51);
            var $52=$i;
            var $53=$s45;
            var $m_vertices49=$53+5;
            var $arrayidx50=$m_vertices49+($52<<1);
            var $y51=$arrayidx50+1;
            var $54=FHEAP[$y51];
            var $conv52=($54);
            __Z5b2LogPKcz(__str23187, allocate([$48,$conv48,$conv52], ["i32","double","double"], ALLOC_STACK));
            var $55=$i;
            var $inc=($55)+1;
            $i=$inc;
            var $56=$i;
            var $57=$s45;
            var $m_vertexCount=$57+37;
            var $58=IHEAP[$m_vertexCount];
            var $cmp=($56) < ($58);
            if (!($cmp)) { __label__ = 5;break $for_body$$for_end$10; }
          }
        }
      } while(0);

      var $59=$s45;
      var $m_vertexCount53=$59+37;
      var $60=IHEAP[$m_vertexCount53];
      __Z5b2LogPKcz(__str24188, allocate([$60], "i32", ALLOC_STACK));
      __label__ = 9;break $return$$sw_bb$$sw_bb15$$sw_bb44$$sw_bb54$6;
    }
    else if (__label__ == 6) {

      var $m_shape56=$this1+3;
      var $61=IHEAP[$m_shape56];
      var $62=$61;
      $s55=$62;
      __Z5b2LogPKcz(__str25189, allocate(1, "i32", ALLOC_STACK));
      var $63=$s55;
      var $m_count=$63+4;
      var $64=IHEAP[$m_count];
      __Z5b2LogPKcz(__str22186, allocate([$64], "i32", ALLOC_STACK));
      $i57=0;
      var $65=$i57;
      var $66=$s55;
      var $m_count591=$66+4;
      var $67=IHEAP[$m_count591];
      var $cmp602=($65) < ($67);
      if ($cmp602) { __label__ = 7;; } else { __label__ = 8;; }
      $for_body61$$for_end72$15: do { 
        if (__label__ == 7) {
          $for_body61$16: while(1) { 

            var $68=$i57;
            var $69=$i57;
            var $70=$s55;
            var $m_vertices62=$70+3;
            var $71=IHEAP[$m_vertices62];
            var $arrayidx63=$71+($69<<1);
            var $x64=$arrayidx63;
            var $72=FHEAP[$x64];
            var $conv65=($72);
            var $73=$i57;
            var $74=$s55;
            var $m_vertices66=$74+3;
            var $75=IHEAP[$m_vertices66];
            var $arrayidx67=$75+($73<<1);
            var $y68=$arrayidx67+1;
            var $76=FHEAP[$y68];
            var $conv69=($76);
            __Z5b2LogPKcz(__str23187, allocate([$68,$conv65,$conv69], ["i32","double","double"], ALLOC_STACK));
            var $77=$i57;
            var $inc71=($77)+1;
            $i57=$inc71;
            var $78=$i57;
            var $79=$s55;
            var $m_count59=$79+4;
            var $80=IHEAP[$m_count59];
            var $cmp60=($78) < ($80);
            if (!($cmp60)) { __label__ = 8;break $for_body61$$for_end72$15; }
          }
        }
      } while(0);

      var $81=$s55;
      var $m_count73=$81+4;
      var $82=IHEAP[$m_count73];
      __Z5b2LogPKcz(__str26190, allocate([$82], "i32", ALLOC_STACK));
      var $83=$s55;
      var $m_prevVertex=$83+5;
      var $x74=$m_prevVertex;
      var $84=FHEAP[$x74];
      var $conv75=($84);
      var $85=$s55;
      var $m_prevVertex76=$85+5;
      var $y77=$m_prevVertex76+1;
      var $86=FHEAP[$y77];
      var $conv78=($86);
      __Z5b2LogPKcz(__str27191, allocate([$conv75,$conv78], "double", ALLOC_STACK));
      var $87=$s55;
      var $m_nextVertex=$87+7;
      var $x79=$m_nextVertex;
      var $88=FHEAP[$x79];
      var $conv80=($88);
      var $89=$s55;
      var $m_nextVertex81=$89+7;
      var $y82=$m_nextVertex81+1;
      var $90=FHEAP[$y82];
      var $conv83=($90);
      __Z5b2LogPKcz(__str28192, allocate([$conv80,$conv83], "double", ALLOC_STACK));
      var $91=$s55;
      var $m_hasPrevVertex=$91+9;
      var $92=IHEAP[$m_hasPrevVertex];
      var $tobool84=((($92)) & 1);
      var $conv85=($tobool84);
      __Z5b2LogPKcz(__str29193, allocate([$conv85], "i32", ALLOC_STACK));
      var $93=$s55;
      var $m_hasNextVertex=$93+10;
      var $94=IHEAP[$m_hasNextVertex];
      var $tobool86=((($94)) & 1);
      var $conv87=($tobool86);
      __Z5b2LogPKcz(__str30194, allocate([$conv87], "i32", ALLOC_STACK));
      __label__ = 9;break $return$$sw_bb$$sw_bb15$$sw_bb44$$sw_bb54$6;
    }
  } while(0);
  $return$$sw_epilog$19: do { 
    if (__label__ == 9) {

      __Z5b2LogPKcz(__str31195, allocate(1, "i32", ALLOC_STACK));
      __Z5b2LogPKcz(__str32196, allocate(1, "i32", ALLOC_STACK));
      __Z5b2LogPKcz(__str31195, allocate(1, "i32", ALLOC_STACK));
      var $95=$bodyIndex_addr;
      __Z5b2LogPKcz(__str33197, allocate([$95], "i32", ALLOC_STACK));
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN9b2Fixture4DumpEi["X"]=1;

function __ZN18b2FrictionJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($this, $bA, $bB, $anchor) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $bA_addr;
  var $bB_addr;
  var $anchor_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp3=__stackBase__+2;
  $this_addr=$this;
  $bA_addr=$bA;
  $bB_addr=$bB;
  $anchor_addr=$anchor;
  var $this1=$this_addr;
  var $0=$bA_addr;
  var $1=$this1;
  var $bodyA=$1+2;
  IHEAP[$bodyA]=$0;
  var $2=$bB_addr;
  var $3=$this1;
  var $bodyB=$3+3;
  IHEAP[$bodyB]=$2;
  var $localAnchorA=$this1+5;
  var $4=$this1;
  var $bodyA2=$4+2;
  var $5=IHEAP[$bodyA2];
  var $6=$anchor_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp, $5, $6);
  var $7=$localAnchorA;
  var $8=$ref_tmp;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
  var $localAnchorB=$this1+7;
  var $9=$this1;
  var $bodyB4=$9+3;
  var $10=IHEAP[$bodyB4];
  var $11=$anchor_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp3, $10, $11);
  var $12=$localAnchorB;
  var $13=$ref_tmp3;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN15b2FrictionJointC2EPK18b2FrictionJointDef($this, $def) {
  ;
  var __label__;

  var $this_addr;
  var $def_addr;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$def_addr;
  var $2=$1;
  __ZN7b2JointC2EPK10b2JointDef($0, $2);
  var $3=$this1;
  IHEAP[$3]=__ZTV15b2FrictionJoint+2;
  var $m_localAnchorA=$this1+18;
  __ZN6b2Vec2C1Ev($m_localAnchorA);
  var $m_localAnchorB=$this1+20;
  __ZN6b2Vec2C1Ev($m_localAnchorB);
  var $m_linearImpulse=$this1+22;
  __ZN6b2Vec2C1Ev($m_linearImpulse);
  var $m_rA=$this1+29;
  __ZN6b2Vec2C1Ev($m_rA);
  var $m_rB=$this1+31;
  __ZN6b2Vec2C1Ev($m_rB);
  var $m_localCenterA=$this1+33;
  __ZN6b2Vec2C1Ev($m_localCenterA);
  var $m_localCenterB=$this1+35;
  __ZN6b2Vec2C1Ev($m_localCenterB);
  var $m_linearMass=$this1+41;
  __ZN7b2Mat22C1Ev($m_linearMass);
  var $m_localAnchorA9=$this1+18;
  var $4=$def_addr;
  var $localAnchorA=$4+5;
  var $5=$m_localAnchorA9;
  var $6=$localAnchorA;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_localAnchorB10=$this1+20;
  var $7=$def_addr;
  var $localAnchorB=$7+7;
  var $8=$m_localAnchorB10;
  var $9=$localAnchorB;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_linearImpulse11=$this1+22;
  __ZN6b2Vec27SetZeroEv($m_linearImpulse11);
  var $m_angularImpulse=$this1+24;
  FHEAP[$m_angularImpulse]=0;
  var $10=$def_addr;
  var $maxForce=$10+9;
  var $11=FHEAP[$maxForce];
  var $m_maxForce=$this1+25;
  FHEAP[$m_maxForce]=$11;
  var $12=$def_addr;
  var $maxTorque=$12+10;
  var $13=FHEAP[$maxTorque];
  var $m_maxTorque=$this1+26;
  FHEAP[$m_maxTorque]=$13;
  ;
  return;
  return;
}
__ZN15b2FrictionJointC2EPK18b2FrictionJointDef["X"]=1;

function __ZN15b2FrictionJoint23InitVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 30;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $aA;
  var $vA=__stackBase__;
  var $wA;
  var $aB;
  var $vB=__stackBase__+2;
  var $wB;
  var $qA=__stackBase__+4;
  var $qB=__stackBase__+6;
  var $ref_tmp=__stackBase__+8;
  var $ref_tmp31=__stackBase__+10;
  var $ref_tmp33=__stackBase__+12;
  var $ref_tmp34=__stackBase__+14;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $K=__stackBase__+16;
  var $ref_tmp87=__stackBase__+20;
  var $P=__stackBase__+24;
  var $ref_tmp101=__stackBase__+26;
  var $ref_tmp107=__stackBase__+28;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  var $m_indexA=$this1+27;
  IHEAP[$m_indexA]=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  var $m_indexB=$this1+28;
  IHEAP[$m_indexB]=$5;
  var $m_localCenterA=$this1+33;
  var $6=$this1;
  var $m_bodyA3=$6+12;
  var $7=IHEAP[$m_bodyA3];
  var $m_sweep=$7+7;
  var $localCenter=$m_sweep;
  var $8=$m_localCenterA;
  var $9=$localCenter;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localCenterB=$this1+35;
  var $10=$this1;
  var $m_bodyB4=$10+13;
  var $11=IHEAP[$m_bodyB4];
  var $m_sweep5=$11+7;
  var $localCenter6=$m_sweep5;
  var $12=$m_localCenterB;
  var $13=$localCenter6;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$this1;
  var $m_bodyA7=$14+12;
  var $15=IHEAP[$m_bodyA7];
  var $m_invMass=$15+30;
  var $16=FHEAP[$m_invMass];
  var $m_invMassA=$this1+37;
  FHEAP[$m_invMassA]=$16;
  var $17=$this1;
  var $m_bodyB8=$17+13;
  var $18=IHEAP[$m_bodyB8];
  var $m_invMass9=$18+30;
  var $19=FHEAP[$m_invMass9];
  var $m_invMassB=$this1+38;
  FHEAP[$m_invMassB]=$19;
  var $20=$this1;
  var $m_bodyA10=$20+12;
  var $21=IHEAP[$m_bodyA10];
  var $m_invI=$21+32;
  var $22=FHEAP[$m_invI];
  var $m_invIA=$this1+39;
  FHEAP[$m_invIA]=$22;
  var $23=$this1;
  var $m_bodyB11=$23+13;
  var $24=IHEAP[$m_bodyB11];
  var $m_invI12=$24+32;
  var $25=FHEAP[$m_invI12];
  var $m_invIB=$this1+40;
  FHEAP[$m_invIB]=$25;
  var $m_indexA13=$this1+27;
  var $26=IHEAP[$m_indexA13];
  var $27=$data_addr;
  var $positions=$27+6;
  var $28=IHEAP[$positions];
  var $arrayidx=$28+$26*3;
  var $a=$arrayidx+2;
  var $29=FHEAP[$a];
  $aA=$29;
  var $m_indexA14=$this1+27;
  var $30=IHEAP[$m_indexA14];
  var $31=$data_addr;
  var $velocities=$31+7;
  var $32=IHEAP[$velocities];
  var $arrayidx15=$32+$30*3;
  var $v=$arrayidx15;
  var $33=$vA;
  var $34=$v;
  IHEAP[$33]=IHEAP[$34]; FHEAP[$33]=FHEAP[$34]; ; IHEAP[$33+1]=IHEAP[$34+1]; FHEAP[$33+1]=FHEAP[$34+1]; ;
  var $m_indexA16=$this1+27;
  var $35=IHEAP[$m_indexA16];
  var $36=$data_addr;
  var $velocities17=$36+7;
  var $37=IHEAP[$velocities17];
  var $arrayidx18=$37+$35*3;
  var $w=$arrayidx18+2;
  var $38=FHEAP[$w];
  $wA=$38;
  var $m_indexB19=$this1+28;
  var $39=IHEAP[$m_indexB19];
  var $40=$data_addr;
  var $positions20=$40+6;
  var $41=IHEAP[$positions20];
  var $arrayidx21=$41+$39*3;
  var $a22=$arrayidx21+2;
  var $42=FHEAP[$a22];
  $aB=$42;
  var $m_indexB23=$this1+28;
  var $43=IHEAP[$m_indexB23];
  var $44=$data_addr;
  var $velocities24=$44+7;
  var $45=IHEAP[$velocities24];
  var $arrayidx25=$45+$43*3;
  var $v26=$arrayidx25;
  var $46=$vB;
  var $47=$v26;
  IHEAP[$46]=IHEAP[$47]; FHEAP[$46]=FHEAP[$47]; ; IHEAP[$46+1]=IHEAP[$47+1]; FHEAP[$46+1]=FHEAP[$47+1]; ;
  var $m_indexB27=$this1+28;
  var $48=IHEAP[$m_indexB27];
  var $49=$data_addr;
  var $velocities28=$49+7;
  var $50=IHEAP[$velocities28];
  var $arrayidx29=$50+$48*3;
  var $w30=$arrayidx29+2;
  var $51=FHEAP[$w30];
  $wB=$51;
  var $52=$aA;
  __ZN5b2RotC1Ef($qA, $52);
  var $53=$aB;
  __ZN5b2RotC1Ef($qB, $53);
  var $m_rA=$this1+29;
  var $m_localAnchorA=$this1+18;
  var $m_localCenterA32=$this1+33;
  __ZmiRK6b2Vec2S1_($ref_tmp31, $m_localAnchorA, $m_localCenterA32);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $qA, $ref_tmp31);
  var $54=$m_rA;
  var $55=$ref_tmp;
  IHEAP[$54]=IHEAP[$55]; FHEAP[$54]=FHEAP[$55]; ; IHEAP[$54+1]=IHEAP[$55+1]; FHEAP[$54+1]=FHEAP[$55+1]; ;
  var $m_rB=$this1+31;
  var $m_localAnchorB=$this1+20;
  var $m_localCenterB35=$this1+35;
  __ZmiRK6b2Vec2S1_($ref_tmp34, $m_localAnchorB, $m_localCenterB35);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp33, $qB, $ref_tmp34);
  var $56=$m_rB;
  var $57=$ref_tmp33;
  IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
  var $m_invMassA36=$this1+37;
  var $58=FHEAP[$m_invMassA36];
  $mA=$58;
  var $m_invMassB37=$this1+38;
  var $59=FHEAP[$m_invMassB37];
  $mB=$59;
  var $m_invIA38=$this1+39;
  var $60=FHEAP[$m_invIA38];
  $iA=$60;
  var $m_invIB39=$this1+40;
  var $61=FHEAP[$m_invIB39];
  $iB=$61;
  __ZN7b2Mat22C1Ev($K);
  var $62=$mA;
  var $63=$mB;
  var $add=($62)+($63);
  var $64=$iA;
  var $m_rA40=$this1+29;
  var $y=$m_rA40+1;
  var $65=FHEAP[$y];
  var $mul=($64)*($65);
  var $m_rA41=$this1+29;
  var $y42=$m_rA41+1;
  var $66=FHEAP[$y42];
  var $mul43=($mul)*($66);
  var $add44=($add)+($mul43);
  var $67=$iB;
  var $m_rB45=$this1+31;
  var $y46=$m_rB45+1;
  var $68=FHEAP[$y46];
  var $mul47=($67)*($68);
  var $m_rB48=$this1+31;
  var $y49=$m_rB48+1;
  var $69=FHEAP[$y49];
  var $mul50=($mul47)*($69);
  var $add51=($add44)+($mul50);
  var $ex=$K;
  var $x=$ex;
  FHEAP[$x]=$add51;
  var $70=$iA;
  var $sub=(-($70));
  var $m_rA52=$this1+29;
  var $x53=$m_rA52;
  var $71=FHEAP[$x53];
  var $mul54=($sub)*($71);
  var $m_rA55=$this1+29;
  var $y56=$m_rA55+1;
  var $72=FHEAP[$y56];
  var $mul57=($mul54)*($72);
  var $73=$iB;
  var $m_rB58=$this1+31;
  var $x59=$m_rB58;
  var $74=FHEAP[$x59];
  var $mul60=($73)*($74);
  var $m_rB61=$this1+31;
  var $y62=$m_rB61+1;
  var $75=FHEAP[$y62];
  var $mul63=($mul60)*($75);
  var $sub64=($mul57)-($mul63);
  var $ex65=$K;
  var $y66=$ex65+1;
  FHEAP[$y66]=$sub64;
  var $ex67=$K;
  var $y68=$ex67+1;
  var $76=FHEAP[$y68];
  var $ey=$K+2;
  var $x69=$ey;
  FHEAP[$x69]=$76;
  var $77=$mA;
  var $78=$mB;
  var $add70=($77)+($78);
  var $79=$iA;
  var $m_rA71=$this1+29;
  var $x72=$m_rA71;
  var $80=FHEAP[$x72];
  var $mul73=($79)*($80);
  var $m_rA74=$this1+29;
  var $x75=$m_rA74;
  var $81=FHEAP[$x75];
  var $mul76=($mul73)*($81);
  var $add77=($add70)+($mul76);
  var $82=$iB;
  var $m_rB78=$this1+31;
  var $x79=$m_rB78;
  var $83=FHEAP[$x79];
  var $mul80=($82)*($83);
  var $m_rB81=$this1+31;
  var $x82=$m_rB81;
  var $84=FHEAP[$x82];
  var $mul83=($mul80)*($84);
  var $add84=($add77)+($mul83);
  var $ey85=$K+2;
  var $y86=$ey85+1;
  FHEAP[$y86]=$add84;
  var $m_linearMass=$this1+41;
  __ZNK7b2Mat2210GetInverseEv($ref_tmp87, $K);
  var $85=$m_linearMass;
  var $86=$ref_tmp87;
  IHEAP[$85]=IHEAP[$86]; FHEAP[$85]=FHEAP[$86]; ; IHEAP[$85+1]=IHEAP[$86+1]; FHEAP[$85+1]=FHEAP[$86+1]; ; IHEAP[$85+2]=IHEAP[$86+2]; FHEAP[$85+2]=FHEAP[$86+2]; ; IHEAP[$85+3]=IHEAP[$86+3]; FHEAP[$85+3]=FHEAP[$86+3]; ;
  var $87=$iA;
  var $88=$iB;
  var $add88=($87)+($88);
  var $m_angularMass=$this1+45;
  FHEAP[$m_angularMass]=$add88;
  var $m_angularMass89=$this1+45;
  var $89=FHEAP[$m_angularMass89];
  var $cmp=($89) > 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$25: do { 
    if (__label__ == 1) {

      var $m_angularMass90=$this1+45;
      var $90=FHEAP[$m_angularMass90];
      var $div=1/($90);
      var $m_angularMass91=$this1+45;
      FHEAP[$m_angularMass91]=$div;
      ;
    }
  } while(0);

  var $91=$data_addr;
  var $step=$91;
  var $warmStarting=$step+5;
  var $92=IHEAP[$warmStarting];
  var $tobool=((($92)) & 1);
  var $m_linearImpulse=$this1+22;
  if ($tobool) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then92$$if_else$28: do { 
    if (__label__ == 3) {

      var $93=$data_addr;
      var $step93=$93;
      var $dtRatio=$step93+2;
      var $94=FHEAP[$dtRatio];
      __ZN6b2Vec2mLEf($m_linearImpulse, $94);
      var $95=$data_addr;
      var $step94=$95;
      var $dtRatio95=$step94+2;
      var $96=FHEAP[$dtRatio95];
      var $m_angularImpulse=$this1+24;
      var $97=FHEAP[$m_angularImpulse];
      var $mul96=($97)*($96);
      FHEAP[$m_angularImpulse]=$mul96;
      var $m_linearImpulse97=$this1+22;
      var $x98=$m_linearImpulse97;
      var $98=FHEAP[$x98];
      var $m_linearImpulse99=$this1+22;
      var $y100=$m_linearImpulse99+1;
      var $99=FHEAP[$y100];
      __ZN6b2Vec2C1Eff($P, $98, $99);
      var $100=$mA;
      __ZmlfRK6b2Vec2($ref_tmp101, $100, $P);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp101);
      var $101=$iA;
      var $m_rA102=$this1+29;
      var $call=__Z7b2CrossRK6b2Vec2S1_($m_rA102, $P);
      var $m_angularImpulse103=$this1+24;
      var $102=FHEAP[$m_angularImpulse103];
      var $add104=($call)+($102);
      var $mul105=($101)*($add104);
      var $103=$wA;
      var $sub106=($103)-($mul105);
      $wA=$sub106;
      var $104=$mB;
      __ZmlfRK6b2Vec2($ref_tmp107, $104, $P);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp107);
      var $105=$iB;
      var $m_rB108=$this1+31;
      var $call109=__Z7b2CrossRK6b2Vec2S1_($m_rB108, $P);
      var $m_angularImpulse110=$this1+24;
      var $106=FHEAP[$m_angularImpulse110];
      var $add111=($call109)+($106);
      var $mul112=($105)*($add111);
      var $107=$wB;
      var $add113=($107)+($mul112);
      $wB=$add113;
      ;
    }
    else if (__label__ == 4) {

      __ZN6b2Vec27SetZeroEv($m_linearImpulse);
      var $m_angularImpulse115=$this1+24;
      FHEAP[$m_angularImpulse115]=0;
      ;
    }
  } while(0);

  var $m_indexA117=$this1+27;
  var $108=IHEAP[$m_indexA117];
  var $109=$data_addr;
  var $velocities118=$109+7;
  var $110=IHEAP[$velocities118];
  var $arrayidx119=$110+$108*3;
  var $v120=$arrayidx119;
  var $111=$v120;
  var $112=$vA;
  IHEAP[$111]=IHEAP[$112]; FHEAP[$111]=FHEAP[$112]; ; IHEAP[$111+1]=IHEAP[$112+1]; FHEAP[$111+1]=FHEAP[$112+1]; ;
  var $113=$wA;
  var $m_indexA121=$this1+27;
  var $114=IHEAP[$m_indexA121];
  var $115=$data_addr;
  var $velocities122=$115+7;
  var $116=IHEAP[$velocities122];
  var $arrayidx123=$116+$114*3;
  var $w124=$arrayidx123+2;
  FHEAP[$w124]=$113;
  var $m_indexB125=$this1+28;
  var $117=IHEAP[$m_indexB125];
  var $118=$data_addr;
  var $velocities126=$118+7;
  var $119=IHEAP[$velocities126];
  var $arrayidx127=$119+$117*3;
  var $v128=$arrayidx127;
  var $120=$v128;
  var $121=$vB;
  IHEAP[$120]=IHEAP[$121]; FHEAP[$120]=FHEAP[$121]; ; IHEAP[$120+1]=IHEAP[$121+1]; FHEAP[$120+1]=FHEAP[$121+1]; ;
  var $122=$wB;
  var $m_indexB129=$this1+28;
  var $123=IHEAP[$m_indexB129];
  var $124=$data_addr;
  var $velocities130=$124+7;
  var $125=IHEAP[$velocities130];
  var $arrayidx131=$125+$123*3;
  var $w132=$arrayidx131+2;
  FHEAP[$w132]=$122;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2FrictionJoint23InitVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN15b2FrictionJoint24SolvePositionConstraintsERK12b2SolverData($this, $data) {
  ;
  var __label__;

  ;
  return 1;
  return null;
}


function __ZN15b2FrictionJointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2FrictionJointD2Ev($this1);
  ;
  return;
  return;
}


function __ZN15b2FrictionJointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2FrictionJointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN15b2FrictionJointD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2JointD2Ev($0);
  ;
  return;
  return;
}


function __ZNK15b2FrictionJoint10GetAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+18;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorA);
  ;
  return;
  return;
}


function __ZNK15b2FrictionJoint10GetAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+20;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorB);
  ;
  return;
  return;
}


function __ZNK15b2FrictionJoint16GetReactionForceEf($agg_result, $this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_linearImpulse=$this1+22;
  __ZmlfRK6b2Vec2($agg_result, $0, $m_linearImpulse);
  ;
  return;
  return;
}


function __ZNK15b2FrictionJoint17GetReactionTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_angularImpulse=$this1+24;
  var $1=FHEAP[$m_angularImpulse];
  var $mul=($0)*($1);
  ;
  return $mul;
  return null;
}


function __ZNK15b2FrictionJoint11GetMaxForceEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_maxForce=$this1+25;
  var $0=FHEAP[$m_maxForce];
  ;
  return $0;
  return null;
}


function __ZNK15b2FrictionJoint12GetMaxTorqueEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_maxTorque=$this1+26;
  var $0=FHEAP[$m_maxTorque];
  ;
  return $0;
  return null;
}


function __ZN15b2FrictionJoint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $indexA;
  var $indexB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  $indexA=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  $indexB=$5;
  __Z5b2LogPKcz(__str3217, allocate(1, "i32", ALLOC_STACK));
  var $6=$indexA;
  __Z5b2LogPKcz(__str1392, allocate([$6], "i32", ALLOC_STACK));
  var $7=$indexB;
  __Z5b2LogPKcz(__str2393, allocate([$7], "i32", ALLOC_STACK));
  var $8=$this1;
  var $m_collideConnected=$8+16;
  var $9=IHEAP[$m_collideConnected];
  var $tobool=((($9)) & 1);
  var $conv=($tobool);
  __Z5b2LogPKcz(__str3394, allocate([$conv], "i32", ALLOC_STACK));
  var $m_localAnchorA=$this1+18;
  var $x=$m_localAnchorA;
  var $10=FHEAP[$x];
  var $conv3=($10);
  var $m_localAnchorA4=$this1+18;
  var $y=$m_localAnchorA4+1;
  var $11=FHEAP[$y];
  var $conv5=($11);
  __Z5b2LogPKcz(__str4395, allocate([$conv3,$conv5], "double", ALLOC_STACK));
  var $m_localAnchorB=$this1+20;
  var $x6=$m_localAnchorB;
  var $12=FHEAP[$x6];
  var $conv7=($12);
  var $m_localAnchorB8=$this1+20;
  var $y9=$m_localAnchorB8+1;
  var $13=FHEAP[$y9];
  var $conv10=($13);
  __Z5b2LogPKcz(__str5396, allocate([$conv7,$conv10], "double", ALLOC_STACK));
  var $m_maxForce=$this1+25;
  var $14=FHEAP[$m_maxForce];
  var $conv11=($14);
  __Z5b2LogPKcz(__str9223, allocate([$conv11], "double", ALLOC_STACK));
  var $m_maxTorque=$this1+26;
  var $15=FHEAP[$m_maxTorque];
  var $conv12=($15);
  __Z5b2LogPKcz(__str10224, allocate([$conv12], "double", ALLOC_STACK));
  var $16=$this1;
  var $m_index=$16+14;
  var $17=IHEAP[$m_index];
  __Z5b2LogPKcz(__str12403, allocate([$17], "i32", ALLOC_STACK));
  ;
  return;
  return;
}
__ZN15b2FrictionJoint4DumpEv["X"]=1;

function __ZNK7b2Joint7GetTypeEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_type=$this1+1;
  var $0=IHEAP[$m_type];
  ;
  return $0;
  return null;
}


function __ZN7b2Joint8GetBodyAEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_bodyA=$this1+12;
  var $0=IHEAP[$m_bodyA];
  ;
  return $0;
  return null;
}


function __ZN7b2Joint8GetBodyBEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_bodyB=$this1+13;
  var $0=IHEAP[$m_bodyB];
  ;
  return $0;
  return null;
}


function __ZN15b2FrictionJoint24SolveVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 26;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $h;
  var $Cdot;
  var $impulse;
  var $oldImpulse;
  var $maxImpulse;
  var $Cdot23=__stackBase__+4;
  var $ref_tmp=__stackBase__+6;
  var $ref_tmp24=__stackBase__+8;
  var $ref_tmp25=__stackBase__+10;
  var $ref_tmp26=__stackBase__+12;
  var $impulse27=__stackBase__+14;
  var $tmp=__stackBase__+16;
  var $oldImpulse29=__stackBase__+18;
  var $maxImpulse32;
  var $ref_tmp40=__stackBase__+20;
  var $ref_tmp42=__stackBase__+22;
  var $ref_tmp47=__stackBase__+24;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+27;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $velocities=$1+7;
  var $2=IHEAP[$velocities];
  var $arrayidx=$2+$0*3;
  var $v=$arrayidx;
  var $3=$vA;
  var $4=$v;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+27;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $velocities3=$6+7;
  var $7=IHEAP[$velocities3];
  var $arrayidx4=$7+$5*3;
  var $w=$arrayidx4+2;
  var $8=FHEAP[$w];
  $wA=$8;
  var $m_indexB=$this1+28;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $velocities5=$10+7;
  var $11=IHEAP[$velocities5];
  var $arrayidx6=$11+$9*3;
  var $v7=$arrayidx6;
  var $12=$vB;
  var $13=$v7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+28;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $velocities9=$15+7;
  var $16=IHEAP[$velocities9];
  var $arrayidx10=$16+$14*3;
  var $w11=$arrayidx10+2;
  var $17=FHEAP[$w11];
  $wB=$17;
  var $m_invMassA=$this1+37;
  var $18=FHEAP[$m_invMassA];
  $mA=$18;
  var $m_invMassB=$this1+38;
  var $19=FHEAP[$m_invMassB];
  $mB=$19;
  var $m_invIA=$this1+39;
  var $20=FHEAP[$m_invIA];
  $iA=$20;
  var $m_invIB=$this1+40;
  var $21=FHEAP[$m_invIB];
  $iB=$21;
  var $22=$data_addr;
  var $step=$22;
  var $dt=$step;
  var $23=FHEAP[$dt];
  $h=$23;
  var $24=$wB;
  var $25=$wA;
  var $sub=($24)-($25);
  $Cdot=$sub;
  var $m_angularMass=$this1+45;
  var $26=FHEAP[$m_angularMass];
  var $sub12=(-($26));
  var $27=$Cdot;
  var $mul=($sub12)*($27);
  $impulse=$mul;
  var $m_angularImpulse=$this1+24;
  var $28=FHEAP[$m_angularImpulse];
  $oldImpulse=$28;
  var $29=$h;
  var $m_maxTorque=$this1+26;
  var $30=FHEAP[$m_maxTorque];
  var $mul13=($29)*($30);
  $maxImpulse=$mul13;
  var $m_angularImpulse14=$this1+24;
  var $31=FHEAP[$m_angularImpulse14];
  var $32=$impulse;
  var $add=($31)+($32);
  var $33=$maxImpulse;
  var $sub15=(-($33));
  var $34=$maxImpulse;
  var $call=__Z7b2ClampIfET_S0_S0_S0_($add, $sub15, $34);
  var $m_angularImpulse16=$this1+24;
  FHEAP[$m_angularImpulse16]=$call;
  var $m_angularImpulse17=$this1+24;
  var $35=FHEAP[$m_angularImpulse17];
  var $36=$oldImpulse;
  var $sub18=($35)-($36);
  $impulse=$sub18;
  var $37=$iA;
  var $38=$impulse;
  var $mul19=($37)*($38);
  var $39=$wA;
  var $sub20=($39)-($mul19);
  $wA=$sub20;
  var $40=$iB;
  var $41=$impulse;
  var $mul21=($40)*($41);
  var $42=$wB;
  var $add22=($42)+($mul21);
  $wB=$add22;
  var $43=$wB;
  var $m_rB=$this1+31;
  __Z7b2CrossfRK6b2Vec2($ref_tmp25, $43, $m_rB);
  __ZplRK6b2Vec2S1_($ref_tmp24, $vB, $ref_tmp25);
  __ZmiRK6b2Vec2S1_($ref_tmp, $ref_tmp24, $vA);
  var $44=$wA;
  var $m_rA=$this1+29;
  __Z7b2CrossfRK6b2Vec2($ref_tmp26, $44, $m_rA);
  __ZmiRK6b2Vec2S1_($Cdot23, $ref_tmp, $ref_tmp26);
  var $m_linearMass=$this1+41;
  __Z5b2MulRK7b2Mat22RK6b2Vec2($tmp, $m_linearMass, $Cdot23);
  __ZNK6b2Vec2ngEv($impulse27, $tmp);
  var $m_linearImpulse=$this1+22;
  var $45=$oldImpulse29;
  var $46=$m_linearImpulse;
  IHEAP[$45]=IHEAP[$46]; FHEAP[$45]=FHEAP[$46]; ; IHEAP[$45+1]=IHEAP[$46+1]; FHEAP[$45+1]=FHEAP[$46+1]; ;
  var $m_linearImpulse30=$this1+22;
  __ZN6b2Vec2pLERKS_($m_linearImpulse30, $impulse27);
  var $47=$h;
  var $m_maxForce=$this1+25;
  var $48=FHEAP[$m_maxForce];
  var $mul33=($47)*($48);
  $maxImpulse32=$mul33;
  var $m_linearImpulse34=$this1+22;
  var $call35=__ZNK6b2Vec213LengthSquaredEv($m_linearImpulse34);
  var $49=$maxImpulse32;
  var $50=$maxImpulse32;
  var $mul36=($49)*($50);
  var $cmp=($call35) > ($mul36);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$2: do { 
    if (__label__ == 1) {

      var $m_linearImpulse37=$this1+22;
      var $call38=__ZN6b2Vec29NormalizeEv($m_linearImpulse37);
      var $m_linearImpulse39=$this1+22;
      var $51=$maxImpulse32;
      __ZN6b2Vec2mLEf($m_linearImpulse39, $51);
      ;
    }
  } while(0);

  var $m_linearImpulse41=$this1+22;
  __ZmiRK6b2Vec2S1_($ref_tmp40, $m_linearImpulse41, $oldImpulse29);
  var $52=$impulse27;
  var $53=$ref_tmp40;
  IHEAP[$52]=IHEAP[$53]; FHEAP[$52]=FHEAP[$53]; ; IHEAP[$52+1]=IHEAP[$53+1]; FHEAP[$52+1]=FHEAP[$53+1]; ;
  var $54=$mA;
  __ZmlfRK6b2Vec2($ref_tmp42, $54, $impulse27);
  __ZN6b2Vec2mIERKS_($vA, $ref_tmp42);
  var $55=$iA;
  var $m_rA43=$this1+29;
  var $call44=__Z7b2CrossRK6b2Vec2S1_($m_rA43, $impulse27);
  var $mul45=($55)*($call44);
  var $56=$wA;
  var $sub46=($56)-($mul45);
  $wA=$sub46;
  var $57=$mB;
  __ZmlfRK6b2Vec2($ref_tmp47, $57, $impulse27);
  __ZN6b2Vec2pLERKS_($vB, $ref_tmp47);
  var $58=$iB;
  var $m_rB48=$this1+31;
  var $call49=__Z7b2CrossRK6b2Vec2S1_($m_rB48, $impulse27);
  var $mul50=($58)*($call49);
  var $59=$wB;
  var $add51=($59)+($mul50);
  $wB=$add51;
  var $m_indexA52=$this1+27;
  var $60=IHEAP[$m_indexA52];
  var $61=$data_addr;
  var $velocities53=$61+7;
  var $62=IHEAP[$velocities53];
  var $arrayidx54=$62+$60*3;
  var $v55=$arrayidx54;
  var $63=$v55;
  var $64=$vA;
  IHEAP[$63]=IHEAP[$64]; FHEAP[$63]=FHEAP[$64]; ; IHEAP[$63+1]=IHEAP[$64+1]; FHEAP[$63+1]=FHEAP[$64+1]; ;
  var $65=$wA;
  var $m_indexA56=$this1+27;
  var $66=IHEAP[$m_indexA56];
  var $67=$data_addr;
  var $velocities57=$67+7;
  var $68=IHEAP[$velocities57];
  var $arrayidx58=$68+$66*3;
  var $w59=$arrayidx58+2;
  FHEAP[$w59]=$65;
  var $m_indexB60=$this1+28;
  var $69=IHEAP[$m_indexB60];
  var $70=$data_addr;
  var $velocities61=$70+7;
  var $71=IHEAP[$velocities61];
  var $arrayidx62=$71+$69*3;
  var $v63=$arrayidx62;
  var $72=$v63;
  var $73=$vB;
  IHEAP[$72]=IHEAP[$73]; FHEAP[$72]=FHEAP[$73]; ; IHEAP[$72+1]=IHEAP[$73+1]; FHEAP[$72+1]=FHEAP[$73+1]; ;
  var $74=$wB;
  var $m_indexB64=$this1+28;
  var $75=IHEAP[$m_indexB64];
  var $76=$data_addr;
  var $velocities65=$76+7;
  var $77=IHEAP[$velocities65];
  var $arrayidx66=$77+$75*3;
  var $w67=$arrayidx66+2;
  FHEAP[$w67]=$74;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2FrictionJoint24SolveVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN15b2FrictionJoint11SetMaxForceEf($this, $force) {
  ;
  var __label__;

  var $this_addr;
  var $force_addr;
  $this_addr=$this;
  $force_addr=$force;
  var $this1=$this_addr;
  var $0=$force_addr;
  var $call=__Z9b2IsValidf($0);
  var $1=$force_addr;
  var $cmp=($1) >= 0;
  var $or_cond=($call) & ($cmp);
  if ($or_cond) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$11: do { 
    if (__label__ == 1) {

      ___assert_func(__str214, 217, ___PRETTY_FUNCTION____ZN15b2FrictionJoint11SetMaxForceEf, __str1215);
      ;
    }
  } while(0);

  var $2=$force_addr;
  var $m_maxForce=$this1+25;
  FHEAP[$m_maxForce]=$2;
  ;
  return;
  return;
}


function __ZN15b2FrictionJoint12SetMaxTorqueEf($this, $torque) {
  ;
  var __label__;

  var $this_addr;
  var $torque_addr;
  $this_addr=$this;
  $torque_addr=$torque;
  var $this1=$this_addr;
  var $0=$torque_addr;
  var $call=__Z9b2IsValidf($0);
  var $1=$torque_addr;
  var $cmp=($1) >= 0;
  var $or_cond=($call) & ($cmp);
  if ($or_cond) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$16: do { 
    if (__label__ == 1) {

      ___assert_func(__str214, 228, ___PRETTY_FUNCTION____ZN15b2FrictionJoint12SetMaxTorqueEf, __str2216);
      ;
    }
  } while(0);

  var $2=$torque_addr;
  var $m_maxTorque=$this1+26;
  FHEAP[$m_maxTorque]=$2;
  ;
  return;
  return;
}


function __ZN11b2GearJointC2EPK14b2GearJointDef($this, $def) {
  var __stackBase__  = STACKTOP; STACKTOP += 40;
  var __label__;

  var $this_addr;
  var $def_addr;
  var $exn_slot;
  var $ehselector_slot;
  var $coordinateA;
  var $coordinateB;
  var $xfA=__stackBase__;
  var $aA;
  var $xfC=__stackBase__+4;
  var $aC;
  var $revolute;
  var $prismatic;
  var $pC=__stackBase__+8;
  var $pA=__stackBase__+10;
  var $ref_tmp=__stackBase__+12;
  var $ref_tmp64=__stackBase__+14;
  var $ref_tmp68=__stackBase__+16;
  var $ref_tmp73=__stackBase__+18;
  var $xfB=__stackBase__+20;
  var $aB;
  var $xfD=__stackBase__+24;
  var $aD;
  var $revolute97;
  var $prismatic110;
  var $pD=__stackBase__+28;
  var $pB=__stackBase__+30;
  var $ref_tmp122=__stackBase__+32;
  var $ref_tmp123=__stackBase__+34;
  var $ref_tmp127=__stackBase__+36;
  var $ref_tmp133=__stackBase__+38;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$def_addr;
  var $2=$1;
  __ZN7b2JointC2EPK10b2JointDef($0, $2);
  var $3=$this1;
  IHEAP[$3]=__ZTV11b2GearJoint+2;
  var $m_localAnchorA=$this1+24;
  __ZN6b2Vec2C1Ev($m_localAnchorA);
  var $m_localAnchorB=$this1+26;
  __ZN6b2Vec2C1Ev($m_localAnchorB);
  var $m_localAnchorC=$this1+28;
  __ZN6b2Vec2C1Ev($m_localAnchorC);
  var $m_localAnchorD=$this1+30;
  __ZN6b2Vec2C1Ev($m_localAnchorD);
  var $m_localAxisC=$this1+32;
  __ZN6b2Vec2C1Ev($m_localAxisC);
  var $m_localAxisD=$this1+34;
  __ZN6b2Vec2C1Ev($m_localAxisD);
  var $m_lcA=$this1+45;
  __ZN6b2Vec2C1Ev($m_lcA);
  var $m_lcB=$this1+47;
  __ZN6b2Vec2C1Ev($m_lcB);
  var $m_lcC=$this1+49;
  __ZN6b2Vec2C1Ev($m_lcC);
  var $m_lcD=$this1+51;
  __ZN6b2Vec2C1Ev($m_lcD);
  var $m_JvAC=$this1+61;
  __ZN6b2Vec2C1Ev($m_JvAC);
  var $m_JvBD=$this1+63;
  __ZN6b2Vec2C1Ev($m_JvBD);
  var $4=$def_addr;
  var $joint1=$4+5;
  var $5=IHEAP[$joint1];
  var $m_joint1=$this1+18;
  IHEAP[$m_joint1]=$5;
  var $6=$def_addr;
  var $joint2=$6+6;
  var $7=IHEAP[$joint2];
  var $m_joint2=$this1+19;
  IHEAP[$m_joint2]=$7;
  var $m_joint113=$this1+18;
  var $8=IHEAP[$m_joint113];
  var $call=__ZNK7b2Joint7GetTypeEv($8);
  var $m_typeA=$this1+20;
  IHEAP[$m_typeA]=$call;
  var $m_joint215=$this1+19;
  var $9=IHEAP[$m_joint215];
  var $call17=__ZNK7b2Joint7GetTypeEv($9);
  var $m_typeB=$this1+21;
  IHEAP[$m_typeB]=$call17;
  var $m_typeA18=$this1+20;
  var $10=IHEAP[$m_typeA18];
  var $cmp=($10)==1;
  if ($cmp) { __label__ = 3;; } else { __label__ = 1;; }
  $cond_end$$lor_lhs_false$25: do { 
    if (__label__ == 1) {

      var $m_typeA19=$this1+20;
      var $11=IHEAP[$m_typeA19];
      var $cmp20=($11)==2;
      if ($cmp20) { __label__ = 3;break $cond_end$$lor_lhs_false$25; }

      ___assert_func(__str226, 53, ___PRETTY_FUNCTION____ZN11b2GearJointC2EPK14b2GearJointDef, __str1227);
      ;
    }
  } while(0);

  var $m_typeB22=$this1+21;
  var $12=IHEAP[$m_typeB22];
  var $cmp23=($12)==1;
  if ($cmp23) { __label__ = 6;; } else { __label__ = 4;; }
  $cond_end30$$lor_lhs_false24$29: do { 
    if (__label__ == 4) {

      var $m_typeB25=$this1+21;
      var $13=IHEAP[$m_typeB25];
      var $cmp26=($13)==2;
      if ($cmp26) { __label__ = 6;break $cond_end30$$lor_lhs_false24$29; }

      ___assert_func(__str226, 54, ___PRETTY_FUNCTION____ZN11b2GearJointC2EPK14b2GearJointDef, __str2228);
      ;
    }
  } while(0);

  var $m_joint131=$this1+18;
  var $14=IHEAP[$m_joint131];
  var $call33=__ZN7b2Joint8GetBodyAEv($14);
  var $m_bodyC=$this1+22;
  IHEAP[$m_bodyC]=$call33;
  var $m_joint134=$this1+18;
  var $15=IHEAP[$m_joint134];
  var $call36=__ZN7b2Joint8GetBodyBEv($15);
  var $16=$this1;
  var $m_bodyA=$16+12;
  IHEAP[$m_bodyA]=$call36;
  var $17=$this1;
  var $m_bodyA37=$17+12;
  var $18=IHEAP[$m_bodyA37];
  var $m_xf=$18+3;
  var $19=$xfA;
  var $20=$m_xf;
  IHEAP[$19]=IHEAP[$20]; FHEAP[$19]=FHEAP[$20]; ; IHEAP[$19+1]=IHEAP[$20+1]; FHEAP[$19+1]=FHEAP[$20+1]; ; IHEAP[$19+2]=IHEAP[$20+2]; FHEAP[$19+2]=FHEAP[$20+2]; ; IHEAP[$19+3]=IHEAP[$20+3]; FHEAP[$19+3]=FHEAP[$20+3]; ;
  var $21=$this1;
  var $m_bodyA38=$21+12;
  var $22=IHEAP[$m_bodyA38];
  var $m_sweep=$22+7;
  var $a=$m_sweep+7;
  var $23=FHEAP[$a];
  $aA=$23;
  var $m_bodyC39=$this1+22;
  var $24=IHEAP[$m_bodyC39];
  var $m_xf40=$24+3;
  var $25=$xfC;
  var $26=$m_xf40;
  IHEAP[$25]=IHEAP[$26]; FHEAP[$25]=FHEAP[$26]; ; IHEAP[$25+1]=IHEAP[$26+1]; FHEAP[$25+1]=FHEAP[$26+1]; ; IHEAP[$25+2]=IHEAP[$26+2]; FHEAP[$25+2]=FHEAP[$26+2]; ; IHEAP[$25+3]=IHEAP[$26+3]; FHEAP[$25+3]=FHEAP[$26+3]; ;
  var $m_bodyC41=$this1+22;
  var $27=IHEAP[$m_bodyC41];
  var $m_sweep42=$27+7;
  var $a43=$m_sweep42+7;
  var $28=FHEAP[$a43];
  $aC=$28;
  var $m_typeA44=$this1+20;
  var $29=IHEAP[$m_typeA44];
  var $cmp45=($29)==1;
  var $30=$def_addr;
  var $joint146=$30+5;
  var $31=IHEAP[$joint146];
  if ($cmp45) { __label__ = 7;; } else { __label__ = 9;; }
  $if_then$$invoke_cont71$33: do { 
    if (__label__ == 7) {

      var $32=$31;
      $revolute=$32;
      var $m_localAnchorC47=$this1+28;
      var $33=$revolute;
      var $m_localAnchorA48=$33+18;
      var $34=$m_localAnchorC47;
      var $35=$m_localAnchorA48;
      IHEAP[$34]=IHEAP[$35]; FHEAP[$34]=FHEAP[$35]; ; IHEAP[$34+1]=IHEAP[$35+1]; FHEAP[$34+1]=FHEAP[$35+1]; ;
      var $m_localAnchorA49=$this1+24;
      var $36=$revolute;
      var $m_localAnchorB50=$36+20;
      var $37=$m_localAnchorA49;
      var $38=$m_localAnchorB50;
      IHEAP[$37]=IHEAP[$38]; FHEAP[$37]=FHEAP[$38]; ; IHEAP[$37+1]=IHEAP[$38+1]; FHEAP[$37+1]=FHEAP[$38+1]; ;
      var $39=$revolute;
      var $m_referenceAngle=$39+30;
      var $40=FHEAP[$m_referenceAngle];
      var $m_referenceAngleA=$this1+36;
      FHEAP[$m_referenceAngleA]=$40;
      var $m_localAxisC51=$this1+32;
      __ZN6b2Vec27SetZeroEv($m_localAxisC51);
      var $41=$aA;
      var $42=$aC;
      var $sub=($41)-($42);
      var $m_referenceAngleA53=$this1+36;
      var $43=FHEAP[$m_referenceAngleA53];
      var $sub54=($sub)-($43);
      $coordinateA=$sub54;
      ;
    }
    else if (__label__ == 9) {

      var $48=$31;
      $prismatic=$48;
      var $m_localAnchorC56=$this1+28;
      var $49=$prismatic;
      var $m_localAnchorA57=$49+18;
      var $50=$m_localAnchorC56;
      var $51=$m_localAnchorA57;
      IHEAP[$50]=IHEAP[$51]; FHEAP[$50]=FHEAP[$51]; ; IHEAP[$50+1]=IHEAP[$51+1]; FHEAP[$50+1]=FHEAP[$51+1]; ;
      var $m_localAnchorA58=$this1+24;
      var $52=$prismatic;
      var $m_localAnchorB59=$52+20;
      var $53=$m_localAnchorA58;
      var $54=$m_localAnchorB59;
      IHEAP[$53]=IHEAP[$54]; FHEAP[$53]=FHEAP[$54]; ; IHEAP[$53+1]=IHEAP[$54+1]; FHEAP[$53+1]=FHEAP[$54+1]; ;
      var $55=$prismatic;
      var $m_referenceAngle60=$55+26;
      var $56=FHEAP[$m_referenceAngle60];
      var $m_referenceAngleA61=$this1+36;
      FHEAP[$m_referenceAngleA61]=$56;
      var $m_localAxisC62=$this1+32;
      var $57=$prismatic;
      var $m_localXAxisA=$57+22;
      var $58=$m_localAxisC62;
      var $59=$m_localXAxisA;
      IHEAP[$58]=IHEAP[$59]; FHEAP[$58]=FHEAP[$59]; ; IHEAP[$58+1]=IHEAP[$59+1]; FHEAP[$58+1]=FHEAP[$59+1]; ;
      var $m_localAnchorC63=$this1+28;
      var $60=$pC;
      var $61=$m_localAnchorC63;
      IHEAP[$60]=IHEAP[$61]; FHEAP[$60]=FHEAP[$61]; ; IHEAP[$60+1]=IHEAP[$61+1]; FHEAP[$60+1]=FHEAP[$61+1]; ;
      var $q=$xfC+2;
      var $q65=$xfA+2;
      var $m_localAnchorA66=$this1+24;
      __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp64, $q65, $m_localAnchorA66);
      var $p=$xfA;
      var $p69=$xfC;
      __ZmiRK6b2Vec2S1_($ref_tmp68, $p, $p69);
      __ZplRK6b2Vec2S1_($ref_tmp, $ref_tmp64, $ref_tmp68);
      __Z6b2MulTRK5b2RotRK6b2Vec2($pA, $q, $ref_tmp);
      ;

      __ZmiRK6b2Vec2S1_($ref_tmp73, $pA, $pC);
      var $m_localAxisC75=$this1+32;
      var $call77=__Z5b2DotRK6b2Vec2S1_($ref_tmp73, $m_localAxisC75);
      $coordinateA=$call77;
      ;
    }
  } while(0);

  var $m_joint278=$this1+19;
  var $62=IHEAP[$m_joint278];
  var $call80=__ZN7b2Joint8GetBodyAEv($62);
  var $m_bodyD=$this1+23;
  IHEAP[$m_bodyD]=$call80;
  var $m_joint281=$this1+19;
  var $63=IHEAP[$m_joint281];
  var $call83=__ZN7b2Joint8GetBodyBEv($63);
  var $64=$this1;
  var $m_bodyB=$64+13;
  IHEAP[$m_bodyB]=$call83;
  var $65=$this1;
  var $m_bodyB84=$65+13;
  var $66=IHEAP[$m_bodyB84];
  var $m_xf85=$66+3;
  var $67=$xfB;
  var $68=$m_xf85;
  IHEAP[$67]=IHEAP[$68]; FHEAP[$67]=FHEAP[$68]; ; IHEAP[$67+1]=IHEAP[$68+1]; FHEAP[$67+1]=FHEAP[$68+1]; ; IHEAP[$67+2]=IHEAP[$68+2]; FHEAP[$67+2]=FHEAP[$68+2]; ; IHEAP[$67+3]=IHEAP[$68+3]; FHEAP[$67+3]=FHEAP[$68+3]; ;
  var $69=$this1;
  var $m_bodyB86=$69+13;
  var $70=IHEAP[$m_bodyB86];
  var $m_sweep87=$70+7;
  var $a88=$m_sweep87+7;
  var $71=FHEAP[$a88];
  $aB=$71;
  var $m_bodyD89=$this1+23;
  var $72=IHEAP[$m_bodyD89];
  var $m_xf90=$72+3;
  var $73=$xfD;
  var $74=$m_xf90;
  IHEAP[$73]=IHEAP[$74]; FHEAP[$73]=FHEAP[$74]; ; IHEAP[$73+1]=IHEAP[$74+1]; FHEAP[$73+1]=FHEAP[$74+1]; ; IHEAP[$73+2]=IHEAP[$74+2]; FHEAP[$73+2]=FHEAP[$74+2]; ; IHEAP[$73+3]=IHEAP[$74+3]; FHEAP[$73+3]=FHEAP[$74+3]; ;
  var $m_bodyD91=$this1+23;
  var $75=IHEAP[$m_bodyD91];
  var $m_sweep92=$75+7;
  var $a93=$m_sweep92+7;
  var $76=FHEAP[$a93];
  $aD=$76;
  var $m_typeB94=$this1+21;
  var $77=IHEAP[$m_typeB94];
  var $cmp95=($77)==1;
  var $78=$def_addr;
  var $joint298=$78+6;
  var $79=IHEAP[$joint298];
  if ($cmp95) { __label__ = 12;; } else { __label__ = 13;; }
  $if_then96$$invoke_cont131$38: do { 
    if (__label__ == 12) {

      var $80=$79;
      $revolute97=$80;
      var $m_localAnchorD99=$this1+30;
      var $81=$revolute97;
      var $m_localAnchorA100=$81+18;
      var $82=$m_localAnchorD99;
      var $83=$m_localAnchorA100;
      IHEAP[$82]=IHEAP[$83]; FHEAP[$82]=FHEAP[$83]; ; IHEAP[$82+1]=IHEAP[$83+1]; FHEAP[$82+1]=FHEAP[$83+1]; ;
      var $m_localAnchorB101=$this1+26;
      var $84=$revolute97;
      var $m_localAnchorB102=$84+20;
      var $85=$m_localAnchorB101;
      var $86=$m_localAnchorB102;
      IHEAP[$85]=IHEAP[$86]; FHEAP[$85]=FHEAP[$86]; ; IHEAP[$85+1]=IHEAP[$86+1]; FHEAP[$85+1]=FHEAP[$86+1]; ;
      var $87=$revolute97;
      var $m_referenceAngle103=$87+30;
      var $88=FHEAP[$m_referenceAngle103];
      var $m_referenceAngleB=$this1+37;
      FHEAP[$m_referenceAngleB]=$88;
      var $m_localAxisD104=$this1+34;
      __ZN6b2Vec27SetZeroEv($m_localAxisD104);
      var $89=$aB;
      var $90=$aD;
      var $sub106=($89)-($90);
      var $m_referenceAngleB107=$this1+37;
      var $91=FHEAP[$m_referenceAngleB107];
      var $sub108=($sub106)-($91);
      $coordinateB=$sub108;
      ;
    }
    else if (__label__ == 13) {

      var $92=$79;
      $prismatic110=$92;
      var $m_localAnchorD112=$this1+30;
      var $93=$prismatic110;
      var $m_localAnchorA113=$93+18;
      var $94=$m_localAnchorD112;
      var $95=$m_localAnchorA113;
      IHEAP[$94]=IHEAP[$95]; FHEAP[$94]=FHEAP[$95]; ; IHEAP[$94+1]=IHEAP[$95+1]; FHEAP[$94+1]=FHEAP[$95+1]; ;
      var $m_localAnchorB114=$this1+26;
      var $96=$prismatic110;
      var $m_localAnchorB115=$96+20;
      var $97=$m_localAnchorB114;
      var $98=$m_localAnchorB115;
      IHEAP[$97]=IHEAP[$98]; FHEAP[$97]=FHEAP[$98]; ; IHEAP[$97+1]=IHEAP[$98+1]; FHEAP[$97+1]=FHEAP[$98+1]; ;
      var $99=$prismatic110;
      var $m_referenceAngle116=$99+26;
      var $100=FHEAP[$m_referenceAngle116];
      var $m_referenceAngleB117=$this1+37;
      FHEAP[$m_referenceAngleB117]=$100;
      var $m_localAxisD118=$this1+34;
      var $101=$prismatic110;
      var $m_localXAxisA119=$101+22;
      var $102=$m_localAxisD118;
      var $103=$m_localXAxisA119;
      IHEAP[$102]=IHEAP[$103]; FHEAP[$102]=FHEAP[$103]; ; IHEAP[$102+1]=IHEAP[$103+1]; FHEAP[$102+1]=FHEAP[$103+1]; ;
      var $m_localAnchorD120=$this1+30;
      var $104=$pD;
      var $105=$m_localAnchorD120;
      IHEAP[$104]=IHEAP[$105]; FHEAP[$104]=FHEAP[$105]; ; IHEAP[$104+1]=IHEAP[$105+1]; FHEAP[$104+1]=FHEAP[$105+1]; ;
      var $q121=$xfD+2;
      var $q124=$xfB+2;
      var $m_localAnchorB125=$this1+26;
      __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp123, $q124, $m_localAnchorB125);
      var $p128=$xfB;
      var $p129=$xfD;
      __ZmiRK6b2Vec2S1_($ref_tmp127, $p128, $p129);
      __ZplRK6b2Vec2S1_($ref_tmp122, $ref_tmp123, $ref_tmp127);
      __Z6b2MulTRK5b2RotRK6b2Vec2($pB, $q121, $ref_tmp122);
      ;

      __ZmiRK6b2Vec2S1_($ref_tmp133, $pB, $pD);
      var $m_localAxisD135=$this1+34;
      var $call137=__Z5b2DotRK6b2Vec2S1_($ref_tmp133, $m_localAxisD135);
      $coordinateB=$call137;
      ;
    }
  } while(0);

  var $106=$def_addr;
  var $ratio=$106+7;
  var $107=FHEAP[$ratio];
  var $m_ratio=$this1+39;
  FHEAP[$m_ratio]=$107;
  var $108=$coordinateA;
  var $m_ratio139=$this1+39;
  var $109=FHEAP[$m_ratio139];
  var $110=$coordinateB;
  var $mul=($109)*($110);
  var $add=($108)+($mul);
  var $m_constant=$this1+38;
  FHEAP[$m_constant]=$add;
  var $m_impulse=$this1+40;
  FHEAP[$m_impulse]=0;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN11b2GearJointC2EPK14b2GearJointDef["X"]=1;

function __ZN11b2GearJoint23InitVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 54;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $vA=__stackBase__+2;
  var $wA;
  var $cB=__stackBase__+4;
  var $aB;
  var $vB=__stackBase__+6;
  var $wB;
  var $cC=__stackBase__+8;
  var $aC;
  var $vC=__stackBase__+10;
  var $wC;
  var $cD=__stackBase__+12;
  var $aD;
  var $vD=__stackBase__+14;
  var $wD;
  var $qA=__stackBase__+16;
  var $qB=__stackBase__+18;
  var $qC=__stackBase__+20;
  var $qD=__stackBase__+22;
  var $u=__stackBase__+24;
  var $rC=__stackBase__+26;
  var $ref_tmp=__stackBase__+28;
  var $rA=__stackBase__+30;
  var $ref_tmp91=__stackBase__+32;
  var $u126=__stackBase__+34;
  var $rD=__stackBase__+36;
  var $ref_tmp127=__stackBase__+38;
  var $rB=__stackBase__+40;
  var $ref_tmp129=__stackBase__+42;
  var $ref_tmp132=__stackBase__+44;
  var $ref_tmp169=__stackBase__+46;
  var $ref_tmp179=__stackBase__+48;
  var $ref_tmp190=__stackBase__+50;
  var $ref_tmp200=__stackBase__+52;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  var $m_indexA=$this1+41;
  IHEAP[$m_indexA]=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  var $m_indexB=$this1+42;
  IHEAP[$m_indexB]=$5;
  var $m_bodyC=$this1+22;
  var $6=IHEAP[$m_bodyC];
  var $m_islandIndex3=$6+2;
  var $7=IHEAP[$m_islandIndex3];
  var $m_indexC=$this1+43;
  IHEAP[$m_indexC]=$7;
  var $m_bodyD=$this1+23;
  var $8=IHEAP[$m_bodyD];
  var $m_islandIndex4=$8+2;
  var $9=IHEAP[$m_islandIndex4];
  var $m_indexD=$this1+44;
  IHEAP[$m_indexD]=$9;
  var $m_lcA=$this1+45;
  var $10=$this1;
  var $m_bodyA5=$10+12;
  var $11=IHEAP[$m_bodyA5];
  var $m_sweep=$11+7;
  var $localCenter=$m_sweep;
  var $12=$m_lcA;
  var $13=$localCenter;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_lcB=$this1+47;
  var $14=$this1;
  var $m_bodyB6=$14+13;
  var $15=IHEAP[$m_bodyB6];
  var $m_sweep7=$15+7;
  var $localCenter8=$m_sweep7;
  var $16=$m_lcB;
  var $17=$localCenter8;
  IHEAP[$16]=IHEAP[$17]; FHEAP[$16]=FHEAP[$17]; ; IHEAP[$16+1]=IHEAP[$17+1]; FHEAP[$16+1]=FHEAP[$17+1]; ;
  var $m_lcC=$this1+49;
  var $m_bodyC9=$this1+22;
  var $18=IHEAP[$m_bodyC9];
  var $m_sweep10=$18+7;
  var $localCenter11=$m_sweep10;
  var $19=$m_lcC;
  var $20=$localCenter11;
  IHEAP[$19]=IHEAP[$20]; FHEAP[$19]=FHEAP[$20]; ; IHEAP[$19+1]=IHEAP[$20+1]; FHEAP[$19+1]=FHEAP[$20+1]; ;
  var $m_lcD=$this1+51;
  var $m_bodyD12=$this1+23;
  var $21=IHEAP[$m_bodyD12];
  var $m_sweep13=$21+7;
  var $localCenter14=$m_sweep13;
  var $22=$m_lcD;
  var $23=$localCenter14;
  IHEAP[$22]=IHEAP[$23]; FHEAP[$22]=FHEAP[$23]; ; IHEAP[$22+1]=IHEAP[$23+1]; FHEAP[$22+1]=FHEAP[$23+1]; ;
  var $24=$this1;
  var $m_bodyA15=$24+12;
  var $25=IHEAP[$m_bodyA15];
  var $m_invMass=$25+30;
  var $26=FHEAP[$m_invMass];
  var $m_mA=$this1+53;
  FHEAP[$m_mA]=$26;
  var $27=$this1;
  var $m_bodyB16=$27+13;
  var $28=IHEAP[$m_bodyB16];
  var $m_invMass17=$28+30;
  var $29=FHEAP[$m_invMass17];
  var $m_mB=$this1+54;
  FHEAP[$m_mB]=$29;
  var $m_bodyC18=$this1+22;
  var $30=IHEAP[$m_bodyC18];
  var $m_invMass19=$30+30;
  var $31=FHEAP[$m_invMass19];
  var $m_mC=$this1+55;
  FHEAP[$m_mC]=$31;
  var $m_bodyD20=$this1+23;
  var $32=IHEAP[$m_bodyD20];
  var $m_invMass21=$32+30;
  var $33=FHEAP[$m_invMass21];
  var $m_mD=$this1+56;
  FHEAP[$m_mD]=$33;
  var $34=$this1;
  var $m_bodyA22=$34+12;
  var $35=IHEAP[$m_bodyA22];
  var $m_invI=$35+32;
  var $36=FHEAP[$m_invI];
  var $m_iA=$this1+57;
  FHEAP[$m_iA]=$36;
  var $37=$this1;
  var $m_bodyB23=$37+13;
  var $38=IHEAP[$m_bodyB23];
  var $m_invI24=$38+32;
  var $39=FHEAP[$m_invI24];
  var $m_iB=$this1+58;
  FHEAP[$m_iB]=$39;
  var $m_bodyC25=$this1+22;
  var $40=IHEAP[$m_bodyC25];
  var $m_invI26=$40+32;
  var $41=FHEAP[$m_invI26];
  var $m_iC=$this1+59;
  FHEAP[$m_iC]=$41;
  var $m_bodyD27=$this1+23;
  var $42=IHEAP[$m_bodyD27];
  var $m_invI28=$42+32;
  var $43=FHEAP[$m_invI28];
  var $m_iD=$this1+60;
  FHEAP[$m_iD]=$43;
  var $m_indexA29=$this1+41;
  var $44=IHEAP[$m_indexA29];
  var $45=$data_addr;
  var $positions=$45+6;
  var $46=IHEAP[$positions];
  var $arrayidx=$46+$44*3;
  var $c=$arrayidx;
  var $47=$cA;
  var $48=$c;
  IHEAP[$47]=IHEAP[$48]; FHEAP[$47]=FHEAP[$48]; ; IHEAP[$47+1]=IHEAP[$48+1]; FHEAP[$47+1]=FHEAP[$48+1]; ;
  var $m_indexA30=$this1+41;
  var $49=IHEAP[$m_indexA30];
  var $50=$data_addr;
  var $positions31=$50+6;
  var $51=IHEAP[$positions31];
  var $arrayidx32=$51+$49*3;
  var $a=$arrayidx32+2;
  var $52=FHEAP[$a];
  $aA=$52;
  var $m_indexA33=$this1+41;
  var $53=IHEAP[$m_indexA33];
  var $54=$data_addr;
  var $velocities=$54+7;
  var $55=IHEAP[$velocities];
  var $arrayidx34=$55+$53*3;
  var $v=$arrayidx34;
  var $56=$vA;
  var $57=$v;
  IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
  var $m_indexA35=$this1+41;
  var $58=IHEAP[$m_indexA35];
  var $59=$data_addr;
  var $velocities36=$59+7;
  var $60=IHEAP[$velocities36];
  var $arrayidx37=$60+$58*3;
  var $w=$arrayidx37+2;
  var $61=FHEAP[$w];
  $wA=$61;
  var $m_indexB38=$this1+42;
  var $62=IHEAP[$m_indexB38];
  var $63=$data_addr;
  var $positions39=$63+6;
  var $64=IHEAP[$positions39];
  var $arrayidx40=$64+$62*3;
  var $c41=$arrayidx40;
  var $65=$cB;
  var $66=$c41;
  IHEAP[$65]=IHEAP[$66]; FHEAP[$65]=FHEAP[$66]; ; IHEAP[$65+1]=IHEAP[$66+1]; FHEAP[$65+1]=FHEAP[$66+1]; ;
  var $m_indexB42=$this1+42;
  var $67=IHEAP[$m_indexB42];
  var $68=$data_addr;
  var $positions43=$68+6;
  var $69=IHEAP[$positions43];
  var $arrayidx44=$69+$67*3;
  var $a45=$arrayidx44+2;
  var $70=FHEAP[$a45];
  $aB=$70;
  var $m_indexB46=$this1+42;
  var $71=IHEAP[$m_indexB46];
  var $72=$data_addr;
  var $velocities47=$72+7;
  var $73=IHEAP[$velocities47];
  var $arrayidx48=$73+$71*3;
  var $v49=$arrayidx48;
  var $74=$vB;
  var $75=$v49;
  IHEAP[$74]=IHEAP[$75]; FHEAP[$74]=FHEAP[$75]; ; IHEAP[$74+1]=IHEAP[$75+1]; FHEAP[$74+1]=FHEAP[$75+1]; ;
  var $m_indexB50=$this1+42;
  var $76=IHEAP[$m_indexB50];
  var $77=$data_addr;
  var $velocities51=$77+7;
  var $78=IHEAP[$velocities51];
  var $arrayidx52=$78+$76*3;
  var $w53=$arrayidx52+2;
  var $79=FHEAP[$w53];
  $wB=$79;
  var $m_indexC54=$this1+43;
  var $80=IHEAP[$m_indexC54];
  var $81=$data_addr;
  var $positions55=$81+6;
  var $82=IHEAP[$positions55];
  var $arrayidx56=$82+$80*3;
  var $c57=$arrayidx56;
  var $83=$cC;
  var $84=$c57;
  IHEAP[$83]=IHEAP[$84]; FHEAP[$83]=FHEAP[$84]; ; IHEAP[$83+1]=IHEAP[$84+1]; FHEAP[$83+1]=FHEAP[$84+1]; ;
  var $m_indexC58=$this1+43;
  var $85=IHEAP[$m_indexC58];
  var $86=$data_addr;
  var $positions59=$86+6;
  var $87=IHEAP[$positions59];
  var $arrayidx60=$87+$85*3;
  var $a61=$arrayidx60+2;
  var $88=FHEAP[$a61];
  $aC=$88;
  var $m_indexC62=$this1+43;
  var $89=IHEAP[$m_indexC62];
  var $90=$data_addr;
  var $velocities63=$90+7;
  var $91=IHEAP[$velocities63];
  var $arrayidx64=$91+$89*3;
  var $v65=$arrayidx64;
  var $92=$vC;
  var $93=$v65;
  IHEAP[$92]=IHEAP[$93]; FHEAP[$92]=FHEAP[$93]; ; IHEAP[$92+1]=IHEAP[$93+1]; FHEAP[$92+1]=FHEAP[$93+1]; ;
  var $m_indexC66=$this1+43;
  var $94=IHEAP[$m_indexC66];
  var $95=$data_addr;
  var $velocities67=$95+7;
  var $96=IHEAP[$velocities67];
  var $arrayidx68=$96+$94*3;
  var $w69=$arrayidx68+2;
  var $97=FHEAP[$w69];
  $wC=$97;
  var $m_indexD70=$this1+44;
  var $98=IHEAP[$m_indexD70];
  var $99=$data_addr;
  var $positions71=$99+6;
  var $100=IHEAP[$positions71];
  var $arrayidx72=$100+$98*3;
  var $c73=$arrayidx72;
  var $101=$cD;
  var $102=$c73;
  IHEAP[$101]=IHEAP[$102]; FHEAP[$101]=FHEAP[$102]; ; IHEAP[$101+1]=IHEAP[$102+1]; FHEAP[$101+1]=FHEAP[$102+1]; ;
  var $m_indexD74=$this1+44;
  var $103=IHEAP[$m_indexD74];
  var $104=$data_addr;
  var $positions75=$104+6;
  var $105=IHEAP[$positions75];
  var $arrayidx76=$105+$103*3;
  var $a77=$arrayidx76+2;
  var $106=FHEAP[$a77];
  $aD=$106;
  var $m_indexD78=$this1+44;
  var $107=IHEAP[$m_indexD78];
  var $108=$data_addr;
  var $velocities79=$108+7;
  var $109=IHEAP[$velocities79];
  var $arrayidx80=$109+$107*3;
  var $v81=$arrayidx80;
  var $110=$vD;
  var $111=$v81;
  IHEAP[$110]=IHEAP[$111]; FHEAP[$110]=FHEAP[$111]; ; IHEAP[$110+1]=IHEAP[$111+1]; FHEAP[$110+1]=FHEAP[$111+1]; ;
  var $m_indexD82=$this1+44;
  var $112=IHEAP[$m_indexD82];
  var $113=$data_addr;
  var $velocities83=$113+7;
  var $114=IHEAP[$velocities83];
  var $arrayidx84=$114+$112*3;
  var $w85=$arrayidx84+2;
  var $115=FHEAP[$w85];
  $wD=$115;
  var $116=$aA;
  __ZN5b2RotC1Ef($qA, $116);
  var $117=$aB;
  __ZN5b2RotC1Ef($qB, $117);
  var $118=$aC;
  __ZN5b2RotC1Ef($qC, $118);
  var $119=$aD;
  __ZN5b2RotC1Ef($qD, $119);
  var $m_mass=$this1+69;
  FHEAP[$m_mass]=0;
  var $m_typeA=$this1+20;
  var $120=IHEAP[$m_typeA];
  var $cmp=($120)==1;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_else$2: do { 
    if (__label__ == 1) {

      var $m_JvAC=$this1+61;
      __ZN6b2Vec27SetZeroEv($m_JvAC);
      var $m_JwA=$this1+65;
      FHEAP[$m_JwA]=1;
      var $m_JwC=$this1+67;
      FHEAP[$m_JwC]=1;
      var $m_iA86=$this1+57;
      var $121=FHEAP[$m_iA86];
      var $m_iC87=$this1+59;
      var $122=FHEAP[$m_iC87];
      var $add=($121)+($122);
      var $m_mass88=$this1+69;
      var $123=FHEAP[$m_mass88];
      var $add89=($123)+($add);
      FHEAP[$m_mass88]=$add89;
      ;
    }
    else if (__label__ == 2) {

      var $m_localAxisC=$this1+32;
      __Z5b2MulRK5b2RotRK6b2Vec2($u, $qC, $m_localAxisC);
      var $m_localAnchorC=$this1+28;
      var $m_lcC90=$this1+49;
      __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorC, $m_lcC90);
      __Z5b2MulRK5b2RotRK6b2Vec2($rC, $qC, $ref_tmp);
      var $m_localAnchorA=$this1+24;
      var $m_lcA92=$this1+45;
      __ZmiRK6b2Vec2S1_($ref_tmp91, $m_localAnchorA, $m_lcA92);
      __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp91);
      var $m_JvAC93=$this1+61;
      var $124=$m_JvAC93;
      var $125=$u;
      IHEAP[$124]=IHEAP[$125]; FHEAP[$124]=FHEAP[$125]; ; IHEAP[$124+1]=IHEAP[$125+1]; FHEAP[$124+1]=FHEAP[$125+1]; ;
      var $call=__Z7b2CrossRK6b2Vec2S1_($rC, $u);
      var $m_JwC94=$this1+67;
      FHEAP[$m_JwC94]=$call;
      var $call95=__Z7b2CrossRK6b2Vec2S1_($rA, $u);
      var $m_JwA96=$this1+65;
      FHEAP[$m_JwA96]=$call95;
      var $m_mC97=$this1+55;
      var $126=FHEAP[$m_mC97];
      var $m_mA98=$this1+53;
      var $127=FHEAP[$m_mA98];
      var $add99=($126)+($127);
      var $m_iC100=$this1+59;
      var $128=FHEAP[$m_iC100];
      var $m_JwC101=$this1+67;
      var $129=FHEAP[$m_JwC101];
      var $mul=($128)*($129);
      var $m_JwC102=$this1+67;
      var $130=FHEAP[$m_JwC102];
      var $mul103=($mul)*($130);
      var $add104=($add99)+($mul103);
      var $m_iA105=$this1+57;
      var $131=FHEAP[$m_iA105];
      var $m_JwA106=$this1+65;
      var $132=FHEAP[$m_JwA106];
      var $mul107=($131)*($132);
      var $m_JwA108=$this1+65;
      var $133=FHEAP[$m_JwA108];
      var $mul109=($mul107)*($133);
      var $add110=($add104)+($mul109);
      var $m_mass111=$this1+69;
      var $134=FHEAP[$m_mass111];
      var $add112=($134)+($add110);
      FHEAP[$m_mass111]=$add112;
      ;
    }
  } while(0);

  var $m_typeB=$this1+21;
  var $135=IHEAP[$m_typeB];
  var $cmp113=($135)==1;
  if ($cmp113) { __label__ = 4;; } else { __label__ = 5;; }
  $if_then114$$if_else125$6: do { 
    if (__label__ == 4) {

      var $m_JvBD=$this1+63;
      __ZN6b2Vec27SetZeroEv($m_JvBD);
      var $m_ratio=$this1+39;
      var $136=FHEAP[$m_ratio];
      var $m_JwB=$this1+66;
      FHEAP[$m_JwB]=$136;
      var $m_ratio115=$this1+39;
      var $137=FHEAP[$m_ratio115];
      var $m_JwD=$this1+68;
      FHEAP[$m_JwD]=$137;
      var $m_ratio116=$this1+39;
      var $138=FHEAP[$m_ratio116];
      var $m_ratio117=$this1+39;
      var $139=FHEAP[$m_ratio117];
      var $mul118=($138)*($139);
      var $m_iB119=$this1+58;
      var $140=FHEAP[$m_iB119];
      var $m_iD120=$this1+60;
      var $141=FHEAP[$m_iD120];
      var $add121=($140)+($141);
      var $mul122=($mul118)*($add121);
      var $m_mass123=$this1+69;
      var $142=FHEAP[$m_mass123];
      var $add124=($142)+($mul122);
      FHEAP[$m_mass123]=$add124;
      ;
    }
    else if (__label__ == 5) {

      var $m_localAxisD=$this1+34;
      __Z5b2MulRK5b2RotRK6b2Vec2($u126, $qD, $m_localAxisD);
      var $m_localAnchorD=$this1+30;
      var $m_lcD128=$this1+51;
      __ZmiRK6b2Vec2S1_($ref_tmp127, $m_localAnchorD, $m_lcD128);
      __Z5b2MulRK5b2RotRK6b2Vec2($rD, $qD, $ref_tmp127);
      var $m_localAnchorB=$this1+26;
      var $m_lcB130=$this1+47;
      __ZmiRK6b2Vec2S1_($ref_tmp129, $m_localAnchorB, $m_lcB130);
      __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp129);
      var $m_JvBD131=$this1+63;
      var $m_ratio133=$this1+39;
      var $143=FHEAP[$m_ratio133];
      __ZmlfRK6b2Vec2($ref_tmp132, $143, $u126);
      var $144=$m_JvBD131;
      var $145=$ref_tmp132;
      IHEAP[$144]=IHEAP[$145]; FHEAP[$144]=FHEAP[$145]; ; IHEAP[$144+1]=IHEAP[$145+1]; FHEAP[$144+1]=FHEAP[$145+1]; ;
      var $m_ratio134=$this1+39;
      var $146=FHEAP[$m_ratio134];
      var $call135=__Z7b2CrossRK6b2Vec2S1_($rD, $u126);
      var $mul136=($146)*($call135);
      var $m_JwD137=$this1+68;
      FHEAP[$m_JwD137]=$mul136;
      var $m_ratio138=$this1+39;
      var $147=FHEAP[$m_ratio138];
      var $call139=__Z7b2CrossRK6b2Vec2S1_($rB, $u126);
      var $mul140=($147)*($call139);
      var $m_JwB141=$this1+66;
      FHEAP[$m_JwB141]=$mul140;
      var $m_ratio142=$this1+39;
      var $148=FHEAP[$m_ratio142];
      var $m_ratio143=$this1+39;
      var $149=FHEAP[$m_ratio143];
      var $mul144=($148)*($149);
      var $m_mD145=$this1+56;
      var $150=FHEAP[$m_mD145];
      var $m_mB146=$this1+54;
      var $151=FHEAP[$m_mB146];
      var $add147=($150)+($151);
      var $mul148=($mul144)*($add147);
      var $m_iD149=$this1+60;
      var $152=FHEAP[$m_iD149];
      var $m_JwD150=$this1+68;
      var $153=FHEAP[$m_JwD150];
      var $mul151=($152)*($153);
      var $m_JwD152=$this1+68;
      var $154=FHEAP[$m_JwD152];
      var $mul153=($mul151)*($154);
      var $add154=($mul148)+($mul153);
      var $m_iB155=$this1+58;
      var $155=FHEAP[$m_iB155];
      var $m_JwB156=$this1+66;
      var $156=FHEAP[$m_JwB156];
      var $mul157=($155)*($156);
      var $m_JwB158=$this1+66;
      var $157=FHEAP[$m_JwB158];
      var $mul159=($mul157)*($157);
      var $add160=($add154)+($mul159);
      var $m_mass161=$this1+69;
      var $158=FHEAP[$m_mass161];
      var $add162=($158)+($add160);
      FHEAP[$m_mass161]=$add162;
      ;
    }
  } while(0);

  var $m_mass164=$this1+69;
  var $159=FHEAP[$m_mass164];
  var $cmp165=($159) > 0;
  if ($cmp165) { __label__ = 7;; } else { var $cond = 0;__label__ = 8;; }
  $cond_true$$cond_end$10: do { 
    if (__label__ == 7) {

      var $m_mass166=$this1+69;
      var $160=FHEAP[$m_mass166];
      var $div=1/($160);
      var $cond = $div;;
    }
  } while(0);

  var $cond;
  var $m_mass167=$this1+69;
  FHEAP[$m_mass167]=$cond;
  var $161=$data_addr;
  var $step=$161;
  var $warmStarting=$step+5;
  var $162=IHEAP[$warmStarting];
  var $tobool=((($162)) & 1);
  if ($tobool) { __label__ = 9;; } else { __label__ = 10;; }
  $if_then168$$if_else211$13: do { 
    if (__label__ == 9) {

      var $m_mA170=$this1+53;
      var $163=FHEAP[$m_mA170];
      var $m_impulse=$this1+40;
      var $164=FHEAP[$m_impulse];
      var $mul171=($163)*($164);
      var $m_JvAC172=$this1+61;
      __ZmlfRK6b2Vec2($ref_tmp169, $mul171, $m_JvAC172);
      __ZN6b2Vec2pLERKS_($vA, $ref_tmp169);
      var $m_iA173=$this1+57;
      var $165=FHEAP[$m_iA173];
      var $m_impulse174=$this1+40;
      var $166=FHEAP[$m_impulse174];
      var $mul175=($165)*($166);
      var $m_JwA176=$this1+65;
      var $167=FHEAP[$m_JwA176];
      var $mul177=($mul175)*($167);
      var $168=$wA;
      var $add178=($168)+($mul177);
      $wA=$add178;
      var $m_mB180=$this1+54;
      var $169=FHEAP[$m_mB180];
      var $m_impulse181=$this1+40;
      var $170=FHEAP[$m_impulse181];
      var $mul182=($169)*($170);
      var $m_JvBD183=$this1+63;
      __ZmlfRK6b2Vec2($ref_tmp179, $mul182, $m_JvBD183);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp179);
      var $m_iB184=$this1+58;
      var $171=FHEAP[$m_iB184];
      var $m_impulse185=$this1+40;
      var $172=FHEAP[$m_impulse185];
      var $mul186=($171)*($172);
      var $m_JwB187=$this1+66;
      var $173=FHEAP[$m_JwB187];
      var $mul188=($mul186)*($173);
      var $174=$wB;
      var $add189=($174)+($mul188);
      $wB=$add189;
      var $m_mC191=$this1+55;
      var $175=FHEAP[$m_mC191];
      var $m_impulse192=$this1+40;
      var $176=FHEAP[$m_impulse192];
      var $mul193=($175)*($176);
      var $m_JvAC194=$this1+61;
      __ZmlfRK6b2Vec2($ref_tmp190, $mul193, $m_JvAC194);
      __ZN6b2Vec2mIERKS_($vC, $ref_tmp190);
      var $m_iC195=$this1+59;
      var $177=FHEAP[$m_iC195];
      var $m_impulse196=$this1+40;
      var $178=FHEAP[$m_impulse196];
      var $mul197=($177)*($178);
      var $m_JwC198=$this1+67;
      var $179=FHEAP[$m_JwC198];
      var $mul199=($mul197)*($179);
      var $180=$wC;
      var $sub=($180)-($mul199);
      $wC=$sub;
      var $m_mD201=$this1+56;
      var $181=FHEAP[$m_mD201];
      var $m_impulse202=$this1+40;
      var $182=FHEAP[$m_impulse202];
      var $mul203=($181)*($182);
      var $m_JvBD204=$this1+63;
      __ZmlfRK6b2Vec2($ref_tmp200, $mul203, $m_JvBD204);
      __ZN6b2Vec2mIERKS_($vD, $ref_tmp200);
      var $m_iD205=$this1+60;
      var $183=FHEAP[$m_iD205];
      var $m_impulse206=$this1+40;
      var $184=FHEAP[$m_impulse206];
      var $mul207=($183)*($184);
      var $m_JwD208=$this1+68;
      var $185=FHEAP[$m_JwD208];
      var $mul209=($mul207)*($185);
      var $186=$wD;
      var $sub210=($186)-($mul209);
      $wD=$sub210;
      ;
    }
    else if (__label__ == 10) {

      var $m_impulse212=$this1+40;
      FHEAP[$m_impulse212]=0;
      ;
    }
  } while(0);

  var $m_indexA214=$this1+41;
  var $187=IHEAP[$m_indexA214];
  var $188=$data_addr;
  var $velocities215=$188+7;
  var $189=IHEAP[$velocities215];
  var $arrayidx216=$189+$187*3;
  var $v217=$arrayidx216;
  var $190=$v217;
  var $191=$vA;
  IHEAP[$190]=IHEAP[$191]; FHEAP[$190]=FHEAP[$191]; ; IHEAP[$190+1]=IHEAP[$191+1]; FHEAP[$190+1]=FHEAP[$191+1]; ;
  var $192=$wA;
  var $m_indexA218=$this1+41;
  var $193=IHEAP[$m_indexA218];
  var $194=$data_addr;
  var $velocities219=$194+7;
  var $195=IHEAP[$velocities219];
  var $arrayidx220=$195+$193*3;
  var $w221=$arrayidx220+2;
  FHEAP[$w221]=$192;
  var $m_indexB222=$this1+42;
  var $196=IHEAP[$m_indexB222];
  var $197=$data_addr;
  var $velocities223=$197+7;
  var $198=IHEAP[$velocities223];
  var $arrayidx224=$198+$196*3;
  var $v225=$arrayidx224;
  var $199=$v225;
  var $200=$vB;
  IHEAP[$199]=IHEAP[$200]; FHEAP[$199]=FHEAP[$200]; ; IHEAP[$199+1]=IHEAP[$200+1]; FHEAP[$199+1]=FHEAP[$200+1]; ;
  var $201=$wB;
  var $m_indexB226=$this1+42;
  var $202=IHEAP[$m_indexB226];
  var $203=$data_addr;
  var $velocities227=$203+7;
  var $204=IHEAP[$velocities227];
  var $arrayidx228=$204+$202*3;
  var $w229=$arrayidx228+2;
  FHEAP[$w229]=$201;
  var $m_indexC230=$this1+43;
  var $205=IHEAP[$m_indexC230];
  var $206=$data_addr;
  var $velocities231=$206+7;
  var $207=IHEAP[$velocities231];
  var $arrayidx232=$207+$205*3;
  var $v233=$arrayidx232;
  var $208=$v233;
  var $209=$vC;
  IHEAP[$208]=IHEAP[$209]; FHEAP[$208]=FHEAP[$209]; ; IHEAP[$208+1]=IHEAP[$209+1]; FHEAP[$208+1]=FHEAP[$209+1]; ;
  var $210=$wC;
  var $m_indexC234=$this1+43;
  var $211=IHEAP[$m_indexC234];
  var $212=$data_addr;
  var $velocities235=$212+7;
  var $213=IHEAP[$velocities235];
  var $arrayidx236=$213+$211*3;
  var $w237=$arrayidx236+2;
  FHEAP[$w237]=$210;
  var $m_indexD238=$this1+44;
  var $214=IHEAP[$m_indexD238];
  var $215=$data_addr;
  var $velocities239=$215+7;
  var $216=IHEAP[$velocities239];
  var $arrayidx240=$216+$214*3;
  var $v241=$arrayidx240;
  var $217=$v241;
  var $218=$vD;
  IHEAP[$217]=IHEAP[$218]; FHEAP[$217]=FHEAP[$218]; ; IHEAP[$217+1]=IHEAP[$218+1]; FHEAP[$217+1]=FHEAP[$218+1]; ;
  var $219=$wD;
  var $m_indexD242=$this1+44;
  var $220=IHEAP[$m_indexD242];
  var $221=$data_addr;
  var $velocities243=$221+7;
  var $222=IHEAP[$velocities243];
  var $arrayidx244=$222+$220*3;
  var $w245=$arrayidx244+2;
  FHEAP[$w245]=$219;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN11b2GearJoint23InitVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN11b2GearJoint24SolveVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 20;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $vC=__stackBase__+4;
  var $wC;
  var $vD=__stackBase__+6;
  var $wD;
  var $Cdot;
  var $ref_tmp=__stackBase__+8;
  var $ref_tmp26=__stackBase__+10;
  var $impulse;
  var $ref_tmp37=__stackBase__+12;
  var $ref_tmp44=__stackBase__+14;
  var $ref_tmp51=__stackBase__+16;
  var $ref_tmp58=__stackBase__+18;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+41;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $velocities=$1+7;
  var $2=IHEAP[$velocities];
  var $arrayidx=$2+$0*3;
  var $v=$arrayidx;
  var $3=$vA;
  var $4=$v;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+41;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $velocities3=$6+7;
  var $7=IHEAP[$velocities3];
  var $arrayidx4=$7+$5*3;
  var $w=$arrayidx4+2;
  var $8=FHEAP[$w];
  $wA=$8;
  var $m_indexB=$this1+42;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $velocities5=$10+7;
  var $11=IHEAP[$velocities5];
  var $arrayidx6=$11+$9*3;
  var $v7=$arrayidx6;
  var $12=$vB;
  var $13=$v7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+42;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $velocities9=$15+7;
  var $16=IHEAP[$velocities9];
  var $arrayidx10=$16+$14*3;
  var $w11=$arrayidx10+2;
  var $17=FHEAP[$w11];
  $wB=$17;
  var $m_indexC=$this1+43;
  var $18=IHEAP[$m_indexC];
  var $19=$data_addr;
  var $velocities12=$19+7;
  var $20=IHEAP[$velocities12];
  var $arrayidx13=$20+$18*3;
  var $v14=$arrayidx13;
  var $21=$vC;
  var $22=$v14;
  IHEAP[$21]=IHEAP[$22]; FHEAP[$21]=FHEAP[$22]; ; IHEAP[$21+1]=IHEAP[$22+1]; FHEAP[$21+1]=FHEAP[$22+1]; ;
  var $m_indexC15=$this1+43;
  var $23=IHEAP[$m_indexC15];
  var $24=$data_addr;
  var $velocities16=$24+7;
  var $25=IHEAP[$velocities16];
  var $arrayidx17=$25+$23*3;
  var $w18=$arrayidx17+2;
  var $26=FHEAP[$w18];
  $wC=$26;
  var $m_indexD=$this1+44;
  var $27=IHEAP[$m_indexD];
  var $28=$data_addr;
  var $velocities19=$28+7;
  var $29=IHEAP[$velocities19];
  var $arrayidx20=$29+$27*3;
  var $v21=$arrayidx20;
  var $30=$vD;
  var $31=$v21;
  IHEAP[$30]=IHEAP[$31]; FHEAP[$30]=FHEAP[$31]; ; IHEAP[$30+1]=IHEAP[$31+1]; FHEAP[$30+1]=FHEAP[$31+1]; ;
  var $m_indexD22=$this1+44;
  var $32=IHEAP[$m_indexD22];
  var $33=$data_addr;
  var $velocities23=$33+7;
  var $34=IHEAP[$velocities23];
  var $arrayidx24=$34+$32*3;
  var $w25=$arrayidx24+2;
  var $35=FHEAP[$w25];
  $wD=$35;
  var $m_JvAC=$this1+61;
  __ZmiRK6b2Vec2S1_($ref_tmp, $vA, $vC);
  var $call=__Z5b2DotRK6b2Vec2S1_($m_JvAC, $ref_tmp);
  var $m_JvBD=$this1+63;
  __ZmiRK6b2Vec2S1_($ref_tmp26, $vB, $vD);
  var $call27=__Z5b2DotRK6b2Vec2S1_($m_JvBD, $ref_tmp26);
  var $add=($call)+($call27);
  $Cdot=$add;
  var $m_JwA=$this1+65;
  var $36=FHEAP[$m_JwA];
  var $37=$wA;
  var $mul=($36)*($37);
  var $m_JwC=$this1+67;
  var $38=FHEAP[$m_JwC];
  var $39=$wC;
  var $mul28=($38)*($39);
  var $sub=($mul)-($mul28);
  var $m_JwB=$this1+66;
  var $40=FHEAP[$m_JwB];
  var $41=$wB;
  var $mul29=($40)*($41);
  var $m_JwD=$this1+68;
  var $42=FHEAP[$m_JwD];
  var $43=$wD;
  var $mul30=($42)*($43);
  var $sub31=($mul29)-($mul30);
  var $add32=($sub)+($sub31);
  var $44=$Cdot;
  var $add33=($44)+($add32);
  $Cdot=$add33;
  var $m_mass=$this1+69;
  var $45=FHEAP[$m_mass];
  var $sub34=(-($45));
  var $46=$Cdot;
  var $mul35=($sub34)*($46);
  $impulse=$mul35;
  var $47=$impulse;
  var $m_impulse=$this1+40;
  var $48=FHEAP[$m_impulse];
  var $add36=($48)+($47);
  FHEAP[$m_impulse]=$add36;
  var $m_mA=$this1+53;
  var $49=FHEAP[$m_mA];
  var $50=$impulse;
  var $mul38=($49)*($50);
  var $m_JvAC39=$this1+61;
  __ZmlfRK6b2Vec2($ref_tmp37, $mul38, $m_JvAC39);
  __ZN6b2Vec2pLERKS_($vA, $ref_tmp37);
  var $m_iA=$this1+57;
  var $51=FHEAP[$m_iA];
  var $52=$impulse;
  var $mul40=($51)*($52);
  var $m_JwA41=$this1+65;
  var $53=FHEAP[$m_JwA41];
  var $mul42=($mul40)*($53);
  var $54=$wA;
  var $add43=($54)+($mul42);
  $wA=$add43;
  var $m_mB=$this1+54;
  var $55=FHEAP[$m_mB];
  var $56=$impulse;
  var $mul45=($55)*($56);
  var $m_JvBD46=$this1+63;
  __ZmlfRK6b2Vec2($ref_tmp44, $mul45, $m_JvBD46);
  __ZN6b2Vec2pLERKS_($vB, $ref_tmp44);
  var $m_iB=$this1+58;
  var $57=FHEAP[$m_iB];
  var $58=$impulse;
  var $mul47=($57)*($58);
  var $m_JwB48=$this1+66;
  var $59=FHEAP[$m_JwB48];
  var $mul49=($mul47)*($59);
  var $60=$wB;
  var $add50=($60)+($mul49);
  $wB=$add50;
  var $m_mC=$this1+55;
  var $61=FHEAP[$m_mC];
  var $62=$impulse;
  var $mul52=($61)*($62);
  var $m_JvAC53=$this1+61;
  __ZmlfRK6b2Vec2($ref_tmp51, $mul52, $m_JvAC53);
  __ZN6b2Vec2mIERKS_($vC, $ref_tmp51);
  var $m_iC=$this1+59;
  var $63=FHEAP[$m_iC];
  var $64=$impulse;
  var $mul54=($63)*($64);
  var $m_JwC55=$this1+67;
  var $65=FHEAP[$m_JwC55];
  var $mul56=($mul54)*($65);
  var $66=$wC;
  var $sub57=($66)-($mul56);
  $wC=$sub57;
  var $m_mD=$this1+56;
  var $67=FHEAP[$m_mD];
  var $68=$impulse;
  var $mul59=($67)*($68);
  var $m_JvBD60=$this1+63;
  __ZmlfRK6b2Vec2($ref_tmp58, $mul59, $m_JvBD60);
  __ZN6b2Vec2mIERKS_($vD, $ref_tmp58);
  var $m_iD=$this1+60;
  var $69=FHEAP[$m_iD];
  var $70=$impulse;
  var $mul61=($69)*($70);
  var $m_JwD62=$this1+68;
  var $71=FHEAP[$m_JwD62];
  var $mul63=($mul61)*($71);
  var $72=$wD;
  var $sub64=($72)-($mul63);
  $wD=$sub64;
  var $m_indexA65=$this1+41;
  var $73=IHEAP[$m_indexA65];
  var $74=$data_addr;
  var $velocities66=$74+7;
  var $75=IHEAP[$velocities66];
  var $arrayidx67=$75+$73*3;
  var $v68=$arrayidx67;
  var $76=$v68;
  var $77=$vA;
  IHEAP[$76]=IHEAP[$77]; FHEAP[$76]=FHEAP[$77]; ; IHEAP[$76+1]=IHEAP[$77+1]; FHEAP[$76+1]=FHEAP[$77+1]; ;
  var $78=$wA;
  var $m_indexA69=$this1+41;
  var $79=IHEAP[$m_indexA69];
  var $80=$data_addr;
  var $velocities70=$80+7;
  var $81=IHEAP[$velocities70];
  var $arrayidx71=$81+$79*3;
  var $w72=$arrayidx71+2;
  FHEAP[$w72]=$78;
  var $m_indexB73=$this1+42;
  var $82=IHEAP[$m_indexB73];
  var $83=$data_addr;
  var $velocities74=$83+7;
  var $84=IHEAP[$velocities74];
  var $arrayidx75=$84+$82*3;
  var $v76=$arrayidx75;
  var $85=$v76;
  var $86=$vB;
  IHEAP[$85]=IHEAP[$86]; FHEAP[$85]=FHEAP[$86]; ; IHEAP[$85+1]=IHEAP[$86+1]; FHEAP[$85+1]=FHEAP[$86+1]; ;
  var $87=$wB;
  var $m_indexB77=$this1+42;
  var $88=IHEAP[$m_indexB77];
  var $89=$data_addr;
  var $velocities78=$89+7;
  var $90=IHEAP[$velocities78];
  var $arrayidx79=$90+$88*3;
  var $w80=$arrayidx79+2;
  FHEAP[$w80]=$87;
  var $m_indexC81=$this1+43;
  var $91=IHEAP[$m_indexC81];
  var $92=$data_addr;
  var $velocities82=$92+7;
  var $93=IHEAP[$velocities82];
  var $arrayidx83=$93+$91*3;
  var $v84=$arrayidx83;
  var $94=$v84;
  var $95=$vC;
  IHEAP[$94]=IHEAP[$95]; FHEAP[$94]=FHEAP[$95]; ; IHEAP[$94+1]=IHEAP[$95+1]; FHEAP[$94+1]=FHEAP[$95+1]; ;
  var $96=$wC;
  var $m_indexC85=$this1+43;
  var $97=IHEAP[$m_indexC85];
  var $98=$data_addr;
  var $velocities86=$98+7;
  var $99=IHEAP[$velocities86];
  var $arrayidx87=$99+$97*3;
  var $w88=$arrayidx87+2;
  FHEAP[$w88]=$96;
  var $m_indexD89=$this1+44;
  var $100=IHEAP[$m_indexD89];
  var $101=$data_addr;
  var $velocities90=$101+7;
  var $102=IHEAP[$velocities90];
  var $arrayidx91=$102+$100*3;
  var $v92=$arrayidx91;
  var $103=$v92;
  var $104=$vD;
  IHEAP[$103]=IHEAP[$104]; FHEAP[$103]=FHEAP[$104]; ; IHEAP[$103+1]=IHEAP[$104+1]; FHEAP[$103+1]=FHEAP[$104+1]; ;
  var $105=$wD;
  var $m_indexD93=$this1+44;
  var $106=IHEAP[$m_indexD93];
  var $107=$data_addr;
  var $velocities94=$107+7;
  var $108=IHEAP[$velocities94];
  var $arrayidx95=$108+$106*3;
  var $w96=$arrayidx95+2;
  FHEAP[$w96]=$105;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN11b2GearJoint24SolveVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN11b2GearJointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2GearJointD2Ev($this1);
  ;
  return;
  return;
}


function __ZN11b2GearJointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2GearJointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN11b2GearJointD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2JointD2Ev($0);
  ;
  return;
  return;
}


function __ZNK11b2GearJoint10GetAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+24;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorA);
  ;
  return;
  return;
}


function __ZNK11b2GearJoint10GetAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+26;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorB);
  ;
  return;
  return;
}


function __ZNK11b2GearJoint16GetReactionForceEf($agg_result, $this, $inv_dt) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  var $P=__stackBase__;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $m_impulse=$this1+40;
  var $0=FHEAP[$m_impulse];
  var $m_JvAC=$this1+61;
  __ZmlfRK6b2Vec2($P, $0, $m_JvAC);
  var $1=$inv_dt_addr;
  __ZmlfRK6b2Vec2($agg_result, $1, $P);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK11b2GearJoint17GetReactionTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  var $L;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $m_impulse=$this1+40;
  var $0=FHEAP[$m_impulse];
  var $m_JwA=$this1+65;
  var $1=FHEAP[$m_JwA];
  var $mul=($0)*($1);
  $L=$mul;
  var $2=$inv_dt_addr;
  var $3=$L;
  var $mul2=($2)*($3);
  ;
  return $mul2;
  return null;
}


function __ZNK11b2GearJoint8GetRatioEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_ratio=$this1+39;
  var $0=FHEAP[$m_ratio];
  ;
  return $0;
  return null;
}


function __ZN11b2GearJoint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $indexA;
  var $indexB;
  var $index1;
  var $index2;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  $indexA=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  $indexB=$5;
  var $m_joint1=$this1+18;
  var $6=IHEAP[$m_joint1];
  var $m_index=$6+14;
  var $7=IHEAP[$m_index];
  $index1=$7;
  var $m_joint2=$this1+19;
  var $8=IHEAP[$m_joint2];
  var $m_index3=$8+14;
  var $9=IHEAP[$m_index3];
  $index2=$9;
  __Z5b2LogPKcz(__str4230, allocate(1, "i32", ALLOC_STACK));
  var $10=$indexA;
  __Z5b2LogPKcz(__str1392, allocate([$10], "i32", ALLOC_STACK));
  var $11=$indexB;
  __Z5b2LogPKcz(__str2393, allocate([$11], "i32", ALLOC_STACK));
  var $12=$this1;
  var $m_collideConnected=$12+16;
  var $13=IHEAP[$m_collideConnected];
  var $tobool=((($13)) & 1);
  var $conv=($tobool);
  __Z5b2LogPKcz(__str3394, allocate([$conv], "i32", ALLOC_STACK));
  var $14=$index1;
  __Z5b2LogPKcz(__str8234, allocate([$14], "i32", ALLOC_STACK));
  var $15=$index2;
  __Z5b2LogPKcz(__str9235, allocate([$15], "i32", ALLOC_STACK));
  var $m_ratio=$this1+39;
  var $16=FHEAP[$m_ratio];
  var $conv4=($16);
  __Z5b2LogPKcz(__str13315, allocate([$conv4], "double", ALLOC_STACK));
  var $17=$this1;
  var $m_index5=$17+14;
  var $18=IHEAP[$m_index5];
  __Z5b2LogPKcz(__str12403, allocate([$18], "i32", ALLOC_STACK));
  ;
  return;
  return;
}
__ZN11b2GearJoint4DumpEv["X"]=1;

function __ZN8b2IslandD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_allocator=$this1;
  var $0=IHEAP[$m_allocator];
  var $m_positions=$this1+5;
  var $1=IHEAP[$m_positions];
  var $2=$1;
  __ZN16b2StackAllocator4FreeEPv($0, $2);
  var $m_allocator2=$this1;
  var $3=IHEAP[$m_allocator2];
  var $m_velocities=$this1+6;
  var $4=IHEAP[$m_velocities];
  var $5=$4;
  __ZN16b2StackAllocator4FreeEPv($3, $5);
  var $m_allocator3=$this1;
  var $6=IHEAP[$m_allocator3];
  var $m_joints=$this1+4;
  var $7=IHEAP[$m_joints];
  var $8=$7;
  __ZN16b2StackAllocator4FreeEPv($6, $8);
  var $m_allocator4=$this1;
  var $9=IHEAP[$m_allocator4];
  var $m_contacts=$this1+3;
  var $10=IHEAP[$m_contacts];
  var $11=$10;
  __ZN16b2StackAllocator4FreeEPv($9, $11);
  var $m_allocator5=$this1;
  var $12=IHEAP[$m_allocator5];
  var $m_bodies=$this1+2;
  var $13=IHEAP[$m_bodies];
  var $14=$13;
  __ZN16b2StackAllocator4FreeEPv($12, $14);
  ;
  return;
  return;
}


function __ZN11b2GearJoint24SolvePositionConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 70;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $cB=__stackBase__+2;
  var $aB;
  var $cC=__stackBase__+4;
  var $aC;
  var $cD=__stackBase__+6;
  var $aD;
  var $qA=__stackBase__+8;
  var $qB=__stackBase__+10;
  var $qC=__stackBase__+12;
  var $qD=__stackBase__+14;
  var $linearError;
  var $coordinateA;
  var $coordinateB;
  var $JvAC=__stackBase__+16;
  var $JvBD=__stackBase__+18;
  var $JwA;
  var $JwB;
  var $JwC;
  var $JwD;
  var $mass;
  var $u=__stackBase__+20;
  var $rC=__stackBase__+22;
  var $ref_tmp=__stackBase__+24;
  var $rA=__stackBase__+26;
  var $ref_tmp28=__stackBase__+28;
  var $pC=__stackBase__+30;
  var $pA=__stackBase__+32;
  var $ref_tmp41=__stackBase__+34;
  var $ref_tmp42=__stackBase__+36;
  var $ref_tmp43=__stackBase__+38;
  var $u58=__stackBase__+40;
  var $rD=__stackBase__+42;
  var $ref_tmp59=__stackBase__+44;
  var $rB=__stackBase__+46;
  var $ref_tmp60=__stackBase__+48;
  var $ref_tmp61=__stackBase__+50;
  var $pD=__stackBase__+52;
  var $pB=__stackBase__+54;
  var $ref_tmp85=__stackBase__+56;
  var $ref_tmp86=__stackBase__+58;
  var $ref_tmp87=__stackBase__+60;
  var $C;
  var $impulse;
  var $ref_tmp99=__stackBase__+62;
  var $ref_tmp106=__stackBase__+64;
  var $ref_tmp113=__stackBase__+66;
  var $ref_tmp120=__stackBase__+68;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+41;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $positions=$1+6;
  var $2=IHEAP[$positions];
  var $arrayidx=$2+$0*3;
  var $c=$arrayidx;
  var $3=$cA;
  var $4=$c;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+41;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $positions3=$6+6;
  var $7=IHEAP[$positions3];
  var $arrayidx4=$7+$5*3;
  var $a=$arrayidx4+2;
  var $8=FHEAP[$a];
  $aA=$8;
  var $m_indexB=$this1+42;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $positions5=$10+6;
  var $11=IHEAP[$positions5];
  var $arrayidx6=$11+$9*3;
  var $c7=$arrayidx6;
  var $12=$cB;
  var $13=$c7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+42;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $positions9=$15+6;
  var $16=IHEAP[$positions9];
  var $arrayidx10=$16+$14*3;
  var $a11=$arrayidx10+2;
  var $17=FHEAP[$a11];
  $aB=$17;
  var $m_indexC=$this1+43;
  var $18=IHEAP[$m_indexC];
  var $19=$data_addr;
  var $positions12=$19+6;
  var $20=IHEAP[$positions12];
  var $arrayidx13=$20+$18*3;
  var $c14=$arrayidx13;
  var $21=$cC;
  var $22=$c14;
  IHEAP[$21]=IHEAP[$22]; FHEAP[$21]=FHEAP[$22]; ; IHEAP[$21+1]=IHEAP[$22+1]; FHEAP[$21+1]=FHEAP[$22+1]; ;
  var $m_indexC15=$this1+43;
  var $23=IHEAP[$m_indexC15];
  var $24=$data_addr;
  var $positions16=$24+6;
  var $25=IHEAP[$positions16];
  var $arrayidx17=$25+$23*3;
  var $a18=$arrayidx17+2;
  var $26=FHEAP[$a18];
  $aC=$26;
  var $m_indexD=$this1+44;
  var $27=IHEAP[$m_indexD];
  var $28=$data_addr;
  var $positions19=$28+6;
  var $29=IHEAP[$positions19];
  var $arrayidx20=$29+$27*3;
  var $c21=$arrayidx20;
  var $30=$cD;
  var $31=$c21;
  IHEAP[$30]=IHEAP[$31]; FHEAP[$30]=FHEAP[$31]; ; IHEAP[$30+1]=IHEAP[$31+1]; FHEAP[$30+1]=FHEAP[$31+1]; ;
  var $m_indexD22=$this1+44;
  var $32=IHEAP[$m_indexD22];
  var $33=$data_addr;
  var $positions23=$33+6;
  var $34=IHEAP[$positions23];
  var $arrayidx24=$34+$32*3;
  var $a25=$arrayidx24+2;
  var $35=FHEAP[$a25];
  $aD=$35;
  var $36=$aA;
  __ZN5b2RotC1Ef($qA, $36);
  var $37=$aB;
  __ZN5b2RotC1Ef($qB, $37);
  var $38=$aC;
  __ZN5b2RotC1Ef($qC, $38);
  var $39=$aD;
  __ZN5b2RotC1Ef($qD, $39);
  $linearError=0;
  __ZN6b2Vec2C1Ev($JvAC);
  __ZN6b2Vec2C1Ev($JvBD);
  $mass=0;
  var $m_typeA=$this1+20;
  var $40=IHEAP[$m_typeA];
  var $cmp=($40)==1;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_else$2: do { 
    if (__label__ == 1) {

      __ZN6b2Vec27SetZeroEv($JvAC);
      $JwA=1;
      $JwC=1;
      var $m_iA=$this1+57;
      var $41=FHEAP[$m_iA];
      var $m_iC=$this1+59;
      var $42=FHEAP[$m_iC];
      var $add=($41)+($42);
      var $43=$mass;
      var $add26=($43)+($add);
      $mass=$add26;
      var $44=$aA;
      var $45=$aC;
      var $sub=($44)-($45);
      var $m_referenceAngleA=$this1+36;
      var $46=FHEAP[$m_referenceAngleA];
      var $sub27=($sub)-($46);
      $coordinateA=$sub27;
      ;
    }
    else if (__label__ == 2) {

      var $m_localAxisC=$this1+32;
      __Z5b2MulRK5b2RotRK6b2Vec2($u, $qC, $m_localAxisC);
      var $m_localAnchorC=$this1+28;
      var $m_lcC=$this1+49;
      __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorC, $m_lcC);
      __Z5b2MulRK5b2RotRK6b2Vec2($rC, $qC, $ref_tmp);
      var $m_localAnchorA=$this1+24;
      var $m_lcA=$this1+45;
      __ZmiRK6b2Vec2S1_($ref_tmp28, $m_localAnchorA, $m_lcA);
      __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp28);
      var $47=$JvAC;
      var $48=$u;
      IHEAP[$47]=IHEAP[$48]; FHEAP[$47]=FHEAP[$48]; ; IHEAP[$47+1]=IHEAP[$48+1]; FHEAP[$47+1]=FHEAP[$48+1]; ;
      var $call=__Z7b2CrossRK6b2Vec2S1_($rC, $u);
      $JwC=$call;
      var $call29=__Z7b2CrossRK6b2Vec2S1_($rA, $u);
      $JwA=$call29;
      var $m_mC=$this1+55;
      var $49=FHEAP[$m_mC];
      var $m_mA=$this1+53;
      var $50=FHEAP[$m_mA];
      var $add30=($49)+($50);
      var $m_iC31=$this1+59;
      var $51=FHEAP[$m_iC31];
      var $52=$JwC;
      var $mul=($51)*($52);
      var $53=$JwC;
      var $mul32=($mul)*($53);
      var $add33=($add30)+($mul32);
      var $m_iA34=$this1+57;
      var $54=FHEAP[$m_iA34];
      var $55=$JwA;
      var $mul35=($54)*($55);
      var $56=$JwA;
      var $mul36=($mul35)*($56);
      var $add37=($add33)+($mul36);
      var $57=$mass;
      var $add38=($57)+($add37);
      $mass=$add38;
      var $m_localAnchorC39=$this1+28;
      var $m_lcC40=$this1+49;
      __ZmiRK6b2Vec2S1_($pC, $m_localAnchorC39, $m_lcC40);
      __ZmiRK6b2Vec2S1_($ref_tmp42, $cA, $cC);
      __ZplRK6b2Vec2S1_($ref_tmp41, $rA, $ref_tmp42);
      __Z6b2MulTRK5b2RotRK6b2Vec2($pA, $qC, $ref_tmp41);
      __ZmiRK6b2Vec2S1_($ref_tmp43, $pA, $pC);
      var $m_localAxisC44=$this1+32;
      var $call45=__Z5b2DotRK6b2Vec2S1_($ref_tmp43, $m_localAxisC44);
      $coordinateA=$call45;
      ;
    }
  } while(0);

  var $m_typeB=$this1+21;
  var $58=IHEAP[$m_typeB];
  var $cmp46=($58)==1;
  if ($cmp46) { __label__ = 4;; } else { __label__ = 5;; }
  $if_then47$$if_else57$6: do { 
    if (__label__ == 4) {

      __ZN6b2Vec27SetZeroEv($JvBD);
      var $m_ratio=$this1+39;
      var $59=FHEAP[$m_ratio];
      $JwB=$59;
      var $m_ratio48=$this1+39;
      var $60=FHEAP[$m_ratio48];
      $JwD=$60;
      var $m_ratio49=$this1+39;
      var $61=FHEAP[$m_ratio49];
      var $m_ratio50=$this1+39;
      var $62=FHEAP[$m_ratio50];
      var $mul51=($61)*($62);
      var $m_iB=$this1+58;
      var $63=FHEAP[$m_iB];
      var $m_iD=$this1+60;
      var $64=FHEAP[$m_iD];
      var $add52=($63)+($64);
      var $mul53=($mul51)*($add52);
      var $65=$mass;
      var $add54=($65)+($mul53);
      $mass=$add54;
      var $66=$aB;
      var $67=$aD;
      var $sub55=($66)-($67);
      var $m_referenceAngleB=$this1+37;
      var $68=FHEAP[$m_referenceAngleB];
      var $sub56=($sub55)-($68);
      $coordinateB=$sub56;
      ;
    }
    else if (__label__ == 5) {

      var $m_localAxisD=$this1+34;
      __Z5b2MulRK5b2RotRK6b2Vec2($u58, $qD, $m_localAxisD);
      var $m_localAnchorD=$this1+30;
      var $m_lcD=$this1+51;
      __ZmiRK6b2Vec2S1_($ref_tmp59, $m_localAnchorD, $m_lcD);
      __Z5b2MulRK5b2RotRK6b2Vec2($rD, $qD, $ref_tmp59);
      var $m_localAnchorB=$this1+26;
      var $m_lcB=$this1+47;
      __ZmiRK6b2Vec2S1_($ref_tmp60, $m_localAnchorB, $m_lcB);
      __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp60);
      var $m_ratio62=$this1+39;
      var $69=FHEAP[$m_ratio62];
      __ZmlfRK6b2Vec2($ref_tmp61, $69, $u58);
      var $70=$JvBD;
      var $71=$ref_tmp61;
      IHEAP[$70]=IHEAP[$71]; FHEAP[$70]=FHEAP[$71]; ; IHEAP[$70+1]=IHEAP[$71+1]; FHEAP[$70+1]=FHEAP[$71+1]; ;
      var $m_ratio63=$this1+39;
      var $72=FHEAP[$m_ratio63];
      var $call64=__Z7b2CrossRK6b2Vec2S1_($rD, $u58);
      var $mul65=($72)*($call64);
      $JwD=$mul65;
      var $m_ratio66=$this1+39;
      var $73=FHEAP[$m_ratio66];
      var $call67=__Z7b2CrossRK6b2Vec2S1_($rB, $u58);
      var $mul68=($73)*($call67);
      $JwB=$mul68;
      var $m_ratio69=$this1+39;
      var $74=FHEAP[$m_ratio69];
      var $m_ratio70=$this1+39;
      var $75=FHEAP[$m_ratio70];
      var $mul71=($74)*($75);
      var $m_mD=$this1+56;
      var $76=FHEAP[$m_mD];
      var $m_mB=$this1+54;
      var $77=FHEAP[$m_mB];
      var $add72=($76)+($77);
      var $mul73=($mul71)*($add72);
      var $m_iD74=$this1+60;
      var $78=FHEAP[$m_iD74];
      var $79=$JwD;
      var $mul75=($78)*($79);
      var $80=$JwD;
      var $mul76=($mul75)*($80);
      var $add77=($mul73)+($mul76);
      var $m_iB78=$this1+58;
      var $81=FHEAP[$m_iB78];
      var $82=$JwB;
      var $mul79=($81)*($82);
      var $83=$JwB;
      var $mul80=($mul79)*($83);
      var $add81=($add77)+($mul80);
      var $84=$mass;
      var $add82=($84)+($add81);
      $mass=$add82;
      var $m_localAnchorD83=$this1+30;
      var $m_lcD84=$this1+51;
      __ZmiRK6b2Vec2S1_($pD, $m_localAnchorD83, $m_lcD84);
      __ZmiRK6b2Vec2S1_($ref_tmp86, $cB, $cD);
      __ZplRK6b2Vec2S1_($ref_tmp85, $rB, $ref_tmp86);
      __Z6b2MulTRK5b2RotRK6b2Vec2($pB, $qD, $ref_tmp85);
      __ZmiRK6b2Vec2S1_($ref_tmp87, $pB, $pD);
      var $m_localAxisD88=$this1+34;
      var $call89=__Z5b2DotRK6b2Vec2S1_($ref_tmp87, $m_localAxisD88);
      $coordinateB=$call89;
      ;
    }
  } while(0);

  var $85=$coordinateA;
  var $m_ratio91=$this1+39;
  var $86=FHEAP[$m_ratio91];
  var $87=$coordinateB;
  var $mul92=($86)*($87);
  var $add93=($85)+($mul92);
  var $m_constant=$this1+38;
  var $88=FHEAP[$m_constant];
  var $sub94=($add93)-($88);
  $C=$sub94;
  $impulse=0;
  var $89=$mass;
  var $cmp95=($89) > 0;
  if ($cmp95) { __label__ = 7;; } else { __label__ = 8;; }
  $if_then96$$if_end98$10: do { 
    if (__label__ == 7) {

      var $90=$C;
      var $sub97=(-($90));
      var $91=$mass;
      var $div=($sub97)/($91);
      $impulse=$div;
      ;
    }
  } while(0);

  var $m_mA100=$this1+53;
  var $92=FHEAP[$m_mA100];
  var $93=$impulse;
  var $mul101=($92)*($93);
  __ZmlfRK6b2Vec2($ref_tmp99, $mul101, $JvAC);
  __ZN6b2Vec2pLERKS_($cA, $ref_tmp99);
  var $m_iA102=$this1+57;
  var $94=FHEAP[$m_iA102];
  var $95=$impulse;
  var $mul103=($94)*($95);
  var $96=$JwA;
  var $mul104=($mul103)*($96);
  var $97=$aA;
  var $add105=($97)+($mul104);
  $aA=$add105;
  var $m_mB107=$this1+54;
  var $98=FHEAP[$m_mB107];
  var $99=$impulse;
  var $mul108=($98)*($99);
  __ZmlfRK6b2Vec2($ref_tmp106, $mul108, $JvBD);
  __ZN6b2Vec2pLERKS_($cB, $ref_tmp106);
  var $m_iB109=$this1+58;
  var $100=FHEAP[$m_iB109];
  var $101=$impulse;
  var $mul110=($100)*($101);
  var $102=$JwB;
  var $mul111=($mul110)*($102);
  var $103=$aB;
  var $add112=($103)+($mul111);
  $aB=$add112;
  var $m_mC114=$this1+55;
  var $104=FHEAP[$m_mC114];
  var $105=$impulse;
  var $mul115=($104)*($105);
  __ZmlfRK6b2Vec2($ref_tmp113, $mul115, $JvAC);
  __ZN6b2Vec2mIERKS_($cC, $ref_tmp113);
  var $m_iC116=$this1+59;
  var $106=FHEAP[$m_iC116];
  var $107=$impulse;
  var $mul117=($106)*($107);
  var $108=$JwC;
  var $mul118=($mul117)*($108);
  var $109=$aC;
  var $sub119=($109)-($mul118);
  $aC=$sub119;
  var $m_mD121=$this1+56;
  var $110=FHEAP[$m_mD121];
  var $111=$impulse;
  var $mul122=($110)*($111);
  __ZmlfRK6b2Vec2($ref_tmp120, $mul122, $JvBD);
  __ZN6b2Vec2mIERKS_($cD, $ref_tmp120);
  var $m_iD123=$this1+60;
  var $112=FHEAP[$m_iD123];
  var $113=$impulse;
  var $mul124=($112)*($113);
  var $114=$JwD;
  var $mul125=($mul124)*($114);
  var $115=$aD;
  var $sub126=($115)-($mul125);
  $aD=$sub126;
  var $m_indexA127=$this1+41;
  var $116=IHEAP[$m_indexA127];
  var $117=$data_addr;
  var $positions128=$117+6;
  var $118=IHEAP[$positions128];
  var $arrayidx129=$118+$116*3;
  var $c130=$arrayidx129;
  var $119=$c130;
  var $120=$cA;
  IHEAP[$119]=IHEAP[$120]; FHEAP[$119]=FHEAP[$120]; ; IHEAP[$119+1]=IHEAP[$120+1]; FHEAP[$119+1]=FHEAP[$120+1]; ;
  var $121=$aA;
  var $m_indexA131=$this1+41;
  var $122=IHEAP[$m_indexA131];
  var $123=$data_addr;
  var $positions132=$123+6;
  var $124=IHEAP[$positions132];
  var $arrayidx133=$124+$122*3;
  var $a134=$arrayidx133+2;
  FHEAP[$a134]=$121;
  var $m_indexB135=$this1+42;
  var $125=IHEAP[$m_indexB135];
  var $126=$data_addr;
  var $positions136=$126+6;
  var $127=IHEAP[$positions136];
  var $arrayidx137=$127+$125*3;
  var $c138=$arrayidx137;
  var $128=$c138;
  var $129=$cB;
  IHEAP[$128]=IHEAP[$129]; FHEAP[$128]=FHEAP[$129]; ; IHEAP[$128+1]=IHEAP[$129+1]; FHEAP[$128+1]=FHEAP[$129+1]; ;
  var $130=$aB;
  var $m_indexB139=$this1+42;
  var $131=IHEAP[$m_indexB139];
  var $132=$data_addr;
  var $positions140=$132+6;
  var $133=IHEAP[$positions140];
  var $arrayidx141=$133+$131*3;
  var $a142=$arrayidx141+2;
  FHEAP[$a142]=$130;
  var $m_indexC143=$this1+43;
  var $134=IHEAP[$m_indexC143];
  var $135=$data_addr;
  var $positions144=$135+6;
  var $136=IHEAP[$positions144];
  var $arrayidx145=$136+$134*3;
  var $c146=$arrayidx145;
  var $137=$c146;
  var $138=$cC;
  IHEAP[$137]=IHEAP[$138]; FHEAP[$137]=FHEAP[$138]; ; IHEAP[$137+1]=IHEAP[$138+1]; FHEAP[$137+1]=FHEAP[$138+1]; ;
  var $139=$aC;
  var $m_indexC147=$this1+43;
  var $140=IHEAP[$m_indexC147];
  var $141=$data_addr;
  var $positions148=$141+6;
  var $142=IHEAP[$positions148];
  var $arrayidx149=$142+$140*3;
  var $a150=$arrayidx149+2;
  FHEAP[$a150]=$139;
  var $m_indexD151=$this1+44;
  var $143=IHEAP[$m_indexD151];
  var $144=$data_addr;
  var $positions152=$144+6;
  var $145=IHEAP[$positions152];
  var $arrayidx153=$145+$143*3;
  var $c154=$arrayidx153;
  var $146=$c154;
  var $147=$cD;
  IHEAP[$146]=IHEAP[$147]; FHEAP[$146]=FHEAP[$147]; ; IHEAP[$146+1]=IHEAP[$147+1]; FHEAP[$146+1]=FHEAP[$147+1]; ;
  var $148=$aD;
  var $m_indexD155=$this1+44;
  var $149=IHEAP[$m_indexD155];
  var $150=$data_addr;
  var $positions156=$150+6;
  var $151=IHEAP[$positions156];
  var $arrayidx157=$151+$149*3;
  var $a158=$arrayidx157+2;
  FHEAP[$a158]=$148;
  var $152=$linearError;
  var $cmp159=($152) < 0.004999999888241291;
  STACKTOP = __stackBase__;
  return $cmp159;
  return null;
}
__ZN11b2GearJoint24SolvePositionConstraintsERK12b2SolverData["X"]=1;

function __ZN11b2GearJoint8SetRatioEf($this, $ratio) {
  ;
  var __label__;

  var $this_addr;
  var $ratio_addr;
  $this_addr=$this;
  $ratio_addr=$ratio;
  var $this1=$this_addr;
  var $0=$ratio_addr;
  var $call=__Z9b2IsValidf($0);
  if ($call) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$18: do { 
    if (__label__ == 1) {

      ___assert_func(__str226, 398, ___PRETTY_FUNCTION____ZN11b2GearJoint8SetRatioEf, __str3229);
      ;
    }
  } while(0);

  var $1=$ratio_addr;
  var $m_ratio=$this1+39;
  FHEAP[$m_ratio]=$1;
  ;
  return;
  return;
}


function __ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener($this, $bodyCapacity, $contactCapacity, $jointCapacity, $allocator, $listener) {
  ;
  var __label__;

  var $this_addr;
  var $bodyCapacity_addr;
  var $contactCapacity_addr;
  var $jointCapacity_addr;
  var $allocator_addr;
  var $listener_addr;
  $this_addr=$this;
  $bodyCapacity_addr=$bodyCapacity;
  $contactCapacity_addr=$contactCapacity;
  $jointCapacity_addr=$jointCapacity;
  $allocator_addr=$allocator;
  $listener_addr=$listener;
  var $this1=$this_addr;
  var $0=$bodyCapacity_addr;
  var $m_bodyCapacity=$this1+10;
  IHEAP[$m_bodyCapacity]=$0;
  var $1=$contactCapacity_addr;
  var $m_contactCapacity=$this1+11;
  IHEAP[$m_contactCapacity]=$1;
  var $2=$jointCapacity_addr;
  var $m_jointCapacity=$this1+12;
  IHEAP[$m_jointCapacity]=$2;
  var $m_bodyCount=$this1+7;
  IHEAP[$m_bodyCount]=0;
  var $m_contactCount=$this1+9;
  IHEAP[$m_contactCount]=0;
  var $m_jointCount=$this1+8;
  IHEAP[$m_jointCount]=0;
  var $3=$allocator_addr;
  var $m_allocator=$this1;
  IHEAP[$m_allocator]=$3;
  var $4=$listener_addr;
  var $m_listener=$this1+1;
  IHEAP[$m_listener]=$4;
  var $m_allocator2=$this1;
  var $5=IHEAP[$m_allocator2];
  var $6=$bodyCapacity_addr;
  var $mul=(($6)<<2);
  var $call=__ZN16b2StackAllocator8AllocateEi($5, $mul);
  var $7=$call;
  var $m_bodies=$this1+2;
  IHEAP[$m_bodies]=$7;
  var $m_allocator3=$this1;
  var $8=IHEAP[$m_allocator3];
  var $9=$contactCapacity_addr;
  var $mul4=(($9)<<2);
  var $call5=__ZN16b2StackAllocator8AllocateEi($8, $mul4);
  var $10=$call5;
  var $m_contacts=$this1+3;
  IHEAP[$m_contacts]=$10;
  var $m_allocator6=$this1;
  var $11=IHEAP[$m_allocator6];
  var $12=$jointCapacity_addr;
  var $mul7=(($12)<<2);
  var $call8=__ZN16b2StackAllocator8AllocateEi($11, $mul7);
  var $13=$call8;
  var $m_joints=$this1+4;
  IHEAP[$m_joints]=$13;
  var $m_allocator9=$this1;
  var $14=IHEAP[$m_allocator9];
  var $m_bodyCapacity10=$this1+10;
  var $15=IHEAP[$m_bodyCapacity10];
  var $mul11=($15)*12;
  var $call12=__ZN16b2StackAllocator8AllocateEi($14, $mul11);
  var $16=$call12;
  var $m_velocities=$this1+6;
  IHEAP[$m_velocities]=$16;
  var $m_allocator13=$this1;
  var $17=IHEAP[$m_allocator13];
  var $m_bodyCapacity14=$this1+10;
  var $18=IHEAP[$m_bodyCapacity14];
  var $mul15=($18)*12;
  var $call16=__ZN16b2StackAllocator8AllocateEi($17, $mul15);
  var $19=$call16;
  var $m_positions=$this1+5;
  IHEAP[$m_positions]=$19;
  ;
  return;
  return;
}
__ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener["X"]=1;

function __ZN6b2Body20SynchronizeTransformEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp4=__stackBase__+2;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_xf=$this1+3;
  var $q=$m_xf+2;
  var $m_sweep=$this1+7;
  var $a=$m_sweep+7;
  var $0=FHEAP[$a];
  __ZN5b2Rot3SetEf($q, $0);
  var $m_xf2=$this1+3;
  var $p=$m_xf2;
  var $m_sweep3=$this1+7;
  var $c=$m_sweep3+4;
  var $m_xf5=$this1+3;
  var $q6=$m_xf5+2;
  var $m_sweep7=$this1+7;
  var $localCenter=$m_sweep7;
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp4, $q6, $localCenter);
  __ZmiRK6b2Vec2S1_($ref_tmp, $c, $ref_tmp4);
  var $1=$p;
  var $2=$ref_tmp;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN8b2Island6ReportEPK27b2ContactVelocityConstraint($this, $constraints) {
  var __stackBase__  = STACKTOP; STACKTOP += 5;
  var __label__;

  var $this_addr;
  var $constraints_addr;
  var $i;
  var $c;
  var $vc;
  var $impulse=__stackBase__;
  var $j;
  $this_addr=$this;
  $constraints_addr=$constraints;
  var $this1=$this_addr;
  var $m_listener=$this1+1;
  var $0=IHEAP[$m_listener];
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 6;; } else { __label__ = 1;; }
  $for_end15$$if_end$93: do { 
    if (__label__ == 1) {

      $i=0;
      var $1=$i;
      var $m_contactCount=$this1+9;
      var $2=IHEAP[$m_contactCount];
      var $cmp23=($1) < ($2);
      if (!($cmp23)) { __label__ = 6;break $for_end15$$if_end$93; }

      var $m_contacts=$this1+3;
      var $count=$impulse+4;
      var $m_listener12=$this1+1;
      var $normalImpulses=$impulse;
      var $tangentImpulses=$impulse+2;
      ;
      $for_body$96: while(1) { 

        var $3=$i;
        var $4=IHEAP[$m_contacts];
        var $arrayidx=$4+$3;
        var $5=IHEAP[$arrayidx];
        $c=$5;
        var $6=$constraints_addr;
        var $7=$i;
        var $add_ptr=$6+$7*38;
        $vc=$add_ptr;
        var $8=$vc;
        var $pointCount=$8+36;
        var $9=IHEAP[$pointCount];
        IHEAP[$count]=$9;
        $j=0;
        var $10=$j;
        var $11=$vc;
        var $pointCount41=$11+36;
        var $12=IHEAP[$pointCount41];
        var $cmp52=($10) < ($12);
        if ($cmp52) { __label__ = 4;; } else { __label__ = 5;; }
        $for_body6$$for_end$98: do { 
          if (__label__ == 4) {
            $for_body6$99: while(1) { 

              var $13=$j;
              var $14=$vc;
              var $points=$14;
              var $arrayidx7=$points+$13*9;
              var $normalImpulse=$arrayidx7+4;
              var $15=FHEAP[$normalImpulse];
              var $16=$j;
              var $arrayidx8=$normalImpulses+$16;
              FHEAP[$arrayidx8]=$15;
              var $17=$j;
              var $18=$vc;
              var $points9=$18;
              var $arrayidx10=$points9+$17*9;
              var $tangentImpulse=$arrayidx10+5;
              var $19=FHEAP[$tangentImpulse];
              var $20=$j;
              var $arrayidx11=$tangentImpulses+$20;
              FHEAP[$arrayidx11]=$19;
              var $21=$j;
              var $inc=($21)+1;
              $j=$inc;
              var $22=$j;
              var $23=$vc;
              var $pointCount4=$23+36;
              var $24=IHEAP[$pointCount4];
              var $cmp5=($22) < ($24);
              if (!($cmp5)) { __label__ = 5;break $for_body6$$for_end$98; }
            }
          }
        } while(0);

        var $25=IHEAP[$m_listener12];
        var $26=$25;
        var $vtable=IHEAP[$26];
        var $vfn=$vtable+5;
        var $27=IHEAP[$vfn];
        var $28=$c;
        FUNCTION_TABLE[$27]($25, $28, $impulse);
        var $29=$i;
        var $inc14=($29)+1;
        $i=$inc14;
        var $30=$i;
        var $31=IHEAP[$m_contactCount];
        var $cmp2=($30) < ($31);
        if (!($cmp2)) { __label__ = 6;break $for_end15$$if_end$93; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN8b2Island6ReportEPK27b2ContactVelocityConstraint["X"]=1;

function __ZNK6b2Body7GetTypeEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_type=$this1;
  var $0=IHEAP[$m_type];
  ;
  return $0;
  return null;
}


function __ZN8b2Island5SolveEP9b2ProfileRK10b2TimeStepRK6b2Vec2b($this, $profile, $step, $gravity, $allowSleep) {
  var __stackBase__  = STACKTOP; STACKTOP += 54;
  var __label__;

  var $this_addr;
  var $profile_addr;
  var $step_addr;
  var $gravity_addr;
  var $allowSleep_addr;
  var $timer=__stackBase__;
  var $h;
  var $i;
  var $b;
  var $c=__stackBase__+2;
  var $a;
  var $v=__stackBase__+4;
  var $w;
  var $ref_tmp=__stackBase__+6;
  var $ref_tmp12=__stackBase__+8;
  var $ref_tmp13=__stackBase__+10;
  var $ref_tmp14=__stackBase__+12;
  var $solverData=__stackBase__+14;
  var $contactSolverDef=__stackBase__+22;
  var $contactSolver=__stackBase__+33;
  var $exn_slot;
  var $ehselector_slot;
  var $i42;
  var $i54;
  var $j;
  var $i77;
  var $c82=__stackBase__+46;
  var $a86;
  var $v90=__stackBase__+48;
  var $w94;
  var $translation=__stackBase__+50;
  var $ratio;
  var $rotation;
  var $ratio111;
  var $ref_tmp117=__stackBase__+52;
  var $positionSolved;
  var $i138;
  var $contactsOkay;
  var $jointsOkay;
  var $i145;
  var $jointOkay;
  var $i170;
  var $body;
  var $minSleepTime;
  var $linTolSqr;
  var $angTolSqr;
  var $i204;
  var $b209;
  var $i242;
  var $b247;
  $this_addr=$this;
  $profile_addr=$profile;
  $step_addr=$step;
  $gravity_addr=$gravity;
  var $frombool=($allowSleep);
  $allowSleep_addr=$frombool;
  var $this1=$this_addr;
  __ZN7b2TimerC2Ev($timer);
  var $0=$step_addr;
  var $dt=$0;
  var $1=FHEAP[$dt];
  $h=$1;
  $i=0;
  var $2=$i;
  var $m_bodyCount=$this1+7;
  var $3=IHEAP[$m_bodyCount];
  var $cmp23=($2) < ($3);
  if ($cmp23) { __label__ = 1;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end$2: do { 
    if (__label__ == 1) {

      var $m_bodies=$this1+2;
      var $4=$c;
      var $5=$v;
      var $m_positions=$this1+5;
      var $6=$c;
      var $m_positions23=$this1+5;
      var $m_velocities=$this1+6;
      var $7=$v;
      var $m_velocities28=$this1+6;
      ;
      $for_body$4: while(1) { 

        var $8=$i;
        var $9=IHEAP[$m_bodies];
        var $arrayidx=$9+$8;
        var $10=IHEAP[$arrayidx];
        $b=$10;
        var $11=$b;
        var $m_sweep=$11+7;
        var $c2=$m_sweep+4;
        var $12=$c2;
        IHEAP[$4]=IHEAP[$12]; FHEAP[$4]=FHEAP[$12]; ; IHEAP[$4+1]=IHEAP[$12+1]; FHEAP[$4+1]=FHEAP[$12+1]; ;
        var $13=$b;
        var $m_sweep3=$13+7;
        var $a4=$m_sweep3+7;
        var $14=FHEAP[$a4];
        $a=$14;
        var $15=$b;
        var $m_linearVelocity=$15+16;
        var $16=$m_linearVelocity;
        IHEAP[$5]=IHEAP[$16]; FHEAP[$5]=FHEAP[$16]; ; IHEAP[$5+1]=IHEAP[$16+1]; FHEAP[$5+1]=FHEAP[$16+1]; ;
        var $17=$b;
        var $m_angularVelocity=$17+18;
        var $18=FHEAP[$m_angularVelocity];
        $w=$18;
        var $19=$b;
        var $m_sweep5=$19+7;
        var $c0=$m_sweep5+2;
        var $20=$b;
        var $m_sweep6=$20+7;
        var $c7=$m_sweep6+4;
        var $21=$c0;
        var $22=$c7;
        IHEAP[$21]=IHEAP[$22]; FHEAP[$21]=FHEAP[$22]; ; IHEAP[$21+1]=IHEAP[$22+1]; FHEAP[$21+1]=FHEAP[$22+1]; ;
        var $23=$b;
        var $m_sweep8=$23+7;
        var $a9=$m_sweep8+7;
        var $24=FHEAP[$a9];
        var $25=$b;
        var $m_sweep10=$25+7;
        var $a0=$m_sweep10+6;
        FHEAP[$a0]=$24;
        var $26=$b;
        var $m_type=$26;
        var $27=IHEAP[$m_type];
        var $cmp11=($27)==2;
        if ($cmp11) { __label__ = 3;; } else { __label__ = 4;; }
        $if_then$$if_end$6: do { 
          if (__label__ == 3) {

            var $28=$h;
            var $29=$b;
            var $m_gravityScale=$29+35;
            var $30=FHEAP[$m_gravityScale];
            var $31=$gravity_addr;
            __ZmlfRK6b2Vec2($ref_tmp13, $30, $31);
            var $32=$b;
            var $m_invMass=$32+30;
            var $33=FHEAP[$m_invMass];
            var $34=$b;
            var $m_force=$34+19;
            __ZmlfRK6b2Vec2($ref_tmp14, $33, $m_force);
            __ZplRK6b2Vec2S1_($ref_tmp12, $ref_tmp13, $ref_tmp14);
            __ZmlfRK6b2Vec2($ref_tmp, $28, $ref_tmp12);
            __ZN6b2Vec2pLERKS_($v, $ref_tmp);
            var $35=$h;
            var $36=$b;
            var $m_invI=$36+32;
            var $37=FHEAP[$m_invI];
            var $mul=($35)*($37);
            var $38=$b;
            var $m_torque=$38+21;
            var $39=FHEAP[$m_torque];
            var $mul15=($mul)*($39);
            var $40=$w;
            var $add=($40)+($mul15);
            $w=$add;
            var $41=$h;
            var $42=$b;
            var $m_linearDamping=$42+33;
            var $43=FHEAP[$m_linearDamping];
            var $mul16=($41)*($43);
            var $sub=1-($mul16);
            var $call=__Z7b2ClampIfET_S0_S0_S0_($sub, 0, 1);
            __ZN6b2Vec2mLEf($v, $call);
            var $44=$h;
            var $45=$b;
            var $m_angularDamping=$45+34;
            var $46=FHEAP[$m_angularDamping];
            var $mul17=($44)*($46);
            var $sub18=1-($mul17);
            var $call19=__Z7b2ClampIfET_S0_S0_S0_($sub18, 0, 1);
            var $47=$w;
            var $mul20=($47)*($call19);
            $w=$mul20;
            ;
          }
        } while(0);

        var $48=$i;
        var $49=IHEAP[$m_positions];
        var $arrayidx21=$49+$48*3;
        var $c22=$arrayidx21;
        var $50=$c22;
        IHEAP[$50]=IHEAP[$6]; FHEAP[$50]=FHEAP[$6]; ; IHEAP[$50+1]=IHEAP[$6+1]; FHEAP[$50+1]=FHEAP[$6+1]; ;
        var $51=$a;
        var $52=$i;
        var $53=IHEAP[$m_positions23];
        var $arrayidx24=$53+$52*3;
        var $a25=$arrayidx24+2;
        FHEAP[$a25]=$51;
        var $54=$i;
        var $55=IHEAP[$m_velocities];
        var $arrayidx26=$55+$54*3;
        var $v27=$arrayidx26;
        var $56=$v27;
        IHEAP[$56]=IHEAP[$7]; FHEAP[$56]=FHEAP[$7]; ; IHEAP[$56+1]=IHEAP[$7+1]; FHEAP[$56+1]=FHEAP[$7+1]; ;
        var $57=$w;
        var $58=$i;
        var $59=IHEAP[$m_velocities28];
        var $arrayidx29=$59+$58*3;
        var $w30=$arrayidx29+2;
        FHEAP[$w30]=$57;
        var $60=$i;
        var $inc=($60)+1;
        $i=$inc;
        var $61=$i;
        var $62=IHEAP[$m_bodyCount];
        var $cmp=($61) < ($62);
        if (!($cmp)) { __label__ = 5;break $for_body_lr_ph$$for_end$2; }
      }
    }
  } while(0);

  __ZN7b2Timer5ResetEv($timer);
  var $step31=$solverData;
  var $63=$step_addr;
  var $64=$step31;
  var $65=$63;
  for (var mcpi_s=$65,mcpi_e=$65+6,mcpi_d=$64; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $m_positions32=$this1+5;
  var $66=IHEAP[$m_positions32];
  var $positions=$solverData+6;
  IHEAP[$positions]=$66;
  var $m_velocities33=$this1+6;
  var $67=IHEAP[$m_velocities33];
  var $velocities=$solverData+7;
  IHEAP[$velocities]=$67;
  var $step34=$contactSolverDef;
  var $68=$step_addr;
  var $69=$step34;
  var $70=$68;
  for (var mcpi_s=$70,mcpi_e=$70+6,mcpi_d=$69; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $m_contacts=$this1+3;
  var $71=IHEAP[$m_contacts];
  var $contacts=$contactSolverDef+6;
  IHEAP[$contacts]=$71;
  var $m_contactCount=$this1+9;
  var $72=IHEAP[$m_contactCount];
  var $count=$contactSolverDef+7;
  IHEAP[$count]=$72;
  var $m_positions35=$this1+5;
  var $73=IHEAP[$m_positions35];
  var $positions36=$contactSolverDef+8;
  IHEAP[$positions36]=$73;
  var $m_velocities37=$this1+6;
  var $74=IHEAP[$m_velocities37];
  var $velocities38=$contactSolverDef+9;
  IHEAP[$velocities38]=$74;
  var $m_allocator=$this1;
  var $75=IHEAP[$m_allocator];
  var $allocator=$contactSolverDef+10;
  IHEAP[$allocator]=$75;
  __ZN15b2ContactSolverC2EP18b2ContactSolverDef($contactSolver, $contactSolverDef);
  __ZN15b2ContactSolver29InitializeVelocityConstraintsEv($contactSolver);
  ;

  var $76=$step_addr;
  var $warmStarting=$76+5;
  var $77=IHEAP[$warmStarting];
  var $tobool=((($77)) & 1);
  if ($tobool) { __label__ = 7;; } else { __label__ = 17;; }
  $if_then39$$if_end41$11: do { 
    if (__label__ == 7) {

      __ZN15b2ContactSolver9WarmStartEv($contactSolver);
      ;
    }
  } while(0);

  $i42=0;
  var $m_jointCount=$this1+8;
  var $m_joints=$this1+4;
  ;
  $for_cond43$14: while(1) { 

    var $80=$i42;
    var $81=IHEAP[$m_jointCount];
    var $cmp44=($80) < ($81);
    if (!($cmp44)) { __label__ = 21;break $for_cond43$14; }

    var $82=$i42;
    var $83=IHEAP[$m_joints];
    var $arrayidx46=$83+$82;
    var $84=IHEAP[$arrayidx46];
    var $85=$84;
    var $vtable=IHEAP[$85];
    var $vfn=$vtable+7;
    var $86=IHEAP[$vfn];
    FUNCTION_TABLE[$86]($84, $solverData);
    ;

    var $87=$i42;
    var $inc49=($87)+1;
    $i42=$inc49;
    ;
  }

  var $call52=__ZNK7b2Timer15GetMillisecondsEv($timer);
  ;

  var $88=$profile_addr;
  var $solveInit=$88+3;
  FHEAP[$solveInit]=$call52;
  __ZN7b2Timer5ResetEv($timer);
  ;

  $i54=0;
  var $m_jointCount59=$this1+8;
  var $m_joints62=$this1+4;
  ;
  $for_cond55$21: while(1) { 

    var $89=$i54;
    var $90=$step_addr;
    var $velocityIterations=$90+3;
    var $91=IHEAP[$velocityIterations];
    var $cmp56=($89) < ($91);
    if (!($cmp56)) { __label__ = 31;break $for_cond55$21; }

    $j=0;
    ;
    $for_cond58$24: while(1) { 

      var $92=$j;
      var $93=IHEAP[$m_jointCount59];
      var $cmp60=($92) < ($93);
      if (!($cmp60)) { __label__ = 29;break $for_cond58$24; }

      var $94=$j;
      var $95=IHEAP[$m_joints62];
      var $arrayidx63=$95+$94;
      var $96=IHEAP[$arrayidx63];
      var $97=$96;
      var $vtable64=IHEAP[$97];
      var $vfn65=$vtable64+8;
      var $98=IHEAP[$vfn65];
      FUNCTION_TABLE[$98]($96, $solverData);
      ;

      var $99=$j;
      var $inc68=($99)+1;
      $j=$inc68;
      ;
    }

    __ZN15b2ContactSolver24SolveVelocityConstraintsEv($contactSolver);
    ;

    var $100=$i54;
    var $inc72=($100)+1;
    $i54=$inc72;
    ;
  }

  __ZN15b2ContactSolver13StoreImpulsesEv($contactSolver);
  var $call76=__ZNK7b2Timer15GetMillisecondsEv($timer);
  ;

  var $101=$profile_addr;
  var $solveVelocity=$101+4;
  FHEAP[$solveVelocity]=$call76;
  $i77=0;
  var $102=$i77;
  var $m_bodyCount79=$this1+7;
  var $103=IHEAP[$m_bodyCount79];
  var $cmp8013=($102) < ($103);
  if ($cmp8013) { __label__ = 33;; } else { __label__ = 39;; }
  $invoke_cont98_lr_ph$$for_end136$32: do { 
    if (__label__ == 33) {

      var $m_positions83=$this1+5;
      var $104=$c82;
      var $m_positions87=$this1+5;
      var $m_velocities91=$this1+6;
      var $105=$v90;
      var $m_velocities95=$this1+6;
      var $m_positions122=$this1+5;
      var $106=$c82;
      var $m_positions125=$this1+5;
      var $m_velocities128=$this1+6;
      var $107=$v90;
      var $m_velocities131=$this1+6;
      ;
      $invoke_cont98$34: while(1) { 

        var $108=$i77;
        var $109=IHEAP[$m_positions83];
        var $arrayidx84=$109+$108*3;
        var $c85=$arrayidx84;
        var $110=$c85;
        IHEAP[$104]=IHEAP[$110]; FHEAP[$104]=FHEAP[$110]; ; IHEAP[$104+1]=IHEAP[$110+1]; FHEAP[$104+1]=FHEAP[$110+1]; ;
        var $111=$i77;
        var $112=IHEAP[$m_positions87];
        var $arrayidx88=$112+$111*3;
        var $a89=$arrayidx88+2;
        var $113=FHEAP[$a89];
        $a86=$113;
        var $114=$i77;
        var $115=IHEAP[$m_velocities91];
        var $arrayidx92=$115+$114*3;
        var $v93=$arrayidx92;
        var $116=$v93;
        IHEAP[$105]=IHEAP[$116]; FHEAP[$105]=FHEAP[$116]; ; IHEAP[$105+1]=IHEAP[$116+1]; FHEAP[$105+1]=FHEAP[$116+1]; ;
        var $117=$i77;
        var $118=IHEAP[$m_velocities95];
        var $arrayidx96=$118+$117*3;
        var $w97=$arrayidx96+2;
        var $119=FHEAP[$w97];
        $w94=$119;
        var $120=$h;
        __ZmlfRK6b2Vec2($translation, $120, $v90);
        var $call100=__Z5b2DotRK6b2Vec2S1_($translation, $translation);
        var $cmp101=($call100) > 4;
        if ($cmp101) { __label__ = 35;; } else { __label__ = 36;; }
        $invoke_cont103$$if_end106$36: do { 
          if (__label__ == 35) {

            var $call104=__ZNK6b2Vec26LengthEv($translation);
            var $div=2/($call104);
            $ratio=$div;
            var $121=$ratio;
            __ZN6b2Vec2mLEf($v90, $121);
            ;
          }
        } while(0);

        var $122=$h;
        var $123=$w94;
        var $mul107=($122)*($123);
        $rotation=$mul107;
        var $124=$rotation;
        var $125=$rotation;
        var $mul108=($124)*($125);
        var $cmp109=($mul108) > 2.4674012660980225;
        if ($cmp109) { __label__ = 37;; } else { __label__ = 38;; }
        $if_then110$$invoke_cont118$39: do { 
          if (__label__ == 37) {

            var $126=$rotation;
            var $call113=__Z5b2AbsIfET_S0_($126);
            var $div114=1.5707963705062866/($call113);
            $ratio111=$div114;
            var $127=$ratio111;
            var $128=$w94;
            var $mul115=($128)*($127);
            $w94=$mul115;
            ;
          }
        } while(0);

        var $129=$h;
        __ZmlfRK6b2Vec2($ref_tmp117, $129, $v90);
        __ZN6b2Vec2pLERKS_($c82, $ref_tmp117);
        var $130=$h;
        var $131=$w94;
        var $mul120=($130)*($131);
        var $132=$a86;
        var $add121=($132)+($mul120);
        $a86=$add121;
        var $133=$i77;
        var $134=IHEAP[$m_positions122];
        var $arrayidx123=$134+$133*3;
        var $c124=$arrayidx123;
        var $135=$c124;
        IHEAP[$135]=IHEAP[$106]; FHEAP[$135]=FHEAP[$106]; ; IHEAP[$135+1]=IHEAP[$106+1]; FHEAP[$135+1]=FHEAP[$106+1]; ;
        var $136=$a86;
        var $137=$i77;
        var $138=IHEAP[$m_positions125];
        var $arrayidx126=$138+$137*3;
        var $a127=$arrayidx126+2;
        FHEAP[$a127]=$136;
        var $139=$i77;
        var $140=IHEAP[$m_velocities128];
        var $arrayidx129=$140+$139*3;
        var $v130=$arrayidx129;
        var $141=$v130;
        IHEAP[$141]=IHEAP[$107]; FHEAP[$141]=FHEAP[$107]; ; IHEAP[$141+1]=IHEAP[$107+1]; FHEAP[$141+1]=FHEAP[$107+1]; ;
        var $142=$w94;
        var $143=$i77;
        var $144=IHEAP[$m_velocities131];
        var $arrayidx132=$144+$143*3;
        var $w133=$arrayidx132+2;
        FHEAP[$w133]=$142;
        var $145=$i77;
        var $inc135=($145)+1;
        $i77=$inc135;
        var $146=$i77;
        var $147=IHEAP[$m_bodyCount79];
        var $cmp80=($146) < ($147);
        if (!($cmp80)) { __label__ = 39;break $invoke_cont98_lr_ph$$for_end136$32; }
      }
    }
  } while(0);

  __ZN7b2Timer5ResetEv($timer);
  ;

  $positionSolved=0;
  $i138=0;
  var $m_jointCount147=$this1+8;
  var $m_joints150=$this1+4;
  ;
  $for_cond139$44: while(1) { 

    var $148=$i138;
    var $149=$step_addr;
    var $positionIterations=$149+4;
    var $150=IHEAP[$positionIterations];
    var $cmp140=($148) < ($150);
    if (!($cmp140)) { __label__ = 53;break $for_cond139$44; }

    var $call143=__ZN15b2ContactSolver24SolvePositionConstraintsEv($contactSolver);
    ;

    var $frombool144=($call143);
    $contactsOkay=$frombool144;
    $jointsOkay=1;
    $i145=0;
    ;
    $for_cond146$48: while(1) { 

      var $151=$i145;
      var $152=IHEAP[$m_jointCount147];
      var $cmp148=($151) < ($152);
      if (!($cmp148)) { __label__ = 49;break $for_cond146$48; }

      var $153=$i145;
      var $154=IHEAP[$m_joints150];
      var $arrayidx151=$154+$153;
      var $155=IHEAP[$arrayidx151];
      var $156=$155;
      var $vtable152=IHEAP[$156];
      var $vfn153=$vtable152+9;
      var $157=IHEAP[$vfn153];
      var $call155=FUNCTION_TABLE[$157]($155, $solverData);
      ;

      var $frombool156=($call155);
      $jointOkay=$frombool156;
      var $158=$jointsOkay;
      var $tobool157=((($158)) & 1);
      if ($tobool157) { __label__ = 47;; } else { var $160 = 0;__label__ = 48;; }
      $land_rhs$$land_end$52: do { 
        if (__label__ == 47) {

          var $159=$jointOkay;
          var $tobool158=((($159)) & 1);
          var $160 = $tobool158;;
        }
      } while(0);

      var $160;
      var $frombool159=($160);
      $jointsOkay=$frombool159;
      var $161=$i145;
      var $inc161=($161)+1;
      $i145=$inc161;
      ;
    }

    var $162=$contactsOkay;
    var $tobool163=((($162)) & 1);
    if ($tobool163) { __label__ = 50;; } else { __label__ = 52;; }
    $land_lhs_true$$for_inc167$56: do { 
      if (__label__ == 50) {

        var $163=$jointsOkay;
        var $tobool164=((($163)) & 1);
        if ($tobool164) { __label__ = 51;break $for_cond139$44; }
      }
    } while(0);

    var $164=$i138;
    var $inc168=($164)+1;
    $i138=$inc168;
    ;
  }
  $for_end169$$if_then165$59: do { 
    if (__label__ == 51) {

      $positionSolved=1;
      ;
    }
  } while(0);

  $i170=0;
  var $m_bodyCount172=$this1+7;
  var $m_bodies175=$this1+2;
  var $m_positions179=$this1+5;
  var $m_positions182=$this1+5;
  var $m_velocities188=$this1+6;
  var $m_velocities191=$this1+6;
  ;
  $for_cond171$62: while(1) { 

    var $165=$i170;
    var $166=IHEAP[$m_bodyCount172];
    var $cmp173=($165) < ($166);
    if (!($cmp173)) { __label__ = 57;break $for_cond171$62; }

    var $167=$i170;
    var $168=IHEAP[$m_bodies175];
    var $arrayidx176=$168+$167;
    var $169=IHEAP[$arrayidx176];
    $body=$169;
    var $170=$body;
    var $m_sweep177=$170+7;
    var $c178=$m_sweep177+4;
    var $171=$i170;
    var $172=IHEAP[$m_positions179];
    var $arrayidx180=$172+$171*3;
    var $c181=$arrayidx180;
    var $173=$c178;
    var $174=$c181;
    IHEAP[$173]=IHEAP[$174]; FHEAP[$173]=FHEAP[$174]; ; IHEAP[$173+1]=IHEAP[$174+1]; FHEAP[$173+1]=FHEAP[$174+1]; ;
    var $175=$i170;
    var $176=IHEAP[$m_positions182];
    var $arrayidx183=$176+$175*3;
    var $a184=$arrayidx183+2;
    var $177=FHEAP[$a184];
    var $178=$body;
    var $m_sweep185=$178+7;
    var $a186=$m_sweep185+7;
    FHEAP[$a186]=$177;
    var $179=$body;
    var $m_linearVelocity187=$179+16;
    var $180=$i170;
    var $181=IHEAP[$m_velocities188];
    var $arrayidx189=$181+$180*3;
    var $v190=$arrayidx189;
    var $182=$m_linearVelocity187;
    var $183=$v190;
    IHEAP[$182]=IHEAP[$183]; FHEAP[$182]=FHEAP[$183]; ; IHEAP[$182+1]=IHEAP[$183+1]; FHEAP[$182+1]=FHEAP[$183+1]; ;
    var $184=$i170;
    var $185=IHEAP[$m_velocities191];
    var $arrayidx192=$185+$184*3;
    var $w193=$arrayidx192+2;
    var $186=FHEAP[$w193];
    var $187=$body;
    var $m_angularVelocity194=$187+18;
    FHEAP[$m_angularVelocity194]=$186;
    var $188=$body;
    __ZN6b2Body20SynchronizeTransformEv($188);
    ;

    var $189=$i170;
    var $inc197=($189)+1;
    $i170=$inc197;
    ;
  }

  var $call200=__ZNK7b2Timer15GetMillisecondsEv($timer);
  ;

  var $190=$profile_addr;
  var $solvePosition=$190+5;
  FHEAP[$solvePosition]=$call200;
  var $m_velocityConstraints=$contactSolver+10;
  var $191=IHEAP[$m_velocityConstraints];
  __ZN8b2Island6ReportEPK27b2ContactVelocityConstraint($this1, $191);
  ;

  var $192=$allowSleep_addr;
  var $tobool202=((($192)) & 1);
  if ($tobool202) { __label__ = 60;; } else { __label__ = 75;; }
  $if_then203$$if_end255$69: do { 
    if (__label__ == 60) {

      $minSleepTime=3.4028234663852886e+38;
      $linTolSqr=0.00009999999747378752;
      $angTolSqr=0.001218469929881394;
      $i204=0;
      var $193=$i204;
      var $m_bodyCount206=$this1+7;
      var $194=IHEAP[$m_bodyCount206];
      var $cmp2073=($193) < ($194);
      if ($cmp2073) { __label__ = 61;; } else { __label__ = 69;; }
      $for_body208_lr_ph$$for_end237$71: do { 
        if (__label__ == 61) {

          var $m_bodies210=$this1+2;
          ;
          $for_body208$73: while(1) { 

            var $195=$i204;
            var $196=IHEAP[$m_bodies210];
            var $arrayidx211=$196+$195;
            var $197=IHEAP[$arrayidx211];
            $b209=$197;
            var $198=$b209;
            var $call213=__ZNK6b2Body7GetTypeEv($198);
            var $cmp214=($call213)==0;
            if ($cmp214) { __label__ = 68;; } else { __label__ = 63;; }
            $for_inc235$$if_end216$75: do { 
              if (__label__ == 63) {

                var $199=$b209;
                var $m_flags=$199+1;
                var $200=IHEAP[$m_flags];
                var $conv=($200);
                var $and=($conv) & 4;
                var $cmp217=($and)==0;
                if ($cmp217) { __label__ = 66;; } else { __label__ = 64;; }
                $if_then228$$lor_lhs_false$77: do { 
                  if (__label__ == 64) {

                    var $201=$b209;
                    var $m_angularVelocity218=$201+18;
                    var $202=FHEAP[$m_angularVelocity218];
                    var $203=$b209;
                    var $m_angularVelocity219=$203+18;
                    var $204=FHEAP[$m_angularVelocity219];
                    var $mul220=($202)*($204);
                    var $cmp221=($mul220) > 0.001218469929881394;
                    if ($cmp221) { __label__ = 66;break $if_then228$$lor_lhs_false$77; }

                    var $205=$b209;
                    var $m_linearVelocity223=$205+16;
                    var $206=$b209;
                    var $m_linearVelocity224=$206+16;
                    var $call226=__Z5b2DotRK6b2Vec2S1_($m_linearVelocity223, $m_linearVelocity224);
                    var $cmp227=($call226) > 0.00009999999747378752;
                    if ($cmp227) { __label__ = 66;break $if_then228$$lor_lhs_false$77; }

                    var $208=$h;
                    var $209=$b209;
                    var $m_sleepTime229=$209+36;
                    var $210=FHEAP[$m_sleepTime229];
                    var $add230=($210)+($208);
                    FHEAP[$m_sleepTime229]=$add230;
                    var $211=$minSleepTime;
                    var $212=$b209;
                    var $m_sleepTime231=$212+36;
                    var $213=FHEAP[$m_sleepTime231];
                    var $call233=__Z5b2MinIfET_S0_S0_($211, $213);
                    $minSleepTime=$call233;
                    __label__ = 68;break $for_inc235$$if_end216$75;
                  }
                } while(0);

                var $207=$b209;
                var $m_sleepTime=$207+36;
                FHEAP[$m_sleepTime]=0;
                $minSleepTime=0;
                ;
              }
            } while(0);

            var $214=$i204;
            var $inc236=($214)+1;
            $i204=$inc236;
            var $215=$i204;
            var $216=IHEAP[$m_bodyCount206];
            var $cmp207=($215) < ($216);
            if (!($cmp207)) { __label__ = 69;break $for_body208_lr_ph$$for_end237$71; }
          }
        }
      } while(0);

      var $217=$minSleepTime;
      var $cmp238=($217) >= 0.5;
      if (!($cmp238)) { __label__ = 75;break $if_then203$$if_end255$69; }

      var $218=$positionSolved;
      var $tobool240=((($218)) & 1);
      if (!($tobool240)) { __label__ = 75;break $if_then203$$if_end255$69; }

      $i242=0;
      var $m_bodyCount244=$this1+7;
      var $m_bodies248=$this1+2;
      ;
      $for_cond243$86: while(1) { 

        var $219=$i242;
        var $220=IHEAP[$m_bodyCount244];
        var $cmp245=($219) < ($220);
        if (!($cmp245)) { __label__ = 75;break $if_then203$$if_end255$69; }

        var $221=$i242;
        var $222=IHEAP[$m_bodies248];
        var $arrayidx249=$222+$221;
        var $223=IHEAP[$arrayidx249];
        $b247=$223;
        var $224=$b247;
        __ZN6b2Body8SetAwakeEb($224, 0);
        ;

        var $225=$i242;
        var $inc252=($225)+1;
        $i242=$inc252;
        ;
      }
    }
  } while(0);

  __ZN15b2ContactSolverD2Ev($contactSolver);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN8b2Island5SolveEP9b2ProfileRK10b2TimeStepRK6b2Vec2b["X"]=1;

function __ZN7b2Joint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  __Z5b2LogPKcz(__str3245, allocate(1, "i32", ALLOC_STACK));
  ;
  return;
  return;
}


function __ZN7b2JointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN7b2JointD2Ev($this1);
  ;
  return;
  return;
}


function __ZN7b2JointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN7b2JointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN7b2Joint7DestroyEPS_P16b2BlockAllocator($joint, $allocator) {
  ;
  var __label__;

  var $joint_addr;
  var $allocator_addr;
  $joint_addr=$joint;
  $allocator_addr=$allocator;
  var $0=$joint_addr;
  var $1=$0;
  var $vtable=IHEAP[$1];
  var $vfn=$vtable+5;
  var $2=IHEAP[$vfn];
  FUNCTION_TABLE[$2]($0);
  var $3=$joint_addr;
  var $m_type=$3+1;
  var $4=IHEAP[$m_type];
  if ($4 == 3) {
    __label__ = 1;;
  }
  else if ($4 == 5) {
    __label__ = 2;;
  }
  else if ($4 == 2) {
    __label__ = 3;;
  }
  else if ($4 == 1) {
    __label__ = 4;;
  }
  else if ($4 == 4) {
    __label__ = 5;;
  }
  else if ($4 == 6) {
    __label__ = 6;;
  }
  else if ($4 == 7) {
    __label__ = 7;;
  }
  else if ($4 == 8) {
    __label__ = 8;;
  }
  else if ($4 == 9) {
    __label__ = 9;;
  }
  else if ($4 == 10) {
    __label__ = 10;;
  }
  else {
  __label__ = 11;;
  }
  
  $sw_default$$sw_bb$$sw_bb1$$sw_bb2$$sw_bb3$$sw_bb4$$sw_bb5$$sw_bb6$$sw_bb7$$sw_bb8$$sw_bb9$82: do { 
    if (__label__ == 11) {

      ___assert_func(__str242, 166, ___PRETTY_FUNCTION____ZN7b2Joint7DestroyEPS_P16b2BlockAllocator, __str2368);
      ;
    }
    else if (__label__ == 1) {

      var $5=$allocator_addr;
      var $6=$joint_addr;
      var $7=$6;
      __ZN16b2BlockAllocator4FreeEPvi($5, $7, 176);
      ;
    }
    else if (__label__ == 2) {

      var $8=$allocator_addr;
      var $9=$joint_addr;
      var $10=$9;
      __ZN16b2BlockAllocator4FreeEPvi($8, $10, 168);
      ;
    }
    else if (__label__ == 3) {

      var $11=$allocator_addr;
      var $12=$joint_addr;
      var $13=$12;
      __ZN16b2BlockAllocator4FreeEPvi($11, $13, 256);
      ;
    }
    else if (__label__ == 4) {

      var $14=$allocator_addr;
      var $15=$joint_addr;
      var $16=$15;
      __ZN16b2BlockAllocator4FreeEPvi($14, $16, 228);
      ;
    }
    else if (__label__ == 5) {

      var $17=$allocator_addr;
      var $18=$joint_addr;
      var $19=$18;
      __ZN16b2BlockAllocator4FreeEPvi($17, $19, 196);
      ;
    }
    else if (__label__ == 6) {

      var $20=$allocator_addr;
      var $21=$joint_addr;
      var $22=$21;
      __ZN16b2BlockAllocator4FreeEPvi($20, $22, 276);
      ;
    }
    else if (__label__ == 7) {

      var $23=$allocator_addr;
      var $24=$joint_addr;
      var $25=$24;
      __ZN16b2BlockAllocator4FreeEPvi($23, $25, 224);
      ;
    }
    else if (__label__ == 8) {

      var $26=$allocator_addr;
      var $27=$joint_addr;
      var $28=$27;
      __ZN16b2BlockAllocator4FreeEPvi($26, $28, 208);
      ;
    }
    else if (__label__ == 9) {

      var $29=$allocator_addr;
      var $30=$joint_addr;
      var $31=$30;
      __ZN16b2BlockAllocator4FreeEPvi($29, $31, 180);
      ;
    }
    else if (__label__ == 10) {

      var $32=$allocator_addr;
      var $33=$joint_addr;
      var $34=$33;
      __ZN16b2BlockAllocator4FreeEPvi($32, $34, 168);
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN7b2Joint7DestroyEPS_P16b2BlockAllocator["X"]=1;

function __ZN7b2JointC2EPK10b2JointDef($this, $def) {
  ;
  var __label__;

  var $this_addr;
  var $def_addr;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  IHEAP[$0]=__ZTV7b2Joint+2;
  var $1=$def_addr;
  var $bodyA=$1+2;
  var $2=IHEAP[$bodyA];
  var $3=$def_addr;
  var $bodyB=$3+3;
  var $4=IHEAP[$bodyB];
  var $cmp=($2)!=($4);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$96: do { 
    if (__label__ == 1) {

      ___assert_func(__str242, 173, ___PRETTY_FUNCTION____ZN7b2JointC2EPK10b2JointDef, __str2244);
      ;
    }
  } while(0);

  var $5=$def_addr;
  var $type=$5;
  var $6=IHEAP[$type];
  var $m_type=$this1+1;
  IHEAP[$m_type]=$6;
  var $m_prev=$this1+2;
  IHEAP[$m_prev]=0;
  var $m_next=$this1+3;
  IHEAP[$m_next]=0;
  var $7=$def_addr;
  var $bodyA2=$7+2;
  var $8=IHEAP[$bodyA2];
  var $m_bodyA=$this1+12;
  IHEAP[$m_bodyA]=$8;
  var $9=$def_addr;
  var $bodyB3=$9+3;
  var $10=IHEAP[$bodyB3];
  var $m_bodyB=$this1+13;
  IHEAP[$m_bodyB]=$10;
  var $m_index=$this1+14;
  IHEAP[$m_index]=0;
  var $11=$def_addr;
  var $collideConnected=$11+4;
  var $12=IHEAP[$collideConnected];
  var $tobool=((($12)) & 1);
  var $m_collideConnected=$this1+16;
  var $frombool=($tobool);
  IHEAP[$m_collideConnected]=$frombool;
  var $m_islandFlag=$this1+15;
  IHEAP[$m_islandFlag]=0;
  var $13=$def_addr;
  var $userData=$13+1;
  var $14=IHEAP[$userData];
  var $m_userData=$this1+17;
  IHEAP[$m_userData]=$14;
  var $m_edgeA4=$this1+4;
  var $joint=$m_edgeA4+1;
  IHEAP[$joint]=0;
  var $m_edgeA5=$this1+4;
  var $other=$m_edgeA5;
  IHEAP[$other]=0;
  var $m_edgeA6=$this1+4;
  var $prev=$m_edgeA6+2;
  IHEAP[$prev]=0;
  var $m_edgeA7=$this1+4;
  var $next=$m_edgeA7+3;
  IHEAP[$next]=0;
  var $m_edgeB8=$this1+8;
  var $joint9=$m_edgeB8+1;
  IHEAP[$joint9]=0;
  var $m_edgeB10=$this1+8;
  var $other11=$m_edgeB10;
  IHEAP[$other11]=0;
  var $m_edgeB12=$this1+8;
  var $prev13=$m_edgeB12+2;
  IHEAP[$prev13]=0;
  var $m_edgeB14=$this1+8;
  var $next15=$m_edgeB14+3;
  IHEAP[$next15]=0;
  ;
  return;
  return;
}
__ZN7b2JointC2EPK10b2JointDef["X"]=1;

function __ZN8b2Island8SolveTOIERK10b2TimeStepii($this, $subStep, $toiIndexA, $toiIndexB) {
  var __stackBase__  = STACKTOP; STACKTOP += 32;
  var __label__;

  var $this_addr;
  var $subStep_addr;
  var $toiIndexA_addr;
  var $toiIndexB_addr;
  var $i;
  var $b;
  var $contactSolverDef=__stackBase__;
  var $contactSolver=__stackBase__+11;
  var $i20;
  var $contactsOkay;
  var $exn_slot;
  var $ehselector_slot;
  var $i54;
  var $h;
  var $i62;
  var $c67=__stackBase__+24;
  var $a71;
  var $v75=__stackBase__+26;
  var $w79;
  var $translation=__stackBase__+28;
  var $ratio;
  var $rotation;
  var $ratio95;
  var $ref_tmp=__stackBase__+30;
  var $body;
  $this_addr=$this;
  $subStep_addr=$subStep;
  $toiIndexA_addr=$toiIndexA;
  $toiIndexB_addr=$toiIndexB;
  var $this1=$this_addr;
  var $0=$toiIndexA_addr;
  var $m_bodyCount=$this1+7;
  var $1=IHEAP[$m_bodyCount];
  var $cmp=($0) < ($1);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$2: do { 
    if (__label__ == 1) {

      ___assert_func(__str239, 386, ___PRETTY_FUNCTION____ZN8b2Island8SolveTOIERK10b2TimeStepii, __str1240);
      ;
    }
  } while(0);

  var $2=$toiIndexB_addr;
  var $m_bodyCount2=$this1+7;
  var $3=IHEAP[$m_bodyCount2];
  var $cmp3=($2) < ($3);
  if ($cmp3) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end6$$cond_false5$5: do { 
    if (__label__ == 3) {

      ___assert_func(__str239, 387, ___PRETTY_FUNCTION____ZN8b2Island8SolveTOIERK10b2TimeStepii, __str2241);
      ;
    }
  } while(0);

  $i=0;
  var $4=$i;
  var $m_bodyCount7=$this1+7;
  var $5=IHEAP[$m_bodyCount7];
  var $cmp89=($4) < ($5);
  if ($cmp89) { __label__ = 5;; } else { __label__ = 7;; }
  $for_body_lr_ph$$for_end$8: do { 
    if (__label__ == 5) {

      var $m_bodies=$this1+2;
      var $m_positions=$this1+5;
      var $m_positions12=$this1+5;
      var $m_velocities=$this1+6;
      var $m_velocities16=$this1+6;
      ;
      $for_body$10: while(1) { 

        var $6=$i;
        var $7=IHEAP[$m_bodies];
        var $arrayidx=$7+$6;
        var $8=IHEAP[$arrayidx];
        $b=$8;
        var $9=$i;
        var $10=IHEAP[$m_positions];
        var $arrayidx9=$10+$9*3;
        var $c=$arrayidx9;
        var $11=$b;
        var $m_sweep=$11+7;
        var $c10=$m_sweep+4;
        var $12=$c;
        var $13=$c10;
        IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
        var $14=$b;
        var $m_sweep11=$14+7;
        var $a=$m_sweep11+7;
        var $15=FHEAP[$a];
        var $16=$i;
        var $17=IHEAP[$m_positions12];
        var $arrayidx13=$17+$16*3;
        var $a14=$arrayidx13+2;
        FHEAP[$a14]=$15;
        var $18=$i;
        var $19=IHEAP[$m_velocities];
        var $arrayidx15=$19+$18*3;
        var $v=$arrayidx15;
        var $20=$b;
        var $m_linearVelocity=$20+16;
        var $21=$v;
        var $22=$m_linearVelocity;
        IHEAP[$21]=IHEAP[$22]; FHEAP[$21]=FHEAP[$22]; ; IHEAP[$21+1]=IHEAP[$22+1]; FHEAP[$21+1]=FHEAP[$22+1]; ;
        var $23=$b;
        var $m_angularVelocity=$23+18;
        var $24=FHEAP[$m_angularVelocity];
        var $25=$i;
        var $26=IHEAP[$m_velocities16];
        var $arrayidx17=$26+$25*3;
        var $w=$arrayidx17+2;
        FHEAP[$w]=$24;
        var $27=$i;
        var $inc=($27)+1;
        $i=$inc;
        var $28=$i;
        var $29=IHEAP[$m_bodyCount7];
        var $cmp8=($28) < ($29);
        if (!($cmp8)) { __label__ = 7;break $for_body_lr_ph$$for_end$8; }
      }
    }
  } while(0);

  var $m_contacts=$this1+3;
  var $30=IHEAP[$m_contacts];
  var $contacts=$contactSolverDef+6;
  IHEAP[$contacts]=$30;
  var $m_contactCount=$this1+9;
  var $31=IHEAP[$m_contactCount];
  var $count=$contactSolverDef+7;
  IHEAP[$count]=$31;
  var $m_allocator=$this1;
  var $32=IHEAP[$m_allocator];
  var $allocator=$contactSolverDef+10;
  IHEAP[$allocator]=$32;
  var $step=$contactSolverDef;
  var $33=$subStep_addr;
  var $34=$step;
  var $35=$33;
  for (var mcpi_s=$35,mcpi_e=$35+6,mcpi_d=$34; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $m_positions18=$this1+5;
  var $36=IHEAP[$m_positions18];
  var $positions=$contactSolverDef+8;
  IHEAP[$positions]=$36;
  var $m_velocities19=$this1+6;
  var $37=IHEAP[$m_velocities19];
  var $velocities=$contactSolverDef+9;
  IHEAP[$velocities]=$37;
  __ZN15b2ContactSolverC2EP18b2ContactSolverDef($contactSolver, $contactSolverDef);
  $i20=0;
  ;
  $for_cond21$13: while(1) { 

    var $38=$i20;
    var $39=$subStep_addr;
    var $positionIterations=$39+4;
    var $40=IHEAP[$positionIterations];
    var $cmp22=($38) < ($40);
    if (!($cmp22)) { __label__ = 17;break $for_cond21$13; }

    var $41=$toiIndexA_addr;
    var $42=$toiIndexB_addr;
    var $call=__ZN15b2ContactSolver27SolveTOIPositionConstraintsEii($contactSolver, $41, $42);
    ;

    var $frombool=($call);
    $contactsOkay=$frombool;
    var $43=$contactsOkay;
    var $tobool=((($43)) & 1);
    if ($tobool) { __label__ = 17;break $for_cond21$13; }

    var $46=$i20;
    var $inc25=($46)+1;
    $i20=$inc25;
    ;
  }

  var $47=$toiIndexA_addr;
  var $m_bodies27=$this1+2;
  var $48=IHEAP[$m_bodies27];
  var $arrayidx28=$48+$47;
  var $49=IHEAP[$arrayidx28];
  var $m_sweep29=$49+7;
  var $c0=$m_sweep29+2;
  var $50=$toiIndexA_addr;
  var $m_positions30=$this1+5;
  var $51=IHEAP[$m_positions30];
  var $arrayidx31=$51+$50*3;
  var $c32=$arrayidx31;
  var $52=$c0;
  var $53=$c32;
  IHEAP[$52]=IHEAP[$53]; FHEAP[$52]=FHEAP[$53]; ; IHEAP[$52+1]=IHEAP[$53+1]; FHEAP[$52+1]=FHEAP[$53+1]; ;
  var $54=$toiIndexA_addr;
  var $m_positions33=$this1+5;
  var $55=IHEAP[$m_positions33];
  var $arrayidx34=$55+$54*3;
  var $a35=$arrayidx34+2;
  var $56=FHEAP[$a35];
  var $57=$toiIndexA_addr;
  var $m_bodies36=$this1+2;
  var $58=IHEAP[$m_bodies36];
  var $arrayidx37=$58+$57;
  var $59=IHEAP[$arrayidx37];
  var $m_sweep38=$59+7;
  var $a0=$m_sweep38+6;
  FHEAP[$a0]=$56;
  var $60=$toiIndexB_addr;
  var $m_bodies39=$this1+2;
  var $61=IHEAP[$m_bodies39];
  var $arrayidx40=$61+$60;
  var $62=IHEAP[$arrayidx40];
  var $m_sweep41=$62+7;
  var $c042=$m_sweep41+2;
  var $63=$toiIndexB_addr;
  var $m_positions43=$this1+5;
  var $64=IHEAP[$m_positions43];
  var $arrayidx44=$64+$63*3;
  var $c45=$arrayidx44;
  var $65=$c042;
  var $66=$c45;
  IHEAP[$65]=IHEAP[$66]; FHEAP[$65]=FHEAP[$66]; ; IHEAP[$65+1]=IHEAP[$66+1]; FHEAP[$65+1]=FHEAP[$66+1]; ;
  var $67=$toiIndexB_addr;
  var $m_positions46=$this1+5;
  var $68=IHEAP[$m_positions46];
  var $arrayidx47=$68+$67*3;
  var $a48=$arrayidx47+2;
  var $69=FHEAP[$a48];
  var $70=$toiIndexB_addr;
  var $m_bodies49=$this1+2;
  var $71=IHEAP[$m_bodies49];
  var $arrayidx50=$71+$70;
  var $72=IHEAP[$arrayidx50];
  var $m_sweep51=$72+7;
  var $a052=$m_sweep51+6;
  FHEAP[$a052]=$69;
  __ZN15b2ContactSolver29InitializeVelocityConstraintsEv($contactSolver);
  ;

  $i54=0;
  ;
  $for_cond55$20: while(1) { 

    var $73=$i54;
    var $74=$subStep_addr;
    var $velocityIterations=$74+3;
    var $75=IHEAP[$velocityIterations];
    var $cmp56=($73) < ($75);
    if (!($cmp56)) { __label__ = 22;break $for_cond55$20; }

    __ZN15b2ContactSolver24SolveVelocityConstraintsEv($contactSolver);
    ;

    var $76=$i54;
    var $inc60=($76)+1;
    $i54=$inc60;
    ;
  }

  var $77=$subStep_addr;
  var $dt=$77;
  var $78=FHEAP[$dt];
  $h=$78;
  $i62=0;
  var $m_bodyCount64=$this1+7;
  var $m_positions68=$this1+5;
  var $79=$c67;
  var $m_positions72=$this1+5;
  var $m_velocities76=$this1+6;
  var $80=$v75;
  var $m_velocities80=$this1+6;
  var $m_positions104=$this1+5;
  var $81=$c67;
  var $m_positions107=$this1+5;
  var $m_velocities110=$this1+6;
  var $82=$v75;
  var $m_velocities113=$this1+6;
  var $m_bodies116=$this1+2;
  var $83=$c67;
  var $84=$v75;
  ;
  $for_cond63$25: while(1) { 

    var $85=$i62;
    var $86=IHEAP[$m_bodyCount64];
    var $cmp65=($85) < ($86);
    if (!($cmp65)) { __label__ = 30;break $for_cond63$25; }

    var $87=$i62;
    var $88=IHEAP[$m_positions68];
    var $arrayidx69=$88+$87*3;
    var $c70=$arrayidx69;
    var $89=$c70;
    IHEAP[$79]=IHEAP[$89]; FHEAP[$79]=FHEAP[$89]; ; IHEAP[$79+1]=IHEAP[$89+1]; FHEAP[$79+1]=FHEAP[$89+1]; ;
    var $90=$i62;
    var $91=IHEAP[$m_positions72];
    var $arrayidx73=$91+$90*3;
    var $a74=$arrayidx73+2;
    var $92=FHEAP[$a74];
    $a71=$92;
    var $93=$i62;
    var $94=IHEAP[$m_velocities76];
    var $arrayidx77=$94+$93*3;
    var $v78=$arrayidx77;
    var $95=$v78;
    IHEAP[$80]=IHEAP[$95]; FHEAP[$80]=FHEAP[$95]; ; IHEAP[$80+1]=IHEAP[$95+1]; FHEAP[$80+1]=FHEAP[$95+1]; ;
    var $96=$i62;
    var $97=IHEAP[$m_velocities80];
    var $arrayidx81=$97+$96*3;
    var $w82=$arrayidx81+2;
    var $98=FHEAP[$w82];
    $w79=$98;
    var $99=$h;
    __ZmlfRK6b2Vec2($translation, $99, $v75);
    var $call85=__Z5b2DotRK6b2Vec2S1_($translation, $translation);
    var $cmp86=($call85) > 4;
    if ($cmp86) { __label__ = 25;; } else { __label__ = 26;; }
    $invoke_cont88$$if_end91$28: do { 
      if (__label__ == 25) {

        var $call89=__ZNK6b2Vec26LengthEv($translation);
        var $div=2/($call89);
        $ratio=$div;
        var $100=$ratio;
        __ZN6b2Vec2mLEf($v75, $100);
        ;
      }
    } while(0);

    var $101=$h;
    var $102=$w79;
    var $mul=($101)*($102);
    $rotation=$mul;
    var $103=$rotation;
    var $104=$rotation;
    var $mul92=($103)*($104);
    var $cmp93=($mul92) > 2.4674012660980225;
    if ($cmp93) { __label__ = 27;; } else { __label__ = 28;; }
    $if_then94$$invoke_cont101$31: do { 
      if (__label__ == 27) {

        var $105=$rotation;
        var $call97=__Z5b2AbsIfET_S0_($105);
        var $div98=1.5707963705062866/($call97);
        $ratio95=$div98;
        var $106=$ratio95;
        var $107=$w79;
        var $mul99=($107)*($106);
        $w79=$mul99;
        ;
      }
    } while(0);

    var $108=$h;
    __ZmlfRK6b2Vec2($ref_tmp, $108, $v75);
    __ZN6b2Vec2pLERKS_($c67, $ref_tmp);
    var $109=$h;
    var $110=$w79;
    var $mul103=($109)*($110);
    var $111=$a71;
    var $add=($111)+($mul103);
    $a71=$add;
    var $112=$i62;
    var $113=IHEAP[$m_positions104];
    var $arrayidx105=$113+$112*3;
    var $c106=$arrayidx105;
    var $114=$c106;
    IHEAP[$114]=IHEAP[$81]; FHEAP[$114]=FHEAP[$81]; ; IHEAP[$114+1]=IHEAP[$81+1]; FHEAP[$114+1]=FHEAP[$81+1]; ;
    var $115=$a71;
    var $116=$i62;
    var $117=IHEAP[$m_positions107];
    var $arrayidx108=$117+$116*3;
    var $a109=$arrayidx108+2;
    FHEAP[$a109]=$115;
    var $118=$i62;
    var $119=IHEAP[$m_velocities110];
    var $arrayidx111=$119+$118*3;
    var $v112=$arrayidx111;
    var $120=$v112;
    IHEAP[$120]=IHEAP[$82]; FHEAP[$120]=FHEAP[$82]; ; IHEAP[$120+1]=IHEAP[$82+1]; FHEAP[$120+1]=FHEAP[$82+1]; ;
    var $121=$w79;
    var $122=$i62;
    var $123=IHEAP[$m_velocities113];
    var $arrayidx114=$123+$122*3;
    var $w115=$arrayidx114+2;
    FHEAP[$w115]=$121;
    var $124=$i62;
    var $125=IHEAP[$m_bodies116];
    var $arrayidx117=$125+$124;
    var $126=IHEAP[$arrayidx117];
    $body=$126;
    var $127=$body;
    var $m_sweep118=$127+7;
    var $c119=$m_sweep118+4;
    var $128=$c119;
    IHEAP[$128]=IHEAP[$83]; FHEAP[$128]=FHEAP[$83]; ; IHEAP[$128+1]=IHEAP[$83+1]; FHEAP[$128+1]=FHEAP[$83+1]; ;
    var $129=$a71;
    var $130=$body;
    var $m_sweep120=$130+7;
    var $a121=$m_sweep120+7;
    FHEAP[$a121]=$129;
    var $131=$body;
    var $m_linearVelocity122=$131+16;
    var $132=$m_linearVelocity122;
    IHEAP[$132]=IHEAP[$84]; FHEAP[$132]=FHEAP[$84]; ; IHEAP[$132+1]=IHEAP[$84+1]; FHEAP[$132+1]=FHEAP[$84+1]; ;
    var $133=$w79;
    var $134=$body;
    var $m_angularVelocity123=$134+18;
    FHEAP[$m_angularVelocity123]=$133;
    var $135=$body;
    __ZN6b2Body20SynchronizeTransformEv($135);
    ;

    var $136=$i62;
    var $inc126=($136)+1;
    $i62=$inc126;
    ;
  }

  var $m_velocityConstraints=$contactSolver+10;
  var $137=IHEAP[$m_velocityConstraints];
  __ZN8b2Island6ReportEPK27b2ContactVelocityConstraint($this1, $137);
  ;

  __ZN15b2ContactSolverD2Ev($contactSolver);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN8b2Island8SolveTOIERK10b2TimeStepii["X"]=1;

function __ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator($def, $allocator) {
  ;
  var __label__;

  var $def_addr;
  var $allocator_addr;
  var $joint;
  var $mem;
  var $mem2;
  var $mem8;
  var $mem14;
  var $mem20;
  var $mem26;
  var $mem32;
  var $mem38;
  var $mem44;
  var $mem50;
  $def_addr=$def;
  $allocator_addr=$allocator;
  $joint=0;
  var $0=$def_addr;
  var $type=$0;
  var $1=IHEAP[$type];
  if ($1 == 3) {
    __label__ = 1;;
  }
  else if ($1 == 5) {
    __label__ = 4;;
  }
  else if ($1 == 2) {
    __label__ = 7;;
  }
  else if ($1 == 1) {
    __label__ = 10;;
  }
  else if ($1 == 4) {
    __label__ = 13;;
  }
  else if ($1 == 6) {
    __label__ = 16;;
  }
  else if ($1 == 7) {
    __label__ = 19;;
  }
  else if ($1 == 8) {
    __label__ = 22;;
  }
  else if ($1 == 9) {
    __label__ = 25;;
  }
  else if ($1 == 10) {
    __label__ = 28;;
  }
  else {
  __label__ = 31;;
  }
  
  $sw_default$$sw_bb$$sw_bb1$$sw_bb7$$sw_bb13$$sw_bb19$$sw_bb25$$sw_bb31$$sw_bb37$$sw_bb43$$sw_bb49$38: do { 
    if (__label__ == 31) {

      ___assert_func(__str242, 113, ___PRETTY_FUNCTION____ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator, __str2368);
      ;
    }
    else if (__label__ == 1) {

      var $2=$allocator_addr;
      var $call=__ZN16b2BlockAllocator8AllocateEi($2, 176);
      $mem=$call;
      var $3=$mem;
      var $new_isnull=($3)==0;
      if ($new_isnull) { var $7 = 0;__label__ = 3;; } else { __label__ = 2;; }
      $new_cont$$new_notnull$41: do { 
        if (__label__ == 2) {

          var $4=$3;
          var $5=$def_addr;
          var $6=$5;
          __ZN15b2DistanceJointC2EPK18b2DistanceJointDef($4, $6);
          var $7 = $4;;
        }
      } while(0);

      var $7;
      var $8=$7;
      $joint=$8;
      ;
    }
    else if (__label__ == 4) {

      var $9=$allocator_addr;
      var $call3=__ZN16b2BlockAllocator8AllocateEi($9, 168);
      $mem2=$call3;
      var $10=$mem2;
      var $new_isnull4=($10)==0;
      if ($new_isnull4) { var $14 = 0;__label__ = 6;; } else { __label__ = 5;; }
      $new_cont6$$new_notnull5$45: do { 
        if (__label__ == 5) {

          var $11=$10;
          var $12=$def_addr;
          var $13=$12;
          __ZN12b2MouseJointC2EPK15b2MouseJointDef($11, $13);
          var $14 = $11;;
        }
      } while(0);

      var $14;
      var $15=$14;
      $joint=$15;
      ;
    }
    else if (__label__ == 7) {

      var $16=$allocator_addr;
      var $call9=__ZN16b2BlockAllocator8AllocateEi($16, 256);
      $mem8=$call9;
      var $17=$mem8;
      var $new_isnull10=($17)==0;
      if ($new_isnull10) { var $21 = 0;__label__ = 9;; } else { __label__ = 8;; }
      $new_cont12$$new_notnull11$49: do { 
        if (__label__ == 8) {

          var $18=$17;
          var $19=$def_addr;
          var $20=$19;
          __ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef($18, $20);
          var $21 = $18;;
        }
      } while(0);

      var $21;
      var $22=$21;
      $joint=$22;
      ;
    }
    else if (__label__ == 10) {

      var $23=$allocator_addr;
      var $call15=__ZN16b2BlockAllocator8AllocateEi($23, 228);
      $mem14=$call15;
      var $24=$mem14;
      var $new_isnull16=($24)==0;
      if ($new_isnull16) { var $28 = 0;__label__ = 12;; } else { __label__ = 11;; }
      $new_cont18$$new_notnull17$53: do { 
        if (__label__ == 11) {

          var $25=$24;
          var $26=$def_addr;
          var $27=$26;
          __ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef($25, $27);
          var $28 = $25;;
        }
      } while(0);

      var $28;
      var $29=$28;
      $joint=$29;
      ;
    }
    else if (__label__ == 13) {

      var $30=$allocator_addr;
      var $call21=__ZN16b2BlockAllocator8AllocateEi($30, 196);
      $mem20=$call21;
      var $31=$mem20;
      var $new_isnull22=($31)==0;
      if ($new_isnull22) { var $35 = 0;__label__ = 15;; } else { __label__ = 14;; }
      $new_cont24$$new_notnull23$57: do { 
        if (__label__ == 14) {

          var $32=$31;
          var $33=$def_addr;
          var $34=$33;
          __ZN13b2PulleyJointC2EPK16b2PulleyJointDef($32, $34);
          var $35 = $32;;
        }
      } while(0);

      var $35;
      var $36=$35;
      $joint=$36;
      ;
    }
    else if (__label__ == 16) {

      var $37=$allocator_addr;
      var $call27=__ZN16b2BlockAllocator8AllocateEi($37, 276);
      $mem26=$call27;
      var $38=$mem26;
      var $new_isnull28=($38)==0;
      if ($new_isnull28) { var $42 = 0;__label__ = 18;; } else { __label__ = 17;; }
      $new_cont30$$new_notnull29$61: do { 
        if (__label__ == 17) {

          var $39=$38;
          var $40=$def_addr;
          var $41=$40;
          __ZN11b2GearJointC2EPK14b2GearJointDef($39, $41);
          var $42 = $39;;
        }
      } while(0);

      var $42;
      var $43=$42;
      $joint=$43;
      ;
    }
    else if (__label__ == 19) {

      var $44=$allocator_addr;
      var $call33=__ZN16b2BlockAllocator8AllocateEi($44, 224);
      $mem32=$call33;
      var $45=$mem32;
      var $new_isnull34=($45)==0;
      if ($new_isnull34) { var $49 = 0;__label__ = 21;; } else { __label__ = 20;; }
      $new_cont36$$new_notnull35$65: do { 
        if (__label__ == 20) {

          var $46=$45;
          var $47=$def_addr;
          var $48=$47;
          __ZN12b2WheelJointC2EPK15b2WheelJointDef($46, $48);
          var $49 = $46;;
        }
      } while(0);

      var $49;
      var $50=$49;
      $joint=$50;
      ;
    }
    else if (__label__ == 22) {

      var $51=$allocator_addr;
      var $call39=__ZN16b2BlockAllocator8AllocateEi($51, 208);
      $mem38=$call39;
      var $52=$mem38;
      var $new_isnull40=($52)==0;
      if ($new_isnull40) { var $56 = 0;__label__ = 24;; } else { __label__ = 23;; }
      $new_cont42$$new_notnull41$69: do { 
        if (__label__ == 23) {

          var $53=$52;
          var $54=$def_addr;
          var $55=$54;
          __ZN11b2WeldJointC2EPK14b2WeldJointDef($53, $55);
          var $56 = $53;;
        }
      } while(0);

      var $56;
      var $57=$56;
      $joint=$57;
      ;
    }
    else if (__label__ == 25) {

      var $58=$allocator_addr;
      var $call45=__ZN16b2BlockAllocator8AllocateEi($58, 180);
      $mem44=$call45;
      var $59=$mem44;
      var $new_isnull46=($59)==0;
      if ($new_isnull46) { var $63 = 0;__label__ = 27;; } else { __label__ = 26;; }
      $new_cont48$$new_notnull47$73: do { 
        if (__label__ == 26) {

          var $60=$59;
          var $61=$def_addr;
          var $62=$61;
          __ZN15b2FrictionJointC2EPK18b2FrictionJointDef($60, $62);
          var $63 = $60;;
        }
      } while(0);

      var $63;
      var $64=$63;
      $joint=$64;
      ;
    }
    else if (__label__ == 28) {

      var $65=$allocator_addr;
      var $call51=__ZN16b2BlockAllocator8AllocateEi($65, 168);
      $mem50=$call51;
      var $66=$mem50;
      var $new_isnull52=($66)==0;
      if ($new_isnull52) { var $70 = 0;__label__ = 30;; } else { __label__ = 29;; }
      $new_cont54$$new_notnull53$77: do { 
        if (__label__ == 29) {

          var $67=$66;
          var $68=$def_addr;
          var $69=$68;
          __ZN11b2RopeJointC2EPK14b2RopeJointDef($67, $69);
          var $70 = $67;;
        }
      } while(0);

      var $70;
      var $71=$70;
      $joint=$71;
      ;
    }
  } while(0);

  var $72=$joint;
  ;
  return $72;
  return null;
}
__ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator["X"]=1;

function __ZNK7b2Joint8IsActiveEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_bodyA=$this1+12;
  var $0=IHEAP[$m_bodyA];
  var $call=__ZNK6b2Body8IsActiveEv($0);
  if ($call) { __label__ = 1;; } else { var $2 = 0;__label__ = 2;; }
  $land_rhs$$land_end$100: do { 
    if (__label__ == 1) {

      var $m_bodyB=$this1+13;
      var $1=IHEAP[$m_bodyB];
      var $call2=__ZNK6b2Body8IsActiveEv($1);
      var $2 = $call2;;
    }
  } while(0);

  var $2;
  ;
  return $2;
  return null;
}


function __ZN6b2Vec3C2Ev($this) {
  ;
  var __label__;

  ;
  return;
  return;
}


function __ZN6b2Vec3C1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN6b2Vec3C2Ev($this1);
  ;
  return;
  return;
}


function __ZN6b2Vec3C1Efff($this, $x, $y, $z) {
  ;
  var __label__;

  var $this_addr;
  var $x_addr;
  var $y_addr;
  var $z_addr;
  $this_addr=$this;
  $x_addr=$x;
  $y_addr=$y;
  $z_addr=$z;
  var $this1=$this_addr;
  var $0=$x_addr;
  var $1=$y_addr;
  var $2=$z_addr;
  __ZN6b2Vec3C2Efff($this1, $0, $1, $2);
  ;
  return;
  return;
}


function __Z5b2DotRK6b2Vec3S1_($a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$b_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $mul=($1)*($3);
  var $4=$a_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $6=$b_addr;
  var $y2=$6+1;
  var $7=FHEAP[$y2];
  var $mul3=($5)*($7);
  var $add=($mul)+($mul3);
  var $8=$a_addr;
  var $z=$8+2;
  var $9=FHEAP[$z];
  var $10=$b_addr;
  var $z4=$10+2;
  var $11=FHEAP[$z4];
  var $mul5=($9)*($11);
  var $add6=($add)+($mul5);
  ;
  return $add6;
  return null;
}


function __Z7b2CrossRK6b2Vec3S1_($agg_result, $a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $y=$0+1;
  var $1=FHEAP[$y];
  var $2=$b_addr;
  var $z=$2+2;
  var $3=FHEAP[$z];
  var $mul=($1)*($3);
  var $4=$a_addr;
  var $z1=$4+2;
  var $5=FHEAP[$z1];
  var $6=$b_addr;
  var $y2=$6+1;
  var $7=FHEAP[$y2];
  var $mul3=($5)*($7);
  var $sub=($mul)-($mul3);
  var $8=$a_addr;
  var $z4=$8+2;
  var $9=FHEAP[$z4];
  var $10=$b_addr;
  var $x=$10;
  var $11=FHEAP[$x];
  var $mul5=($9)*($11);
  var $12=$a_addr;
  var $x6=$12;
  var $13=FHEAP[$x6];
  var $14=$b_addr;
  var $z7=$14+2;
  var $15=FHEAP[$z7];
  var $mul8=($13)*($15);
  var $sub9=($mul5)-($mul8);
  var $16=$a_addr;
  var $x10=$16;
  var $17=FHEAP[$x10];
  var $18=$b_addr;
  var $y11=$18+1;
  var $19=FHEAP[$y11];
  var $mul12=($17)*($19);
  var $20=$a_addr;
  var $y13=$20+1;
  var $21=FHEAP[$y13];
  var $22=$b_addr;
  var $x14=$22;
  var $23=FHEAP[$x14];
  var $mul15=($21)*($23);
  var $sub16=($mul12)-($mul15);
  __ZN6b2Vec3C1Efff($agg_result, $sub, $sub9, $sub16);
  ;
  return;
  return;
}
__Z7b2CrossRK6b2Vec3S1_["X"]=1;

function __ZNK7b2Mat337Solve22ERK6b2Vec2($agg_result, $this, $b) {
  ;
  var __label__;

  var $this_addr;
  var $b_addr;
  var $a11;
  var $a12;
  var $a21;
  var $a22;
  var $det;
  $this_addr=$this;
  $b_addr=$b;
  var $this1=$this_addr;
  var $ex=$this1;
  var $x=$ex;
  var $0=FHEAP[$x];
  $a11=$0;
  var $ey=$this1+3;
  var $x2=$ey;
  var $1=FHEAP[$x2];
  $a12=$1;
  var $ex3=$this1;
  var $y=$ex3+1;
  var $2=FHEAP[$y];
  $a21=$2;
  var $ey4=$this1+3;
  var $y5=$ey4+1;
  var $3=FHEAP[$y5];
  $a22=$3;
  var $4=$a11;
  var $5=$a22;
  var $mul=($4)*($5);
  var $6=$a12;
  var $7=$a21;
  var $mul6=($6)*($7);
  var $sub=($mul)-($mul6);
  $det=$sub;
  var $8=$det;
  var $cmp=($8) != 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$9: do { 
    if (__label__ == 1) {

      var $9=$det;
      var $div=1/($9);
      $det=$div;
      ;
    }
  } while(0);

  __ZN6b2Vec2C1Ev($agg_result);
  var $10=$det;
  var $11=$a22;
  var $12=$b_addr;
  var $x7=$12;
  var $13=FHEAP[$x7];
  var $mul8=($11)*($13);
  var $14=$a12;
  var $15=$b_addr;
  var $y9=$15+1;
  var $16=FHEAP[$y9];
  var $mul10=($14)*($16);
  var $sub11=($mul8)-($mul10);
  var $mul12=($10)*($sub11);
  var $x13=$agg_result;
  FHEAP[$x13]=$mul12;
  var $17=$det;
  var $18=$a11;
  var $19=$b_addr;
  var $y14=$19+1;
  var $20=FHEAP[$y14];
  var $mul15=($18)*($20);
  var $21=$a21;
  var $22=$b_addr;
  var $x16=$22;
  var $23=FHEAP[$x16];
  var $mul17=($21)*($23);
  var $sub18=($mul15)-($mul17);
  var $mul19=($17)*($sub18);
  var $y20=$agg_result+1;
  FHEAP[$y20]=$mul19;
  ;
  return;
  return;
}
__ZNK7b2Mat337Solve22ERK6b2Vec2["X"]=1;

function __ZNK7b2Mat3312GetInverse22EPS_($this, $M) {
  ;
  var __label__;

  var $this_addr;
  var $M_addr;
  var $a;
  var $b;
  var $c;
  var $d;
  var $det;
  $this_addr=$this;
  $M_addr=$M;
  var $this1=$this_addr;
  var $ex=$this1;
  var $x=$ex;
  var $0=FHEAP[$x];
  $a=$0;
  var $ey=$this1+3;
  var $x2=$ey;
  var $1=FHEAP[$x2];
  $b=$1;
  var $ex3=$this1;
  var $y=$ex3+1;
  var $2=FHEAP[$y];
  $c=$2;
  var $ey4=$this1+3;
  var $y5=$ey4+1;
  var $3=FHEAP[$y5];
  $d=$3;
  var $4=$a;
  var $5=$d;
  var $mul=($4)*($5);
  var $6=$b;
  var $7=$c;
  var $mul6=($6)*($7);
  var $sub=($mul)-($mul6);
  $det=$sub;
  var $8=$det;
  var $cmp=($8) != 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$13: do { 
    if (__label__ == 1) {

      var $9=$det;
      var $div=1/($9);
      $det=$div;
      ;
    }
  } while(0);

  var $10=$det;
  var $11=$d;
  var $mul7=($10)*($11);
  var $12=$M_addr;
  var $ex8=$12;
  var $x9=$ex8;
  FHEAP[$x9]=$mul7;
  var $13=$det;
  var $sub10=(-($13));
  var $14=$b;
  var $mul11=($sub10)*($14);
  var $15=$M_addr;
  var $ey12=$15+3;
  var $x13=$ey12;
  FHEAP[$x13]=$mul11;
  var $16=$M_addr;
  var $ex14=$16;
  var $z=$ex14+2;
  FHEAP[$z]=0;
  var $17=$det;
  var $sub15=(-($17));
  var $18=$c;
  var $mul16=($sub15)*($18);
  var $19=$M_addr;
  var $ex17=$19;
  var $y18=$ex17+1;
  FHEAP[$y18]=$mul16;
  var $20=$det;
  var $21=$a;
  var $mul19=($20)*($21);
  var $22=$M_addr;
  var $ey20=$22+3;
  var $y21=$ey20+1;
  FHEAP[$y21]=$mul19;
  var $23=$M_addr;
  var $ey22=$23+3;
  var $z23=$ey22+2;
  FHEAP[$z23]=0;
  var $24=$M_addr;
  var $ez=$24+6;
  var $x24=$ez;
  FHEAP[$x24]=0;
  var $25=$M_addr;
  var $ez25=$25+6;
  var $y26=$ez25+1;
  FHEAP[$y26]=0;
  var $26=$M_addr;
  var $ez27=$26+6;
  var $z28=$ez27+2;
  FHEAP[$z28]=0;
  ;
  return;
  return;
}
__ZNK7b2Mat3312GetInverse22EPS_["X"]=1;

function __ZN6b2Vec3C2Efff($this, $x, $y, $z) {
  ;
  var __label__;

  var $this_addr;
  var $x_addr;
  var $y_addr;
  var $z_addr;
  $this_addr=$this;
  $x_addr=$x;
  $y_addr=$y;
  $z_addr=$z;
  var $this1=$this_addr;
  var $x2=$this1;
  var $0=$x_addr;
  FHEAP[$x2]=$0;
  var $y3=$this1+1;
  var $1=$y_addr;
  FHEAP[$y3]=$1;
  var $z4=$this1+2;
  var $2=$z_addr;
  FHEAP[$z4]=$2;
  ;
  return;
  return;
}


function __ZNK12b2MouseJoint9GetTargetEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_targetA=$this1+20;
  ;
  return $m_targetA;
  return null;
}


function __ZN12b2MouseJoint11SetMaxForceEf($this, $force) {
  ;
  var __label__;

  var $this_addr;
  var $force_addr;
  $this_addr=$this;
  $force_addr=$force;
  var $this1=$this_addr;
  var $0=$force_addr;
  var $m_maxForce=$this1+27;
  FHEAP[$m_maxForce]=$0;
  ;
  return;
  return;
}


function __ZNK12b2MouseJoint11GetMaxForceEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_maxForce=$this1+27;
  var $0=FHEAP[$m_maxForce];
  ;
  return $0;
  return null;
}


function __ZN12b2MouseJoint12SetFrequencyEf($this, $hz) {
  ;
  var __label__;

  var $this_addr;
  var $hz_addr;
  $this_addr=$this;
  $hz_addr=$hz;
  var $this1=$this_addr;
  var $0=$hz_addr;
  var $m_frequencyHz=$this1+22;
  FHEAP[$m_frequencyHz]=$0;
  ;
  return;
  return;
}


function __ZNK12b2MouseJoint12GetFrequencyEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_frequencyHz=$this1+22;
  var $0=FHEAP[$m_frequencyHz];
  ;
  return $0;
  return null;
}


function __ZN12b2MouseJoint15SetDampingRatioEf($this, $ratio) {
  ;
  var __label__;

  var $this_addr;
  var $ratio_addr;
  $this_addr=$this;
  $ratio_addr=$ratio;
  var $this1=$this_addr;
  var $0=$ratio_addr;
  var $m_dampingRatio=$this1+23;
  FHEAP[$m_dampingRatio]=$0;
  ;
  return;
  return;
}


function __ZNK12b2MouseJoint15GetDampingRatioEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_dampingRatio=$this1+23;
  var $0=FHEAP[$m_dampingRatio];
  ;
  return $0;
  return null;
}


function __ZNK7b2Mat337Solve33ERK6b2Vec3($agg_result, $this, $b) {
  var __stackBase__  = STACKTOP; STACKTOP += 12;
  var __label__;

  var $this_addr;
  var $b_addr;
  var $det;
  var $ref_tmp=__stackBase__;
  var $ref_tmp2=__stackBase__+3;
  var $ref_tmp7=__stackBase__+6;
  var $ref_tmp12=__stackBase__+9;
  $this_addr=$this;
  $b_addr=$b;
  var $this1=$this_addr;
  var $ex=$this1;
  var $ey=$this1+3;
  var $ez=$this1+6;
  __Z7b2CrossRK6b2Vec3S1_($ref_tmp, $ey, $ez);
  var $call=__Z5b2DotRK6b2Vec3S1_($ex, $ref_tmp);
  $det=$call;
  var $0=$det;
  var $cmp=($0) != 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$2: do { 
    if (__label__ == 1) {

      var $1=$det;
      var $div=1/($1);
      $det=$div;
      ;
    }
  } while(0);

  __ZN6b2Vec3C1Ev($agg_result);
  var $2=$det;
  var $3=$b_addr;
  var $ey3=$this1+3;
  var $ez4=$this1+6;
  __Z7b2CrossRK6b2Vec3S1_($ref_tmp2, $ey3, $ez4);
  var $call5=__Z5b2DotRK6b2Vec3S1_($3, $ref_tmp2);
  var $mul=($2)*($call5);
  var $x=$agg_result;
  FHEAP[$x]=$mul;
  var $4=$det;
  var $ex6=$this1;
  var $5=$b_addr;
  var $ez8=$this1+6;
  __Z7b2CrossRK6b2Vec3S1_($ref_tmp7, $5, $ez8);
  var $call9=__Z5b2DotRK6b2Vec3S1_($ex6, $ref_tmp7);
  var $mul10=($4)*($call9);
  var $y=$agg_result+1;
  FHEAP[$y]=$mul10;
  var $6=$det;
  var $ex11=$this1;
  var $ey13=$this1+3;
  var $7=$b_addr;
  __Z7b2CrossRK6b2Vec3S1_($ref_tmp12, $ey13, $7);
  var $call14=__Z5b2DotRK6b2Vec3S1_($ex11, $ref_tmp12);
  var $mul15=($6)*($call14);
  var $z=$agg_result+2;
  FHEAP[$z]=$mul15;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNK7b2Mat337Solve33ERK6b2Vec3["X"]=1;

function __ZNK7b2Mat3315GetSymInverse33EPS_($this, $M) {
  var __stackBase__  = STACKTOP; STACKTOP += 3;
  var __label__;

  var $this_addr;
  var $M_addr;
  var $det;
  var $ref_tmp=__stackBase__;
  var $a11;
  var $a12;
  var $a13;
  var $a22;
  var $a23;
  var $a33;
  $this_addr=$this;
  $M_addr=$M;
  var $this1=$this_addr;
  var $ex=$this1;
  var $ey=$this1+3;
  var $ez=$this1+6;
  __Z7b2CrossRK6b2Vec3S1_($ref_tmp, $ey, $ez);
  var $call=__Z5b2DotRK6b2Vec3S1_($ex, $ref_tmp);
  $det=$call;
  var $0=$det;
  var $cmp=($0) != 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$17: do { 
    if (__label__ == 1) {

      var $1=$det;
      var $div=1/($1);
      $det=$div;
      ;
    }
  } while(0);

  var $ex2=$this1;
  var $x=$ex2;
  var $2=FHEAP[$x];
  $a11=$2;
  var $ey3=$this1+3;
  var $x4=$ey3;
  var $3=FHEAP[$x4];
  $a12=$3;
  var $ez5=$this1+6;
  var $x6=$ez5;
  var $4=FHEAP[$x6];
  $a13=$4;
  var $ey7=$this1+3;
  var $y=$ey7+1;
  var $5=FHEAP[$y];
  $a22=$5;
  var $ez8=$this1+6;
  var $y9=$ez8+1;
  var $6=FHEAP[$y9];
  $a23=$6;
  var $ez10=$this1+6;
  var $z=$ez10+2;
  var $7=FHEAP[$z];
  $a33=$7;
  var $8=$det;
  var $9=$a22;
  var $10=$a33;
  var $mul=($9)*($10);
  var $11=$a23;
  var $12=$a23;
  var $mul11=($11)*($12);
  var $sub=($mul)-($mul11);
  var $mul12=($8)*($sub);
  var $13=$M_addr;
  var $ex13=$13;
  var $x14=$ex13;
  FHEAP[$x14]=$mul12;
  var $14=$det;
  var $15=$a13;
  var $16=$a23;
  var $mul15=($15)*($16);
  var $17=$a12;
  var $18=$a33;
  var $mul16=($17)*($18);
  var $sub17=($mul15)-($mul16);
  var $mul18=($14)*($sub17);
  var $19=$M_addr;
  var $ex19=$19;
  var $y20=$ex19+1;
  FHEAP[$y20]=$mul18;
  var $20=$det;
  var $21=$a12;
  var $22=$a23;
  var $mul21=($21)*($22);
  var $23=$a13;
  var $24=$a22;
  var $mul22=($23)*($24);
  var $sub23=($mul21)-($mul22);
  var $mul24=($20)*($sub23);
  var $25=$M_addr;
  var $ex25=$25;
  var $z26=$ex25+2;
  FHEAP[$z26]=$mul24;
  var $26=$M_addr;
  var $ex27=$26;
  var $y28=$ex27+1;
  var $27=FHEAP[$y28];
  var $28=$M_addr;
  var $ey29=$28+3;
  var $x30=$ey29;
  FHEAP[$x30]=$27;
  var $29=$det;
  var $30=$a11;
  var $31=$a33;
  var $mul31=($30)*($31);
  var $32=$a13;
  var $33=$a13;
  var $mul32=($32)*($33);
  var $sub33=($mul31)-($mul32);
  var $mul34=($29)*($sub33);
  var $34=$M_addr;
  var $ey35=$34+3;
  var $y36=$ey35+1;
  FHEAP[$y36]=$mul34;
  var $35=$det;
  var $36=$a13;
  var $37=$a12;
  var $mul37=($36)*($37);
  var $38=$a11;
  var $39=$a23;
  var $mul38=($38)*($39);
  var $sub39=($mul37)-($mul38);
  var $mul40=($35)*($sub39);
  var $40=$M_addr;
  var $ey41=$40+3;
  var $z42=$ey41+2;
  FHEAP[$z42]=$mul40;
  var $41=$M_addr;
  var $ex43=$41;
  var $z44=$ex43+2;
  var $42=FHEAP[$z44];
  var $43=$M_addr;
  var $ez45=$43+6;
  var $x46=$ez45;
  FHEAP[$x46]=$42;
  var $44=$M_addr;
  var $ey47=$44+3;
  var $z48=$ey47+2;
  var $45=FHEAP[$z48];
  var $46=$M_addr;
  var $ez49=$46+6;
  var $y50=$ez49+1;
  FHEAP[$y50]=$45;
  var $47=$det;
  var $48=$a11;
  var $49=$a22;
  var $mul51=($48)*($49);
  var $50=$a12;
  var $51=$a12;
  var $mul52=($50)*($51);
  var $sub53=($mul51)-($mul52);
  var $mul54=($47)*($sub53);
  var $52=$M_addr;
  var $ez55=$52+6;
  var $z56=$ez55+2;
  FHEAP[$z56]=$mul54;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNK7b2Mat3315GetSymInverse33EPS_["X"]=1;

function __ZN12b2MouseJointC2EPK15b2MouseJointDef($this, $def) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $def_addr;
  var $exn_slot;
  var $ehselector_slot;
  var $ref_tmp=__stackBase__;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$def_addr;
  var $2=$1;
  __ZN7b2JointC2EPK10b2JointDef($0, $2);
  var $3=$this1;
  IHEAP[$3]=__ZTV12b2MouseJoint+2;
  var $m_localAnchorB=$this1+18;
  __ZN6b2Vec2C1Ev($m_localAnchorB);
  var $m_targetA=$this1+20;
  __ZN6b2Vec2C1Ev($m_targetA);
  var $m_impulse=$this1+25;
  __ZN6b2Vec2C1Ev($m_impulse);
  var $m_rB=$this1+31;
  __ZN6b2Vec2C1Ev($m_rB);
  var $m_localCenterB=$this1+33;
  __ZN6b2Vec2C1Ev($m_localCenterB);
  var $m_mass=$this1+37;
  __ZN7b2Mat22C1Ev($m_mass);
  var $m_C=$this1+41;
  __ZN6b2Vec2C1Ev($m_C);
  var $4=$def_addr;
  var $target=$4+5;
  var $call=__ZNK6b2Vec27IsValidEv($target);
  if ($call) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$24: do { 
    if (__label__ == 1) {

      ___assert_func(__str253, 34, ___PRETTY_FUNCTION____ZN12b2MouseJointC2EPK15b2MouseJointDef, __str1254);
      ;
    }
  } while(0);

  var $5=$def_addr;
  var $maxForce=$5+7;
  var $6=FHEAP[$maxForce];
  var $call11=__Z9b2IsValidf($6);
  if ($call11) { __label__ = 3;; } else { __label__ = 4;; }
  $land_lhs_true$$cond_false14$27: do { 
    if (__label__ == 3) {

      var $7=$def_addr;
      var $maxForce12=$7+7;
      var $8=FHEAP[$maxForce12];
      var $cmp=($8) >= 0;
      if ($cmp) { __label__ = 5;break $land_lhs_true$$cond_false14$27; } else { __label__ = 4;break $land_lhs_true$$cond_false14$27; }
    }
  } while(0);
  $cond_end16$$cond_false14$29: do { 
    if (__label__ == 4) {

      ___assert_func(__str253, 35, ___PRETTY_FUNCTION____ZN12b2MouseJointC2EPK15b2MouseJointDef, __str2255);
      ;
    }
  } while(0);

  var $9=$def_addr;
  var $frequencyHz=$9+8;
  var $10=FHEAP[$frequencyHz];
  var $call18=__Z9b2IsValidf($10);
  if ($call18) { __label__ = 6;; } else { __label__ = 7;; }
  $land_lhs_true19$$cond_false23$32: do { 
    if (__label__ == 6) {

      var $11=$def_addr;
      var $frequencyHz20=$11+8;
      var $12=FHEAP[$frequencyHz20];
      var $cmp21=($12) >= 0;
      if ($cmp21) { __label__ = 8;break $land_lhs_true19$$cond_false23$32; } else { __label__ = 7;break $land_lhs_true19$$cond_false23$32; }
    }
  } while(0);
  $cond_end25$$cond_false23$34: do { 
    if (__label__ == 7) {

      ___assert_func(__str253, 36, ___PRETTY_FUNCTION____ZN12b2MouseJointC2EPK15b2MouseJointDef, __str3256);
      ;
    }
  } while(0);

  var $13=$def_addr;
  var $dampingRatio=$13+9;
  var $14=FHEAP[$dampingRatio];
  var $call27=__Z9b2IsValidf($14);
  if ($call27) { __label__ = 9;; } else { __label__ = 10;; }
  $land_lhs_true28$$cond_false32$37: do { 
    if (__label__ == 9) {

      var $15=$def_addr;
      var $dampingRatio29=$15+9;
      var $16=FHEAP[$dampingRatio29];
      var $cmp30=($16) >= 0;
      if ($cmp30) { __label__ = 11;break $land_lhs_true28$$cond_false32$37; } else { __label__ = 10;break $land_lhs_true28$$cond_false32$37; }
    }
  } while(0);
  $cond_end34$$cond_false32$39: do { 
    if (__label__ == 10) {

      ___assert_func(__str253, 37, ___PRETTY_FUNCTION____ZN12b2MouseJointC2EPK15b2MouseJointDef, __str4257);
      ;
    }
  } while(0);

  var $m_targetA35=$this1+20;
  var $17=$def_addr;
  var $target36=$17+5;
  var $18=$m_targetA35;
  var $19=$target36;
  IHEAP[$18]=IHEAP[$19]; FHEAP[$18]=FHEAP[$19]; ; IHEAP[$18+1]=IHEAP[$19+1]; FHEAP[$18+1]=FHEAP[$19+1]; ;
  var $m_localAnchorB37=$this1+18;
  var $20=$this1;
  var $m_bodyB=$20+13;
  var $21=IHEAP[$m_bodyB];
  var $call39=__ZNK6b2Body12GetTransformEv($21);
  ;

  var $m_targetA40=$this1+20;
  __Z6b2MulTRK11b2TransformRK6b2Vec2($ref_tmp, $call39, $m_targetA40);
  ;

  var $22=$m_localAnchorB37;
  var $23=$ref_tmp;
  IHEAP[$22]=IHEAP[$23]; FHEAP[$22]=FHEAP[$23]; ; IHEAP[$22+1]=IHEAP[$23+1]; FHEAP[$22+1]=FHEAP[$23+1]; ;
  var $24=$def_addr;
  var $maxForce42=$24+7;
  var $25=FHEAP[$maxForce42];
  var $m_maxForce=$this1+27;
  FHEAP[$m_maxForce]=$25;
  var $m_impulse43=$this1+25;
  __ZN6b2Vec27SetZeroEv($m_impulse43);
  var $26=$def_addr;
  var $frequencyHz45=$26+8;
  var $27=FHEAP[$frequencyHz45];
  var $m_frequencyHz=$this1+22;
  FHEAP[$m_frequencyHz]=$27;
  var $28=$def_addr;
  var $dampingRatio46=$28+9;
  var $29=FHEAP[$dampingRatio46];
  var $m_dampingRatio=$this1+23;
  FHEAP[$m_dampingRatio]=$29;
  var $m_beta=$this1+24;
  FHEAP[$m_beta]=0;
  var $m_gamma=$this1+28;
  FHEAP[$m_gamma]=0;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN12b2MouseJointC2EPK15b2MouseJointDef["X"]=1;

function __ZN12b2MouseJoint9SetTargetERK6b2Vec2($this, $target) {
  ;
  var __label__;

  var $this_addr;
  var $target_addr;
  $this_addr=$this;
  $target_addr=$target;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $call=__ZNK6b2Body7IsAwakeEv($1);
  var $conv=($call);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$45: do { 
    if (__label__ == 1) {

      var $2=$this1;
      var $m_bodyB2=$2+13;
      var $3=IHEAP[$m_bodyB2];
      __ZN6b2Body8SetAwakeEb($3, 1);
      ;
    }
  } while(0);

  var $m_targetA=$this1+20;
  var $4=$target_addr;
  var $5=$m_targetA;
  var $6=$4;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  ;
  return;
  return;
}


function __ZN12b2MouseJoint24SolvePositionConstraintsERK12b2SolverData($this, $data) {
  ;
  var __label__;

  ;
  return 1;
  return null;
}


function __ZN12b2MouseJoint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  __Z5b2LogPKcz(__str6259, allocate(1, "i32", ALLOC_STACK));
  ;
  return;
  return;
}


function __ZN12b2MouseJointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN12b2MouseJointD2Ev($this1);
  ;
  return;
  return;
}


function __ZN25b2PolygonAndCircleContactD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN25b2PolygonAndCircleContactD2Ev($this1);
  ;
  return;
  return;
}


function __ZN16b2PolygonContactD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN16b2PolygonContactD2Ev($this1);
  ;
  return;
  return;
}


function __ZN14b2PolygonShapeC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN14b2PolygonShapeC2Ev($this1);
  ;
  return;
  return;
}


function __ZNK12b2MouseJoint17GetReactionTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  var $inv_dt_addr;
  $inv_dt_addr=$inv_dt;
  var $0=$inv_dt_addr;
  var $mul=0;
  ;
  return $mul;
  return null;
}


function __ZN12b2MouseJointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN12b2MouseJointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN12b2MouseJointD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2JointD2Ev($0);
  ;
  return;
  return;
}


function __ZN25b2PolygonAndCircleContactD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN25b2PolygonAndCircleContactD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN25b2PolygonAndCircleContactD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN9b2ContactD2Ev($0);
  ;
  return;
  return;
}


function __ZN16b2PolygonContactD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN16b2PolygonContactD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN16b2PolygonContactD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN9b2ContactD2Ev($0);
  ;
  return;
  return;
}


function __ZNK6b2Body7GetMassEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_mass=$this1+29;
  var $0=FHEAP[$m_mass];
  ;
  return $0;
  return null;
}


function __ZNK12b2MouseJoint10GetAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_targetA=$this1+20;
  var $0=$agg_result;
  var $1=$m_targetA;
  IHEAP[$0]=IHEAP[$1]; FHEAP[$0]=FHEAP[$1]; ; IHEAP[$0+1]=IHEAP[$1+1]; FHEAP[$0+1]=FHEAP[$1+1]; ;
  ;
  return;
  return;
}


function __ZNK12b2MouseJoint10GetAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+18;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorB);
  ;
  return;
  return;
}


function __ZNK12b2MouseJoint16GetReactionForceEf($agg_result, $this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_impulse=$this1+25;
  __ZmlfRK6b2Vec2($agg_result, $0, $m_impulse);
  ;
  return;
  return;
}


function __ZN25b2PolygonAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact, $allocator) {
  ;
  var __label__;

  var $contact_addr;
  var $allocator_addr;
  $contact_addr=$contact;
  $allocator_addr=$allocator;
  var $0=$contact_addr;
  var $1=$0;
  var $2=$1;
  var $vtable=IHEAP[$2];
  var $vfn=$vtable+1;
  var $3=IHEAP[$vfn];
  FUNCTION_TABLE[$3]($1);
  var $4=$allocator_addr;
  var $5=$contact_addr;
  var $6=$5;
  __ZN16b2BlockAllocator4FreeEPvi($4, $6, 144);
  ;
  return;
  return;
}


function __ZN16b2PolygonContact7DestroyEP9b2ContactP16b2BlockAllocator($contact, $allocator) {
  ;
  var __label__;

  var $contact_addr;
  var $allocator_addr;
  $contact_addr=$contact;
  $allocator_addr=$allocator;
  var $0=$contact_addr;
  var $1=$0;
  var $2=$1;
  var $vtable=IHEAP[$2];
  var $vfn=$vtable+1;
  var $3=IHEAP[$vfn];
  FUNCTION_TABLE[$3]($1);
  var $4=$allocator_addr;
  var $5=$contact_addr;
  var $6=$5;
  __ZN16b2BlockAllocator4FreeEPvi($4, $6, 144);
  ;
  return;
  return;
}


function __ZN14b2PolygonShape8SetAsBoxEff($this, $hx, $hy) {
  ;
  var __label__;

  var $this_addr;
  var $hx_addr;
  var $hy_addr;
  $this_addr=$this;
  $hx_addr=$hx;
  $hy_addr=$hy;
  var $this1=$this_addr;
  var $m_vertexCount=$this1+37;
  IHEAP[$m_vertexCount]=4;
  var $m_vertices=$this1+5;
  var $arrayidx=$m_vertices;
  var $0=$hx_addr;
  var $sub=(-($0));
  var $1=$hy_addr;
  var $sub2=(-($1));
  __ZN6b2Vec23SetEff($arrayidx, $sub, $sub2);
  var $m_vertices3=$this1+5;
  var $arrayidx4=$m_vertices3+2;
  var $2=$hx_addr;
  var $3=$hy_addr;
  var $sub5=(-($3));
  __ZN6b2Vec23SetEff($arrayidx4, $2, $sub5);
  var $m_vertices6=$this1+5;
  var $arrayidx7=$m_vertices6+4;
  var $4=$hx_addr;
  var $5=$hy_addr;
  __ZN6b2Vec23SetEff($arrayidx7, $4, $5);
  var $m_vertices8=$this1+5;
  var $arrayidx9=$m_vertices8+6;
  var $6=$hx_addr;
  var $sub10=(-($6));
  var $7=$hy_addr;
  __ZN6b2Vec23SetEff($arrayidx9, $sub10, $7);
  var $m_normals=$this1+21;
  var $arrayidx11=$m_normals;
  __ZN6b2Vec23SetEff($arrayidx11, 0, -1);
  var $m_normals12=$this1+21;
  var $arrayidx13=$m_normals12+2;
  __ZN6b2Vec23SetEff($arrayidx13, 1, 0);
  var $m_normals14=$this1+21;
  var $arrayidx15=$m_normals14+4;
  __ZN6b2Vec23SetEff($arrayidx15, 0, 1);
  var $m_normals16=$this1+21;
  var $arrayidx17=$m_normals16+6;
  __ZN6b2Vec23SetEff($arrayidx17, -1, 0);
  var $m_centroid=$this1+3;
  __ZN6b2Vec27SetZeroEv($m_centroid);
  ;
  return;
  return;
}


function __ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 24;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cB=__stackBase__;
  var $aB;
  var $vB=__stackBase__+2;
  var $wB;
  var $qB=__stackBase__+4;
  var $mass;
  var $omega;
  var $d;
  var $k;
  var $h;
  var $ref_tmp=__stackBase__+6;
  var $ref_tmp31=__stackBase__+8;
  var $K=__stackBase__+10;
  var $ref_tmp68=__stackBase__+14;
  var $ref_tmp69=__stackBase__+18;
  var $ref_tmp70=__stackBase__+20;
  var $ref_tmp78=__stackBase__+22;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  var $m_indexB=$this1+30;
  IHEAP[$m_indexB]=$2;
  var $m_localCenterB=$this1+33;
  var $3=$this1;
  var $m_bodyB2=$3+13;
  var $4=IHEAP[$m_bodyB2];
  var $m_sweep=$4+7;
  var $localCenter=$m_sweep;
  var $5=$m_localCenterB;
  var $6=$localCenter;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $7=$this1;
  var $m_bodyB3=$7+13;
  var $8=IHEAP[$m_bodyB3];
  var $m_invMass=$8+30;
  var $9=FHEAP[$m_invMass];
  var $m_invMassB=$this1+35;
  FHEAP[$m_invMassB]=$9;
  var $10=$this1;
  var $m_bodyB4=$10+13;
  var $11=IHEAP[$m_bodyB4];
  var $m_invI=$11+32;
  var $12=FHEAP[$m_invI];
  var $m_invIB=$this1+36;
  FHEAP[$m_invIB]=$12;
  var $m_indexB5=$this1+30;
  var $13=IHEAP[$m_indexB5];
  var $14=$data_addr;
  var $positions=$14+6;
  var $15=IHEAP[$positions];
  var $arrayidx=$15+$13*3;
  var $c=$arrayidx;
  var $16=$cB;
  var $17=$c;
  IHEAP[$16]=IHEAP[$17]; FHEAP[$16]=FHEAP[$17]; ; IHEAP[$16+1]=IHEAP[$17+1]; FHEAP[$16+1]=FHEAP[$17+1]; ;
  var $m_indexB6=$this1+30;
  var $18=IHEAP[$m_indexB6];
  var $19=$data_addr;
  var $positions7=$19+6;
  var $20=IHEAP[$positions7];
  var $arrayidx8=$20+$18*3;
  var $a=$arrayidx8+2;
  var $21=FHEAP[$a];
  $aB=$21;
  var $m_indexB9=$this1+30;
  var $22=IHEAP[$m_indexB9];
  var $23=$data_addr;
  var $velocities=$23+7;
  var $24=IHEAP[$velocities];
  var $arrayidx10=$24+$22*3;
  var $v=$arrayidx10;
  var $25=$vB;
  var $26=$v;
  IHEAP[$25]=IHEAP[$26]; FHEAP[$25]=FHEAP[$26]; ; IHEAP[$25+1]=IHEAP[$26+1]; FHEAP[$25+1]=FHEAP[$26+1]; ;
  var $m_indexB11=$this1+30;
  var $27=IHEAP[$m_indexB11];
  var $28=$data_addr;
  var $velocities12=$28+7;
  var $29=IHEAP[$velocities12];
  var $arrayidx13=$29+$27*3;
  var $w=$arrayidx13+2;
  var $30=FHEAP[$w];
  $wB=$30;
  var $31=$aB;
  __ZN5b2RotC1Ef($qB, $31);
  var $32=$this1;
  var $m_bodyB14=$32+13;
  var $33=IHEAP[$m_bodyB14];
  var $call=__ZNK6b2Body7GetMassEv($33);
  $mass=$call;
  var $m_frequencyHz=$this1+22;
  var $34=FHEAP[$m_frequencyHz];
  var $mul=($34)*6.2831854820251465;
  $omega=$mul;
  var $35=$mass;
  var $mul15=($35)*2;
  var $m_dampingRatio=$this1+23;
  var $36=FHEAP[$m_dampingRatio];
  var $mul16=($mul15)*($36);
  var $37=$omega;
  var $mul17=($mul16)*($37);
  $d=$mul17;
  var $38=$mass;
  var $39=$omega;
  var $40=$omega;
  var $mul18=($39)*($40);
  var $mul19=($38)*($mul18);
  $k=$mul19;
  var $41=$data_addr;
  var $step=$41;
  var $dt=$step;
  var $42=FHEAP[$dt];
  $h=$42;
  var $43=$d;
  var $44=$h;
  var $45=$k;
  var $mul20=($44)*($45);
  var $add=($43)+($mul20);
  var $cmp=($add) > 1.1920928955078125e-7;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$2: do { 
    if (__label__ == 1) {

      ___assert_func(__str253, 125, ___PRETTY_FUNCTION____ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData, __str5258);
      ;
    }
  } while(0);

  var $46=$h;
  var $47=$d;
  var $48=$h;
  var $49=$k;
  var $mul21=($48)*($49);
  var $add22=($47)+($mul21);
  var $mul23=($46)*($add22);
  var $m_gamma=$this1+28;
  FHEAP[$m_gamma]=$mul23;
  var $m_gamma24=$this1+28;
  var $50=FHEAP[$m_gamma24];
  var $cmp25=($50) != 0;
  if ($cmp25) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then$$if_end$5: do { 
    if (__label__ == 3) {

      var $m_gamma26=$this1+28;
      var $51=FHEAP[$m_gamma26];
      var $div=1/($51);
      var $m_gamma27=$this1+28;
      FHEAP[$m_gamma27]=$div;
      ;
    }
  } while(0);

  var $52=$h;
  var $53=$k;
  var $mul28=($52)*($53);
  var $m_gamma29=$this1+28;
  var $54=FHEAP[$m_gamma29];
  var $mul30=($mul28)*($54);
  var $m_beta=$this1+24;
  FHEAP[$m_beta]=$mul30;
  var $m_rB=$this1+31;
  var $m_localAnchorB=$this1+18;
  var $m_localCenterB32=$this1+33;
  __ZmiRK6b2Vec2S1_($ref_tmp31, $m_localAnchorB, $m_localCenterB32);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $qB, $ref_tmp31);
  var $55=$m_rB;
  var $56=$ref_tmp;
  IHEAP[$55]=IHEAP[$56]; FHEAP[$55]=FHEAP[$56]; ; IHEAP[$55+1]=IHEAP[$56+1]; FHEAP[$55+1]=FHEAP[$56+1]; ;
  __ZN7b2Mat22C1Ev($K);
  var $m_invMassB33=$this1+35;
  var $57=FHEAP[$m_invMassB33];
  var $m_invIB34=$this1+36;
  var $58=FHEAP[$m_invIB34];
  var $m_rB35=$this1+31;
  var $y=$m_rB35+1;
  var $59=FHEAP[$y];
  var $mul36=($58)*($59);
  var $m_rB37=$this1+31;
  var $y38=$m_rB37+1;
  var $60=FHEAP[$y38];
  var $mul39=($mul36)*($60);
  var $add40=($57)+($mul39);
  var $m_gamma41=$this1+28;
  var $61=FHEAP[$m_gamma41];
  var $add42=($add40)+($61);
  var $ex=$K;
  var $x=$ex;
  FHEAP[$x]=$add42;
  var $m_invIB43=$this1+36;
  var $62=FHEAP[$m_invIB43];
  var $sub=(-($62));
  var $m_rB44=$this1+31;
  var $x45=$m_rB44;
  var $63=FHEAP[$x45];
  var $mul46=($sub)*($63);
  var $m_rB47=$this1+31;
  var $y48=$m_rB47+1;
  var $64=FHEAP[$y48];
  var $mul49=($mul46)*($64);
  var $ex50=$K;
  var $y51=$ex50+1;
  FHEAP[$y51]=$mul49;
  var $ex52=$K;
  var $y53=$ex52+1;
  var $65=FHEAP[$y53];
  var $ey=$K+2;
  var $x54=$ey;
  FHEAP[$x54]=$65;
  var $m_invMassB55=$this1+35;
  var $66=FHEAP[$m_invMassB55];
  var $m_invIB56=$this1+36;
  var $67=FHEAP[$m_invIB56];
  var $m_rB57=$this1+31;
  var $x58=$m_rB57;
  var $68=FHEAP[$x58];
  var $mul59=($67)*($68);
  var $m_rB60=$this1+31;
  var $x61=$m_rB60;
  var $69=FHEAP[$x61];
  var $mul62=($mul59)*($69);
  var $add63=($66)+($mul62);
  var $m_gamma64=$this1+28;
  var $70=FHEAP[$m_gamma64];
  var $add65=($add63)+($70);
  var $ey66=$K+2;
  var $y67=$ey66+1;
  FHEAP[$y67]=$add65;
  var $m_mass=$this1+37;
  __ZNK7b2Mat2210GetInverseEv($ref_tmp68, $K);
  var $71=$m_mass;
  var $72=$ref_tmp68;
  IHEAP[$71]=IHEAP[$72]; FHEAP[$71]=FHEAP[$72]; ; IHEAP[$71+1]=IHEAP[$72+1]; FHEAP[$71+1]=FHEAP[$72+1]; ; IHEAP[$71+2]=IHEAP[$72+2]; FHEAP[$71+2]=FHEAP[$72+2]; ; IHEAP[$71+3]=IHEAP[$72+3]; FHEAP[$71+3]=FHEAP[$72+3]; ;
  var $m_C=$this1+41;
  var $m_rB71=$this1+31;
  __ZplRK6b2Vec2S1_($ref_tmp70, $cB, $m_rB71);
  var $m_targetA=$this1+20;
  __ZmiRK6b2Vec2S1_($ref_tmp69, $ref_tmp70, $m_targetA);
  var $73=$m_C;
  var $74=$ref_tmp69;
  IHEAP[$73]=IHEAP[$74]; FHEAP[$73]=FHEAP[$74]; ; IHEAP[$73+1]=IHEAP[$74+1]; FHEAP[$73+1]=FHEAP[$74+1]; ;
  var $m_C72=$this1+41;
  var $m_beta73=$this1+24;
  var $75=FHEAP[$m_beta73];
  __ZN6b2Vec2mLEf($m_C72, $75);
  var $76=$wB;
  var $mul74=($76)*0.9800000190734863;
  $wB=$mul74;
  var $77=$data_addr;
  var $step75=$77;
  var $warmStarting=$step75+5;
  var $78=IHEAP[$warmStarting];
  var $tobool=((($78)) & 1);
  var $m_impulse=$this1+25;
  if ($tobool) { __label__ = 5;; } else { __label__ = 6;; }
  $if_then76$$if_else$8: do { 
    if (__label__ == 5) {

      var $79=$data_addr;
      var $step77=$79;
      var $dtRatio=$step77+2;
      var $80=FHEAP[$dtRatio];
      __ZN6b2Vec2mLEf($m_impulse, $80);
      var $m_invMassB79=$this1+35;
      var $81=FHEAP[$m_invMassB79];
      var $m_impulse80=$this1+25;
      __ZmlfRK6b2Vec2($ref_tmp78, $81, $m_impulse80);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp78);
      var $m_invIB81=$this1+36;
      var $82=FHEAP[$m_invIB81];
      var $m_rB82=$this1+31;
      var $m_impulse83=$this1+25;
      var $call84=__Z7b2CrossRK6b2Vec2S1_($m_rB82, $m_impulse83);
      var $mul85=($82)*($call84);
      var $83=$wB;
      var $add86=($83)+($mul85);
      $wB=$add86;
      ;
    }
    else if (__label__ == 6) {

      __ZN6b2Vec27SetZeroEv($m_impulse);
      ;
    }
  } while(0);

  var $m_indexB89=$this1+30;
  var $84=IHEAP[$m_indexB89];
  var $85=$data_addr;
  var $velocities90=$85+7;
  var $86=IHEAP[$velocities90];
  var $arrayidx91=$86+$84*3;
  var $v92=$arrayidx91;
  var $87=$v92;
  var $88=$vB;
  IHEAP[$87]=IHEAP[$88]; FHEAP[$87]=FHEAP[$88]; ; IHEAP[$87+1]=IHEAP[$88+1]; FHEAP[$87+1]=FHEAP[$88+1]; ;
  var $89=$wB;
  var $m_indexB93=$this1+30;
  var $90=IHEAP[$m_indexB93];
  var $91=$data_addr;
  var $velocities94=$91+7;
  var $92=IHEAP[$velocities94];
  var $arrayidx95=$92+$90*3;
  var $w96=$arrayidx95+2;
  FHEAP[$w96]=$89;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN12b2MouseJoint24SolveVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 22;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $vB=__stackBase__;
  var $wB;
  var $Cdot=__stackBase__+2;
  var $ref_tmp=__stackBase__+4;
  var $impulse=__stackBase__+6;
  var $ref_tmp5=__stackBase__+8;
  var $ref_tmp6=__stackBase__+10;
  var $ref_tmp7=__stackBase__+12;
  var $tmp=__stackBase__+14;
  var $oldImpulse=__stackBase__+16;
  var $maxImpulse;
  var $ref_tmp17=__stackBase__+18;
  var $ref_tmp19=__stackBase__+20;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexB=$this1+30;
  var $0=IHEAP[$m_indexB];
  var $1=$data_addr;
  var $velocities=$1+7;
  var $2=IHEAP[$velocities];
  var $arrayidx=$2+$0*3;
  var $v=$arrayidx;
  var $3=$vB;
  var $4=$v;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexB2=$this1+30;
  var $5=IHEAP[$m_indexB2];
  var $6=$data_addr;
  var $velocities3=$6+7;
  var $7=IHEAP[$velocities3];
  var $arrayidx4=$7+$5*3;
  var $w=$arrayidx4+2;
  var $8=FHEAP[$w];
  $wB=$8;
  var $9=$wB;
  var $m_rB=$this1+31;
  __Z7b2CrossfRK6b2Vec2($ref_tmp, $9, $m_rB);
  __ZplRK6b2Vec2S1_($Cdot, $vB, $ref_tmp);
  var $m_mass=$this1+37;
  var $m_C=$this1+41;
  __ZplRK6b2Vec2S1_($ref_tmp6, $Cdot, $m_C);
  var $m_gamma=$this1+28;
  var $10=FHEAP[$m_gamma];
  var $m_impulse=$this1+25;
  __ZmlfRK6b2Vec2($ref_tmp7, $10, $m_impulse);
  __ZplRK6b2Vec2S1_($tmp, $ref_tmp6, $ref_tmp7);
  __ZNK6b2Vec2ngEv($ref_tmp5, $tmp);
  __Z5b2MulRK7b2Mat22RK6b2Vec2($impulse, $m_mass, $ref_tmp5);
  var $m_impulse9=$this1+25;
  var $11=$oldImpulse;
  var $12=$m_impulse9;
  IHEAP[$11]=IHEAP[$12]; FHEAP[$11]=FHEAP[$12]; ; IHEAP[$11+1]=IHEAP[$12+1]; FHEAP[$11+1]=FHEAP[$12+1]; ;
  var $m_impulse10=$this1+25;
  __ZN6b2Vec2pLERKS_($m_impulse10, $impulse);
  var $13=$data_addr;
  var $step=$13;
  var $dt=$step;
  var $14=FHEAP[$dt];
  var $m_maxForce=$this1+27;
  var $15=FHEAP[$m_maxForce];
  var $mul=($14)*($15);
  $maxImpulse=$mul;
  var $m_impulse12=$this1+25;
  var $call=__ZNK6b2Vec213LengthSquaredEv($m_impulse12);
  var $16=$maxImpulse;
  var $17=$maxImpulse;
  var $mul13=($16)*($17);
  var $cmp=($call) > ($mul13);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$14: do { 
    if (__label__ == 1) {

      var $m_impulse14=$this1+25;
      var $18=$maxImpulse;
      var $m_impulse15=$this1+25;
      var $call16=__ZNK6b2Vec26LengthEv($m_impulse15);
      var $div=($18)/($call16);
      __ZN6b2Vec2mLEf($m_impulse14, $div);
      ;
    }
  } while(0);

  var $m_impulse18=$this1+25;
  __ZmiRK6b2Vec2S1_($ref_tmp17, $m_impulse18, $oldImpulse);
  var $19=$impulse;
  var $20=$ref_tmp17;
  IHEAP[$19]=IHEAP[$20]; FHEAP[$19]=FHEAP[$20]; ; IHEAP[$19+1]=IHEAP[$20+1]; FHEAP[$19+1]=FHEAP[$20+1]; ;
  var $m_invMassB=$this1+35;
  var $21=FHEAP[$m_invMassB];
  __ZmlfRK6b2Vec2($ref_tmp19, $21, $impulse);
  __ZN6b2Vec2pLERKS_($vB, $ref_tmp19);
  var $m_invIB=$this1+36;
  var $22=FHEAP[$m_invIB];
  var $m_rB20=$this1+31;
  var $call21=__Z7b2CrossRK6b2Vec2S1_($m_rB20, $impulse);
  var $mul22=($22)*($call21);
  var $23=$wB;
  var $add=($23)+($mul22);
  $wB=$add;
  var $m_indexB23=$this1+30;
  var $24=IHEAP[$m_indexB23];
  var $25=$data_addr;
  var $velocities24=$25+7;
  var $26=IHEAP[$velocities24];
  var $arrayidx25=$26+$24*3;
  var $v26=$arrayidx25;
  var $27=$v26;
  var $28=$vB;
  IHEAP[$27]=IHEAP[$28]; FHEAP[$27]=FHEAP[$28]; ; IHEAP[$27+1]=IHEAP[$28+1]; FHEAP[$27+1]=FHEAP[$28+1]; ;
  var $29=$wB;
  var $m_indexB27=$this1+30;
  var $30=IHEAP[$m_indexB27];
  var $31=$data_addr;
  var $velocities28=$31+7;
  var $32=IHEAP[$velocities28];
  var $arrayidx29=$32+$30*3;
  var $w30=$arrayidx29+2;
  FHEAP[$w30]=$29;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN12b2MouseJoint24SolveVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN25b2PolygonAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA, $0, $fixtureB, $1, $allocator) {
  ;
  var __label__;

  var $fixtureA_addr;
  var $_addr;
  var $fixtureB_addr;
  var $_addr1;
  var $allocator_addr;
  var $mem;
  $fixtureA_addr=$fixtureA;
  $_addr=$0;
  $fixtureB_addr=$fixtureB;
  $_addr1=$1;
  $allocator_addr=$allocator;
  var $2=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($2, 144);
  $mem=$call;
  var $3=$mem;
  var $new_isnull=($3)==0;
  if ($new_isnull) { var $7 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$27: do { 
    if (__label__ == 1) {

      var $4=$3;
      var $5=$fixtureA_addr;
      var $6=$fixtureB_addr;
      __ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_($4, $5, $6);
      var $7 = $4;;
    }
  } while(0);

  var $7;
  var $8=$7;
  ;
  return $8;
  return null;
}


function __ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_($this, $fixtureA, $fixtureB) {
  ;
  var __label__;

  var $this_addr;
  var $fixtureA_addr;
  var $fixtureB_addr;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $fixtureA_addr=$fixtureA;
  $fixtureB_addr=$fixtureB;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$fixtureA_addr;
  var $2=$fixtureB_addr;
  __ZN9b2ContactC2EP9b2FixtureiS1_i($0, $1, 0, $2, 0);
  var $3=$this1;
  IHEAP[$3]=__ZTV25b2PolygonAndCircleContact+2;
  var $4=$this1;
  var $m_fixtureA=$4+12;
  var $5=IHEAP[$m_fixtureA];
  var $call=__ZNK9b2Fixture7GetTypeEv($5);
  var $cmp=($call)==2;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $invoke_cont3$$cond_false$32: do { 
    if (__label__ == 1) {

      ___assert_func(__str262, 41, ___PRETTY_FUNCTION____ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_, __str1270);
      ;
    }
  } while(0);

  var $6=$this1;
  var $m_fixtureB=$6+13;
  var $7=IHEAP[$m_fixtureB];
  var $call4=__ZNK9b2Fixture7GetTypeEv($7);
  var $cmp5=($call4)==0;
  if ($cmp5) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end9$$cond_false7$35: do { 
    if (__label__ == 3) {

      ___assert_func(__str262, 42, ___PRETTY_FUNCTION____ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_, __str2264);
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN25b2PolygonAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this, $manifold, $xfA, $xfB) {
  ;
  var __label__;

  var $this_addr;
  var $manifold_addr;
  var $xfA_addr;
  var $xfB_addr;
  $this_addr=$this;
  $manifold_addr=$manifold;
  $xfA_addr=$xfA;
  $xfB_addr=$xfB;
  var $this1=$this_addr;
  var $0=$manifold_addr;
  var $1=$this1;
  var $m_fixtureA=$1+12;
  var $2=IHEAP[$m_fixtureA];
  var $call=__ZN9b2Fixture8GetShapeEv($2);
  var $3=$call;
  var $4=$xfA_addr;
  var $5=$this1;
  var $m_fixtureB=$5+13;
  var $6=IHEAP[$m_fixtureB];
  var $call2=__ZN9b2Fixture8GetShapeEv($6);
  var $7=$call2;
  var $8=$xfB_addr;
  __Z25b2CollidePolygonAndCircleP10b2ManifoldPK14b2PolygonShapeRK11b2TransformPK13b2CircleShapeS6_($0, $3, $4, $7, $8);
  ;
  return;
  return;
}


function __ZN16b2PolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA, $0, $fixtureB, $1, $allocator) {
  ;
  var __label__;

  var $fixtureA_addr;
  var $_addr;
  var $fixtureB_addr;
  var $_addr1;
  var $allocator_addr;
  var $mem;
  $fixtureA_addr=$fixtureA;
  $_addr=$0;
  $fixtureB_addr=$fixtureB;
  $_addr1=$1;
  $allocator_addr=$allocator;
  var $2=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($2, 144);
  $mem=$call;
  var $3=$mem;
  var $new_isnull=($3)==0;
  if ($new_isnull) { var $7 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$43: do { 
    if (__label__ == 1) {

      var $4=$3;
      var $5=$fixtureA_addr;
      var $6=$fixtureB_addr;
      __ZN16b2PolygonContactC2EP9b2FixtureS1_($4, $5, $6);
      var $7 = $4;;
    }
  } while(0);

  var $7;
  var $8=$7;
  ;
  return $8;
  return null;
}


function __ZN16b2PolygonContactC2EP9b2FixtureS1_($this, $fixtureA, $fixtureB) {
  ;
  var __label__;

  var $this_addr;
  var $fixtureA_addr;
  var $fixtureB_addr;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $fixtureA_addr=$fixtureA;
  $fixtureB_addr=$fixtureB;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$fixtureA_addr;
  var $2=$fixtureB_addr;
  __ZN9b2ContactC2EP9b2FixtureiS1_i($0, $1, 0, $2, 0);
  var $3=$this1;
  IHEAP[$3]=__ZTV16b2PolygonContact+2;
  var $4=$this1;
  var $m_fixtureA=$4+12;
  var $5=IHEAP[$m_fixtureA];
  var $call=__ZNK9b2Fixture7GetTypeEv($5);
  var $cmp=($call)==2;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $invoke_cont3$$cond_false$48: do { 
    if (__label__ == 1) {

      ___assert_func(__str269, 44, ___PRETTY_FUNCTION____ZN16b2PolygonContactC2EP9b2FixtureS1_, __str1270);
      ;
    }
  } while(0);

  var $6=$this1;
  var $m_fixtureB=$6+13;
  var $7=IHEAP[$m_fixtureB];
  var $call4=__ZNK9b2Fixture7GetTypeEv($7);
  var $cmp5=($call4)==2;
  if ($cmp5) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end9$$cond_false7$51: do { 
    if (__label__ == 3) {

      ___assert_func(__str269, 45, ___PRETTY_FUNCTION____ZN16b2PolygonContactC2EP9b2FixtureS1_, __str2271);
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN16b2PolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this, $manifold, $xfA, $xfB) {
  ;
  var __label__;

  var $this_addr;
  var $manifold_addr;
  var $xfA_addr;
  var $xfB_addr;
  $this_addr=$this;
  $manifold_addr=$manifold;
  $xfA_addr=$xfA;
  $xfB_addr=$xfB;
  var $this1=$this_addr;
  var $0=$manifold_addr;
  var $1=$this1;
  var $m_fixtureA=$1+12;
  var $2=IHEAP[$m_fixtureA];
  var $call=__ZN9b2Fixture8GetShapeEv($2);
  var $3=$call;
  var $4=$xfA_addr;
  var $5=$this1;
  var $m_fixtureB=$5+13;
  var $6=IHEAP[$m_fixtureB];
  var $call2=__ZN9b2Fixture8GetShapeEv($6);
  var $7=$call2;
  var $8=$xfB_addr;
  __Z17b2CollidePolygonsP10b2ManifoldPK14b2PolygonShapeRK11b2TransformS3_S6_($0, $3, $4, $7, $8);
  ;
  return;
  return;
}


function __ZNK14b2PolygonShape5CloneEP16b2BlockAllocator($this, $allocator) {
  ;
  var __label__;

  var $this_addr;
  var $allocator_addr;
  var $mem;
  var $clone;
  $this_addr=$this;
  $allocator_addr=$allocator;
  var $this1=$this_addr;
  var $0=$allocator_addr;
  var $call=__ZN16b2BlockAllocator8AllocateEi($0, 152);
  $mem=$call;
  var $1=$mem;
  var $new_isnull=($1)==0;
  if ($new_isnull) { var $3 = 0;__label__ = 2;; } else { __label__ = 1;; }
  $new_cont$$new_notnull$59: do { 
    if (__label__ == 1) {

      var $2=$1;
      __ZN14b2PolygonShapeC1Ev($2);
      var $3 = $2;;
    }
  } while(0);

  var $3;
  $clone=$3;
  var $4=$clone;
  var $call2=__ZN14b2PolygonShapeaSERKS_($4, $this1);
  var $5=$clone;
  var $6=$5;
  ;
  return $6;
  return null;
}


function __ZN14b2PolygonShapeaSERKS_($this, $0) {
  ;
  var __label__;

  var $this_addr;
  var $_addr;
  $this_addr=$this;
  $_addr=$0;
  var $this1=$this_addr;
  var $1=$this1;
  var $2=$_addr;
  var $3=$2;
  var $call=__ZN7b2ShapeaSERKS_($1, $3);
  var $m_centroid=$this1+3;
  var $4=$_addr;
  var $m_centroid2=$4+3;
  var $5=$m_centroid;
  var $6=$m_centroid2;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_vertices=$this1+5;
  var $7=$m_vertices;
  var $8=$_addr;
  var $m_vertices3=$8+5;
  var $9=$m_vertices3;
  for (var mcpi_s=$9,mcpi_e=$9+16,mcpi_d=$7; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $m_normals=$this1+21;
  var $10=$m_normals;
  var $11=$_addr;
  var $m_normals4=$11+21;
  var $12=$m_normals4;
  for (var mcpi_s=$12,mcpi_e=$12+16,mcpi_d=$10; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $13=$_addr;
  var $m_vertexCount=$13+37;
  var $14=IHEAP[$m_vertexCount];
  var $m_vertexCount5=$this1+37;
  IHEAP[$m_vertexCount5]=$14;
  ;
  return $this1;
  return null;
}


function __ZNK14b2PolygonShape13GetChildCountEv($this) {
  ;
  var __label__;

  ;
  return 1;
  return null;
}


function __ZN14b2PolygonShapeD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN14b2PolygonShapeD2Ev($this1);
  ;
  return;
  return;
}


function __ZN14b2PolygonShapeD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN14b2PolygonShapeD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN14b2PolygonShapeD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2ShapeD2Ev($0);
  ;
  return;
  return;
}


function __ZN14b2PolygonShape8SetAsBoxEffRK6b2Vec2f($this, $hx, $hy, $center, $angle) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $this_addr;
  var $hx_addr;
  var $hy_addr;
  var $center_addr;
  var $angle_addr;
  var $xf=__stackBase__;
  var $i;
  var $ref_tmp=__stackBase__+4;
  var $ref_tmp25=__stackBase__+6;
  $this_addr=$this;
  $hx_addr=$hx;
  $hy_addr=$hy;
  $center_addr=$center;
  $angle_addr=$angle;
  var $this1=$this_addr;
  var $m_vertexCount=$this1+37;
  IHEAP[$m_vertexCount]=4;
  var $m_vertices=$this1+5;
  var $arrayidx=$m_vertices;
  var $0=$hx_addr;
  var $sub=(-($0));
  var $1=$hy_addr;
  var $sub2=(-($1));
  __ZN6b2Vec23SetEff($arrayidx, $sub, $sub2);
  var $m_vertices3=$this1+5;
  var $arrayidx4=$m_vertices3+2;
  var $2=$hx_addr;
  var $3=$hy_addr;
  var $sub5=(-($3));
  __ZN6b2Vec23SetEff($arrayidx4, $2, $sub5);
  var $m_vertices6=$this1+5;
  var $arrayidx7=$m_vertices6+4;
  var $4=$hx_addr;
  var $5=$hy_addr;
  __ZN6b2Vec23SetEff($arrayidx7, $4, $5);
  var $m_vertices8=$this1+5;
  var $arrayidx9=$m_vertices8+6;
  var $6=$hx_addr;
  var $sub10=(-($6));
  var $7=$hy_addr;
  __ZN6b2Vec23SetEff($arrayidx9, $sub10, $7);
  var $m_normals=$this1+21;
  var $arrayidx11=$m_normals;
  __ZN6b2Vec23SetEff($arrayidx11, 0, -1);
  var $m_normals12=$this1+21;
  var $arrayidx13=$m_normals12+2;
  __ZN6b2Vec23SetEff($arrayidx13, 1, 0);
  var $m_normals14=$this1+21;
  var $arrayidx15=$m_normals14+4;
  __ZN6b2Vec23SetEff($arrayidx15, 0, 1);
  var $m_normals16=$this1+21;
  var $arrayidx17=$m_normals16+6;
  __ZN6b2Vec23SetEff($arrayidx17, -1, 0);
  var $m_centroid=$this1+3;
  var $8=$center_addr;
  var $9=$m_centroid;
  var $10=$8;
  IHEAP[$9]=IHEAP[$10]; FHEAP[$9]=FHEAP[$10]; ; IHEAP[$9+1]=IHEAP[$10+1]; FHEAP[$9+1]=FHEAP[$10+1]; ;
  __ZN11b2TransformC1Ev($xf);
  var $p=$xf;
  var $11=$center_addr;
  var $12=$p;
  var $13=$11;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $q=$xf+2;
  var $14=$angle_addr;
  __ZN5b2Rot3SetEf($q, $14);
  $i=0;
  var $15=$i;
  var $m_vertexCount18=$this1+37;
  var $16=IHEAP[$m_vertexCount18];
  var $cmp1=($15) < ($16);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 3;; }
  $for_body_lr_ph$$for_end$2: do { 
    if (__label__ == 1) {

      var $m_vertices19=$this1+5;
      var $m_vertices21=$this1+5;
      var $17=$ref_tmp;
      var $m_normals23=$this1+21;
      var $q26=$xf+2;
      var $m_normals27=$this1+21;
      var $18=$ref_tmp25;
      ;
      $for_body$4: while(1) { 

        var $19=$i;
        var $arrayidx20=$m_vertices19+($19<<1);
        var $20=$i;
        var $arrayidx22=$m_vertices21+($20<<1);
        __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp, $xf, $arrayidx22);
        var $21=$arrayidx20;
        IHEAP[$21]=IHEAP[$17]; FHEAP[$21]=FHEAP[$17]; ; IHEAP[$21+1]=IHEAP[$17+1]; FHEAP[$21+1]=FHEAP[$17+1]; ;
        var $22=$i;
        var $arrayidx24=$m_normals23+($22<<1);
        var $23=$i;
        var $arrayidx28=$m_normals27+($23<<1);
        __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp25, $q26, $arrayidx28);
        var $24=$arrayidx24;
        IHEAP[$24]=IHEAP[$18]; FHEAP[$24]=FHEAP[$18]; ; IHEAP[$24+1]=IHEAP[$18+1]; FHEAP[$24+1]=FHEAP[$18+1]; ;
        var $25=$i;
        var $inc=($25)+1;
        $i=$inc;
        var $26=$i;
        var $27=IHEAP[$m_vertexCount18];
        var $cmp=($26) < ($27);
        if (!($cmp)) { __label__ = 3;break $for_body_lr_ph$$for_end$2; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN14b2PolygonShape8SetAsBoxEffRK6b2Vec2f["X"]=1;

function __ZNK14b2PolygonShape11ComputeAABBEP6b2AABBRK11b2Transformi($this, $aabb, $xf, $childIndex) {
  var __stackBase__  = STACKTOP; STACKTOP += 16;
  var __label__;

  var $this_addr;
  var $aabb_addr;
  var $xf_addr;
  var $childIndex_addr;
  var $lower=__stackBase__;
  var $upper=__stackBase__+2;
  var $i;
  var $v=__stackBase__+4;
  var $ref_tmp=__stackBase__+6;
  var $ref_tmp4=__stackBase__+8;
  var $r=__stackBase__+10;
  var $ref_tmp6=__stackBase__+12;
  var $ref_tmp7=__stackBase__+14;
  $this_addr=$this;
  $aabb_addr=$aabb;
  $xf_addr=$xf;
  $childIndex_addr=$childIndex;
  var $this1=$this_addr;
  var $0=$xf_addr;
  var $m_vertices=$this1+5;
  var $arrayidx=$m_vertices;
  __Z5b2MulRK11b2TransformRK6b2Vec2($lower, $0, $arrayidx);
  var $1=$upper;
  var $2=$lower;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ;
  $i=1;
  var $3=$i;
  var $m_vertexCount=$this1+37;
  var $4=IHEAP[$m_vertexCount];
  var $cmp1=($3) < ($4);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 3;; }
  $for_body_lr_ph$$for_end$82: do { 
    if (__label__ == 1) {

      var $m_vertices2=$this1+5;
      var $5=$lower;
      var $6=$ref_tmp;
      var $7=$upper;
      var $8=$ref_tmp4;
      ;
      $for_body$84: while(1) { 

        var $9=$xf_addr;
        var $10=$i;
        var $arrayidx3=$m_vertices2+($10<<1);
        __Z5b2MulRK11b2TransformRK6b2Vec2($v, $9, $arrayidx3);
        __Z5b2MinRK6b2Vec2S1_($ref_tmp, $lower, $v);
        IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
        __Z5b2MaxRK6b2Vec2S1_($ref_tmp4, $upper, $v);
        IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
        var $11=$i;
        var $inc=($11)+1;
        $i=$inc;
        var $12=$i;
        var $13=IHEAP[$m_vertexCount];
        var $cmp=($12) < ($13);
        if (!($cmp)) { __label__ = 3;break $for_body_lr_ph$$for_end$82; }
      }
    }
  } while(0);

  var $14=$this1;
  var $m_radius=$14+2;
  var $15=FHEAP[$m_radius];
  var $16=$this1;
  var $m_radius5=$16+2;
  var $17=FHEAP[$m_radius5];
  __ZN6b2Vec2C1Eff($r, $15, $17);
  var $18=$aabb_addr;
  var $lowerBound=$18;
  __ZmiRK6b2Vec2S1_($ref_tmp6, $lower, $r);
  var $19=$lowerBound;
  var $20=$ref_tmp6;
  IHEAP[$19]=IHEAP[$20]; FHEAP[$19]=FHEAP[$20]; ; IHEAP[$19+1]=IHEAP[$20+1]; FHEAP[$19+1]=FHEAP[$20+1]; ;
  var $21=$aabb_addr;
  var $upperBound=$21+2;
  __ZplRK6b2Vec2S1_($ref_tmp7, $upper, $r);
  var $22=$upperBound;
  var $23=$ref_tmp7;
  IHEAP[$22]=IHEAP[$23]; FHEAP[$22]=FHEAP[$23]; ; IHEAP[$22+1]=IHEAP[$23+1]; FHEAP[$22+1]=FHEAP[$23+1]; ;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNK14b2PolygonShape11ComputeAABBEP6b2AABBRK11b2Transformi["X"]=1;

function __ZN14b2PolygonShape3SetEPK6b2Vec2i($this, $vertices, $count) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $vertices_addr;
  var $count_addr;
  var $i;
  var $i6;
  var $i1;
  var $i2;
  var $edge=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $ref_tmp32=__stackBase__+4;
  $this_addr=$this;
  $vertices_addr=$vertices;
  $count_addr=$count;
  var $this1=$this_addr;
  var $0=$count_addr;
  var $cmp=3 <= ($0);
  var $1=$count_addr;
  var $cmp2=($1) <= 8;
  var $or_cond=($cmp) & ($cmp2);
  if ($or_cond) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$9: do { 
    if (__label__ == 1) {

      ___assert_func(__str276, 122, ___PRETTY_FUNCTION____ZN14b2PolygonShape3SetEPK6b2Vec2i, __str1277);
      ;
    }
  } while(0);

  var $2=$count_addr;
  var $m_vertexCount=$this1+37;
  IHEAP[$m_vertexCount]=$2;
  $i=0;
  var $3=$i;
  var $m_vertexCount3=$this1+37;
  var $4=IHEAP[$m_vertexCount3];
  var $cmp42=($3) < ($4);
  if ($cmp42) { __label__ = 3;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end$12: do { 
    if (__label__ == 3) {

      var $m_vertices=$this1+5;
      ;
      $for_body$14: while(1) { 

        var $5=$i;
        var $arrayidx=$m_vertices+($5<<1);
        var $6=$i;
        var $7=$vertices_addr;
        var $arrayidx5=$7+($6<<1);
        var $8=$arrayidx;
        var $9=$arrayidx5;
        IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
        var $10=$i;
        var $inc=($10)+1;
        $i=$inc;
        var $11=$i;
        var $12=IHEAP[$m_vertexCount3];
        var $cmp4=($11) < ($12);
        if (!($cmp4)) { __label__ = 5;break $for_body_lr_ph$$for_end$12; }
      }
    }
  } while(0);

  $i6=0;
  var $13=$i6;
  var $m_vertexCount8=$this1+37;
  var $14=IHEAP[$m_vertexCount8];
  var $cmp91=($13) < ($14);
  if ($cmp91) { __label__ = 6;; } else { __label__ = 12;; }
  $for_body10_lr_ph$$for_end31$17: do { 
    if (__label__ == 6) {

      var $m_vertexCount11=$this1+37;
      var $m_vertices17=$this1+5;
      var $m_vertices19=$this1+5;
      var $m_normals=$this1+21;
      var $15=$ref_tmp;
      var $m_normals26=$this1+21;
      ;
      $for_body10$19: while(1) { 

        var $16=$i6;
        $i1=$16;
        var $17=$i6;
        var $add=($17)+1;
        var $18=IHEAP[$m_vertexCount11];
        var $cmp12=($add) < ($18);
        if ($cmp12) { __label__ = 8;; } else { var $cond = 0;__label__ = 9;; }
        $cond_true13$$cond_end16$21: do { 
          if (__label__ == 8) {

            var $19=$i6;
            var $add14=($19)+1;
            var $cond = $add14;;
          }
        } while(0);

        var $cond;
        $i2=$cond;
        var $20=$i2;
        var $arrayidx18=$m_vertices17+($20<<1);
        var $21=$i1;
        var $arrayidx20=$m_vertices19+($21<<1);
        __ZmiRK6b2Vec2S1_($edge, $arrayidx18, $arrayidx20);
        var $call=__ZNK6b2Vec213LengthSquaredEv($edge);
        var $cmp21=($call) > 1.4210854715202004e-14;
        if ($cmp21) { __label__ = 11;; } else { __label__ = 10;; }
        $cond_end24$$cond_false23$24: do { 
          if (__label__ == 10) {

            ___assert_func(__str276, 137, ___PRETTY_FUNCTION____ZN14b2PolygonShape3SetEPK6b2Vec2i, __str2278);
            ;
          }
        } while(0);

        var $22=$i6;
        var $arrayidx25=$m_normals+($22<<1);
        __Z7b2CrossRK6b2Vec2f($ref_tmp, $edge, 1);
        var $23=$arrayidx25;
        IHEAP[$23]=IHEAP[$15]; FHEAP[$23]=FHEAP[$15]; ; IHEAP[$23+1]=IHEAP[$15+1]; FHEAP[$23+1]=FHEAP[$15+1]; ;
        var $24=$i6;
        var $arrayidx27=$m_normals26+($24<<1);
        var $call28=__ZN6b2Vec29NormalizeEv($arrayidx27);
        var $25=$i6;
        var $inc30=($25)+1;
        $i6=$inc30;
        var $26=$i6;
        var $27=IHEAP[$m_vertexCount8];
        var $cmp9=($26) < ($27);
        if (!($cmp9)) { __label__ = 12;break $for_body10_lr_ph$$for_end31$17; }
      }
    }
  } while(0);

  var $m_centroid=$this1+3;
  var $m_vertices33=$this1+5;
  var $arraydecay=$m_vertices33;
  var $m_vertexCount34=$this1+37;
  var $28=IHEAP[$m_vertexCount34];
  __ZL15ComputeCentroidPK6b2Vec2i($ref_tmp32, $arraydecay, $28);
  var $29=$m_centroid;
  var $30=$ref_tmp32;
  IHEAP[$29]=IHEAP[$30]; FHEAP[$29]=FHEAP[$30]; ; IHEAP[$29+1]=IHEAP[$30+1]; FHEAP[$29+1]=FHEAP[$30+1]; ;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN14b2PolygonShape3SetEPK6b2Vec2i["X"]=1;

function __ZL15ComputeCentroidPK6b2Vec2i($agg_result, $vs, $count) {
  var __stackBase__  = STACKTOP; STACKTOP += 18;
  var __label__;

  var $vs_addr;
  var $count_addr;
  var $area;
  var $pRef=__stackBase__;
  var $inv3;
  var $i;
  var $p1=__stackBase__+2;
  var $p2=__stackBase__+4;
  var $p3=__stackBase__+6;
  var $e1=__stackBase__+8;
  var $e2=__stackBase__+10;
  var $D;
  var $triangleArea;
  var $ref_tmp=__stackBase__+12;
  var $ref_tmp11=__stackBase__+14;
  var $ref_tmp12=__stackBase__+16;
  $vs_addr=$vs;
  $count_addr=$count;
  var $0=$count_addr;
  var $cmp=($0) >= 3;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$29: do { 
    if (__label__ == 1) {

      ___assert_func(__str276, 76, ___PRETTY_FUNCTION____ZL15ComputeCentroidPK6b2Vec2i, __str6282);
      ;
    }
  } while(0);

  __ZN6b2Vec2C1Ev($agg_result);
  __ZN6b2Vec23SetEff($agg_result, 0, 0);
  $area=0;
  __ZN6b2Vec2C1Eff($pRef, 0, 0);
  $inv3=0.3333333432674408;
  $i=0;
  var $1=$i;
  var $2=$count_addr;
  var $cmp11=($1) < ($2);
  if ($cmp11) { __label__ = 3;; } else { __label__ = 8;; }
  $for_body_lr_ph$$for_end$32: do { 
    if (__label__ == 3) {

      var $3=$p1;
      var $4=$pRef;
      var $5=$p2;
      var $6=$p3;
      ;
      $for_body$34: while(1) { 

        IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
        var $7=$i;
        var $8=$vs_addr;
        var $arrayidx=$8+($7<<1);
        var $9=$arrayidx;
        IHEAP[$5]=IHEAP[$9]; FHEAP[$5]=FHEAP[$9]; ; IHEAP[$5+1]=IHEAP[$9+1]; FHEAP[$5+1]=FHEAP[$9+1]; ;
        var $10=$i;
        var $add=($10)+1;
        var $11=$count_addr;
        var $cmp2=($add) < ($11);
        if ($cmp2) { __label__ = 5;; } else { __label__ = 6;; }
        $cond_true3$$cond_false6$36: do { 
          if (__label__ == 5) {

            var $12=$i;
            var $add4=($12)+1;
            var $13=$vs_addr;
            var $arrayidx5=$13+($add4<<1);
            var $cond_lvalue = $arrayidx5;;
          }
          else if (__label__ == 6) {

            var $14=$vs_addr;
            var $arrayidx7=$14;
            var $cond_lvalue = $arrayidx7;;
          }
        } while(0);

        var $cond_lvalue;
        var $15=$cond_lvalue;
        IHEAP[$6]=IHEAP[$15]; FHEAP[$6]=FHEAP[$15]; ; IHEAP[$6+1]=IHEAP[$15+1]; FHEAP[$6+1]=FHEAP[$15+1]; ;
        __ZmiRK6b2Vec2S1_($e1, $p2, $p1);
        __ZmiRK6b2Vec2S1_($e2, $p3, $p1);
        var $call=__Z7b2CrossRK6b2Vec2S1_($e1, $e2);
        $D=$call;
        var $16=$D;
        var $mul=($16)*0.5;
        $triangleArea=$mul;
        var $17=$triangleArea;
        var $18=$area;
        var $add9=($18)+($17);
        $area=$add9;
        var $19=$triangleArea;
        var $mul10=($19)*0.3333333432674408;
        __ZplRK6b2Vec2S1_($ref_tmp12, $p1, $p2);
        __ZplRK6b2Vec2S1_($ref_tmp11, $ref_tmp12, $p3);
        __ZmlfRK6b2Vec2($ref_tmp, $mul10, $ref_tmp11);
        __ZN6b2Vec2pLERKS_($agg_result, $ref_tmp);
        var $20=$i;
        var $inc=($20)+1;
        $i=$inc;
        var $21=$i;
        var $22=$count_addr;
        var $cmp1=($21) < ($22);
        if (!($cmp1)) { __label__ = 8;break $for_body_lr_ph$$for_end$32; }
      }
    }
  } while(0);

  var $23=$area;
  var $cmp13=($23) > 1.1920928955078125e-7;
  if ($cmp13) { __label__ = 10;; } else { __label__ = 9;; }
  $cond_end16$$cond_false15$41: do { 
    if (__label__ == 9) {

      ___assert_func(__str276, 115, ___PRETTY_FUNCTION____ZL15ComputeCentroidPK6b2Vec2i, __str5281);
      ;
    }
  } while(0);

  var $24=$area;
  var $div=1/($24);
  __ZN6b2Vec2mLEf($agg_result, $div);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZL15ComputeCentroidPK6b2Vec2i["X"]=1;

function __ZNK14b2PolygonShape9TestPointERK11b2TransformRK6b2Vec2($this, $xf, $p) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $retval;
  var $this_addr;
  var $xf_addr;
  var $p_addr;
  var $pLocal=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $i;
  var $dot;
  var $ref_tmp3=__stackBase__+4;
  $this_addr=$this;
  $xf_addr=$xf;
  $p_addr=$p;
  var $this1=$this_addr;
  var $0=$xf_addr;
  var $q=$0+2;
  var $1=$p_addr;
  var $2=$xf_addr;
  var $p2=$2;
  __ZmiRK6b2Vec2S1_($ref_tmp, $1, $p2);
  __Z6b2MulTRK5b2RotRK6b2Vec2($pLocal, $q, $ref_tmp);
  $i=0;
  var $m_vertexCount=$this1+37;
  var $m_normals=$this1+21;
  var $m_vertices=$this1+5;
  ;
  $for_cond$45: while(1) { 

    var $3=$i;
    var $4=IHEAP[$m_vertexCount];
    var $cmp=($3) < ($4);
    if (!($cmp)) { __label__ = 5;break $for_cond$45; }

    var $5=$i;
    var $arrayidx=$m_normals+($5<<1);
    var $6=$i;
    var $arrayidx4=$m_vertices+($6<<1);
    __ZmiRK6b2Vec2S1_($ref_tmp3, $pLocal, $arrayidx4);
    var $call=__Z5b2DotRK6b2Vec2S1_($arrayidx, $ref_tmp3);
    $dot=$call;
    var $7=$dot;
    var $cmp5=($7) > 0;
    if ($cmp5) { __label__ = 3;break $for_cond$45; }

    var $8=$i;
    var $inc=($8)+1;
    $i=$inc;
    ;
  }
  $for_end$$if_then$49: do { 
    if (__label__ == 5) {

      $retval=1;
      ;
    }
    else if (__label__ == 3) {

      $retval=0;
      ;
    }
  } while(0);

  var $9=$retval;
  STACKTOP = __stackBase__;
  return $9;
  return null;
}


function __ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this, $output, $input, $xf, $childIndex) {
  var __stackBase__  = STACKTOP; STACKTOP += 14;
  var __label__;

  var $retval;
  var $this_addr;
  var $output_addr;
  var $input_addr;
  var $xf_addr;
  var $childIndex_addr;
  var $p1=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $p2=__stackBase__+4;
  var $ref_tmp4=__stackBase__+6;
  var $d=__stackBase__+8;
  var $lower;
  var $upper;
  var $index;
  var $i;
  var $numerator;
  var $ref_tmp7=__stackBase__+10;
  var $denominator;
  var $ref_tmp37=__stackBase__+12;
  $this_addr=$this;
  $output_addr=$output;
  $input_addr=$input;
  $xf_addr=$xf;
  $childIndex_addr=$childIndex;
  var $this1=$this_addr;
  var $0=$xf_addr;
  var $q=$0+2;
  var $1=$input_addr;
  var $p12=$1;
  var $2=$xf_addr;
  var $p=$2;
  __ZmiRK6b2Vec2S1_($ref_tmp, $p12, $p);
  __Z6b2MulTRK5b2RotRK6b2Vec2($p1, $q, $ref_tmp);
  var $3=$xf_addr;
  var $q3=$3+2;
  var $4=$input_addr;
  var $p25=$4+2;
  var $5=$xf_addr;
  var $p6=$5;
  __ZmiRK6b2Vec2S1_($ref_tmp4, $p25, $p6);
  __Z6b2MulTRK5b2RotRK6b2Vec2($p2, $q3, $ref_tmp4);
  __ZmiRK6b2Vec2S1_($d, $p2, $p1);
  $lower=0;
  var $6=$input_addr;
  var $maxFraction=$6+4;
  var $7=FHEAP[$maxFraction];
  $upper=$7;
  $index=-1;
  $i=0;
  var $m_vertexCount=$this1+37;
  var $m_normals=$this1+21;
  var $m_vertices=$this1+5;
  var $m_normals9=$this1+21;
  ;
  $for_cond$54: while(1) { 

    var $8=$i;
    var $9=IHEAP[$m_vertexCount];
    var $cmp=($8) < ($9);
    if (!($cmp)) { __label__ = 14;break $for_cond$54; }

    var $10=$i;
    var $arrayidx=$m_normals+($10<<1);
    var $11=$i;
    var $arrayidx8=$m_vertices+($11<<1);
    __ZmiRK6b2Vec2S1_($ref_tmp7, $arrayidx8, $p1);
    var $call=__Z5b2DotRK6b2Vec2S1_($arrayidx, $ref_tmp7);
    $numerator=$call;
    var $12=$i;
    var $arrayidx10=$m_normals9+($12<<1);
    var $call11=__Z5b2DotRK6b2Vec2S1_($arrayidx10, $d);
    $denominator=$call11;
    var $13=$denominator;
    var $cmp12=($13) == 0;
    if ($cmp12) { __label__ = 3;; } else { __label__ = 5;; }
    $if_then$$if_else$57: do { 
      if (__label__ == 3) {

        var $14=$numerator;
        var $cmp13=($14) < 0;
        if ($cmp13) { __label__ = 4;break $for_cond$54; }
      }
      else if (__label__ == 5) {

        var $15=$denominator;
        var $cmp15=($15) < 0;
        if ($cmp15) { __label__ = 6;; } else { var $22 = $15;__label__ = 8;; }
        $land_lhs_true$$if_else18$60: do { 
          if (__label__ == 6) {

            var $16=$numerator;
            var $17=$lower;
            var $18=$denominator;
            var $mul=($17)*($18);
            var $cmp16=($16) < ($mul);
            if (!($cmp16)) { var $22 = $18;__label__ = 8;break $land_lhs_true$$if_else18$60; }

            var $19=$numerator;
            var $20=$denominator;
            var $div=($19)/($20);
            $lower=$div;
            var $21=$i;
            $index=$21;
            __label__ = 11;break $if_then$$if_else$57;
          }
        } while(0);

        var $22;
        var $cmp19=($22) > 0;
        if (!($cmp19)) { __label__ = 11;break $if_then$$if_else$57; }

        var $23=$numerator;
        var $24=$upper;
        var $25=$denominator;
        var $mul21=($24)*($25);
        var $cmp22=($23) < ($mul21);
        if (!($cmp22)) { __label__ = 11;break $if_then$$if_else$57; }

        var $26=$numerator;
        var $27=$denominator;
        var $div24=($26)/($27);
        $upper=$div24;
        ;
      }
    } while(0);

    var $28=$upper;
    var $29=$lower;
    var $cmp28=($28) < ($29);
    if ($cmp28) { __label__ = 12;break $for_cond$54; }

    var $30=$i;
    var $inc=($30)+1;
    $i=$inc;
    ;
  }
  $for_end$$if_then14$$if_then29$68: do { 
    if (__label__ == 14) {

      var $31=$lower;
      var $cmp31=0 <= ($31);
      if ($cmp31) { __label__ = 15;; } else { __label__ = 16;; }
      $land_lhs_true32$$cond_false$70: do { 
        if (__label__ == 15) {

          var $32=$lower;
          var $33=$input_addr;
          var $maxFraction33=$33+4;
          var $34=FHEAP[$maxFraction33];
          var $cmp34=($32) <= ($34);
          if ($cmp34) { __label__ = 17;break $land_lhs_true32$$cond_false$70; } else { __label__ = 16;break $land_lhs_true32$$cond_false$70; }
        }
      } while(0);
      $cond_end$$cond_false$72: do { 
        if (__label__ == 16) {

          ___assert_func(__str276, 249, ___PRETTY_FUNCTION____ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi, __str3279);
          ;
        }
      } while(0);

      var $35=$index;
      var $cmp35=($35) >= 0;
      if ($cmp35) { __label__ = 18;; } else { __label__ = 19;; }
      $if_then36$$if_end41$75: do { 
        if (__label__ == 18) {

          var $36=$lower;
          var $37=$output_addr;
          var $fraction=$37+2;
          FHEAP[$fraction]=$36;
          var $38=$output_addr;
          var $normal=$38;
          var $39=$xf_addr;
          var $q38=$39+2;
          var $40=$index;
          var $m_normals39=$this1+21;
          var $arrayidx40=$m_normals39+($40<<1);
          __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp37, $q38, $arrayidx40);
          var $41=$normal;
          var $42=$ref_tmp37;
          IHEAP[$41]=IHEAP[$42]; FHEAP[$41]=FHEAP[$42]; ; IHEAP[$41+1]=IHEAP[$42+1]; FHEAP[$41+1]=FHEAP[$42+1]; ;
          $retval=1;
          ;
        }
        else if (__label__ == 19) {

          $retval=0;
          ;
        }
      } while(0);
    }
    else if (__label__ == 4) {

      $retval=0;
      ;
    }
    else if (__label__ == 12) {

      $retval=0;
      ;
    }
  } while(0);

  var $43=$retval;
  STACKTOP = __stackBase__;
  return $43;
  return null;
}
__ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi["X"]=1;

function __ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf($this, $massData, $density) {
  var __stackBase__  = STACKTOP; STACKTOP += 14;
  var __label__;

  var $this_addr;
  var $massData_addr;
  var $density_addr;
  var $center=__stackBase__;
  var $area;
  var $I;
  var $s=__stackBase__+2;
  var $i;
  var $k_inv3;
  var $i5;
  var $e1=__stackBase__+4;
  var $e2=__stackBase__+6;
  var $D;
  var $triangleArea;
  var $ref_tmp=__stackBase__+8;
  var $ref_tmp24=__stackBase__+10;
  var $ex1;
  var $ey1;
  var $ex2;
  var $ey2;
  var $intx2;
  var $inty2;
  var $ref_tmp51=__stackBase__+12;
  $this_addr=$this;
  $massData_addr=$massData;
  $density_addr=$density;
  var $this1=$this_addr;
  var $m_vertexCount=$this1+37;
  var $0=IHEAP[$m_vertexCount];
  var $cmp=($0) >= 3;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$88: do { 
    if (__label__ == 1) {

      ___assert_func(__str276, 306, ___PRETTY_FUNCTION____ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf, __str4280);
      ;
    }
  } while(0);

  __ZN6b2Vec2C1Ev($center);
  __ZN6b2Vec23SetEff($center, 0, 0);
  $area=0;
  $I=0;
  __ZN6b2Vec2C1Eff($s, 0, 0);
  $i=0;
  var $1=$i;
  var $m_vertexCount2=$this1+37;
  var $2=IHEAP[$m_vertexCount2];
  var $cmp32=($1) < ($2);
  if ($cmp32) { __label__ = 3;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end$91: do { 
    if (__label__ == 3) {

      var $m_vertices=$this1+5;
      ;
      $for_body$93: while(1) { 

        var $3=$i;
        var $arrayidx=$m_vertices+($3<<1);
        __ZN6b2Vec2pLERKS_($s, $arrayidx);
        var $4=$i;
        var $inc=($4)+1;
        $i=$inc;
        var $5=$i;
        var $6=IHEAP[$m_vertexCount2];
        var $cmp3=($5) < ($6);
        if (!($cmp3)) { __label__ = 5;break $for_body_lr_ph$$for_end$91; }
      }
    }
  } while(0);

  var $m_vertexCount4=$this1+37;
  var $7=IHEAP[$m_vertexCount4];
  var $conv=($7);
  var $div=1/($conv);
  __ZN6b2Vec2mLEf($s, $div);
  $k_inv3=0.3333333432674408;
  $i5=0;
  var $8=$i5;
  var $m_vertexCount7=$this1+37;
  var $9=IHEAP[$m_vertexCount7];
  var $cmp81=($8) < ($9);
  if ($cmp81) { __label__ = 6;; } else { __label__ = 11;; }
  $for_body9_lr_ph$$for_end43$96: do { 
    if (__label__ == 6) {

      var $m_vertices10=$this1+5;
      var $m_vertexCount12=$this1+37;
      var $m_vertices16=$this1+5;
      var $x=$e1;
      var $y=$e1+1;
      var $x25=$e2;
      var $y26=$e2+1;
      var $m_vertices19=$this1+5;
      var $arrayidx20=$m_vertices19;
      ;
      $for_body9$98: while(1) { 

        var $10=$i5;
        var $arrayidx11=$m_vertices10+($10<<1);
        __ZmiRK6b2Vec2S1_($e1, $arrayidx11, $s);
        var $11=$i5;
        var $add=($11)+1;
        var $12=IHEAP[$m_vertexCount12];
        var $cmp13=($add) < ($12);
        if ($cmp13) { __label__ = 8;; } else { __label__ = 9;; }
        $cond_true14$$cond_false18$100: do { 
          if (__label__ == 8) {

            var $13=$i5;
            var $add15=($13)+1;
            var $arrayidx17=$m_vertices16+($add15<<1);
            __ZmiRK6b2Vec2S1_($e2, $arrayidx17, $s);
            ;
          }
          else if (__label__ == 9) {

            __ZmiRK6b2Vec2S1_($e2, $arrayidx20, $s);
            ;
          }
        } while(0);

        var $call=__Z7b2CrossRK6b2Vec2S1_($e1, $e2);
        $D=$call;
        var $14=$D;
        var $mul=($14)*0.5;
        $triangleArea=$mul;
        var $15=$triangleArea;
        var $16=$area;
        var $add22=($16)+($15);
        $area=$add22;
        var $17=$triangleArea;
        var $mul23=($17)*0.3333333432674408;
        __ZplRK6b2Vec2S1_($ref_tmp24, $e1, $e2);
        __ZmlfRK6b2Vec2($ref_tmp, $mul23, $ref_tmp24);
        __ZN6b2Vec2pLERKS_($center, $ref_tmp);
        var $18=FHEAP[$x];
        $ex1=$18;
        var $19=FHEAP[$y];
        $ey1=$19;
        var $20=FHEAP[$x25];
        $ex2=$20;
        var $21=FHEAP[$y26];
        $ey2=$21;
        var $22=$ex1;
        var $23=$ex1;
        var $mul27=($22)*($23);
        var $24=$ex2;
        var $25=$ex1;
        var $mul28=($24)*($25);
        var $add29=($mul27)+($mul28);
        var $26=$ex2;
        var $27=$ex2;
        var $mul30=($26)*($27);
        var $add31=($add29)+($mul30);
        $intx2=$add31;
        var $28=$ey1;
        var $29=$ey1;
        var $mul32=($28)*($29);
        var $30=$ey2;
        var $31=$ey1;
        var $mul33=($30)*($31);
        var $add34=($mul32)+($mul33);
        var $32=$ey2;
        var $33=$ey2;
        var $mul35=($32)*($33);
        var $add36=($add34)+($mul35);
        $inty2=$add36;
        var $34=$D;
        var $mul37=($34)*0.0833333358168602;
        var $35=$intx2;
        var $36=$inty2;
        var $add38=($35)+($36);
        var $mul39=($mul37)*($add38);
        var $37=$I;
        var $add40=($37)+($mul39);
        $I=$add40;
        var $38=$i5;
        var $inc42=($38)+1;
        $i5=$inc42;
        var $39=$i5;
        var $40=IHEAP[$m_vertexCount7];
        var $cmp8=($39) < ($40);
        if (!($cmp8)) { __label__ = 11;break $for_body9_lr_ph$$for_end43$96; }
      }
    }
  } while(0);

  var $41=$density_addr;
  var $42=$area;
  var $mul44=($41)*($42);
  var $43=$massData_addr;
  var $mass=$43;
  FHEAP[$mass]=$mul44;
  var $44=$area;
  var $cmp45=($44) > 1.1920928955078125e-7;
  if ($cmp45) { __label__ = 13;; } else { __label__ = 12;; }
  $cond_end48$$cond_false47$105: do { 
    if (__label__ == 12) {

      ___assert_func(__str276, 352, ___PRETTY_FUNCTION____ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf, __str5281);
      ;
    }
  } while(0);

  var $45=$area;
  var $div49=1/($45);
  __ZN6b2Vec2mLEf($center, $div49);
  var $46=$massData_addr;
  var $center50=$46+1;
  __ZplRK6b2Vec2S1_($ref_tmp51, $center, $s);
  var $47=$center50;
  var $48=$ref_tmp51;
  IHEAP[$47]=IHEAP[$48]; FHEAP[$47]=FHEAP[$48]; ; IHEAP[$47+1]=IHEAP[$48+1]; FHEAP[$47+1]=FHEAP[$48+1]; ;
  var $49=$density_addr;
  var $50=$I;
  var $mul52=($49)*($50);
  var $51=$massData_addr;
  var $I53=$51+3;
  FHEAP[$I53]=$mul52;
  var $52=$massData_addr;
  var $mass54=$52;
  var $53=FHEAP[$mass54];
  var $54=$massData_addr;
  var $center55=$54+1;
  var $55=$massData_addr;
  var $center56=$55+1;
  var $call57=__Z5b2DotRK6b2Vec2S1_($center55, $center56);
  var $call58=__Z5b2DotRK6b2Vec2S1_($center, $center);
  var $sub=($call57)-($call58);
  var $mul59=($53)*($sub);
  var $56=$massData_addr;
  var $I60=$56+3;
  var $57=FHEAP[$I60];
  var $add61=($57)+($mul59);
  FHEAP[$I60]=$add61;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf["X"]=1;

function __ZN7b2Mat33C1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN7b2Mat33C2Ev($this1);
  ;
  return;
  return;
}


function __ZN14b2PolygonShapeC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2ShapeC2Ev($0);
  var $1=$this1;
  IHEAP[$1]=__ZTV14b2PolygonShape+2;
  var $m_centroid=$this1+3;
  __ZN6b2Vec2C1Ev($m_centroid);
  var $m_vertices=$this1+5;
  var $array_begin=$m_vertices;
  __ZN6b2Vec2C1Ev($array_begin);
  var $arrayctor_next=$array_begin+2;
  __ZN6b2Vec2C1Ev($arrayctor_next);
  var $arrayctor_next_1=$arrayctor_next+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_1);
  var $arrayctor_next_2=$arrayctor_next_1+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_2);
  var $arrayctor_next_3=$arrayctor_next_2+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_3);
  var $arrayctor_next_4=$arrayctor_next_3+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_4);
  var $arrayctor_next_5=$arrayctor_next_4+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_5);
  var $arrayctor_next_6=$arrayctor_next_5+2;
  __ZN6b2Vec2C1Ev($arrayctor_next_6);
  var $m_normals=$this1+21;
  var $array_begin3=$m_normals;
  __ZN6b2Vec2C1Ev($array_begin3);
  var $arrayctor_next8=$array_begin3+2;
  __ZN6b2Vec2C1Ev($arrayctor_next8);
  var $arrayctor_next8_1=$arrayctor_next8+2;
  __ZN6b2Vec2C1Ev($arrayctor_next8_1);
  var $arrayctor_next8_2=$arrayctor_next8_1+2;
  __ZN6b2Vec2C1Ev($arrayctor_next8_2);
  var $arrayctor_next8_3=$arrayctor_next8_2+2;
  __ZN6b2Vec2C1Ev($arrayctor_next8_3);
  var $arrayctor_next8_4=$arrayctor_next8_3+2;
  __ZN6b2Vec2C1Ev($arrayctor_next8_4);
  var $arrayctor_next8_5=$arrayctor_next8_4+2;
  __ZN6b2Vec2C1Ev($arrayctor_next8_5);
  var $arrayctor_next8_6=$arrayctor_next8_5+2;
  __ZN6b2Vec2C1Ev($arrayctor_next8_6);
  var $2=$this1;
  var $m_type=$2+1;
  IHEAP[$m_type]=2;
  var $3=$this1;
  var $m_radius=$3+2;
  FHEAP[$m_radius]=0.009999999776482582;
  var $m_vertexCount=$this1+37;
  IHEAP[$m_vertexCount]=0;
  var $m_centroid11=$this1+3;
  __ZN6b2Vec27SetZeroEv($m_centroid11);
  ;
  return;
  return;
}
__ZN14b2PolygonShapeC2Ev["X"]=1;

function __ZNK6b2Body14GetLocalVectorERK6b2Vec2($agg_result, $this, $worldVector) {
  ;
  var __label__;

  var $this_addr;
  var $worldVector_addr;
  $this_addr=$this;
  $worldVector_addr=$worldVector;
  var $this1=$this_addr;
  var $m_xf=$this1+3;
  var $q=$m_xf+2;
  var $0=$worldVector_addr;
  __Z6b2MulTRK5b2RotRK6b2Vec2($agg_result, $q, $0);
  ;
  return;
  return;
}


function __ZNK6b2Body8GetAngleEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_sweep=$this1+7;
  var $a=$m_sweep+7;
  var $0=FHEAP[$a];
  ;
  return $0;
  return null;
}


function __ZN6b2Vec37SetZeroEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $x=$this1;
  FHEAP[$x]=0;
  var $y=$this1+1;
  FHEAP[$y]=0;
  var $z=$this1+2;
  FHEAP[$z]=0;
  ;
  return;
  return;
}


function __ZN6b2Vec33SetEfff($this, $x_, $y_, $z_) {
  ;
  var __label__;

  var $this_addr;
  var $x__addr;
  var $y__addr;
  var $z__addr;
  $this_addr=$this;
  $x__addr=$x_;
  $y__addr=$y_;
  $z__addr=$z_;
  var $this1=$this_addr;
  var $0=$x__addr;
  var $x=$this1;
  FHEAP[$x]=$0;
  var $1=$y__addr;
  var $y=$this1+1;
  FHEAP[$y]=$1;
  var $2=$z__addr;
  var $z=$this1+2;
  FHEAP[$z]=$2;
  ;
  return;
  return;
}


function __ZN6b2Vec3mLEf($this, $s) {
  ;
  var __label__;

  var $this_addr;
  var $s_addr;
  $this_addr=$this;
  $s_addr=$s;
  var $this1=$this_addr;
  var $0=$s_addr;
  var $x=$this1;
  var $1=FHEAP[$x];
  var $mul=($1)*($0);
  FHEAP[$x]=$mul;
  var $2=$s_addr;
  var $y=$this1+1;
  var $3=FHEAP[$y];
  var $mul2=($3)*($2);
  FHEAP[$y]=$mul2;
  var $4=$s_addr;
  var $z=$this1+2;
  var $5=FHEAP[$z];
  var $mul3=($5)*($4);
  FHEAP[$z]=$mul3;
  ;
  return;
  return;
}


function __ZN19b2PrismaticJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($this, $bA, $bB, $anchor, $axis) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $bA_addr;
  var $bB_addr;
  var $anchor_addr;
  var $axis_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp3=__stackBase__+2;
  var $ref_tmp5=__stackBase__+4;
  $this_addr=$this;
  $bA_addr=$bA;
  $bB_addr=$bB;
  $anchor_addr=$anchor;
  $axis_addr=$axis;
  var $this1=$this_addr;
  var $0=$bA_addr;
  var $1=$this1;
  var $bodyA=$1+2;
  IHEAP[$bodyA]=$0;
  var $2=$bB_addr;
  var $3=$this1;
  var $bodyB=$3+3;
  IHEAP[$bodyB]=$2;
  var $localAnchorA=$this1+5;
  var $4=$this1;
  var $bodyA2=$4+2;
  var $5=IHEAP[$bodyA2];
  var $6=$anchor_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp, $5, $6);
  var $7=$localAnchorA;
  var $8=$ref_tmp;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
  var $localAnchorB=$this1+7;
  var $9=$this1;
  var $bodyB4=$9+3;
  var $10=IHEAP[$bodyB4];
  var $11=$anchor_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp3, $10, $11);
  var $12=$localAnchorB;
  var $13=$ref_tmp3;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $localAxisA=$this1+9;
  var $14=$this1;
  var $bodyA6=$14+2;
  var $15=IHEAP[$bodyA6];
  var $16=$axis_addr;
  __ZNK6b2Body14GetLocalVectorERK6b2Vec2($ref_tmp5, $15, $16);
  var $17=$localAxisA;
  var $18=$ref_tmp5;
  IHEAP[$17]=IHEAP[$18]; FHEAP[$17]=FHEAP[$18]; ; IHEAP[$17+1]=IHEAP[$18+1]; FHEAP[$17+1]=FHEAP[$18+1]; ;
  var $19=$this1;
  var $bodyB7=$19+3;
  var $20=IHEAP[$bodyB7];
  var $call=__ZNK6b2Body8GetAngleEv($20);
  var $21=$this1;
  var $bodyA8=$21+2;
  var $22=IHEAP[$bodyA8];
  var $call9=__ZNK6b2Body8GetAngleEv($22);
  var $sub=($call)-($call9);
  var $referenceAngle=$this1+11;
  FHEAP[$referenceAngle]=$sub;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN19b2PrismaticJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_["X"]=1;

function __ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef($this, $def) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $def_addr;
  var $ref_tmp=__stackBase__;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$def_addr;
  var $2=$1;
  __ZN7b2JointC2EPK10b2JointDef($0, $2);
  var $3=$this1;
  IHEAP[$3]=__ZTV16b2PrismaticJoint+2;
  var $m_localAnchorA=$this1+18;
  __ZN6b2Vec2C1Ev($m_localAnchorA);
  var $m_localAnchorB=$this1+20;
  __ZN6b2Vec2C1Ev($m_localAnchorB);
  var $m_localXAxisA=$this1+22;
  __ZN6b2Vec2C1Ev($m_localXAxisA);
  var $m_localYAxisA=$this1+24;
  __ZN6b2Vec2C1Ev($m_localYAxisA);
  var $m_impulse=$this1+27;
  __ZN6b2Vec3C1Ev($m_impulse);
  var $m_localCenterA=$this1+40;
  __ZN6b2Vec2C1Ev($m_localCenterA);
  var $m_localCenterB=$this1+42;
  __ZN6b2Vec2C1Ev($m_localCenterB);
  var $m_axis=$this1+48;
  __ZN6b2Vec2C1Ev($m_axis);
  var $m_perp=$this1+50;
  __ZN6b2Vec2C1Ev($m_perp);
  var $m_K=$this1+56;
  __ZN7b2Mat33C1Ev($m_K);
  var $m_localAnchorA11=$this1+18;
  var $4=$def_addr;
  var $localAnchorA=$4+5;
  var $5=$m_localAnchorA11;
  var $6=$localAnchorA;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_localAnchorB12=$this1+20;
  var $7=$def_addr;
  var $localAnchorB=$7+7;
  var $8=$m_localAnchorB12;
  var $9=$localAnchorB;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localXAxisA13=$this1+22;
  var $10=$def_addr;
  var $localAxisA=$10+9;
  var $11=$m_localXAxisA13;
  var $12=$localAxisA;
  IHEAP[$11]=IHEAP[$12]; FHEAP[$11]=FHEAP[$12]; ; IHEAP[$11+1]=IHEAP[$12+1]; FHEAP[$11+1]=FHEAP[$12+1]; ;
  var $m_localXAxisA14=$this1+22;
  var $call=__ZN6b2Vec29NormalizeEv($m_localXAxisA14);
  var $m_localYAxisA16=$this1+24;
  var $m_localXAxisA17=$this1+22;
  __Z7b2CrossfRK6b2Vec2($ref_tmp, 1, $m_localXAxisA17);
  var $13=$m_localYAxisA16;
  var $14=$ref_tmp;
  IHEAP[$13]=IHEAP[$14]; FHEAP[$13]=FHEAP[$14]; ; IHEAP[$13+1]=IHEAP[$14+1]; FHEAP[$13+1]=FHEAP[$14+1]; ;
  var $15=$def_addr;
  var $referenceAngle=$15+11;
  var $16=FHEAP[$referenceAngle];
  var $m_referenceAngle=$this1+26;
  FHEAP[$m_referenceAngle]=$16;
  var $m_impulse19=$this1+27;
  __ZN6b2Vec37SetZeroEv($m_impulse19);
  var $m_motorMass=$this1+65;
  FHEAP[$m_motorMass]=0;
  var $m_motorImpulse=$this1+30;
  FHEAP[$m_motorImpulse]=0;
  var $17=$def_addr;
  var $lowerTranslation=$17+13;
  var $18=FHEAP[$lowerTranslation];
  var $m_lowerTranslation=$this1+31;
  FHEAP[$m_lowerTranslation]=$18;
  var $19=$def_addr;
  var $upperTranslation=$19+14;
  var $20=FHEAP[$upperTranslation];
  var $m_upperTranslation=$this1+32;
  FHEAP[$m_upperTranslation]=$20;
  var $21=$def_addr;
  var $maxMotorForce=$21+16;
  var $22=FHEAP[$maxMotorForce];
  var $m_maxMotorForce=$this1+33;
  FHEAP[$m_maxMotorForce]=$22;
  var $23=$def_addr;
  var $motorSpeed=$23+17;
  var $24=FHEAP[$motorSpeed];
  var $m_motorSpeed=$this1+34;
  FHEAP[$m_motorSpeed]=$24;
  var $25=$def_addr;
  var $enableLimit=$25+12;
  var $26=IHEAP[$enableLimit];
  var $tobool=((($26)) & 1);
  var $m_enableLimit=$this1+35;
  var $frombool=($tobool);
  IHEAP[$m_enableLimit]=$frombool;
  var $27=$def_addr;
  var $enableMotor=$27+15;
  var $28=IHEAP[$enableMotor];
  var $tobool21=((($28)) & 1);
  var $m_enableMotor=$this1+36;
  var $frombool22=($tobool21);
  IHEAP[$m_enableMotor]=$frombool22;
  var $m_limitState=$this1+37;
  IHEAP[$m_limitState]=0;
  var $m_axis23=$this1+48;
  __ZN6b2Vec27SetZeroEv($m_axis23);
  var $m_perp25=$this1+50;
  __ZN6b2Vec27SetZeroEv($m_perp25);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef["X"]=1;

function __ZN16b2PrismaticJoint23InitVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 44;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $vA=__stackBase__+2;
  var $wA;
  var $cB=__stackBase__+4;
  var $aB;
  var $vB=__stackBase__+6;
  var $wB;
  var $qA=__stackBase__+8;
  var $qB=__stackBase__+10;
  var $rA=__stackBase__+12;
  var $ref_tmp=__stackBase__+14;
  var $rB=__stackBase__+16;
  var $ref_tmp39=__stackBase__+18;
  var $d=__stackBase__+20;
  var $ref_tmp41=__stackBase__+22;
  var $ref_tmp42=__stackBase__+24;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $ref_tmp47=__stackBase__+26;
  var $ref_tmp48=__stackBase__+28;
  var $ref_tmp64=__stackBase__+30;
  var $ref_tmp65=__stackBase__+32;
  var $k11;
  var $k12;
  var $k13;
  var $k22;
  var $k23;
  var $k33;
  var $jointTranslation;
  var $P=__stackBase__+34;
  var $ref_tmp166=__stackBase__+36;
  var $ref_tmp169=__stackBase__+38;
  var $LA;
  var $LB;
  var $ref_tmp202=__stackBase__+40;
  var $ref_tmp205=__stackBase__+42;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  var $m_indexA=$this1+38;
  IHEAP[$m_indexA]=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  var $m_indexB=$this1+39;
  IHEAP[$m_indexB]=$5;
  var $m_localCenterA=$this1+40;
  var $6=$this1;
  var $m_bodyA3=$6+12;
  var $7=IHEAP[$m_bodyA3];
  var $m_sweep=$7+7;
  var $localCenter=$m_sweep;
  var $8=$m_localCenterA;
  var $9=$localCenter;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localCenterB=$this1+42;
  var $10=$this1;
  var $m_bodyB4=$10+13;
  var $11=IHEAP[$m_bodyB4];
  var $m_sweep5=$11+7;
  var $localCenter6=$m_sweep5;
  var $12=$m_localCenterB;
  var $13=$localCenter6;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$this1;
  var $m_bodyA7=$14+12;
  var $15=IHEAP[$m_bodyA7];
  var $m_invMass=$15+30;
  var $16=FHEAP[$m_invMass];
  var $m_invMassA=$this1+44;
  FHEAP[$m_invMassA]=$16;
  var $17=$this1;
  var $m_bodyB8=$17+13;
  var $18=IHEAP[$m_bodyB8];
  var $m_invMass9=$18+30;
  var $19=FHEAP[$m_invMass9];
  var $m_invMassB=$this1+45;
  FHEAP[$m_invMassB]=$19;
  var $20=$this1;
  var $m_bodyA10=$20+12;
  var $21=IHEAP[$m_bodyA10];
  var $m_invI=$21+32;
  var $22=FHEAP[$m_invI];
  var $m_invIA=$this1+46;
  FHEAP[$m_invIA]=$22;
  var $23=$this1;
  var $m_bodyB11=$23+13;
  var $24=IHEAP[$m_bodyB11];
  var $m_invI12=$24+32;
  var $25=FHEAP[$m_invI12];
  var $m_invIB=$this1+47;
  FHEAP[$m_invIB]=$25;
  var $m_indexA13=$this1+38;
  var $26=IHEAP[$m_indexA13];
  var $27=$data_addr;
  var $positions=$27+6;
  var $28=IHEAP[$positions];
  var $arrayidx=$28+$26*3;
  var $c=$arrayidx;
  var $29=$cA;
  var $30=$c;
  IHEAP[$29]=IHEAP[$30]; FHEAP[$29]=FHEAP[$30]; ; IHEAP[$29+1]=IHEAP[$30+1]; FHEAP[$29+1]=FHEAP[$30+1]; ;
  var $m_indexA14=$this1+38;
  var $31=IHEAP[$m_indexA14];
  var $32=$data_addr;
  var $positions15=$32+6;
  var $33=IHEAP[$positions15];
  var $arrayidx16=$33+$31*3;
  var $a=$arrayidx16+2;
  var $34=FHEAP[$a];
  $aA=$34;
  var $m_indexA17=$this1+38;
  var $35=IHEAP[$m_indexA17];
  var $36=$data_addr;
  var $velocities=$36+7;
  var $37=IHEAP[$velocities];
  var $arrayidx18=$37+$35*3;
  var $v=$arrayidx18;
  var $38=$vA;
  var $39=$v;
  IHEAP[$38]=IHEAP[$39]; FHEAP[$38]=FHEAP[$39]; ; IHEAP[$38+1]=IHEAP[$39+1]; FHEAP[$38+1]=FHEAP[$39+1]; ;
  var $m_indexA19=$this1+38;
  var $40=IHEAP[$m_indexA19];
  var $41=$data_addr;
  var $velocities20=$41+7;
  var $42=IHEAP[$velocities20];
  var $arrayidx21=$42+$40*3;
  var $w=$arrayidx21+2;
  var $43=FHEAP[$w];
  $wA=$43;
  var $m_indexB22=$this1+39;
  var $44=IHEAP[$m_indexB22];
  var $45=$data_addr;
  var $positions23=$45+6;
  var $46=IHEAP[$positions23];
  var $arrayidx24=$46+$44*3;
  var $c25=$arrayidx24;
  var $47=$cB;
  var $48=$c25;
  IHEAP[$47]=IHEAP[$48]; FHEAP[$47]=FHEAP[$48]; ; IHEAP[$47+1]=IHEAP[$48+1]; FHEAP[$47+1]=FHEAP[$48+1]; ;
  var $m_indexB26=$this1+39;
  var $49=IHEAP[$m_indexB26];
  var $50=$data_addr;
  var $positions27=$50+6;
  var $51=IHEAP[$positions27];
  var $arrayidx28=$51+$49*3;
  var $a29=$arrayidx28+2;
  var $52=FHEAP[$a29];
  $aB=$52;
  var $m_indexB30=$this1+39;
  var $53=IHEAP[$m_indexB30];
  var $54=$data_addr;
  var $velocities31=$54+7;
  var $55=IHEAP[$velocities31];
  var $arrayidx32=$55+$53*3;
  var $v33=$arrayidx32;
  var $56=$vB;
  var $57=$v33;
  IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
  var $m_indexB34=$this1+39;
  var $58=IHEAP[$m_indexB34];
  var $59=$data_addr;
  var $velocities35=$59+7;
  var $60=IHEAP[$velocities35];
  var $arrayidx36=$60+$58*3;
  var $w37=$arrayidx36+2;
  var $61=FHEAP[$w37];
  $wB=$61;
  var $62=$aA;
  __ZN5b2RotC1Ef($qA, $62);
  var $63=$aB;
  __ZN5b2RotC1Ef($qB, $63);
  var $m_localAnchorA=$this1+18;
  var $m_localCenterA38=$this1+40;
  __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorA, $m_localCenterA38);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp);
  var $m_localAnchorB=$this1+20;
  var $m_localCenterB40=$this1+42;
  __ZmiRK6b2Vec2S1_($ref_tmp39, $m_localAnchorB, $m_localCenterB40);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp39);
  __ZmiRK6b2Vec2S1_($ref_tmp42, $cB, $cA);
  __ZplRK6b2Vec2S1_($ref_tmp41, $ref_tmp42, $rB);
  __ZmiRK6b2Vec2S1_($d, $ref_tmp41, $rA);
  var $m_invMassA43=$this1+44;
  var $64=FHEAP[$m_invMassA43];
  $mA=$64;
  var $m_invMassB44=$this1+45;
  var $65=FHEAP[$m_invMassB44];
  $mB=$65;
  var $m_invIA45=$this1+46;
  var $66=FHEAP[$m_invIA45];
  $iA=$66;
  var $m_invIB46=$this1+47;
  var $67=FHEAP[$m_invIB46];
  $iB=$67;
  var $m_axis=$this1+48;
  var $m_localXAxisA=$this1+22;
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp47, $qA, $m_localXAxisA);
  var $68=$m_axis;
  var $69=$ref_tmp47;
  IHEAP[$68]=IHEAP[$69]; FHEAP[$68]=FHEAP[$69]; ; IHEAP[$68+1]=IHEAP[$69+1]; FHEAP[$68+1]=FHEAP[$69+1]; ;
  __ZplRK6b2Vec2S1_($ref_tmp48, $d, $rA);
  var $m_axis49=$this1+48;
  var $call=__Z7b2CrossRK6b2Vec2S1_($ref_tmp48, $m_axis49);
  var $m_a1=$this1+54;
  FHEAP[$m_a1]=$call;
  var $m_axis50=$this1+48;
  var $call51=__Z7b2CrossRK6b2Vec2S1_($rB, $m_axis50);
  var $m_a2=$this1+55;
  FHEAP[$m_a2]=$call51;
  var $70=$mA;
  var $71=$mB;
  var $add=($70)+($71);
  var $72=$iA;
  var $m_a152=$this1+54;
  var $73=FHEAP[$m_a152];
  var $mul=($72)*($73);
  var $m_a153=$this1+54;
  var $74=FHEAP[$m_a153];
  var $mul54=($mul)*($74);
  var $add55=($add)+($mul54);
  var $75=$iB;
  var $m_a256=$this1+55;
  var $76=FHEAP[$m_a256];
  var $mul57=($75)*($76);
  var $m_a258=$this1+55;
  var $77=FHEAP[$m_a258];
  var $mul59=($mul57)*($77);
  var $add60=($add55)+($mul59);
  var $m_motorMass=$this1+65;
  FHEAP[$m_motorMass]=$add60;
  var $m_motorMass61=$this1+65;
  var $78=FHEAP[$m_motorMass61];
  var $cmp=($78) > 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$9: do { 
    if (__label__ == 1) {

      var $m_motorMass62=$this1+65;
      var $79=FHEAP[$m_motorMass62];
      var $div=1/($79);
      var $m_motorMass63=$this1+65;
      FHEAP[$m_motorMass63]=$div;
      ;
    }
  } while(0);

  var $m_perp=$this1+50;
  var $m_localYAxisA=$this1+24;
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp64, $qA, $m_localYAxisA);
  var $80=$m_perp;
  var $81=$ref_tmp64;
  IHEAP[$80]=IHEAP[$81]; FHEAP[$80]=FHEAP[$81]; ; IHEAP[$80+1]=IHEAP[$81+1]; FHEAP[$80+1]=FHEAP[$81+1]; ;
  __ZplRK6b2Vec2S1_($ref_tmp65, $d, $rA);
  var $m_perp66=$this1+50;
  var $call67=__Z7b2CrossRK6b2Vec2S1_($ref_tmp65, $m_perp66);
  var $m_s1=$this1+52;
  FHEAP[$m_s1]=$call67;
  var $m_perp68=$this1+50;
  var $call69=__Z7b2CrossRK6b2Vec2S1_($rB, $m_perp68);
  var $m_s2=$this1+53;
  FHEAP[$m_s2]=$call69;
  var $82=$mA;
  var $83=$mB;
  var $add70=($82)+($83);
  var $84=$iA;
  var $m_s171=$this1+52;
  var $85=FHEAP[$m_s171];
  var $mul72=($84)*($85);
  var $m_s173=$this1+52;
  var $86=FHEAP[$m_s173];
  var $mul74=($mul72)*($86);
  var $add75=($add70)+($mul74);
  var $87=$iB;
  var $m_s276=$this1+53;
  var $88=FHEAP[$m_s276];
  var $mul77=($87)*($88);
  var $m_s278=$this1+53;
  var $89=FHEAP[$m_s278];
  var $mul79=($mul77)*($89);
  var $add80=($add75)+($mul79);
  $k11=$add80;
  var $90=$iA;
  var $m_s181=$this1+52;
  var $91=FHEAP[$m_s181];
  var $mul82=($90)*($91);
  var $92=$iB;
  var $m_s283=$this1+53;
  var $93=FHEAP[$m_s283];
  var $mul84=($92)*($93);
  var $add85=($mul82)+($mul84);
  $k12=$add85;
  var $94=$iA;
  var $m_s186=$this1+52;
  var $95=FHEAP[$m_s186];
  var $mul87=($94)*($95);
  var $m_a188=$this1+54;
  var $96=FHEAP[$m_a188];
  var $mul89=($mul87)*($96);
  var $97=$iB;
  var $m_s290=$this1+53;
  var $98=FHEAP[$m_s290];
  var $mul91=($97)*($98);
  var $m_a292=$this1+55;
  var $99=FHEAP[$m_a292];
  var $mul93=($mul91)*($99);
  var $add94=($mul89)+($mul93);
  $k13=$add94;
  var $100=$iA;
  var $101=$iB;
  var $add95=($100)+($101);
  $k22=$add95;
  var $cmp96=($add95) == 0;
  if ($cmp96) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then97$$if_end98$12: do { 
    if (__label__ == 3) {

      $k22=1;
      ;
    }
  } while(0);

  var $102=$iA;
  var $m_a199=$this1+54;
  var $103=FHEAP[$m_a199];
  var $mul100=($102)*($103);
  var $104=$iB;
  var $m_a2101=$this1+55;
  var $105=FHEAP[$m_a2101];
  var $mul102=($104)*($105);
  var $add103=($mul100)+($mul102);
  $k23=$add103;
  var $106=$mA;
  var $107=$mB;
  var $add104=($106)+($107);
  var $108=$iA;
  var $m_a1105=$this1+54;
  var $109=FHEAP[$m_a1105];
  var $mul106=($108)*($109);
  var $m_a1107=$this1+54;
  var $110=FHEAP[$m_a1107];
  var $mul108=($mul106)*($110);
  var $add109=($add104)+($mul108);
  var $111=$iB;
  var $m_a2110=$this1+55;
  var $112=FHEAP[$m_a2110];
  var $mul111=($111)*($112);
  var $m_a2112=$this1+55;
  var $113=FHEAP[$m_a2112];
  var $mul113=($mul111)*($113);
  var $add114=($add109)+($mul113);
  $k33=$add114;
  var $m_K=$this1+56;
  var $ex=$m_K;
  var $114=$k11;
  var $115=$k12;
  var $116=$k13;
  __ZN6b2Vec33SetEfff($ex, $114, $115, $116);
  var $m_K115=$this1+56;
  var $ey=$m_K115+3;
  var $117=$k12;
  var $118=$k22;
  var $119=$k23;
  __ZN6b2Vec33SetEfff($ey, $117, $118, $119);
  var $m_K116=$this1+56;
  var $ez=$m_K116+6;
  var $120=$k13;
  var $121=$k23;
  var $122=$k33;
  __ZN6b2Vec33SetEfff($ez, $120, $121, $122);
  var $m_enableLimit=$this1+35;
  var $123=IHEAP[$m_enableLimit];
  var $tobool=((($123)) & 1);
  if ($tobool) { __label__ = 5;; } else { __label__ = 14;; }
  $if_then117$$if_else149$15: do { 
    if (__label__ == 5) {

      var $m_axis118=$this1+48;
      var $call119=__Z5b2DotRK6b2Vec2S1_($m_axis118, $d);
      $jointTranslation=$call119;
      var $m_upperTranslation=$this1+32;
      var $124=FHEAP[$m_upperTranslation];
      var $m_lowerTranslation=$this1+31;
      var $125=FHEAP[$m_lowerTranslation];
      var $sub=($124)-($125);
      var $call120=__Z5b2AbsIfET_S0_($sub);
      var $cmp121=($call120) < 0.009999999776482582;
      if ($cmp121) { __label__ = 6;; } else { __label__ = 7;; }
      $if_then122$$if_else$17: do { 
        if (__label__ == 6) {

          var $m_limitState=$this1+37;
          IHEAP[$m_limitState]=3;
          ;
        }
        else if (__label__ == 7) {

          var $126=$jointTranslation;
          var $m_lowerTranslation123=$this1+31;
          var $127=FHEAP[$m_lowerTranslation123];
          var $cmp124=($126) <= ($127);
          if ($cmp124) { __label__ = 8;; } else { __label__ = 10;; }
          $if_then125$$if_else131$20: do { 
            if (__label__ == 8) {

              var $m_limitState126=$this1+37;
              var $128=IHEAP[$m_limitState126];
              var $cmp127=($128)!=1;
              if (!($cmp127)) { __label__ = 15;break $if_then117$$if_else149$15; }

              var $m_limitState129=$this1+37;
              IHEAP[$m_limitState129]=1;
              var $m_impulse=$this1+27;
              var $z=$m_impulse+2;
              FHEAP[$z]=0;
              ;
            }
            else if (__label__ == 10) {

              var $129=$jointTranslation;
              var $m_upperTranslation132=$this1+32;
              var $130=FHEAP[$m_upperTranslation132];
              var $cmp133=($129) >= ($130);
              var $m_limitState135=$this1+37;
              if ($cmp133) { __label__ = 11;; } else { __label__ = 13;; }
              $if_then134$$if_else142$24: do { 
                if (__label__ == 11) {

                  var $131=IHEAP[$m_limitState135];
                  var $cmp136=($131)!=2;
                  if (!($cmp136)) { __label__ = 15;break $if_then117$$if_else149$15; }

                  var $m_limitState138=$this1+37;
                  IHEAP[$m_limitState138]=2;
                  var $m_impulse139=$this1+27;
                  var $z140=$m_impulse139+2;
                  FHEAP[$z140]=0;
                  ;
                }
                else if (__label__ == 13) {

                  IHEAP[$m_limitState135]=0;
                  var $m_impulse144=$this1+27;
                  var $z145=$m_impulse144+2;
                  FHEAP[$z145]=0;
                  ;
                }
              } while(0);
            }
          } while(0);
        }
      } while(0);
    }
    else if (__label__ == 14) {

      var $m_limitState150=$this1+37;
      IHEAP[$m_limitState150]=0;
      var $m_impulse151=$this1+27;
      var $z152=$m_impulse151+2;
      FHEAP[$z152]=0;
      ;
    }
  } while(0);

  var $m_enableMotor=$this1+36;
  var $132=IHEAP[$m_enableMotor];
  var $tobool154=((($132)) & 1);
  var $conv=($tobool154);
  var $cmp155=($conv)==0;
  if ($cmp155) { __label__ = 16;; } else { __label__ = 17;; }
  $if_then156$$if_end157$30: do { 
    if (__label__ == 16) {

      var $m_motorImpulse=$this1+30;
      FHEAP[$m_motorImpulse]=0;
      ;
    }
  } while(0);

  var $133=$data_addr;
  var $step=$133;
  var $warmStarting=$step+5;
  var $134=IHEAP[$warmStarting];
  var $tobool158=((($134)) & 1);
  var $m_impulse160=$this1+27;
  if ($tobool158) { __label__ = 18;; } else { __label__ = 19;; }
  $if_then159$$if_else208$33: do { 
    if (__label__ == 18) {

      var $135=$data_addr;
      var $step161=$135;
      var $dtRatio=$step161+2;
      var $136=FHEAP[$dtRatio];
      __ZN6b2Vec3mLEf($m_impulse160, $136);
      var $137=$data_addr;
      var $step162=$137;
      var $dtRatio163=$step162+2;
      var $138=FHEAP[$dtRatio163];
      var $m_motorImpulse164=$this1+30;
      var $139=FHEAP[$m_motorImpulse164];
      var $mul165=($139)*($138);
      FHEAP[$m_motorImpulse164]=$mul165;
      var $m_impulse167=$this1+27;
      var $x=$m_impulse167;
      var $140=FHEAP[$x];
      var $m_perp168=$this1+50;
      __ZmlfRK6b2Vec2($ref_tmp166, $140, $m_perp168);
      var $m_motorImpulse170=$this1+30;
      var $141=FHEAP[$m_motorImpulse170];
      var $m_impulse171=$this1+27;
      var $z172=$m_impulse171+2;
      var $142=FHEAP[$z172];
      var $add173=($141)+($142);
      var $m_axis174=$this1+48;
      __ZmlfRK6b2Vec2($ref_tmp169, $add173, $m_axis174);
      __ZplRK6b2Vec2S1_($P, $ref_tmp166, $ref_tmp169);
      var $m_impulse175=$this1+27;
      var $x176=$m_impulse175;
      var $143=FHEAP[$x176];
      var $m_s1177=$this1+52;
      var $144=FHEAP[$m_s1177];
      var $mul178=($143)*($144);
      var $m_impulse179=$this1+27;
      var $y=$m_impulse179+1;
      var $145=FHEAP[$y];
      var $add180=($mul178)+($145);
      var $m_motorImpulse181=$this1+30;
      var $146=FHEAP[$m_motorImpulse181];
      var $m_impulse182=$this1+27;
      var $z183=$m_impulse182+2;
      var $147=FHEAP[$z183];
      var $add184=($146)+($147);
      var $m_a1185=$this1+54;
      var $148=FHEAP[$m_a1185];
      var $mul186=($add184)*($148);
      var $add187=($add180)+($mul186);
      $LA=$add187;
      var $m_impulse188=$this1+27;
      var $x189=$m_impulse188;
      var $149=FHEAP[$x189];
      var $m_s2190=$this1+53;
      var $150=FHEAP[$m_s2190];
      var $mul191=($149)*($150);
      var $m_impulse192=$this1+27;
      var $y193=$m_impulse192+1;
      var $151=FHEAP[$y193];
      var $add194=($mul191)+($151);
      var $m_motorImpulse195=$this1+30;
      var $152=FHEAP[$m_motorImpulse195];
      var $m_impulse196=$this1+27;
      var $z197=$m_impulse196+2;
      var $153=FHEAP[$z197];
      var $add198=($152)+($153);
      var $m_a2199=$this1+55;
      var $154=FHEAP[$m_a2199];
      var $mul200=($add198)*($154);
      var $add201=($add194)+($mul200);
      $LB=$add201;
      var $155=$mA;
      __ZmlfRK6b2Vec2($ref_tmp202, $155, $P);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp202);
      var $156=$iA;
      var $157=$LA;
      var $mul203=($156)*($157);
      var $158=$wA;
      var $sub204=($158)-($mul203);
      $wA=$sub204;
      var $159=$mB;
      __ZmlfRK6b2Vec2($ref_tmp205, $159, $P);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp205);
      var $160=$iB;
      var $161=$LB;
      var $mul206=($160)*($161);
      var $162=$wB;
      var $add207=($162)+($mul206);
      $wB=$add207;
      ;
    }
    else if (__label__ == 19) {

      __ZN6b2Vec37SetZeroEv($m_impulse160);
      var $m_motorImpulse210=$this1+30;
      FHEAP[$m_motorImpulse210]=0;
      ;
    }
  } while(0);

  var $m_indexA212=$this1+38;
  var $163=IHEAP[$m_indexA212];
  var $164=$data_addr;
  var $velocities213=$164+7;
  var $165=IHEAP[$velocities213];
  var $arrayidx214=$165+$163*3;
  var $v215=$arrayidx214;
  var $166=$v215;
  var $167=$vA;
  IHEAP[$166]=IHEAP[$167]; FHEAP[$166]=FHEAP[$167]; ; IHEAP[$166+1]=IHEAP[$167+1]; FHEAP[$166+1]=FHEAP[$167+1]; ;
  var $168=$wA;
  var $m_indexA216=$this1+38;
  var $169=IHEAP[$m_indexA216];
  var $170=$data_addr;
  var $velocities217=$170+7;
  var $171=IHEAP[$velocities217];
  var $arrayidx218=$171+$169*3;
  var $w219=$arrayidx218+2;
  FHEAP[$w219]=$168;
  var $m_indexB220=$this1+39;
  var $172=IHEAP[$m_indexB220];
  var $173=$data_addr;
  var $velocities221=$173+7;
  var $174=IHEAP[$velocities221];
  var $arrayidx222=$174+$172*3;
  var $v223=$arrayidx222;
  var $175=$v223;
  var $176=$vB;
  IHEAP[$175]=IHEAP[$176]; FHEAP[$175]=FHEAP[$176]; ; IHEAP[$175+1]=IHEAP[$176+1]; FHEAP[$175+1]=FHEAP[$176+1]; ;
  var $177=$wB;
  var $m_indexB224=$this1+39;
  var $178=IHEAP[$m_indexB224];
  var $179=$data_addr;
  var $velocities225=$179+7;
  var $180=IHEAP[$velocities225];
  var $arrayidx226=$180+$178*3;
  var $w227=$arrayidx226+2;
  FHEAP[$w227]=$177;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN16b2PrismaticJoint23InitVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZNK6b2Vec3ngEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN6b2Vec3C1Ev($agg_result);
  var $x=$this1;
  var $0=FHEAP[$x];
  var $sub=(-($0));
  var $y=$this1+1;
  var $1=FHEAP[$y];
  var $sub2=(-($1));
  var $z=$this1+2;
  var $2=FHEAP[$z];
  var $sub3=(-($2));
  __ZN6b2Vec33SetEfff($agg_result, $sub, $sub2, $sub3);
  ;
  return;
  return;
}


function __ZN6b2Vec3pLERKS_($this, $v) {
  ;
  var __label__;

  var $this_addr;
  var $v_addr;
  $this_addr=$this;
  $v_addr=$v;
  var $this1=$this_addr;
  var $0=$v_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $x2=$this1;
  var $2=FHEAP[$x2];
  var $add=($2)+($1);
  FHEAP[$x2]=$add;
  var $3=$v_addr;
  var $y=$3+1;
  var $4=FHEAP[$y];
  var $y3=$this1+1;
  var $5=FHEAP[$y3];
  var $add4=($5)+($4);
  FHEAP[$y3]=$add4;
  var $6=$v_addr;
  var $z=$6+2;
  var $7=FHEAP[$z];
  var $z5=$this1+2;
  var $8=FHEAP[$z5];
  var $add6=($8)+($7);
  FHEAP[$z5]=$add6;
  ;
  return;
  return;
}


function __ZmiRK6b2Vec3S1_($agg_result, $a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$b_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $sub=($1)-($3);
  var $4=$a_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $6=$b_addr;
  var $y2=$6+1;
  var $7=FHEAP[$y2];
  var $sub3=($5)-($7);
  var $8=$a_addr;
  var $z=$8+2;
  var $9=FHEAP[$z];
  var $10=$b_addr;
  var $z4=$10+2;
  var $11=FHEAP[$z4];
  var $sub5=($9)-($11);
  __ZN6b2Vec3C1Efff($agg_result, $sub, $sub3, $sub5);
  ;
  return;
  return;
}


function __Z7b2Mul22RK7b2Mat33RK6b2Vec2($agg_result, $A, $v) {
  ;
  var __label__;

  var $A_addr;
  var $v_addr;
  $A_addr=$A;
  $v_addr=$v;
  var $0=$A_addr;
  var $ex=$0;
  var $x=$ex;
  var $1=FHEAP[$x];
  var $2=$v_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $mul=($1)*($3);
  var $4=$A_addr;
  var $ey=$4+3;
  var $x2=$ey;
  var $5=FHEAP[$x2];
  var $6=$v_addr;
  var $y=$6+1;
  var $7=FHEAP[$y];
  var $mul3=($5)*($7);
  var $add=($mul)+($mul3);
  var $8=$A_addr;
  var $ex4=$8;
  var $y5=$ex4+1;
  var $9=FHEAP[$y5];
  var $10=$v_addr;
  var $x6=$10;
  var $11=FHEAP[$x6];
  var $mul7=($9)*($11);
  var $12=$A_addr;
  var $ey8=$12+3;
  var $y9=$ey8+1;
  var $13=FHEAP[$y9];
  var $14=$v_addr;
  var $y10=$14+1;
  var $15=FHEAP[$y10];
  var $mul11=($13)*($15);
  var $add12=($mul7)+($mul11);
  __ZN6b2Vec2C1Eff($agg_result, $add, $add12);
  ;
  return;
  return;
}


function __ZN16b2PrismaticJoint24SolveVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 73;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $Cdot;
  var $ref_tmp=__stackBase__+4;
  var $impulse;
  var $oldImpulse;
  var $maxImpulse;
  var $P=__stackBase__+6;
  var $LA;
  var $LB;
  var $ref_tmp28=__stackBase__+8;
  var $ref_tmp31=__stackBase__+10;
  var $Cdot1=__stackBase__+12;
  var $ref_tmp34=__stackBase__+14;
  var $Cdot2;
  var $ref_tmp47=__stackBase__+16;
  var $Cdot55=__stackBase__+18;
  var $f1=__stackBase__+21;
  var $df=__stackBase__+24;
  var $ref_tmp58=__stackBase__+27;
  var $b=__stackBase__+30;
  var $ref_tmp77=__stackBase__+32;
  var $ref_tmp78=__stackBase__+34;
  var $ref_tmp83=__stackBase__+36;
  var $f2r=__stackBase__+38;
  var $ref_tmp89=__stackBase__+40;
  var $ref_tmp91=__stackBase__+42;
  var $ref_tmp100=__stackBase__+44;
  var $P102=__stackBase__+47;
  var $ref_tmp103=__stackBase__+49;
  var $ref_tmp106=__stackBase__+51;
  var $LA109;
  var $LB119;
  var $ref_tmp129=__stackBase__+53;
  var $ref_tmp132=__stackBase__+55;
  var $df136=__stackBase__+57;
  var $ref_tmp138=__stackBase__+59;
  var $P147=__stackBase__+61;
  var $LA150;
  var $LB156;
  var $ref_tmp162=__stackBase__+63;
  var $ref_tmp165=__stackBase__+65;
  var $Cdot10=__stackBase__+67;
  var $ref_tmp169=__stackBase__+69;
  var $test=__stackBase__+71;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+38;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $velocities=$1+7;
  var $2=IHEAP[$velocities];
  var $arrayidx=$2+$0*3;
  var $v=$arrayidx;
  var $3=$vA;
  var $4=$v;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+38;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $velocities3=$6+7;
  var $7=IHEAP[$velocities3];
  var $arrayidx4=$7+$5*3;
  var $w=$arrayidx4+2;
  var $8=FHEAP[$w];
  $wA=$8;
  var $m_indexB=$this1+39;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $velocities5=$10+7;
  var $11=IHEAP[$velocities5];
  var $arrayidx6=$11+$9*3;
  var $v7=$arrayidx6;
  var $12=$vB;
  var $13=$v7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+39;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $velocities9=$15+7;
  var $16=IHEAP[$velocities9];
  var $arrayidx10=$16+$14*3;
  var $w11=$arrayidx10+2;
  var $17=FHEAP[$w11];
  $wB=$17;
  var $m_invMassA=$this1+44;
  var $18=FHEAP[$m_invMassA];
  $mA=$18;
  var $m_invMassB=$this1+45;
  var $19=FHEAP[$m_invMassB];
  $mB=$19;
  var $m_invIA=$this1+46;
  var $20=FHEAP[$m_invIA];
  $iA=$20;
  var $m_invIB=$this1+47;
  var $21=FHEAP[$m_invIB];
  $iB=$21;
  var $m_enableMotor=$this1+36;
  var $22=IHEAP[$m_enableMotor];
  var $tobool=((($22)) & 1);
  if ($tobool) { __label__ = 1;; } else { __label__ = 3;; }
  $land_lhs_true$$if_end$2: do { 
    if (__label__ == 1) {

      var $m_limitState=$this1+37;
      var $23=IHEAP[$m_limitState];
      var $cmp=($23)!=3;
      if (!($cmp)) { __label__ = 3;break $land_lhs_true$$if_end$2; }

      var $m_axis=$this1+48;
      __ZmiRK6b2Vec2S1_($ref_tmp, $vB, $vA);
      var $call=__Z5b2DotRK6b2Vec2S1_($m_axis, $ref_tmp);
      var $m_a2=$this1+55;
      var $24=FHEAP[$m_a2];
      var $25=$wB;
      var $mul=($24)*($25);
      var $add=($call)+($mul);
      var $m_a1=$this1+54;
      var $26=FHEAP[$m_a1];
      var $27=$wA;
      var $mul12=($26)*($27);
      var $sub=($add)-($mul12);
      $Cdot=$sub;
      var $m_motorMass=$this1+65;
      var $28=FHEAP[$m_motorMass];
      var $m_motorSpeed=$this1+34;
      var $29=FHEAP[$m_motorSpeed];
      var $30=$Cdot;
      var $sub13=($29)-($30);
      var $mul14=($28)*($sub13);
      $impulse=$mul14;
      var $m_motorImpulse=$this1+30;
      var $31=FHEAP[$m_motorImpulse];
      $oldImpulse=$31;
      var $32=$data_addr;
      var $step=$32;
      var $dt=$step;
      var $33=FHEAP[$dt];
      var $m_maxMotorForce=$this1+33;
      var $34=FHEAP[$m_maxMotorForce];
      var $mul15=($33)*($34);
      $maxImpulse=$mul15;
      var $m_motorImpulse16=$this1+30;
      var $35=FHEAP[$m_motorImpulse16];
      var $36=$impulse;
      var $add17=($35)+($36);
      var $37=$maxImpulse;
      var $sub18=(-($37));
      var $38=$maxImpulse;
      var $call19=__Z7b2ClampIfET_S0_S0_S0_($add17, $sub18, $38);
      var $m_motorImpulse20=$this1+30;
      FHEAP[$m_motorImpulse20]=$call19;
      var $m_motorImpulse21=$this1+30;
      var $39=FHEAP[$m_motorImpulse21];
      var $40=$oldImpulse;
      var $sub22=($39)-($40);
      $impulse=$sub22;
      var $41=$impulse;
      var $m_axis23=$this1+48;
      __ZmlfRK6b2Vec2($P, $41, $m_axis23);
      var $42=$impulse;
      var $m_a124=$this1+54;
      var $43=FHEAP[$m_a124];
      var $mul25=($42)*($43);
      $LA=$mul25;
      var $44=$impulse;
      var $m_a226=$this1+55;
      var $45=FHEAP[$m_a226];
      var $mul27=($44)*($45);
      $LB=$mul27;
      var $46=$mA;
      __ZmlfRK6b2Vec2($ref_tmp28, $46, $P);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp28);
      var $47=$iA;
      var $48=$LA;
      var $mul29=($47)*($48);
      var $49=$wA;
      var $sub30=($49)-($mul29);
      $wA=$sub30;
      var $50=$mB;
      __ZmlfRK6b2Vec2($ref_tmp31, $50, $P);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp31);
      var $51=$iB;
      var $52=$LB;
      var $mul32=($51)*($52);
      var $53=$wB;
      var $add33=($53)+($mul32);
      $wB=$add33;
      ;
    }
  } while(0);

  __ZN6b2Vec2C1Ev($Cdot1);
  var $m_perp=$this1+50;
  __ZmiRK6b2Vec2S1_($ref_tmp34, $vB, $vA);
  var $call35=__Z5b2DotRK6b2Vec2S1_($m_perp, $ref_tmp34);
  var $m_s2=$this1+53;
  var $54=FHEAP[$m_s2];
  var $55=$wB;
  var $mul36=($54)*($55);
  var $add37=($call35)+($mul36);
  var $m_s1=$this1+52;
  var $56=FHEAP[$m_s1];
  var $57=$wA;
  var $mul38=($56)*($57);
  var $sub39=($add37)-($mul38);
  var $x=$Cdot1;
  FHEAP[$x]=$sub39;
  var $58=$wB;
  var $59=$wA;
  var $sub40=($58)-($59);
  var $y=$Cdot1+1;
  FHEAP[$y]=$sub40;
  var $m_enableLimit=$this1+35;
  var $60=IHEAP[$m_enableLimit];
  var $tobool41=((($60)) & 1);
  if ($tobool41) { __label__ = 4;; } else { __label__ = 10;; }
  $land_lhs_true42$$if_else135$6: do { 
    if (__label__ == 4) {

      var $m_limitState43=$this1+37;
      var $61=IHEAP[$m_limitState43];
      var $cmp44=($61)!=0;
      if (!($cmp44)) { __label__ = 10;break $land_lhs_true42$$if_else135$6; }

      var $m_axis46=$this1+48;
      __ZmiRK6b2Vec2S1_($ref_tmp47, $vB, $vA);
      var $call48=__Z5b2DotRK6b2Vec2S1_($m_axis46, $ref_tmp47);
      var $m_a249=$this1+55;
      var $62=FHEAP[$m_a249];
      var $63=$wB;
      var $mul50=($62)*($63);
      var $add51=($call48)+($mul50);
      var $m_a152=$this1+54;
      var $64=FHEAP[$m_a152];
      var $65=$wA;
      var $mul53=($64)*($65);
      var $sub54=($add51)-($mul53);
      $Cdot2=$sub54;
      var $x56=$Cdot1;
      var $66=FHEAP[$x56];
      var $y57=$Cdot1+1;
      var $67=FHEAP[$y57];
      var $68=$Cdot2;
      __ZN6b2Vec3C1Efff($Cdot55, $66, $67, $68);
      var $m_impulse=$this1+27;
      var $69=$f1;
      var $70=$m_impulse;
      IHEAP[$69]=IHEAP[$70]; FHEAP[$69]=FHEAP[$70]; ; IHEAP[$69+1]=IHEAP[$70+1]; FHEAP[$69+1]=FHEAP[$70+1]; ; IHEAP[$69+2]=IHEAP[$70+2]; FHEAP[$69+2]=FHEAP[$70+2]; ;
      var $m_K=$this1+56;
      __ZNK6b2Vec3ngEv($ref_tmp58, $Cdot55);
      __ZNK7b2Mat337Solve33ERK6b2Vec3($df, $m_K, $ref_tmp58);
      var $m_impulse59=$this1+27;
      __ZN6b2Vec3pLERKS_($m_impulse59, $df);
      var $m_limitState60=$this1+37;
      var $71=IHEAP[$m_limitState60];
      var $cmp61=($71)==1;
      if ($cmp61) { __label__ = 6;; } else { __label__ = 7;; }
      $if_then62$$if_else$9: do { 
        if (__label__ == 6) {

          var $m_impulse63=$this1+27;
          var $z=$m_impulse63+2;
          var $72=FHEAP[$z];
          var $call64=__Z5b2MaxIfET_S0_S0_($72, 0);
          var $m_impulse65=$this1+27;
          var $z66=$m_impulse65+2;
          FHEAP[$z66]=$call64;
          ;
        }
        else if (__label__ == 7) {

          var $m_limitState67=$this1+37;
          var $73=IHEAP[$m_limitState67];
          var $cmp68=($73)==2;
          if (!($cmp68)) { __label__ = 9;break $if_then62$$if_else$9; }

          var $m_impulse70=$this1+27;
          var $z71=$m_impulse70+2;
          var $74=FHEAP[$z71];
          var $call72=__Z5b2MinIfET_S0_S0_($74, 0);
          var $m_impulse73=$this1+27;
          var $z74=$m_impulse73+2;
          FHEAP[$z74]=$call72;
          ;
        }
      } while(0);

      __ZNK6b2Vec2ngEv($ref_tmp77, $Cdot1);
      var $m_impulse79=$this1+27;
      var $z80=$m_impulse79+2;
      var $75=FHEAP[$z80];
      var $z81=$f1+2;
      var $76=FHEAP[$z81];
      var $sub82=($75)-($76);
      var $m_K84=$this1+56;
      var $ez=$m_K84+6;
      var $x85=$ez;
      var $77=FHEAP[$x85];
      var $m_K86=$this1+56;
      var $ez87=$m_K86+6;
      var $y88=$ez87+1;
      var $78=FHEAP[$y88];
      __ZN6b2Vec2C1Eff($ref_tmp83, $77, $78);
      __ZmlfRK6b2Vec2($ref_tmp78, $sub82, $ref_tmp83);
      __ZmiRK6b2Vec2S1_($b, $ref_tmp77, $ref_tmp78);
      var $m_K90=$this1+56;
      __ZNK7b2Mat337Solve22ERK6b2Vec2($ref_tmp89, $m_K90, $b);
      var $x92=$f1;
      var $79=FHEAP[$x92];
      var $y93=$f1+1;
      var $80=FHEAP[$y93];
      __ZN6b2Vec2C1Eff($ref_tmp91, $79, $80);
      __ZplRK6b2Vec2S1_($f2r, $ref_tmp89, $ref_tmp91);
      var $x94=$f2r;
      var $81=FHEAP[$x94];
      var $m_impulse95=$this1+27;
      var $x96=$m_impulse95;
      FHEAP[$x96]=$81;
      var $y97=$f2r+1;
      var $82=FHEAP[$y97];
      var $m_impulse98=$this1+27;
      var $y99=$m_impulse98+1;
      FHEAP[$y99]=$82;
      var $m_impulse101=$this1+27;
      __ZmiRK6b2Vec3S1_($ref_tmp100, $m_impulse101, $f1);
      var $83=$df;
      var $84=$ref_tmp100;
      IHEAP[$83]=IHEAP[$84]; FHEAP[$83]=FHEAP[$84]; ; IHEAP[$83+1]=IHEAP[$84+1]; FHEAP[$83+1]=FHEAP[$84+1]; ; IHEAP[$83+2]=IHEAP[$84+2]; FHEAP[$83+2]=FHEAP[$84+2]; ;
      var $x104=$df;
      var $85=FHEAP[$x104];
      var $m_perp105=$this1+50;
      __ZmlfRK6b2Vec2($ref_tmp103, $85, $m_perp105);
      var $z107=$df+2;
      var $86=FHEAP[$z107];
      var $m_axis108=$this1+48;
      __ZmlfRK6b2Vec2($ref_tmp106, $86, $m_axis108);
      __ZplRK6b2Vec2S1_($P102, $ref_tmp103, $ref_tmp106);
      var $x110=$df;
      var $87=FHEAP[$x110];
      var $m_s1111=$this1+52;
      var $88=FHEAP[$m_s1111];
      var $mul112=($87)*($88);
      var $y113=$df+1;
      var $89=FHEAP[$y113];
      var $add114=($mul112)+($89);
      var $z115=$df+2;
      var $90=FHEAP[$z115];
      var $m_a1116=$this1+54;
      var $91=FHEAP[$m_a1116];
      var $mul117=($90)*($91);
      var $add118=($add114)+($mul117);
      $LA109=$add118;
      var $x120=$df;
      var $92=FHEAP[$x120];
      var $m_s2121=$this1+53;
      var $93=FHEAP[$m_s2121];
      var $mul122=($92)*($93);
      var $y123=$df+1;
      var $94=FHEAP[$y123];
      var $add124=($mul122)+($94);
      var $z125=$df+2;
      var $95=FHEAP[$z125];
      var $m_a2126=$this1+55;
      var $96=FHEAP[$m_a2126];
      var $mul127=($95)*($96);
      var $add128=($add124)+($mul127);
      $LB119=$add128;
      var $97=$mA;
      __ZmlfRK6b2Vec2($ref_tmp129, $97, $P102);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp129);
      var $98=$iA;
      var $99=$LA109;
      var $mul130=($98)*($99);
      var $100=$wA;
      var $sub131=($100)-($mul130);
      $wA=$sub131;
      var $101=$mB;
      __ZmlfRK6b2Vec2($ref_tmp132, $101, $P102);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp132);
      var $102=$iB;
      var $103=$LB119;
      var $mul133=($102)*($103);
      var $104=$wB;
      var $add134=($104)+($mul133);
      $wB=$add134;
      __label__ = 13;break $land_lhs_true42$$if_else135$6;
    }
  } while(0);
  $if_end191$$if_else135$14: do { 
    if (__label__ == 10) {

      var $m_K137=$this1+56;
      __ZNK6b2Vec2ngEv($ref_tmp138, $Cdot1);
      __ZNK7b2Mat337Solve22ERK6b2Vec2($df136, $m_K137, $ref_tmp138);
      var $x139=$df136;
      var $105=FHEAP[$x139];
      var $m_impulse140=$this1+27;
      var $x141=$m_impulse140;
      var $106=FHEAP[$x141];
      var $add142=($106)+($105);
      FHEAP[$x141]=$add142;
      var $y143=$df136+1;
      var $107=FHEAP[$y143];
      var $m_impulse144=$this1+27;
      var $y145=$m_impulse144+1;
      var $108=FHEAP[$y145];
      var $add146=($108)+($107);
      FHEAP[$y145]=$add146;
      var $x148=$df136;
      var $109=FHEAP[$x148];
      var $m_perp149=$this1+50;
      __ZmlfRK6b2Vec2($P147, $109, $m_perp149);
      var $x151=$df136;
      var $110=FHEAP[$x151];
      var $m_s1152=$this1+52;
      var $111=FHEAP[$m_s1152];
      var $mul153=($110)*($111);
      var $y154=$df136+1;
      var $112=FHEAP[$y154];
      var $add155=($mul153)+($112);
      $LA150=$add155;
      var $x157=$df136;
      var $113=FHEAP[$x157];
      var $m_s2158=$this1+53;
      var $114=FHEAP[$m_s2158];
      var $mul159=($113)*($114);
      var $y160=$df136+1;
      var $115=FHEAP[$y160];
      var $add161=($mul159)+($115);
      $LB156=$add161;
      var $116=$mA;
      __ZmlfRK6b2Vec2($ref_tmp162, $116, $P147);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp162);
      var $117=$iA;
      var $118=$LA150;
      var $mul163=($117)*($118);
      var $119=$wA;
      var $sub164=($119)-($mul163);
      $wA=$sub164;
      var $120=$mB;
      __ZmlfRK6b2Vec2($ref_tmp165, $120, $P147);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp165);
      var $121=$iB;
      var $122=$LB156;
      var $mul166=($121)*($122);
      var $123=$wB;
      var $add167=($123)+($mul166);
      $wB=$add167;
      var $124=$Cdot10;
      var $125=$Cdot1;
      IHEAP[$124]=IHEAP[$125]; FHEAP[$124]=FHEAP[$125]; ; IHEAP[$124+1]=IHEAP[$125+1]; FHEAP[$124+1]=FHEAP[$125+1]; ;
      var $m_perp168=$this1+50;
      __ZmiRK6b2Vec2S1_($ref_tmp169, $vB, $vA);
      var $call170=__Z5b2DotRK6b2Vec2S1_($m_perp168, $ref_tmp169);
      var $m_s2171=$this1+53;
      var $126=FHEAP[$m_s2171];
      var $127=$wB;
      var $mul172=($126)*($127);
      var $add173=($call170)+($mul172);
      var $m_s1174=$this1+52;
      var $128=FHEAP[$m_s1174];
      var $129=$wA;
      var $mul175=($128)*($129);
      var $sub176=($add173)-($mul175);
      var $x177=$Cdot1;
      FHEAP[$x177]=$sub176;
      var $130=$wB;
      var $131=$wA;
      var $sub178=($130)-($131);
      var $y179=$Cdot1+1;
      FHEAP[$y179]=$sub178;
      var $x180=$Cdot1;
      var $132=FHEAP[$x180];
      var $call181=__Z5b2AbsIfET_S0_($132);
      var $cmp182=($call181) > 0.009999999776482582;
      if ($cmp182) { __label__ = 12;; } else { __label__ = 11;; }
      $if_then186$$lor_lhs_false$16: do { 
        if (__label__ == 11) {

          var $y183=$Cdot1+1;
          var $133=FHEAP[$y183];
          var $call184=__Z5b2AbsIfET_S0_($133);
          var $cmp185=($call184) > 0.009999999776482582;
          if (!($cmp185)) { __label__ = 13;break $if_end191$$if_else135$14; }
        }
      } while(0);

      var $m_K187=$this1+56;
      __Z7b2Mul22RK7b2Mat33RK6b2Vec2($test, $m_K187, $df136);
      var $x188=$Cdot1;
      var $134=FHEAP[$x188];
      var $add189=($134);
      FHEAP[$x188]=$add189;
      ;
    }
  } while(0);

  var $m_indexA192=$this1+38;
  var $135=IHEAP[$m_indexA192];
  var $136=$data_addr;
  var $velocities193=$136+7;
  var $137=IHEAP[$velocities193];
  var $arrayidx194=$137+$135*3;
  var $v195=$arrayidx194;
  var $138=$v195;
  var $139=$vA;
  IHEAP[$138]=IHEAP[$139]; FHEAP[$138]=FHEAP[$139]; ; IHEAP[$138+1]=IHEAP[$139+1]; FHEAP[$138+1]=FHEAP[$139+1]; ;
  var $140=$wA;
  var $m_indexA196=$this1+38;
  var $141=IHEAP[$m_indexA196];
  var $142=$data_addr;
  var $velocities197=$142+7;
  var $143=IHEAP[$velocities197];
  var $arrayidx198=$143+$141*3;
  var $w199=$arrayidx198+2;
  FHEAP[$w199]=$140;
  var $m_indexB200=$this1+39;
  var $144=IHEAP[$m_indexB200];
  var $145=$data_addr;
  var $velocities201=$145+7;
  var $146=IHEAP[$velocities201];
  var $arrayidx202=$146+$144*3;
  var $v203=$arrayidx202;
  var $147=$v203;
  var $148=$vB;
  IHEAP[$147]=IHEAP[$148]; FHEAP[$147]=FHEAP[$148]; ; IHEAP[$147+1]=IHEAP[$148+1]; FHEAP[$147+1]=FHEAP[$148+1]; ;
  var $149=$wB;
  var $m_indexB204=$this1+39;
  var $150=IHEAP[$m_indexB204];
  var $151=$data_addr;
  var $velocities205=$151+7;
  var $152=IHEAP[$velocities205];
  var $arrayidx206=$152+$150*3;
  var $w207=$arrayidx206+2;
  FHEAP[$w207]=$149;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN16b2PrismaticJoint24SolveVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZNK7b2Mat225SolveERK6b2Vec2($agg_result, $this, $b) {
  ;
  var __label__;

  var $this_addr;
  var $b_addr;
  var $a11;
  var $a12;
  var $a21;
  var $a22;
  var $det;
  $this_addr=$this;
  $b_addr=$b;
  var $this1=$this_addr;
  var $ex=$this1;
  var $x=$ex;
  var $0=FHEAP[$x];
  $a11=$0;
  var $ey=$this1+2;
  var $x2=$ey;
  var $1=FHEAP[$x2];
  $a12=$1;
  var $ex3=$this1;
  var $y=$ex3+1;
  var $2=FHEAP[$y];
  $a21=$2;
  var $ey4=$this1+2;
  var $y5=$ey4+1;
  var $3=FHEAP[$y5];
  $a22=$3;
  var $4=$a11;
  var $5=$a22;
  var $mul=($4)*($5);
  var $6=$a12;
  var $7=$a21;
  var $mul6=($6)*($7);
  var $sub=($mul)-($mul6);
  $det=$sub;
  var $8=$det;
  var $cmp=($8) != 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$26: do { 
    if (__label__ == 1) {

      var $9=$det;
      var $div=1/($9);
      $det=$div;
      ;
    }
  } while(0);

  __ZN6b2Vec2C1Ev($agg_result);
  var $10=$det;
  var $11=$a22;
  var $12=$b_addr;
  var $x7=$12;
  var $13=FHEAP[$x7];
  var $mul8=($11)*($13);
  var $14=$a12;
  var $15=$b_addr;
  var $y9=$15+1;
  var $16=FHEAP[$y9];
  var $mul10=($14)*($16);
  var $sub11=($mul8)-($mul10);
  var $mul12=($10)*($sub11);
  var $x13=$agg_result;
  FHEAP[$x13]=$mul12;
  var $17=$det;
  var $18=$a11;
  var $19=$b_addr;
  var $y14=$19+1;
  var $20=FHEAP[$y14];
  var $mul15=($18)*($20);
  var $21=$a21;
  var $22=$b_addr;
  var $x16=$22;
  var $23=FHEAP[$x16];
  var $mul17=($21)*($23);
  var $sub18=($mul15)-($mul17);
  var $mul19=($17)*($sub18);
  var $y20=$agg_result+1;
  FHEAP[$y20]=$mul19;
  ;
  return;
  return;
}
__ZNK7b2Mat225SolveERK6b2Vec2["X"]=1;

function __ZNK16b2PrismaticJoint10GetAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+18;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorA);
  ;
  return;
  return;
}


function __ZNK16b2PrismaticJoint10GetAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+20;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorB);
  ;
  return;
  return;
}


function __ZNK16b2PrismaticJoint16GetReactionForceEf($agg_result, $this, $inv_dt) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp2=__stackBase__+2;
  var $ref_tmp3=__stackBase__+4;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_impulse=$this1+27;
  var $x=$m_impulse;
  var $1=FHEAP[$x];
  var $m_perp=$this1+50;
  __ZmlfRK6b2Vec2($ref_tmp2, $1, $m_perp);
  var $m_motorImpulse=$this1+30;
  var $2=FHEAP[$m_motorImpulse];
  var $m_impulse4=$this1+27;
  var $z=$m_impulse4+2;
  var $3=FHEAP[$z];
  var $add=($2)+($3);
  var $m_axis=$this1+48;
  __ZmlfRK6b2Vec2($ref_tmp3, $add, $m_axis);
  __ZplRK6b2Vec2S1_($ref_tmp, $ref_tmp2, $ref_tmp3);
  __ZmlfRK6b2Vec2($agg_result, $0, $ref_tmp);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK16b2PrismaticJoint17GetReactionTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_impulse=$this1+27;
  var $y=$m_impulse+1;
  var $1=FHEAP[$y];
  var $mul=($0)*($1);
  ;
  return $mul;
  return null;
}


function __ZNK6b2Body14GetWorldVectorERK6b2Vec2($agg_result, $this, $localVector) {
  ;
  var __label__;

  var $this_addr;
  var $localVector_addr;
  $this_addr=$this;
  $localVector_addr=$localVector;
  var $this1=$this_addr;
  var $m_xf=$this1+3;
  var $q=$m_xf+2;
  var $0=$localVector_addr;
  __Z5b2MulRK5b2RotRK6b2Vec2($agg_result, $q, $0);
  ;
  return;
  return;
}


function __ZNK16b2PrismaticJoint14IsLimitEnabledEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_enableLimit=$this1+35;
  var $0=IHEAP[$m_enableLimit];
  var $tobool=((($0)) & 1);
  ;
  return $tobool;
  return null;
}


function __ZN16b2PrismaticJoint11EnableLimitEb($this, $flag) {
  ;
  var __label__;

  var $this_addr;
  var $flag_addr;
  $this_addr=$this;
  var $frombool=($flag);
  $flag_addr=$frombool;
  var $this1=$this_addr;
  var $0=$flag_addr;
  var $tobool=((($0)) & 1);
  var $conv=($tobool);
  var $m_enableLimit=$this1+35;
  var $1=IHEAP[$m_enableLimit];
  var $tobool2=((($1)) & 1);
  var $conv3=($tobool2);
  var $cmp=($conv)!=($conv3);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$38: do { 
    if (__label__ == 1) {

      var $2=$this1;
      var $m_bodyA=$2+12;
      var $3=IHEAP[$m_bodyA];
      __ZN6b2Body8SetAwakeEb($3, 1);
      var $4=$this1;
      var $m_bodyB=$4+13;
      var $5=IHEAP[$m_bodyB];
      __ZN6b2Body8SetAwakeEb($5, 1);
      var $6=$flag_addr;
      var $tobool4=((($6)) & 1);
      var $m_enableLimit5=$this1+35;
      var $frombool6=($tobool4);
      IHEAP[$m_enableLimit5]=$frombool6;
      var $m_impulse=$this1+27;
      var $z=$m_impulse+2;
      FHEAP[$z]=0;
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZNK16b2PrismaticJoint13GetLowerLimitEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_lowerTranslation=$this1+31;
  var $0=FHEAP[$m_lowerTranslation];
  ;
  return $0;
  return null;
}


function __ZNK16b2PrismaticJoint13GetUpperLimitEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_upperTranslation=$this1+32;
  var $0=FHEAP[$m_upperTranslation];
  ;
  return $0;
  return null;
}


function __ZN16b2PrismaticJoint9SetLimitsEff($this, $lower, $upper) {
  ;
  var __label__;

  var $this_addr;
  var $lower_addr;
  var $upper_addr;
  $this_addr=$this;
  $lower_addr=$lower;
  $upper_addr=$upper;
  var $this1=$this_addr;
  var $0=$lower_addr;
  var $1=$upper_addr;
  var $cmp=($0) <= ($1);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$44: do { 
    if (__label__ == 1) {

      ___assert_func(__str283, 575, ___PRETTY_FUNCTION____ZN16b2PrismaticJoint9SetLimitsEff, __str1320);
      ;
    }
  } while(0);

  var $2=$lower_addr;
  var $m_lowerTranslation=$this1+31;
  var $3=FHEAP[$m_lowerTranslation];
  var $cmp2=($2) != ($3);
  if ($cmp2) { __label__ = 4;; } else { __label__ = 3;; }
  $if_then$$lor_lhs_false$47: do { 
    if (__label__ == 3) {

      var $4=$upper_addr;
      var $m_upperTranslation=$this1+32;
      var $5=FHEAP[$m_upperTranslation];
      var $cmp3=($4) != ($5);
      if ($cmp3) { __label__ = 4;break $if_then$$lor_lhs_false$47; } else { __label__ = 5;break $if_then$$lor_lhs_false$47; }
    }
  } while(0);
  $if_then$$if_end$49: do { 
    if (__label__ == 4) {

      var $6=$this1;
      var $m_bodyA=$6+12;
      var $7=IHEAP[$m_bodyA];
      __ZN6b2Body8SetAwakeEb($7, 1);
      var $8=$this1;
      var $m_bodyB=$8+13;
      var $9=IHEAP[$m_bodyB];
      __ZN6b2Body8SetAwakeEb($9, 1);
      var $10=$lower_addr;
      var $m_lowerTranslation4=$this1+31;
      FHEAP[$m_lowerTranslation4]=$10;
      var $11=$upper_addr;
      var $m_upperTranslation5=$this1+32;
      FHEAP[$m_upperTranslation5]=$11;
      var $m_impulse=$this1+27;
      var $z=$m_impulse+2;
      FHEAP[$z]=0;
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZNK16b2PrismaticJoint14IsMotorEnabledEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_enableMotor=$this1+36;
  var $0=IHEAP[$m_enableMotor];
  var $tobool=((($0)) & 1);
  ;
  return $tobool;
  return null;
}


function __ZN16b2PrismaticJoint11EnableMotorEb($this, $flag) {
  ;
  var __label__;

  var $this_addr;
  var $flag_addr;
  $this_addr=$this;
  var $frombool=($flag);
  $flag_addr=$frombool;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  __ZN6b2Body8SetAwakeEb($1, 1);
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  __ZN6b2Body8SetAwakeEb($3, 1);
  var $4=$flag_addr;
  var $tobool=((($4)) & 1);
  var $m_enableMotor=$this1+36;
  var $frombool2=($tobool);
  IHEAP[$m_enableMotor]=$frombool2;
  ;
  return;
  return;
}


function __ZN16b2PrismaticJoint13SetMotorSpeedEf($this, $speed) {
  ;
  var __label__;

  var $this_addr;
  var $speed_addr;
  $this_addr=$this;
  $speed_addr=$speed;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  __ZN6b2Body8SetAwakeEb($1, 1);
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  __ZN6b2Body8SetAwakeEb($3, 1);
  var $4=$speed_addr;
  var $m_motorSpeed=$this1+34;
  FHEAP[$m_motorSpeed]=$4;
  ;
  return;
  return;
}


function __ZN16b2PrismaticJoint16SetMaxMotorForceEf($this, $force) {
  ;
  var __label__;

  var $this_addr;
  var $force_addr;
  $this_addr=$this;
  $force_addr=$force;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  __ZN6b2Body8SetAwakeEb($1, 1);
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  __ZN6b2Body8SetAwakeEb($3, 1);
  var $4=$force_addr;
  var $m_maxMotorForce=$this1+33;
  FHEAP[$m_maxMotorForce]=$4;
  ;
  return;
  return;
}


function __ZN16b2PrismaticJoint24SolvePositionConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 71;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $cB=__stackBase__+2;
  var $aB;
  var $qA=__stackBase__+4;
  var $qB=__stackBase__+6;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $rA=__stackBase__+8;
  var $ref_tmp=__stackBase__+10;
  var $rB=__stackBase__+12;
  var $ref_tmp12=__stackBase__+14;
  var $d=__stackBase__+16;
  var $ref_tmp13=__stackBase__+18;
  var $ref_tmp14=__stackBase__+20;
  var $axis=__stackBase__+22;
  var $a1;
  var $ref_tmp15=__stackBase__+24;
  var $a2;
  var $perp=__stackBase__+26;
  var $s1;
  var $ref_tmp17=__stackBase__+28;
  var $s2;
  var $impulse=__stackBase__+30;
  var $C1=__stackBase__+33;
  var $linearError;
  var $angularError;
  var $active;
  var $C2;
  var $translation;
  var $k11;
  var $k12;
  var $k13;
  var $k22;
  var $k23;
  var $k33;
  var $K=__stackBase__+35;
  var $C=__stackBase__+44;
  var $ref_tmp90=__stackBase__+47;
  var $ref_tmp91=__stackBase__+50;
  var $k1193;
  var $k12101;
  var $k22105;
  var $K110=__stackBase__+53;
  var $impulse1=__stackBase__+57;
  var $ref_tmp113=__stackBase__+59;
  var $P=__stackBase__+61;
  var $ref_tmp120=__stackBase__+63;
  var $ref_tmp122=__stackBase__+65;
  var $LA;
  var $LB;
  var $ref_tmp138=__stackBase__+67;
  var $ref_tmp141=__stackBase__+69;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+38;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $positions=$1+6;
  var $2=IHEAP[$positions];
  var $arrayidx=$2+$0*3;
  var $c=$arrayidx;
  var $3=$cA;
  var $4=$c;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+38;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $positions3=$6+6;
  var $7=IHEAP[$positions3];
  var $arrayidx4=$7+$5*3;
  var $a=$arrayidx4+2;
  var $8=FHEAP[$a];
  $aA=$8;
  var $m_indexB=$this1+39;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $positions5=$10+6;
  var $11=IHEAP[$positions5];
  var $arrayidx6=$11+$9*3;
  var $c7=$arrayidx6;
  var $12=$cB;
  var $13=$c7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+39;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $positions9=$15+6;
  var $16=IHEAP[$positions9];
  var $arrayidx10=$16+$14*3;
  var $a11=$arrayidx10+2;
  var $17=FHEAP[$a11];
  $aB=$17;
  var $18=$aA;
  __ZN5b2RotC1Ef($qA, $18);
  var $19=$aB;
  __ZN5b2RotC1Ef($qB, $19);
  var $m_invMassA=$this1+44;
  var $20=FHEAP[$m_invMassA];
  $mA=$20;
  var $m_invMassB=$this1+45;
  var $21=FHEAP[$m_invMassB];
  $mB=$21;
  var $m_invIA=$this1+46;
  var $22=FHEAP[$m_invIA];
  $iA=$22;
  var $m_invIB=$this1+47;
  var $23=FHEAP[$m_invIB];
  $iB=$23;
  var $m_localAnchorA=$this1+18;
  var $m_localCenterA=$this1+40;
  __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorA, $m_localCenterA);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp);
  var $m_localAnchorB=$this1+20;
  var $m_localCenterB=$this1+42;
  __ZmiRK6b2Vec2S1_($ref_tmp12, $m_localAnchorB, $m_localCenterB);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp12);
  __ZplRK6b2Vec2S1_($ref_tmp14, $cB, $rB);
  __ZmiRK6b2Vec2S1_($ref_tmp13, $ref_tmp14, $cA);
  __ZmiRK6b2Vec2S1_($d, $ref_tmp13, $rA);
  var $m_localXAxisA=$this1+22;
  __Z5b2MulRK5b2RotRK6b2Vec2($axis, $qA, $m_localXAxisA);
  __ZplRK6b2Vec2S1_($ref_tmp15, $d, $rA);
  var $call=__Z7b2CrossRK6b2Vec2S1_($ref_tmp15, $axis);
  $a1=$call;
  var $call16=__Z7b2CrossRK6b2Vec2S1_($rB, $axis);
  $a2=$call16;
  var $m_localYAxisA=$this1+24;
  __Z5b2MulRK5b2RotRK6b2Vec2($perp, $qA, $m_localYAxisA);
  __ZplRK6b2Vec2S1_($ref_tmp17, $d, $rA);
  var $call18=__Z7b2CrossRK6b2Vec2S1_($ref_tmp17, $perp);
  $s1=$call18;
  var $call19=__Z7b2CrossRK6b2Vec2S1_($rB, $perp);
  $s2=$call19;
  __ZN6b2Vec3C1Ev($impulse);
  __ZN6b2Vec2C1Ev($C1);
  var $call20=__Z5b2DotRK6b2Vec2S1_($perp, $d);
  var $x=$C1;
  FHEAP[$x]=$call20;
  var $24=$aB;
  var $25=$aA;
  var $sub=($24)-($25);
  var $m_referenceAngle=$this1+26;
  var $26=FHEAP[$m_referenceAngle];
  var $sub21=($sub)-($26);
  var $y=$C1+1;
  FHEAP[$y]=$sub21;
  var $x22=$C1;
  var $27=FHEAP[$x22];
  var $call23=__Z5b2AbsIfET_S0_($27);
  $linearError=$call23;
  var $y24=$C1+1;
  var $28=FHEAP[$y24];
  var $call25=__Z5b2AbsIfET_S0_($28);
  $angularError=$call25;
  $active=0;
  $C2=0;
  var $m_enableLimit=$this1+35;
  var $29=IHEAP[$m_enableLimit];
  var $tobool=((($29)) & 1);
  if ($tobool) { __label__ = 1;; } else { __label__ = 7;; }
  $if_then$$if_end55$2: do { 
    if (__label__ == 1) {

      var $call26=__Z5b2DotRK6b2Vec2S1_($axis, $d);
      $translation=$call26;
      var $m_upperTranslation=$this1+32;
      var $30=FHEAP[$m_upperTranslation];
      var $m_lowerTranslation=$this1+31;
      var $31=FHEAP[$m_lowerTranslation];
      var $sub27=($30)-($31);
      var $call28=__Z5b2AbsIfET_S0_($sub27);
      var $cmp=($call28) < 0.009999999776482582;
      var $32=$translation;
      if ($cmp) { __label__ = 2;; } else { __label__ = 3;; }
      $if_then29$$if_else$4: do { 
        if (__label__ == 2) {

          var $call30=__Z7b2ClampIfET_S0_S0_S0_($32, -0.20000000298023224, 0.20000000298023224);
          $C2=$call30;
          var $33=$linearError;
          var $34=$translation;
          var $call31=__Z5b2AbsIfET_S0_($34);
          var $call32=__Z5b2MaxIfET_S0_S0_($33, $call31);
          $linearError=$call32;
          $active=1;
          ;
        }
        else if (__label__ == 3) {

          var $m_lowerTranslation33=$this1+31;
          var $35=FHEAP[$m_lowerTranslation33];
          var $cmp34=($32) <= ($35);
          var $36=$translation;
          if ($cmp34) { __label__ = 4;; } else { __label__ = 5;; }
          $if_then35$$if_else42$7: do { 
            if (__label__ == 4) {

              var $m_lowerTranslation36=$this1+31;
              var $37=FHEAP[$m_lowerTranslation36];
              var $sub37=($36)-($37);
              var $add=($sub37)+0.004999999888241291;
              var $call38=__Z7b2ClampIfET_S0_S0_S0_($add, -0.20000000298023224, 0);
              $C2=$call38;
              var $38=$linearError;
              var $m_lowerTranslation39=$this1+31;
              var $39=FHEAP[$m_lowerTranslation39];
              var $40=$translation;
              var $sub40=($39)-($40);
              var $call41=__Z5b2MaxIfET_S0_S0_($38, $sub40);
              $linearError=$call41;
              $active=1;
              ;
            }
            else if (__label__ == 5) {

              var $m_upperTranslation43=$this1+32;
              var $41=FHEAP[$m_upperTranslation43];
              var $cmp44=($36) >= ($41);
              if (!($cmp44)) { __label__ = 7;break $if_then$$if_end55$2; }

              var $42=$translation;
              var $m_upperTranslation46=$this1+32;
              var $43=FHEAP[$m_upperTranslation46];
              var $sub47=($42)-($43);
              var $sub48=($sub47)-0.004999999888241291;
              var $call49=__Z7b2ClampIfET_S0_S0_S0_($sub48, 0, 0.20000000298023224);
              $C2=$call49;
              var $44=$linearError;
              var $45=$translation;
              var $m_upperTranslation50=$this1+32;
              var $46=FHEAP[$m_upperTranslation50];
              var $sub51=($45)-($46);
              var $call52=__Z5b2MaxIfET_S0_S0_($44, $sub51);
              $linearError=$call52;
              $active=1;
              ;
            }
          } while(0);
        }
      } while(0);
    }
  } while(0);

  var $47=$active;
  var $tobool56=((($47)) & 1);
  var $48=$mA;
  var $49=$mB;
  var $add58=($48)+($49);
  var $50=$iA;
  var $51=$s1;
  var $mul=($50)*($51);
  var $52=$s1;
  var $mul59=($mul)*($52);
  var $add60=($add58)+($mul59);
  var $53=$iB;
  var $54=$s2;
  var $mul61=($53)*($54);
  var $55=$s2;
  var $mul62=($mul61)*($55);
  var $add63=($add60)+($mul62);
  if ($tobool56) { __label__ = 8;; } else { __label__ = 11;; }
  $if_then57$$if_else92$12: do { 
    if (__label__ == 8) {

      $k11=$add63;
      var $56=$iA;
      var $57=$s1;
      var $mul64=($56)*($57);
      var $58=$iB;
      var $59=$s2;
      var $mul65=($58)*($59);
      var $add66=($mul64)+($mul65);
      $k12=$add66;
      var $60=$iA;
      var $61=$s1;
      var $mul67=($60)*($61);
      var $62=$a1;
      var $mul68=($mul67)*($62);
      var $63=$iB;
      var $64=$s2;
      var $mul69=($63)*($64);
      var $65=$a2;
      var $mul70=($mul69)*($65);
      var $add71=($mul68)+($mul70);
      $k13=$add71;
      var $66=$iA;
      var $67=$iB;
      var $add72=($66)+($67);
      $k22=$add72;
      var $68=$k22;
      var $cmp73=($68) == 0;
      if ($cmp73) { __label__ = 9;; } else { __label__ = 10;; }
      $if_then74$$if_end75$14: do { 
        if (__label__ == 9) {

          $k22=1;
          ;
        }
      } while(0);

      var $69=$iA;
      var $70=$a1;
      var $mul76=($69)*($70);
      var $71=$iB;
      var $72=$a2;
      var $mul77=($71)*($72);
      var $add78=($mul76)+($mul77);
      $k23=$add78;
      var $73=$mA;
      var $74=$mB;
      var $add79=($73)+($74);
      var $75=$iA;
      var $76=$a1;
      var $mul80=($75)*($76);
      var $77=$a1;
      var $mul81=($mul80)*($77);
      var $add82=($add79)+($mul81);
      var $78=$iB;
      var $79=$a2;
      var $mul83=($78)*($79);
      var $80=$a2;
      var $mul84=($mul83)*($80);
      var $add85=($add82)+($mul84);
      $k33=$add85;
      __ZN7b2Mat33C1Ev($K);
      var $ex=$K;
      var $81=$k11;
      var $82=$k12;
      var $83=$k13;
      __ZN6b2Vec33SetEfff($ex, $81, $82, $83);
      var $ey=$K+3;
      var $84=$k12;
      var $85=$k22;
      var $86=$k23;
      __ZN6b2Vec33SetEfff($ey, $84, $85, $86);
      var $ez=$K+6;
      var $87=$k13;
      var $88=$k23;
      var $89=$k33;
      __ZN6b2Vec33SetEfff($ez, $87, $88, $89);
      __ZN6b2Vec3C1Ev($C);
      var $x86=$C1;
      var $90=FHEAP[$x86];
      var $x87=$C;
      FHEAP[$x87]=$90;
      var $y88=$C1+1;
      var $91=FHEAP[$y88];
      var $y89=$C+1;
      FHEAP[$y89]=$91;
      var $92=$C2;
      var $z=$C+2;
      FHEAP[$z]=$92;
      __ZNK6b2Vec3ngEv($ref_tmp91, $C);
      __ZNK7b2Mat337Solve33ERK6b2Vec3($ref_tmp90, $K, $ref_tmp91);
      var $93=$impulse;
      var $94=$ref_tmp90;
      IHEAP[$93]=IHEAP[$94]; FHEAP[$93]=FHEAP[$94]; ; IHEAP[$93+1]=IHEAP[$94+1]; FHEAP[$93+1]=FHEAP[$94+1]; ; IHEAP[$93+2]=IHEAP[$94+2]; FHEAP[$93+2]=FHEAP[$94+2]; ;
      ;
    }
    else if (__label__ == 11) {

      $k1193=$add63;
      var $95=$iA;
      var $96=$s1;
      var $mul102=($95)*($96);
      var $97=$iB;
      var $98=$s2;
      var $mul103=($97)*($98);
      var $add104=($mul102)+($mul103);
      $k12101=$add104;
      var $99=$iA;
      var $100=$iB;
      var $add106=($99)+($100);
      $k22105=$add106;
      var $101=$k22105;
      var $cmp107=($101) == 0;
      if ($cmp107) { __label__ = 12;; } else { __label__ = 13;; }
      $if_then108$$if_end109$18: do { 
        if (__label__ == 12) {

          $k22105=1;
          ;
        }
      } while(0);

      __ZN7b2Mat22C1Ev($K110);
      var $ex111=$K110;
      var $102=$k1193;
      var $103=$k12101;
      __ZN6b2Vec23SetEff($ex111, $102, $103);
      var $ey112=$K110+2;
      var $104=$k12101;
      var $105=$k22105;
      __ZN6b2Vec23SetEff($ey112, $104, $105);
      __ZNK6b2Vec2ngEv($ref_tmp113, $C1);
      __ZNK7b2Mat225SolveERK6b2Vec2($impulse1, $K110, $ref_tmp113);
      var $x114=$impulse1;
      var $106=FHEAP[$x114];
      var $x115=$impulse;
      FHEAP[$x115]=$106;
      var $y116=$impulse1+1;
      var $107=FHEAP[$y116];
      var $y117=$impulse+1;
      FHEAP[$y117]=$107;
      var $z118=$impulse+2;
      FHEAP[$z118]=0;
      ;
    }
  } while(0);

  var $x121=$impulse;
  var $108=FHEAP[$x121];
  __ZmlfRK6b2Vec2($ref_tmp120, $108, $perp);
  var $z123=$impulse+2;
  var $109=FHEAP[$z123];
  __ZmlfRK6b2Vec2($ref_tmp122, $109, $axis);
  __ZplRK6b2Vec2S1_($P, $ref_tmp120, $ref_tmp122);
  var $x124=$impulse;
  var $110=FHEAP[$x124];
  var $111=$s1;
  var $mul125=($110)*($111);
  var $y126=$impulse+1;
  var $112=FHEAP[$y126];
  var $add127=($mul125)+($112);
  var $z128=$impulse+2;
  var $113=FHEAP[$z128];
  var $114=$a1;
  var $mul129=($113)*($114);
  var $add130=($add127)+($mul129);
  $LA=$add130;
  var $x131=$impulse;
  var $115=FHEAP[$x131];
  var $116=$s2;
  var $mul132=($115)*($116);
  var $y133=$impulse+1;
  var $117=FHEAP[$y133];
  var $add134=($mul132)+($117);
  var $z135=$impulse+2;
  var $118=FHEAP[$z135];
  var $119=$a2;
  var $mul136=($118)*($119);
  var $add137=($add134)+($mul136);
  $LB=$add137;
  var $120=$mA;
  __ZmlfRK6b2Vec2($ref_tmp138, $120, $P);
  __ZN6b2Vec2mIERKS_($cA, $ref_tmp138);
  var $121=$iA;
  var $122=$LA;
  var $mul139=($121)*($122);
  var $123=$aA;
  var $sub140=($123)-($mul139);
  $aA=$sub140;
  var $124=$mB;
  __ZmlfRK6b2Vec2($ref_tmp141, $124, $P);
  __ZN6b2Vec2pLERKS_($cB, $ref_tmp141);
  var $125=$iB;
  var $126=$LB;
  var $mul142=($125)*($126);
  var $127=$aB;
  var $add143=($127)+($mul142);
  $aB=$add143;
  var $m_indexA144=$this1+38;
  var $128=IHEAP[$m_indexA144];
  var $129=$data_addr;
  var $positions145=$129+6;
  var $130=IHEAP[$positions145];
  var $arrayidx146=$130+$128*3;
  var $c147=$arrayidx146;
  var $131=$c147;
  var $132=$cA;
  IHEAP[$131]=IHEAP[$132]; FHEAP[$131]=FHEAP[$132]; ; IHEAP[$131+1]=IHEAP[$132+1]; FHEAP[$131+1]=FHEAP[$132+1]; ;
  var $133=$aA;
  var $m_indexA148=$this1+38;
  var $134=IHEAP[$m_indexA148];
  var $135=$data_addr;
  var $positions149=$135+6;
  var $136=IHEAP[$positions149];
  var $arrayidx150=$136+$134*3;
  var $a151=$arrayidx150+2;
  FHEAP[$a151]=$133;
  var $m_indexB152=$this1+39;
  var $137=IHEAP[$m_indexB152];
  var $138=$data_addr;
  var $positions153=$138+6;
  var $139=IHEAP[$positions153];
  var $arrayidx154=$139+$137*3;
  var $c155=$arrayidx154;
  var $140=$c155;
  var $141=$cB;
  IHEAP[$140]=IHEAP[$141]; FHEAP[$140]=FHEAP[$141]; ; IHEAP[$140+1]=IHEAP[$141+1]; FHEAP[$140+1]=FHEAP[$141+1]; ;
  var $142=$aB;
  var $m_indexB156=$this1+39;
  var $143=IHEAP[$m_indexB156];
  var $144=$data_addr;
  var $positions157=$144+6;
  var $145=IHEAP[$positions157];
  var $arrayidx158=$145+$143*3;
  var $a159=$arrayidx158+2;
  FHEAP[$a159]=$142;
  var $146=$linearError;
  var $cmp160=($146) <= 0.004999999888241291;
  if ($cmp160) { __label__ = 15;; } else { var $148 = 0;__label__ = 16;; }
  $land_rhs$$land_end$22: do { 
    if (__label__ == 15) {

      var $147=$angularError;
      var $cmp161=($147) <= 0.03490658849477768;
      var $148 = $cmp161;;
    }
  } while(0);

  var $148;
  STACKTOP = __stackBase__;
  return $148;
  return null;
}
__ZN16b2PrismaticJoint24SolvePositionConstraintsERK12b2SolverData["X"]=1;

function __ZNK16b2PrismaticJoint19GetJointTranslationEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $this_addr;
  var $pA=__stackBase__;
  var $pB=__stackBase__+2;
  var $d=__stackBase__+4;
  var $axis=__stackBase__+6;
  var $translation;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+18;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($pA, $1, $m_localAnchorA);
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+20;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($pB, $3, $m_localAnchorB);
  __ZmiRK6b2Vec2S1_($d, $pB, $pA);
  var $4=$this1;
  var $m_bodyA2=$4+12;
  var $5=IHEAP[$m_bodyA2];
  var $m_localXAxisA=$this1+22;
  __ZNK6b2Body14GetWorldVectorERK6b2Vec2($axis, $5, $m_localXAxisA);
  var $call=__Z5b2DotRK6b2Vec2S1_($d, $axis);
  $translation=$call;
  var $6=$translation;
  STACKTOP = __stackBase__;
  return $6;
  return null;
}


function __ZNK16b2PrismaticJoint13GetJointSpeedEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 32;
  var __label__;

  var $this_addr;
  var $bA;
  var $bB;
  var $rA=__stackBase__;
  var $ref_tmp=__stackBase__+2;
  var $rB=__stackBase__+4;
  var $ref_tmp4=__stackBase__+6;
  var $p1=__stackBase__+8;
  var $p2=__stackBase__+10;
  var $d=__stackBase__+12;
  var $axis=__stackBase__+14;
  var $vA=__stackBase__+16;
  var $vB=__stackBase__+18;
  var $wA;
  var $wB;
  var $speed;
  var $ref_tmp14=__stackBase__+20;
  var $ref_tmp15=__stackBase__+22;
  var $ref_tmp16=__stackBase__+24;
  var $ref_tmp17=__stackBase__+26;
  var $ref_tmp18=__stackBase__+28;
  var $ref_tmp19=__stackBase__+30;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  $bA=$1;
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  $bB=$3;
  var $4=$bA;
  var $m_xf=$4+3;
  var $q=$m_xf+2;
  var $m_localAnchorA=$this1+18;
  var $5=$bA;
  var $m_sweep=$5+7;
  var $localCenter=$m_sweep;
  __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorA, $localCenter);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA, $q, $ref_tmp);
  var $6=$bB;
  var $m_xf2=$6+3;
  var $q3=$m_xf2+2;
  var $m_localAnchorB=$this1+20;
  var $7=$bB;
  var $m_sweep5=$7+7;
  var $localCenter6=$m_sweep5;
  __ZmiRK6b2Vec2S1_($ref_tmp4, $m_localAnchorB, $localCenter6);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB, $q3, $ref_tmp4);
  var $8=$bA;
  var $m_sweep7=$8+7;
  var $c=$m_sweep7+4;
  __ZplRK6b2Vec2S1_($p1, $c, $rA);
  var $9=$bB;
  var $m_sweep8=$9+7;
  var $c9=$m_sweep8+4;
  __ZplRK6b2Vec2S1_($p2, $c9, $rB);
  __ZmiRK6b2Vec2S1_($d, $p2, $p1);
  var $10=$bA;
  var $m_xf10=$10+3;
  var $q11=$m_xf10+2;
  var $m_localXAxisA=$this1+22;
  __Z5b2MulRK5b2RotRK6b2Vec2($axis, $q11, $m_localXAxisA);
  var $11=$bA;
  var $m_linearVelocity=$11+16;
  var $12=$vA;
  var $13=$m_linearVelocity;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$bB;
  var $m_linearVelocity12=$14+16;
  var $15=$vB;
  var $16=$m_linearVelocity12;
  IHEAP[$15]=IHEAP[$16]; FHEAP[$15]=FHEAP[$16]; ; IHEAP[$15+1]=IHEAP[$16+1]; FHEAP[$15+1]=FHEAP[$16+1]; ;
  var $17=$bA;
  var $m_angularVelocity=$17+18;
  var $18=FHEAP[$m_angularVelocity];
  $wA=$18;
  var $19=$bB;
  var $m_angularVelocity13=$19+18;
  var $20=FHEAP[$m_angularVelocity13];
  $wB=$20;
  var $21=$wA;
  __Z7b2CrossfRK6b2Vec2($ref_tmp14, $21, $axis);
  var $call=__Z5b2DotRK6b2Vec2S1_($d, $ref_tmp14);
  var $22=$wB;
  __Z7b2CrossfRK6b2Vec2($ref_tmp18, $22, $rB);
  __ZplRK6b2Vec2S1_($ref_tmp17, $vB, $ref_tmp18);
  __ZmiRK6b2Vec2S1_($ref_tmp16, $ref_tmp17, $vA);
  var $23=$wA;
  __Z7b2CrossfRK6b2Vec2($ref_tmp19, $23, $rA);
  __ZmiRK6b2Vec2S1_($ref_tmp15, $ref_tmp16, $ref_tmp19);
  var $call20=__Z5b2DotRK6b2Vec2S1_($axis, $ref_tmp15);
  var $add=($call)+($call20);
  $speed=$add;
  var $24=$speed;
  STACKTOP = __stackBase__;
  return $24;
  return null;
}
__ZNK16b2PrismaticJoint13GetJointSpeedEv["X"]=1;

function __ZN16b2PrismaticJointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN16b2PrismaticJointD2Ev($this1);
  ;
  return;
  return;
}


function __ZN16b2PrismaticJointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN16b2PrismaticJointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN16b2PrismaticJointD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2JointD2Ev($0);
  ;
  return;
  return;
}


function __ZNK16b2PrismaticJoint13GetMotorForceEf($this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_motorImpulse=$this1+30;
  var $1=FHEAP[$m_motorImpulse];
  var $mul=($0)*($1);
  ;
  return $mul;
  return null;
}


function __ZN16b2PrismaticJoint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $indexA;
  var $indexB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  $indexA=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  $indexB=$5;
  __Z5b2LogPKcz(__str2285, allocate(1, "i32", ALLOC_STACK));
  var $6=$indexA;
  __Z5b2LogPKcz(__str1392, allocate([$6], "i32", ALLOC_STACK));
  var $7=$indexB;
  __Z5b2LogPKcz(__str2393, allocate([$7], "i32", ALLOC_STACK));
  var $8=$this1;
  var $m_collideConnected=$8+16;
  var $9=IHEAP[$m_collideConnected];
  var $tobool=((($9)) & 1);
  var $conv=($tobool);
  __Z5b2LogPKcz(__str3394, allocate([$conv], "i32", ALLOC_STACK));
  var $m_localAnchorA=$this1+18;
  var $x=$m_localAnchorA;
  var $10=FHEAP[$x];
  var $conv3=($10);
  var $m_localAnchorA4=$this1+18;
  var $y=$m_localAnchorA4+1;
  var $11=FHEAP[$y];
  var $conv5=($11);
  __Z5b2LogPKcz(__str4395, allocate([$conv3,$conv5], "double", ALLOC_STACK));
  var $m_localAnchorB=$this1+20;
  var $x6=$m_localAnchorB;
  var $12=FHEAP[$x6];
  var $conv7=($12);
  var $m_localAnchorB8=$this1+20;
  var $y9=$m_localAnchorB8+1;
  var $13=FHEAP[$y9];
  var $conv10=($13);
  __Z5b2LogPKcz(__str5396, allocate([$conv7,$conv10], "double", ALLOC_STACK));
  var $m_localXAxisA=$this1+22;
  var $x11=$m_localXAxisA;
  var $14=FHEAP[$x11];
  var $conv12=($14);
  var $m_localXAxisA13=$this1+22;
  var $y14=$m_localXAxisA13+1;
  var $15=FHEAP[$y14];
  var $conv15=($15);
  __Z5b2LogPKcz(__str6397, allocate([$conv12,$conv15], "double", ALLOC_STACK));
  var $m_referenceAngle=$this1+26;
  var $16=FHEAP[$m_referenceAngle];
  var $conv16=($16);
  __Z5b2LogPKcz(__str6385, allocate([$conv16], "double", ALLOC_STACK));
  var $m_enableLimit=$this1+35;
  var $17=IHEAP[$m_enableLimit];
  var $tobool17=((($17)) & 1);
  var $conv18=($tobool17);
  __Z5b2LogPKcz(__str9328, allocate([$conv18], "i32", ALLOC_STACK));
  var $m_lowerTranslation=$this1+31;
  var $18=FHEAP[$m_lowerTranslation];
  var $conv19=($18);
  __Z5b2LogPKcz(__str11294, allocate([$conv19], "double", ALLOC_STACK));
  var $m_upperTranslation=$this1+32;
  var $19=FHEAP[$m_upperTranslation];
  var $conv20=($19);
  __Z5b2LogPKcz(__str12295, allocate([$conv20], "double", ALLOC_STACK));
  var $m_enableMotor=$this1+36;
  var $20=IHEAP[$m_enableMotor];
  var $tobool21=((($20)) & 1);
  var $conv22=($tobool21);
  __Z5b2LogPKcz(__str7398, allocate([$conv22], "i32", ALLOC_STACK));
  var $m_motorSpeed=$this1+34;
  var $21=FHEAP[$m_motorSpeed];
  var $conv23=($21);
  __Z5b2LogPKcz(__str8399, allocate([$conv23], "double", ALLOC_STACK));
  var $m_maxMotorForce=$this1+33;
  var $22=FHEAP[$m_maxMotorForce];
  var $conv24=($22);
  __Z5b2LogPKcz(__str15298, allocate([$conv24], "double", ALLOC_STACK));
  var $23=$this1;
  var $m_index=$23+14;
  var $24=IHEAP[$m_index];
  __Z5b2LogPKcz(__str12403, allocate([$24], "i32", ALLOC_STACK));
  ;
  return;
  return;
}
__ZN16b2PrismaticJoint4DumpEv["X"]=1;

function __ZN7b2Mat33C2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $ex=$this1;
  __ZN6b2Vec3C1Ev($ex);
  var $ey=$this1+3;
  __ZN6b2Vec3C1Ev($ey);
  var $ez=$this1+6;
  __ZN6b2Vec3C1Ev($ez);
  ;
  return;
  return;
}


function __ZN13b2PulleyJointC2EPK16b2PulleyJointDef($this, $def) {
  ;
  var __label__;

  var $this_addr;
  var $def_addr;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$def_addr;
  var $2=$1;
  __ZN7b2JointC2EPK10b2JointDef($0, $2);
  var $3=$this1;
  IHEAP[$3]=__ZTV13b2PulleyJoint+2;
  var $m_groundAnchorA=$this1+18;
  __ZN6b2Vec2C1Ev($m_groundAnchorA);
  var $m_groundAnchorB=$this1+20;
  __ZN6b2Vec2C1Ev($m_groundAnchorB);
  var $m_localAnchorA=$this1+24;
  __ZN6b2Vec2C1Ev($m_localAnchorA);
  var $m_localAnchorB=$this1+26;
  __ZN6b2Vec2C1Ev($m_localAnchorB);
  var $m_uA=$this1+33;
  __ZN6b2Vec2C1Ev($m_uA);
  var $m_uB=$this1+35;
  __ZN6b2Vec2C1Ev($m_uB);
  var $m_rA=$this1+37;
  __ZN6b2Vec2C1Ev($m_rA);
  var $m_rB=$this1+39;
  __ZN6b2Vec2C1Ev($m_rB);
  var $m_localCenterA=$this1+41;
  __ZN6b2Vec2C1Ev($m_localCenterA);
  var $m_localCenterB=$this1+43;
  __ZN6b2Vec2C1Ev($m_localCenterB);
  var $m_groundAnchorA11=$this1+18;
  var $4=$def_addr;
  var $groundAnchorA=$4+5;
  var $5=$m_groundAnchorA11;
  var $6=$groundAnchorA;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_groundAnchorB12=$this1+20;
  var $7=$def_addr;
  var $groundAnchorB=$7+7;
  var $8=$m_groundAnchorB12;
  var $9=$groundAnchorB;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localAnchorA13=$this1+24;
  var $10=$def_addr;
  var $localAnchorA=$10+9;
  var $11=$m_localAnchorA13;
  var $12=$localAnchorA;
  IHEAP[$11]=IHEAP[$12]; FHEAP[$11]=FHEAP[$12]; ; IHEAP[$11+1]=IHEAP[$12+1]; FHEAP[$11+1]=FHEAP[$12+1]; ;
  var $m_localAnchorB14=$this1+26;
  var $13=$def_addr;
  var $localAnchorB=$13+11;
  var $14=$m_localAnchorB14;
  var $15=$localAnchorB;
  IHEAP[$14]=IHEAP[$15]; FHEAP[$14]=FHEAP[$15]; ; IHEAP[$14+1]=IHEAP[$15+1]; FHEAP[$14+1]=FHEAP[$15+1]; ;
  var $16=$def_addr;
  var $lengthA=$16+13;
  var $17=FHEAP[$lengthA];
  var $m_lengthA=$this1+22;
  FHEAP[$m_lengthA]=$17;
  var $18=$def_addr;
  var $lengthB=$18+14;
  var $19=FHEAP[$lengthB];
  var $m_lengthB=$this1+23;
  FHEAP[$m_lengthB]=$19;
  var $20=$def_addr;
  var $ratio=$20+15;
  var $21=FHEAP[$ratio];
  var $cmp=($21) != 0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$12: do { 
    if (__label__ == 1) {

      ___assert_func(__str302, 65, ___PRETTY_FUNCTION____ZN13b2PulleyJointC2EPK16b2PulleyJointDef, __str2304);
      ;
    }
  } while(0);

  var $22=$def_addr;
  var $ratio16=$22+15;
  var $23=FHEAP[$ratio16];
  var $m_ratio=$this1+29;
  FHEAP[$m_ratio]=$23;
  var $24=$def_addr;
  var $lengthA17=$24+13;
  var $25=FHEAP[$lengthA17];
  var $m_ratio18=$this1+29;
  var $26=FHEAP[$m_ratio18];
  var $27=$def_addr;
  var $lengthB19=$27+14;
  var $28=FHEAP[$lengthB19];
  var $mul=($26)*($28);
  var $add=($25)+($mul);
  var $m_constant=$this1+28;
  FHEAP[$m_constant]=$add;
  var $m_impulse=$this1+30;
  FHEAP[$m_impulse]=0;
  ;
  return;
  return;
}
__ZN13b2PulleyJointC2EPK16b2PulleyJointDef["X"]=1;

function __ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f($this, $bA, $bB, $groundA, $groundB, $anchorA, $anchorB, $r) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $this_addr;
  var $bA_addr;
  var $bB_addr;
  var $groundA_addr;
  var $groundB_addr;
  var $anchorA_addr;
  var $anchorB_addr;
  var $r_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp3=__stackBase__+2;
  var $dA=__stackBase__+4;
  var $dB=__stackBase__+6;
  $this_addr=$this;
  $bA_addr=$bA;
  $bB_addr=$bB;
  $groundA_addr=$groundA;
  $groundB_addr=$groundB;
  $anchorA_addr=$anchorA;
  $anchorB_addr=$anchorB;
  $r_addr=$r;
  var $this1=$this_addr;
  var $0=$bA_addr;
  var $1=$this1;
  var $bodyA=$1+2;
  IHEAP[$bodyA]=$0;
  var $2=$bB_addr;
  var $3=$this1;
  var $bodyB=$3+3;
  IHEAP[$bodyB]=$2;
  var $groundAnchorA=$this1+5;
  var $4=$groundA_addr;
  var $5=$groundAnchorA;
  var $6=$4;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $groundAnchorB=$this1+7;
  var $7=$groundB_addr;
  var $8=$groundAnchorB;
  var $9=$7;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $localAnchorA=$this1+9;
  var $10=$this1;
  var $bodyA2=$10+2;
  var $11=IHEAP[$bodyA2];
  var $12=$anchorA_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp, $11, $12);
  var $13=$localAnchorA;
  var $14=$ref_tmp;
  IHEAP[$13]=IHEAP[$14]; FHEAP[$13]=FHEAP[$14]; ; IHEAP[$13+1]=IHEAP[$14+1]; FHEAP[$13+1]=FHEAP[$14+1]; ;
  var $localAnchorB=$this1+11;
  var $15=$this1;
  var $bodyB4=$15+3;
  var $16=IHEAP[$bodyB4];
  var $17=$anchorB_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp3, $16, $17);
  var $18=$localAnchorB;
  var $19=$ref_tmp3;
  IHEAP[$18]=IHEAP[$19]; FHEAP[$18]=FHEAP[$19]; ; IHEAP[$18+1]=IHEAP[$19+1]; FHEAP[$18+1]=FHEAP[$19+1]; ;
  var $20=$anchorA_addr;
  var $21=$groundA_addr;
  __ZmiRK6b2Vec2S1_($dA, $20, $21);
  var $call=__ZNK6b2Vec26LengthEv($dA);
  var $lengthA=$this1+13;
  FHEAP[$lengthA]=$call;
  var $22=$anchorB_addr;
  var $23=$groundB_addr;
  __ZmiRK6b2Vec2S1_($dB, $22, $23);
  var $call5=__ZNK6b2Vec26LengthEv($dB);
  var $lengthB=$this1+14;
  FHEAP[$lengthB]=$call5;
  var $24=$r_addr;
  var $ratio=$this1+15;
  FHEAP[$ratio]=$24;
  var $ratio6=$this1+15;
  var $25=FHEAP[$ratio6];
  var $cmp=($25) > 1.1920928955078125e-7;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$8: do { 
    if (__label__ == 1) {

      ___assert_func(__str302, 51, ___PRETTY_FUNCTION____ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f, __str1303);
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f["X"]=1;

function __ZN13b2PulleyJoint23InitVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 36;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $vA=__stackBase__+2;
  var $wA;
  var $cB=__stackBase__+4;
  var $aB;
  var $vB=__stackBase__+6;
  var $wB;
  var $qA=__stackBase__+8;
  var $qB=__stackBase__+10;
  var $ref_tmp=__stackBase__+12;
  var $ref_tmp38=__stackBase__+14;
  var $ref_tmp40=__stackBase__+16;
  var $ref_tmp41=__stackBase__+18;
  var $ref_tmp43=__stackBase__+20;
  var $ref_tmp44=__stackBase__+22;
  var $ref_tmp46=__stackBase__+24;
  var $ref_tmp47=__stackBase__+26;
  var $lengthA;
  var $lengthB;
  var $ruA;
  var $ruB;
  var $mA;
  var $mB;
  var $PA=__stackBase__+28;
  var $PB=__stackBase__+30;
  var $ref_tmp96=__stackBase__+32;
  var $ref_tmp103=__stackBase__+34;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  var $m_indexA=$this1+31;
  IHEAP[$m_indexA]=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  var $m_indexB=$this1+32;
  IHEAP[$m_indexB]=$5;
  var $m_localCenterA=$this1+41;
  var $6=$this1;
  var $m_bodyA3=$6+12;
  var $7=IHEAP[$m_bodyA3];
  var $m_sweep=$7+7;
  var $localCenter=$m_sweep;
  var $8=$m_localCenterA;
  var $9=$localCenter;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localCenterB=$this1+43;
  var $10=$this1;
  var $m_bodyB4=$10+13;
  var $11=IHEAP[$m_bodyB4];
  var $m_sweep5=$11+7;
  var $localCenter6=$m_sweep5;
  var $12=$m_localCenterB;
  var $13=$localCenter6;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$this1;
  var $m_bodyA7=$14+12;
  var $15=IHEAP[$m_bodyA7];
  var $m_invMass=$15+30;
  var $16=FHEAP[$m_invMass];
  var $m_invMassA=$this1+45;
  FHEAP[$m_invMassA]=$16;
  var $17=$this1;
  var $m_bodyB8=$17+13;
  var $18=IHEAP[$m_bodyB8];
  var $m_invMass9=$18+30;
  var $19=FHEAP[$m_invMass9];
  var $m_invMassB=$this1+46;
  FHEAP[$m_invMassB]=$19;
  var $20=$this1;
  var $m_bodyA10=$20+12;
  var $21=IHEAP[$m_bodyA10];
  var $m_invI=$21+32;
  var $22=FHEAP[$m_invI];
  var $m_invIA=$this1+47;
  FHEAP[$m_invIA]=$22;
  var $23=$this1;
  var $m_bodyB11=$23+13;
  var $24=IHEAP[$m_bodyB11];
  var $m_invI12=$24+32;
  var $25=FHEAP[$m_invI12];
  var $m_invIB=$this1+48;
  FHEAP[$m_invIB]=$25;
  var $m_indexA13=$this1+31;
  var $26=IHEAP[$m_indexA13];
  var $27=$data_addr;
  var $positions=$27+6;
  var $28=IHEAP[$positions];
  var $arrayidx=$28+$26*3;
  var $c=$arrayidx;
  var $29=$cA;
  var $30=$c;
  IHEAP[$29]=IHEAP[$30]; FHEAP[$29]=FHEAP[$30]; ; IHEAP[$29+1]=IHEAP[$30+1]; FHEAP[$29+1]=FHEAP[$30+1]; ;
  var $m_indexA14=$this1+31;
  var $31=IHEAP[$m_indexA14];
  var $32=$data_addr;
  var $positions15=$32+6;
  var $33=IHEAP[$positions15];
  var $arrayidx16=$33+$31*3;
  var $a=$arrayidx16+2;
  var $34=FHEAP[$a];
  $aA=$34;
  var $m_indexA17=$this1+31;
  var $35=IHEAP[$m_indexA17];
  var $36=$data_addr;
  var $velocities=$36+7;
  var $37=IHEAP[$velocities];
  var $arrayidx18=$37+$35*3;
  var $v=$arrayidx18;
  var $38=$vA;
  var $39=$v;
  IHEAP[$38]=IHEAP[$39]; FHEAP[$38]=FHEAP[$39]; ; IHEAP[$38+1]=IHEAP[$39+1]; FHEAP[$38+1]=FHEAP[$39+1]; ;
  var $m_indexA19=$this1+31;
  var $40=IHEAP[$m_indexA19];
  var $41=$data_addr;
  var $velocities20=$41+7;
  var $42=IHEAP[$velocities20];
  var $arrayidx21=$42+$40*3;
  var $w=$arrayidx21+2;
  var $43=FHEAP[$w];
  $wA=$43;
  var $m_indexB22=$this1+32;
  var $44=IHEAP[$m_indexB22];
  var $45=$data_addr;
  var $positions23=$45+6;
  var $46=IHEAP[$positions23];
  var $arrayidx24=$46+$44*3;
  var $c25=$arrayidx24;
  var $47=$cB;
  var $48=$c25;
  IHEAP[$47]=IHEAP[$48]; FHEAP[$47]=FHEAP[$48]; ; IHEAP[$47+1]=IHEAP[$48+1]; FHEAP[$47+1]=FHEAP[$48+1]; ;
  var $m_indexB26=$this1+32;
  var $49=IHEAP[$m_indexB26];
  var $50=$data_addr;
  var $positions27=$50+6;
  var $51=IHEAP[$positions27];
  var $arrayidx28=$51+$49*3;
  var $a29=$arrayidx28+2;
  var $52=FHEAP[$a29];
  $aB=$52;
  var $m_indexB30=$this1+32;
  var $53=IHEAP[$m_indexB30];
  var $54=$data_addr;
  var $velocities31=$54+7;
  var $55=IHEAP[$velocities31];
  var $arrayidx32=$55+$53*3;
  var $v33=$arrayidx32;
  var $56=$vB;
  var $57=$v33;
  IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
  var $m_indexB34=$this1+32;
  var $58=IHEAP[$m_indexB34];
  var $59=$data_addr;
  var $velocities35=$59+7;
  var $60=IHEAP[$velocities35];
  var $arrayidx36=$60+$58*3;
  var $w37=$arrayidx36+2;
  var $61=FHEAP[$w37];
  $wB=$61;
  var $62=$aA;
  __ZN5b2RotC1Ef($qA, $62);
  var $63=$aB;
  __ZN5b2RotC1Ef($qB, $63);
  var $m_rA=$this1+37;
  var $m_localAnchorA=$this1+24;
  var $m_localCenterA39=$this1+41;
  __ZmiRK6b2Vec2S1_($ref_tmp38, $m_localAnchorA, $m_localCenterA39);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $qA, $ref_tmp38);
  var $64=$m_rA;
  var $65=$ref_tmp;
  IHEAP[$64]=IHEAP[$65]; FHEAP[$64]=FHEAP[$65]; ; IHEAP[$64+1]=IHEAP[$65+1]; FHEAP[$64+1]=FHEAP[$65+1]; ;
  var $m_rB=$this1+39;
  var $m_localAnchorB=$this1+26;
  var $m_localCenterB42=$this1+43;
  __ZmiRK6b2Vec2S1_($ref_tmp41, $m_localAnchorB, $m_localCenterB42);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp40, $qB, $ref_tmp41);
  var $66=$m_rB;
  var $67=$ref_tmp40;
  IHEAP[$66]=IHEAP[$67]; FHEAP[$66]=FHEAP[$67]; ; IHEAP[$66+1]=IHEAP[$67+1]; FHEAP[$66+1]=FHEAP[$67+1]; ;
  var $m_uA=$this1+33;
  var $m_rA45=$this1+37;
  __ZplRK6b2Vec2S1_($ref_tmp44, $cA, $m_rA45);
  var $m_groundAnchorA=$this1+18;
  __ZmiRK6b2Vec2S1_($ref_tmp43, $ref_tmp44, $m_groundAnchorA);
  var $68=$m_uA;
  var $69=$ref_tmp43;
  IHEAP[$68]=IHEAP[$69]; FHEAP[$68]=FHEAP[$69]; ; IHEAP[$68+1]=IHEAP[$69+1]; FHEAP[$68+1]=FHEAP[$69+1]; ;
  var $m_uB=$this1+35;
  var $m_rB48=$this1+39;
  __ZplRK6b2Vec2S1_($ref_tmp47, $cB, $m_rB48);
  var $m_groundAnchorB=$this1+20;
  __ZmiRK6b2Vec2S1_($ref_tmp46, $ref_tmp47, $m_groundAnchorB);
  var $70=$m_uB;
  var $71=$ref_tmp46;
  IHEAP[$70]=IHEAP[$71]; FHEAP[$70]=FHEAP[$71]; ; IHEAP[$70+1]=IHEAP[$71+1]; FHEAP[$70+1]=FHEAP[$71+1]; ;
  var $m_uA49=$this1+33;
  var $call=__ZNK6b2Vec26LengthEv($m_uA49);
  $lengthA=$call;
  var $m_uB50=$this1+35;
  var $call51=__ZNK6b2Vec26LengthEv($m_uB50);
  $lengthB=$call51;
  var $72=$lengthA;
  var $cmp=($72) > 0.04999999701976776;
  var $m_uA52=$this1+33;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_else$16: do { 
    if (__label__ == 1) {

      var $73=$lengthA;
      var $div=1/($73);
      __ZN6b2Vec2mLEf($m_uA52, $div);
      ;
    }
    else if (__label__ == 2) {

      __ZN6b2Vec27SetZeroEv($m_uA52);
      ;
    }
  } while(0);

  var $74=$lengthB;
  var $cmp54=($74) > 0.04999999701976776;
  var $m_uB56=$this1+35;
  if ($cmp54) { __label__ = 4;; } else { __label__ = 5;; }
  $if_then55$$if_else58$20: do { 
    if (__label__ == 4) {

      var $75=$lengthB;
      var $div57=1/($75);
      __ZN6b2Vec2mLEf($m_uB56, $div57);
      ;
    }
    else if (__label__ == 5) {

      __ZN6b2Vec27SetZeroEv($m_uB56);
      ;
    }
  } while(0);

  var $m_rA61=$this1+37;
  var $m_uA62=$this1+33;
  var $call63=__Z7b2CrossRK6b2Vec2S1_($m_rA61, $m_uA62);
  $ruA=$call63;
  var $m_rB64=$this1+39;
  var $m_uB65=$this1+35;
  var $call66=__Z7b2CrossRK6b2Vec2S1_($m_rB64, $m_uB65);
  $ruB=$call66;
  var $m_invMassA67=$this1+45;
  var $76=FHEAP[$m_invMassA67];
  var $m_invIA68=$this1+47;
  var $77=FHEAP[$m_invIA68];
  var $78=$ruA;
  var $mul=($77)*($78);
  var $79=$ruA;
  var $mul69=($mul)*($79);
  var $add=($76)+($mul69);
  $mA=$add;
  var $m_invMassB70=$this1+46;
  var $80=FHEAP[$m_invMassB70];
  var $m_invIB71=$this1+48;
  var $81=FHEAP[$m_invIB71];
  var $82=$ruB;
  var $mul72=($81)*($82);
  var $83=$ruB;
  var $mul73=($mul72)*($83);
  var $add74=($80)+($mul73);
  $mB=$add74;
  var $84=$mA;
  var $m_ratio=$this1+29;
  var $85=FHEAP[$m_ratio];
  var $m_ratio75=$this1+29;
  var $86=FHEAP[$m_ratio75];
  var $mul76=($85)*($86);
  var $87=$mB;
  var $mul77=($mul76)*($87);
  var $add78=($84)+($mul77);
  var $m_mass=$this1+49;
  FHEAP[$m_mass]=$add78;
  var $m_mass79=$this1+49;
  var $88=FHEAP[$m_mass79];
  var $cmp80=($88) > 0;
  if ($cmp80) { __label__ = 7;; } else { __label__ = 8;; }
  $if_then81$$if_end85$24: do { 
    if (__label__ == 7) {

      var $m_mass82=$this1+49;
      var $89=FHEAP[$m_mass82];
      var $div83=1/($89);
      var $m_mass84=$this1+49;
      FHEAP[$m_mass84]=$div83;
      ;
    }
  } while(0);

  var $90=$data_addr;
  var $step=$90;
  var $warmStarting=$step+5;
  var $91=IHEAP[$warmStarting];
  var $tobool=((($91)) & 1);
  if ($tobool) { __label__ = 9;; } else { __label__ = 10;; }
  $if_then86$$if_else110$27: do { 
    if (__label__ == 9) {

      var $92=$data_addr;
      var $step87=$92;
      var $dtRatio=$step87+2;
      var $93=FHEAP[$dtRatio];
      var $m_impulse=$this1+30;
      var $94=FHEAP[$m_impulse];
      var $mul88=($94)*($93);
      FHEAP[$m_impulse]=$mul88;
      var $m_impulse89=$this1+30;
      var $95=FHEAP[$m_impulse89];
      var $sub=(-($95));
      var $m_uA90=$this1+33;
      __ZmlfRK6b2Vec2($PA, $sub, $m_uA90);
      var $m_ratio91=$this1+29;
      var $96=FHEAP[$m_ratio91];
      var $sub92=(-($96));
      var $m_impulse93=$this1+30;
      var $97=FHEAP[$m_impulse93];
      var $mul94=($sub92)*($97);
      var $m_uB95=$this1+35;
      __ZmlfRK6b2Vec2($PB, $mul94, $m_uB95);
      var $m_invMassA97=$this1+45;
      var $98=FHEAP[$m_invMassA97];
      __ZmlfRK6b2Vec2($ref_tmp96, $98, $PA);
      __ZN6b2Vec2pLERKS_($vA, $ref_tmp96);
      var $m_invIA98=$this1+47;
      var $99=FHEAP[$m_invIA98];
      var $m_rA99=$this1+37;
      var $call100=__Z7b2CrossRK6b2Vec2S1_($m_rA99, $PA);
      var $mul101=($99)*($call100);
      var $100=$wA;
      var $add102=($100)+($mul101);
      $wA=$add102;
      var $m_invMassB104=$this1+46;
      var $101=FHEAP[$m_invMassB104];
      __ZmlfRK6b2Vec2($ref_tmp103, $101, $PB);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp103);
      var $m_invIB105=$this1+48;
      var $102=FHEAP[$m_invIB105];
      var $m_rB106=$this1+39;
      var $call107=__Z7b2CrossRK6b2Vec2S1_($m_rB106, $PB);
      var $mul108=($102)*($call107);
      var $103=$wB;
      var $add109=($103)+($mul108);
      $wB=$add109;
      ;
    }
    else if (__label__ == 10) {

      var $m_impulse111=$this1+30;
      FHEAP[$m_impulse111]=0;
      ;
    }
  } while(0);

  var $m_indexA113=$this1+31;
  var $104=IHEAP[$m_indexA113];
  var $105=$data_addr;
  var $velocities114=$105+7;
  var $106=IHEAP[$velocities114];
  var $arrayidx115=$106+$104*3;
  var $v116=$arrayidx115;
  var $107=$v116;
  var $108=$vA;
  IHEAP[$107]=IHEAP[$108]; FHEAP[$107]=FHEAP[$108]; ; IHEAP[$107+1]=IHEAP[$108+1]; FHEAP[$107+1]=FHEAP[$108+1]; ;
  var $109=$wA;
  var $m_indexA117=$this1+31;
  var $110=IHEAP[$m_indexA117];
  var $111=$data_addr;
  var $velocities118=$111+7;
  var $112=IHEAP[$velocities118];
  var $arrayidx119=$112+$110*3;
  var $w120=$arrayidx119+2;
  FHEAP[$w120]=$109;
  var $m_indexB121=$this1+32;
  var $113=IHEAP[$m_indexB121];
  var $114=$data_addr;
  var $velocities122=$114+7;
  var $115=IHEAP[$velocities122];
  var $arrayidx123=$115+$113*3;
  var $v124=$arrayidx123;
  var $116=$v124;
  var $117=$vB;
  IHEAP[$116]=IHEAP[$117]; FHEAP[$116]=FHEAP[$117]; ; IHEAP[$116+1]=IHEAP[$117+1]; FHEAP[$116+1]=FHEAP[$117+1]; ;
  var $118=$wB;
  var $m_indexB125=$this1+32;
  var $119=IHEAP[$m_indexB125];
  var $120=$data_addr;
  var $velocities126=$120+7;
  var $121=IHEAP[$velocities126];
  var $arrayidx127=$121+$119*3;
  var $w128=$arrayidx127+2;
  FHEAP[$w128]=$118;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN13b2PulleyJoint23InitVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN13b2PulleyJoint24SolveVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 20;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $vpA=__stackBase__+4;
  var $ref_tmp=__stackBase__+6;
  var $vpB=__stackBase__+8;
  var $ref_tmp12=__stackBase__+10;
  var $Cdot;
  var $impulse;
  var $PA=__stackBase__+12;
  var $PB=__stackBase__+14;
  var $ref_tmp23=__stackBase__+16;
  var $ref_tmp28=__stackBase__+18;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+31;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $velocities=$1+7;
  var $2=IHEAP[$velocities];
  var $arrayidx=$2+$0*3;
  var $v=$arrayidx;
  var $3=$vA;
  var $4=$v;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+31;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $velocities3=$6+7;
  var $7=IHEAP[$velocities3];
  var $arrayidx4=$7+$5*3;
  var $w=$arrayidx4+2;
  var $8=FHEAP[$w];
  $wA=$8;
  var $m_indexB=$this1+32;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $velocities5=$10+7;
  var $11=IHEAP[$velocities5];
  var $arrayidx6=$11+$9*3;
  var $v7=$arrayidx6;
  var $12=$vB;
  var $13=$v7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+32;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $velocities9=$15+7;
  var $16=IHEAP[$velocities9];
  var $arrayidx10=$16+$14*3;
  var $w11=$arrayidx10+2;
  var $17=FHEAP[$w11];
  $wB=$17;
  var $18=$wA;
  var $m_rA=$this1+37;
  __Z7b2CrossfRK6b2Vec2($ref_tmp, $18, $m_rA);
  __ZplRK6b2Vec2S1_($vpA, $vA, $ref_tmp);
  var $19=$wB;
  var $m_rB=$this1+39;
  __Z7b2CrossfRK6b2Vec2($ref_tmp12, $19, $m_rB);
  __ZplRK6b2Vec2S1_($vpB, $vB, $ref_tmp12);
  var $m_uA=$this1+33;
  var $call=__Z5b2DotRK6b2Vec2S1_($m_uA, $vpA);
  var $sub=(-($call));
  var $m_ratio=$this1+29;
  var $20=FHEAP[$m_ratio];
  var $m_uB=$this1+35;
  var $call13=__Z5b2DotRK6b2Vec2S1_($m_uB, $vpB);
  var $mul=($20)*($call13);
  var $sub14=($sub)-($mul);
  $Cdot=$sub14;
  var $m_mass=$this1+49;
  var $21=FHEAP[$m_mass];
  var $sub15=(-($21));
  var $22=$Cdot;
  var $mul16=($sub15)*($22);
  $impulse=$mul16;
  var $23=$impulse;
  var $m_impulse=$this1+30;
  var $24=FHEAP[$m_impulse];
  var $add=($24)+($23);
  FHEAP[$m_impulse]=$add;
  var $25=$impulse;
  var $sub17=(-($25));
  var $m_uA18=$this1+33;
  __ZmlfRK6b2Vec2($PA, $sub17, $m_uA18);
  var $m_ratio19=$this1+29;
  var $26=FHEAP[$m_ratio19];
  var $sub20=(-($26));
  var $27=$impulse;
  var $mul21=($sub20)*($27);
  var $m_uB22=$this1+35;
  __ZmlfRK6b2Vec2($PB, $mul21, $m_uB22);
  var $m_invMassA=$this1+45;
  var $28=FHEAP[$m_invMassA];
  __ZmlfRK6b2Vec2($ref_tmp23, $28, $PA);
  __ZN6b2Vec2pLERKS_($vA, $ref_tmp23);
  var $m_invIA=$this1+47;
  var $29=FHEAP[$m_invIA];
  var $m_rA24=$this1+37;
  var $call25=__Z7b2CrossRK6b2Vec2S1_($m_rA24, $PA);
  var $mul26=($29)*($call25);
  var $30=$wA;
  var $add27=($30)+($mul26);
  $wA=$add27;
  var $m_invMassB=$this1+46;
  var $31=FHEAP[$m_invMassB];
  __ZmlfRK6b2Vec2($ref_tmp28, $31, $PB);
  __ZN6b2Vec2pLERKS_($vB, $ref_tmp28);
  var $m_invIB=$this1+48;
  var $32=FHEAP[$m_invIB];
  var $m_rB29=$this1+39;
  var $call30=__Z7b2CrossRK6b2Vec2S1_($m_rB29, $PB);
  var $mul31=($32)*($call30);
  var $33=$wB;
  var $add32=($33)+($mul31);
  $wB=$add32;
  var $m_indexA33=$this1+31;
  var $34=IHEAP[$m_indexA33];
  var $35=$data_addr;
  var $velocities34=$35+7;
  var $36=IHEAP[$velocities34];
  var $arrayidx35=$36+$34*3;
  var $v36=$arrayidx35;
  var $37=$v36;
  var $38=$vA;
  IHEAP[$37]=IHEAP[$38]; FHEAP[$37]=FHEAP[$38]; ; IHEAP[$37+1]=IHEAP[$38+1]; FHEAP[$37+1]=FHEAP[$38+1]; ;
  var $39=$wA;
  var $m_indexA37=$this1+31;
  var $40=IHEAP[$m_indexA37];
  var $41=$data_addr;
  var $velocities38=$41+7;
  var $42=IHEAP[$velocities38];
  var $arrayidx39=$42+$40*3;
  var $w40=$arrayidx39+2;
  FHEAP[$w40]=$39;
  var $m_indexB41=$this1+32;
  var $43=IHEAP[$m_indexB41];
  var $44=$data_addr;
  var $velocities42=$44+7;
  var $45=IHEAP[$velocities42];
  var $arrayidx43=$45+$43*3;
  var $v44=$arrayidx43;
  var $46=$v44;
  var $47=$vB;
  IHEAP[$46]=IHEAP[$47]; FHEAP[$46]=FHEAP[$47]; ; IHEAP[$46+1]=IHEAP[$47+1]; FHEAP[$46+1]=FHEAP[$47+1]; ;
  var $48=$wB;
  var $m_indexB45=$this1+32;
  var $49=IHEAP[$m_indexB45];
  var $50=$data_addr;
  var $velocities46=$50+7;
  var $51=IHEAP[$velocities46];
  var $arrayidx47=$51+$49*3;
  var $w48=$arrayidx47+2;
  FHEAP[$w48]=$48;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN13b2PulleyJoint24SolveVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZNK13b2PulleyJoint17GetReactionTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  ;
  return 0;
  return null;
}


function __ZN13b2PulleyJointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN13b2PulleyJointD2Ev($this1);
  ;
  return;
  return;
}


function __ZN13b2PulleyJointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN13b2PulleyJointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN13b2PulleyJointD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2JointD2Ev($0);
  ;
  return;
  return;
}


function __ZNK13b2PulleyJoint10GetAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+24;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorA);
  ;
  return;
  return;
}


function __ZNK13b2PulleyJoint10GetAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+26;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorB);
  ;
  return;
  return;
}


function __ZNK13b2PulleyJoint16GetReactionForceEf($agg_result, $this, $inv_dt) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  var $P=__stackBase__;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $m_impulse=$this1+30;
  var $0=FHEAP[$m_impulse];
  var $m_uB=$this1+35;
  __ZmlfRK6b2Vec2($P, $0, $m_uB);
  var $1=$inv_dt_addr;
  __ZmlfRK6b2Vec2($agg_result, $1, $P);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK13b2PulleyJoint16GetGroundAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_groundAnchorA=$this1+18;
  var $0=$agg_result;
  var $1=$m_groundAnchorA;
  IHEAP[$0]=IHEAP[$1]; FHEAP[$0]=FHEAP[$1]; ; IHEAP[$0+1]=IHEAP[$1+1]; FHEAP[$0+1]=FHEAP[$1+1]; ;
  ;
  return;
  return;
}


function __ZNK13b2PulleyJoint16GetGroundAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_groundAnchorB=$this1+20;
  var $0=$agg_result;
  var $1=$m_groundAnchorB;
  IHEAP[$0]=IHEAP[$1]; FHEAP[$0]=FHEAP[$1]; ; IHEAP[$0+1]=IHEAP[$1+1]; FHEAP[$0+1]=FHEAP[$1+1]; ;
  ;
  return;
  return;
}


function __ZNK13b2PulleyJoint8GetRatioEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_ratio=$this1+29;
  var $0=FHEAP[$m_ratio];
  ;
  return $0;
  return null;
}


function __ZN13b2PulleyJoint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $indexA;
  var $indexB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  $indexA=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  $indexB=$5;
  __Z5b2LogPKcz(__str3305, allocate(1, "i32", ALLOC_STACK));
  var $6=$indexA;
  __Z5b2LogPKcz(__str1392, allocate([$6], "i32", ALLOC_STACK));
  var $7=$indexB;
  __Z5b2LogPKcz(__str2393, allocate([$7], "i32", ALLOC_STACK));
  var $8=$this1;
  var $m_collideConnected=$8+16;
  var $9=IHEAP[$m_collideConnected];
  var $tobool=((($9)) & 1);
  var $conv=($tobool);
  __Z5b2LogPKcz(__str3394, allocate([$conv], "i32", ALLOC_STACK));
  var $m_groundAnchorA=$this1+18;
  var $x=$m_groundAnchorA;
  var $10=FHEAP[$x];
  var $conv3=($10);
  var $m_groundAnchorA4=$this1+18;
  var $y=$m_groundAnchorA4+1;
  var $11=FHEAP[$y];
  var $conv5=($11);
  __Z5b2LogPKcz(__str7309, allocate([$conv3,$conv5], "double", ALLOC_STACK));
  var $m_groundAnchorB=$this1+20;
  var $x6=$m_groundAnchorB;
  var $12=FHEAP[$x6];
  var $conv7=($12);
  var $m_groundAnchorB8=$this1+20;
  var $y9=$m_groundAnchorB8+1;
  var $13=FHEAP[$y9];
  var $conv10=($13);
  __Z5b2LogPKcz(__str8310, allocate([$conv7,$conv10], "double", ALLOC_STACK));
  var $m_localAnchorA=$this1+24;
  var $x11=$m_localAnchorA;
  var $14=FHEAP[$x11];
  var $conv12=($14);
  var $m_localAnchorA13=$this1+24;
  var $y14=$m_localAnchorA13+1;
  var $15=FHEAP[$y14];
  var $conv15=($15);
  __Z5b2LogPKcz(__str4395, allocate([$conv12,$conv15], "double", ALLOC_STACK));
  var $m_localAnchorB=$this1+26;
  var $x16=$m_localAnchorB;
  var $16=FHEAP[$x16];
  var $conv17=($16);
  var $m_localAnchorB18=$this1+26;
  var $y19=$m_localAnchorB18+1;
  var $17=FHEAP[$y19];
  var $conv20=($17);
  __Z5b2LogPKcz(__str5396, allocate([$conv17,$conv20], "double", ALLOC_STACK));
  var $m_lengthA=$this1+22;
  var $18=FHEAP[$m_lengthA];
  var $conv21=($18);
  __Z5b2LogPKcz(__str11313, allocate([$conv21], "double", ALLOC_STACK));
  var $m_lengthB=$this1+23;
  var $19=FHEAP[$m_lengthB];
  var $conv22=($19);
  __Z5b2LogPKcz(__str12314, allocate([$conv22], "double", ALLOC_STACK));
  var $m_ratio=$this1+29;
  var $20=FHEAP[$m_ratio];
  var $conv23=($20);
  __Z5b2LogPKcz(__str13315, allocate([$conv23], "double", ALLOC_STACK));
  var $21=$this1;
  var $m_index=$21+14;
  var $22=IHEAP[$m_index];
  __Z5b2LogPKcz(__str12403, allocate([$22], "i32", ALLOC_STACK));
  ;
  return;
  return;
}
__ZN13b2PulleyJoint4DumpEv["X"]=1;

function __ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef($this, $def) {
  ;
  var __label__;

  var $this_addr;
  var $def_addr;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$def_addr;
  var $2=$1;
  __ZN7b2JointC2EPK10b2JointDef($0, $2);
  var $3=$this1;
  IHEAP[$3]=__ZTV15b2RevoluteJoint+2;
  var $m_localAnchorA=$this1+18;
  __ZN6b2Vec2C1Ev($m_localAnchorA);
  var $m_localAnchorB=$this1+20;
  __ZN6b2Vec2C1Ev($m_localAnchorB);
  var $m_impulse=$this1+22;
  __ZN6b2Vec3C1Ev($m_impulse);
  var $m_rA=$this1+35;
  __ZN6b2Vec2C1Ev($m_rA);
  var $m_rB=$this1+37;
  __ZN6b2Vec2C1Ev($m_rB);
  var $m_localCenterA=$this1+39;
  __ZN6b2Vec2C1Ev($m_localCenterA);
  var $m_localCenterB=$this1+41;
  __ZN6b2Vec2C1Ev($m_localCenterB);
  var $m_mass=$this1+47;
  __ZN7b2Mat33C1Ev($m_mass);
  var $m_localAnchorA9=$this1+18;
  var $4=$def_addr;
  var $localAnchorA=$4+5;
  var $5=$m_localAnchorA9;
  var $6=$localAnchorA;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_localAnchorB10=$this1+20;
  var $7=$def_addr;
  var $localAnchorB=$7+7;
  var $8=$m_localAnchorB10;
  var $9=$localAnchorB;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $10=$def_addr;
  var $referenceAngle=$10+9;
  var $11=FHEAP[$referenceAngle];
  var $m_referenceAngle=$this1+30;
  FHEAP[$m_referenceAngle]=$11;
  var $m_impulse11=$this1+22;
  __ZN6b2Vec37SetZeroEv($m_impulse11);
  var $m_motorImpulse=$this1+25;
  FHEAP[$m_motorImpulse]=0;
  var $12=$def_addr;
  var $lowerAngle=$12+11;
  var $13=FHEAP[$lowerAngle];
  var $m_lowerAngle=$this1+31;
  FHEAP[$m_lowerAngle]=$13;
  var $14=$def_addr;
  var $upperAngle=$14+12;
  var $15=FHEAP[$upperAngle];
  var $m_upperAngle=$this1+32;
  FHEAP[$m_upperAngle]=$15;
  var $16=$def_addr;
  var $maxMotorTorque=$16+15;
  var $17=FHEAP[$maxMotorTorque];
  var $m_maxMotorTorque=$this1+27;
  FHEAP[$m_maxMotorTorque]=$17;
  var $18=$def_addr;
  var $motorSpeed=$18+14;
  var $19=FHEAP[$motorSpeed];
  var $m_motorSpeed=$this1+28;
  FHEAP[$m_motorSpeed]=$19;
  var $20=$def_addr;
  var $enableLimit=$20+10;
  var $21=IHEAP[$enableLimit];
  var $tobool=((($21)) & 1);
  var $m_enableLimit=$this1+29;
  var $frombool=($tobool);
  IHEAP[$m_enableLimit]=$frombool;
  var $22=$def_addr;
  var $enableMotor=$22+13;
  var $23=IHEAP[$enableMotor];
  var $tobool13=((($23)) & 1);
  var $m_enableMotor=$this1+26;
  var $frombool14=($tobool13);
  IHEAP[$m_enableMotor]=$frombool14;
  var $m_limitState=$this1+57;
  IHEAP[$m_limitState]=0;
  ;
  return;
  return;
}
__ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef["X"]=1;

function __ZN13b2PulleyJoint24SolvePositionConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 32;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $cB=__stackBase__+2;
  var $aB;
  var $qA=__stackBase__+4;
  var $qB=__stackBase__+6;
  var $rA=__stackBase__+8;
  var $ref_tmp=__stackBase__+10;
  var $rB=__stackBase__+12;
  var $ref_tmp12=__stackBase__+14;
  var $uA=__stackBase__+16;
  var $ref_tmp13=__stackBase__+18;
  var $uB=__stackBase__+20;
  var $ref_tmp14=__stackBase__+22;
  var $lengthA;
  var $lengthB;
  var $ruA;
  var $ruB;
  var $mA;
  var $mB;
  var $mass;
  var $C;
  var $linearError;
  var $impulse;
  var $PA=__stackBase__+24;
  var $PB=__stackBase__+26;
  var $ref_tmp45=__stackBase__+28;
  var $ref_tmp51=__stackBase__+30;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+31;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $positions=$1+6;
  var $2=IHEAP[$positions];
  var $arrayidx=$2+$0*3;
  var $c=$arrayidx;
  var $3=$cA;
  var $4=$c;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+31;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $positions3=$6+6;
  var $7=IHEAP[$positions3];
  var $arrayidx4=$7+$5*3;
  var $a=$arrayidx4+2;
  var $8=FHEAP[$a];
  $aA=$8;
  var $m_indexB=$this1+32;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $positions5=$10+6;
  var $11=IHEAP[$positions5];
  var $arrayidx6=$11+$9*3;
  var $c7=$arrayidx6;
  var $12=$cB;
  var $13=$c7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+32;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $positions9=$15+6;
  var $16=IHEAP[$positions9];
  var $arrayidx10=$16+$14*3;
  var $a11=$arrayidx10+2;
  var $17=FHEAP[$a11];
  $aB=$17;
  var $18=$aA;
  __ZN5b2RotC1Ef($qA, $18);
  var $19=$aB;
  __ZN5b2RotC1Ef($qB, $19);
  var $m_localAnchorA=$this1+24;
  var $m_localCenterA=$this1+41;
  __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorA, $m_localCenterA);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp);
  var $m_localAnchorB=$this1+26;
  var $m_localCenterB=$this1+43;
  __ZmiRK6b2Vec2S1_($ref_tmp12, $m_localAnchorB, $m_localCenterB);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp12);
  __ZplRK6b2Vec2S1_($ref_tmp13, $cA, $rA);
  var $m_groundAnchorA=$this1+18;
  __ZmiRK6b2Vec2S1_($uA, $ref_tmp13, $m_groundAnchorA);
  __ZplRK6b2Vec2S1_($ref_tmp14, $cB, $rB);
  var $m_groundAnchorB=$this1+20;
  __ZmiRK6b2Vec2S1_($uB, $ref_tmp14, $m_groundAnchorB);
  var $call=__ZNK6b2Vec26LengthEv($uA);
  $lengthA=$call;
  var $call15=__ZNK6b2Vec26LengthEv($uB);
  $lengthB=$call15;
  var $20=$lengthA;
  var $cmp=($20) > 0.04999999701976776;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_else$2: do { 
    if (__label__ == 1) {

      var $21=$lengthA;
      var $div=1/($21);
      __ZN6b2Vec2mLEf($uA, $div);
      ;
    }
    else if (__label__ == 2) {

      __ZN6b2Vec27SetZeroEv($uA);
      ;
    }
  } while(0);

  var $22=$lengthB;
  var $cmp16=($22) > 0.04999999701976776;
  if ($cmp16) { __label__ = 4;; } else { __label__ = 5;; }
  $if_then17$$if_else19$6: do { 
    if (__label__ == 4) {

      var $23=$lengthB;
      var $div18=1/($23);
      __ZN6b2Vec2mLEf($uB, $div18);
      ;
    }
    else if (__label__ == 5) {

      __ZN6b2Vec27SetZeroEv($uB);
      ;
    }
  } while(0);

  var $call21=__Z7b2CrossRK6b2Vec2S1_($rA, $uA);
  $ruA=$call21;
  var $call22=__Z7b2CrossRK6b2Vec2S1_($rB, $uB);
  $ruB=$call22;
  var $m_invMassA=$this1+45;
  var $24=FHEAP[$m_invMassA];
  var $m_invIA=$this1+47;
  var $25=FHEAP[$m_invIA];
  var $26=$ruA;
  var $mul=($25)*($26);
  var $27=$ruA;
  var $mul23=($mul)*($27);
  var $add=($24)+($mul23);
  $mA=$add;
  var $m_invMassB=$this1+46;
  var $28=FHEAP[$m_invMassB];
  var $m_invIB=$this1+48;
  var $29=FHEAP[$m_invIB];
  var $30=$ruB;
  var $mul24=($29)*($30);
  var $31=$ruB;
  var $mul25=($mul24)*($31);
  var $add26=($28)+($mul25);
  $mB=$add26;
  var $32=$mA;
  var $m_ratio=$this1+29;
  var $33=FHEAP[$m_ratio];
  var $m_ratio27=$this1+29;
  var $34=FHEAP[$m_ratio27];
  var $mul28=($33)*($34);
  var $35=$mB;
  var $mul29=($mul28)*($35);
  var $add30=($32)+($mul29);
  $mass=$add30;
  var $cmp31=($add30) > 0;
  if ($cmp31) { __label__ = 7;; } else { __label__ = 8;; }
  $if_then32$$if_end34$10: do { 
    if (__label__ == 7) {

      var $36=$mass;
      var $div33=1/($36);
      $mass=$div33;
      ;
    }
  } while(0);

  var $m_constant=$this1+28;
  var $37=FHEAP[$m_constant];
  var $38=$lengthA;
  var $sub=($37)-($38);
  var $m_ratio35=$this1+29;
  var $39=FHEAP[$m_ratio35];
  var $40=$lengthB;
  var $mul36=($39)*($40);
  var $sub37=($sub)-($mul36);
  $C=$sub37;
  var $41=$C;
  var $call38=__Z5b2AbsIfET_S0_($41);
  $linearError=$call38;
  var $42=$mass;
  var $sub39=(-($42));
  var $43=$C;
  var $mul40=($sub39)*($43);
  $impulse=$mul40;
  var $44=$impulse;
  var $sub41=(-($44));
  __ZmlfRK6b2Vec2($PA, $sub41, $uA);
  var $m_ratio42=$this1+29;
  var $45=FHEAP[$m_ratio42];
  var $sub43=(-($45));
  var $46=$impulse;
  var $mul44=($sub43)*($46);
  __ZmlfRK6b2Vec2($PB, $mul44, $uB);
  var $m_invMassA46=$this1+45;
  var $47=FHEAP[$m_invMassA46];
  __ZmlfRK6b2Vec2($ref_tmp45, $47, $PA);
  __ZN6b2Vec2pLERKS_($cA, $ref_tmp45);
  var $m_invIA47=$this1+47;
  var $48=FHEAP[$m_invIA47];
  var $call48=__Z7b2CrossRK6b2Vec2S1_($rA, $PA);
  var $mul49=($48)*($call48);
  var $49=$aA;
  var $add50=($49)+($mul49);
  $aA=$add50;
  var $m_invMassB52=$this1+46;
  var $50=FHEAP[$m_invMassB52];
  __ZmlfRK6b2Vec2($ref_tmp51, $50, $PB);
  __ZN6b2Vec2pLERKS_($cB, $ref_tmp51);
  var $m_invIB53=$this1+48;
  var $51=FHEAP[$m_invIB53];
  var $call54=__Z7b2CrossRK6b2Vec2S1_($rB, $PB);
  var $mul55=($51)*($call54);
  var $52=$aB;
  var $add56=($52)+($mul55);
  $aB=$add56;
  var $m_indexA57=$this1+31;
  var $53=IHEAP[$m_indexA57];
  var $54=$data_addr;
  var $positions58=$54+6;
  var $55=IHEAP[$positions58];
  var $arrayidx59=$55+$53*3;
  var $c60=$arrayidx59;
  var $56=$c60;
  var $57=$cA;
  IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
  var $58=$aA;
  var $m_indexA61=$this1+31;
  var $59=IHEAP[$m_indexA61];
  var $60=$data_addr;
  var $positions62=$60+6;
  var $61=IHEAP[$positions62];
  var $arrayidx63=$61+$59*3;
  var $a64=$arrayidx63+2;
  FHEAP[$a64]=$58;
  var $m_indexB65=$this1+32;
  var $62=IHEAP[$m_indexB65];
  var $63=$data_addr;
  var $positions66=$63+6;
  var $64=IHEAP[$positions66];
  var $arrayidx67=$64+$62*3;
  var $c68=$arrayidx67;
  var $65=$c68;
  var $66=$cB;
  IHEAP[$65]=IHEAP[$66]; FHEAP[$65]=FHEAP[$66]; ; IHEAP[$65+1]=IHEAP[$66+1]; FHEAP[$65+1]=FHEAP[$66+1]; ;
  var $67=$aB;
  var $m_indexB69=$this1+32;
  var $68=IHEAP[$m_indexB69];
  var $69=$data_addr;
  var $positions70=$69+6;
  var $70=IHEAP[$positions70];
  var $arrayidx71=$70+$68*3;
  var $a72=$arrayidx71+2;
  FHEAP[$a72]=$67;
  var $71=$linearError;
  var $cmp73=($71) < 0.004999999888241291;
  STACKTOP = __stackBase__;
  return $cmp73;
  return null;
}
__ZN13b2PulleyJoint24SolvePositionConstraintsERK12b2SolverData["X"]=1;

function __ZNK13b2PulleyJoint10GetLengthAEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $p=__stackBase__;
  var $s=__stackBase__+2;
  var $d=__stackBase__+4;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+24;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($p, $1, $m_localAnchorA);
  var $m_groundAnchorA=$this1+18;
  var $2=$s;
  var $3=$m_groundAnchorA;
  IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
  __ZmiRK6b2Vec2S1_($d, $p, $s);
  var $call=__ZNK6b2Vec26LengthEv($d);
  STACKTOP = __stackBase__;
  return $call;
  return null;
}


function __ZNK13b2PulleyJoint10GetLengthBEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $p=__stackBase__;
  var $s=__stackBase__+2;
  var $d=__stackBase__+4;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+26;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($p, $1, $m_localAnchorB);
  var $m_groundAnchorB=$this1+20;
  var $2=$s;
  var $3=$m_groundAnchorB;
  IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
  __ZmiRK6b2Vec2S1_($d, $p, $s);
  var $call=__ZNK6b2Vec26LengthEv($d);
  STACKTOP = __stackBase__;
  return $call;
  return null;
}


function __ZN18b2RevoluteJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($this, $bA, $bB, $anchor) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $bA_addr;
  var $bB_addr;
  var $anchor_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp3=__stackBase__+2;
  $this_addr=$this;
  $bA_addr=$bA;
  $bB_addr=$bB;
  $anchor_addr=$anchor;
  var $this1=$this_addr;
  var $0=$bA_addr;
  var $1=$this1;
  var $bodyA=$1+2;
  IHEAP[$bodyA]=$0;
  var $2=$bB_addr;
  var $3=$this1;
  var $bodyB=$3+3;
  IHEAP[$bodyB]=$2;
  var $localAnchorA=$this1+5;
  var $4=$this1;
  var $bodyA2=$4+2;
  var $5=IHEAP[$bodyA2];
  var $6=$anchor_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp, $5, $6);
  var $7=$localAnchorA;
  var $8=$ref_tmp;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
  var $localAnchorB=$this1+7;
  var $9=$this1;
  var $bodyB4=$9+3;
  var $10=IHEAP[$bodyB4];
  var $11=$anchor_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp3, $10, $11);
  var $12=$localAnchorB;
  var $13=$ref_tmp3;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$this1;
  var $bodyB5=$14+3;
  var $15=IHEAP[$bodyB5];
  var $call=__ZNK6b2Body8GetAngleEv($15);
  var $16=$this1;
  var $bodyA6=$16+2;
  var $17=IHEAP[$bodyA6];
  var $call7=__ZNK6b2Body8GetAngleEv($17);
  var $sub=($call)-($call7);
  var $referenceAngle=$this1+9;
  FHEAP[$referenceAngle]=$sub;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN15b2RevoluteJoint23InitVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 26;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $vA=__stackBase__+2;
  var $wA;
  var $cB=__stackBase__+4;
  var $aB;
  var $vB=__stackBase__+6;
  var $wB;
  var $qA=__stackBase__+8;
  var $qB=__stackBase__+10;
  var $ref_tmp=__stackBase__+12;
  var $ref_tmp38=__stackBase__+14;
  var $ref_tmp40=__stackBase__+16;
  var $ref_tmp41=__stackBase__+18;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $fixedRotation;
  var $jointAngle;
  var $P=__stackBase__+20;
  var $ref_tmp195=__stackBase__+22;
  var $ref_tmp205=__stackBase__+24;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  var $m_indexA=$this1+33;
  IHEAP[$m_indexA]=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  var $m_indexB=$this1+34;
  IHEAP[$m_indexB]=$5;
  var $m_localCenterA=$this1+39;
  var $6=$this1;
  var $m_bodyA3=$6+12;
  var $7=IHEAP[$m_bodyA3];
  var $m_sweep=$7+7;
  var $localCenter=$m_sweep;
  var $8=$m_localCenterA;
  var $9=$localCenter;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localCenterB=$this1+41;
  var $10=$this1;
  var $m_bodyB4=$10+13;
  var $11=IHEAP[$m_bodyB4];
  var $m_sweep5=$11+7;
  var $localCenter6=$m_sweep5;
  var $12=$m_localCenterB;
  var $13=$localCenter6;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$this1;
  var $m_bodyA7=$14+12;
  var $15=IHEAP[$m_bodyA7];
  var $m_invMass=$15+30;
  var $16=FHEAP[$m_invMass];
  var $m_invMassA=$this1+43;
  FHEAP[$m_invMassA]=$16;
  var $17=$this1;
  var $m_bodyB8=$17+13;
  var $18=IHEAP[$m_bodyB8];
  var $m_invMass9=$18+30;
  var $19=FHEAP[$m_invMass9];
  var $m_invMassB=$this1+44;
  FHEAP[$m_invMassB]=$19;
  var $20=$this1;
  var $m_bodyA10=$20+12;
  var $21=IHEAP[$m_bodyA10];
  var $m_invI=$21+32;
  var $22=FHEAP[$m_invI];
  var $m_invIA=$this1+45;
  FHEAP[$m_invIA]=$22;
  var $23=$this1;
  var $m_bodyB11=$23+13;
  var $24=IHEAP[$m_bodyB11];
  var $m_invI12=$24+32;
  var $25=FHEAP[$m_invI12];
  var $m_invIB=$this1+46;
  FHEAP[$m_invIB]=$25;
  var $m_indexA13=$this1+33;
  var $26=IHEAP[$m_indexA13];
  var $27=$data_addr;
  var $positions=$27+6;
  var $28=IHEAP[$positions];
  var $arrayidx=$28+$26*3;
  var $c=$arrayidx;
  var $29=$cA;
  var $30=$c;
  IHEAP[$29]=IHEAP[$30]; FHEAP[$29]=FHEAP[$30]; ; IHEAP[$29+1]=IHEAP[$30+1]; FHEAP[$29+1]=FHEAP[$30+1]; ;
  var $m_indexA14=$this1+33;
  var $31=IHEAP[$m_indexA14];
  var $32=$data_addr;
  var $positions15=$32+6;
  var $33=IHEAP[$positions15];
  var $arrayidx16=$33+$31*3;
  var $a=$arrayidx16+2;
  var $34=FHEAP[$a];
  $aA=$34;
  var $m_indexA17=$this1+33;
  var $35=IHEAP[$m_indexA17];
  var $36=$data_addr;
  var $velocities=$36+7;
  var $37=IHEAP[$velocities];
  var $arrayidx18=$37+$35*3;
  var $v=$arrayidx18;
  var $38=$vA;
  var $39=$v;
  IHEAP[$38]=IHEAP[$39]; FHEAP[$38]=FHEAP[$39]; ; IHEAP[$38+1]=IHEAP[$39+1]; FHEAP[$38+1]=FHEAP[$39+1]; ;
  var $m_indexA19=$this1+33;
  var $40=IHEAP[$m_indexA19];
  var $41=$data_addr;
  var $velocities20=$41+7;
  var $42=IHEAP[$velocities20];
  var $arrayidx21=$42+$40*3;
  var $w=$arrayidx21+2;
  var $43=FHEAP[$w];
  $wA=$43;
  var $m_indexB22=$this1+34;
  var $44=IHEAP[$m_indexB22];
  var $45=$data_addr;
  var $positions23=$45+6;
  var $46=IHEAP[$positions23];
  var $arrayidx24=$46+$44*3;
  var $c25=$arrayidx24;
  var $47=$cB;
  var $48=$c25;
  IHEAP[$47]=IHEAP[$48]; FHEAP[$47]=FHEAP[$48]; ; IHEAP[$47+1]=IHEAP[$48+1]; FHEAP[$47+1]=FHEAP[$48+1]; ;
  var $m_indexB26=$this1+34;
  var $49=IHEAP[$m_indexB26];
  var $50=$data_addr;
  var $positions27=$50+6;
  var $51=IHEAP[$positions27];
  var $arrayidx28=$51+$49*3;
  var $a29=$arrayidx28+2;
  var $52=FHEAP[$a29];
  $aB=$52;
  var $m_indexB30=$this1+34;
  var $53=IHEAP[$m_indexB30];
  var $54=$data_addr;
  var $velocities31=$54+7;
  var $55=IHEAP[$velocities31];
  var $arrayidx32=$55+$53*3;
  var $v33=$arrayidx32;
  var $56=$vB;
  var $57=$v33;
  IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
  var $m_indexB34=$this1+34;
  var $58=IHEAP[$m_indexB34];
  var $59=$data_addr;
  var $velocities35=$59+7;
  var $60=IHEAP[$velocities35];
  var $arrayidx36=$60+$58*3;
  var $w37=$arrayidx36+2;
  var $61=FHEAP[$w37];
  $wB=$61;
  var $62=$aA;
  __ZN5b2RotC1Ef($qA, $62);
  var $63=$aB;
  __ZN5b2RotC1Ef($qB, $63);
  var $m_rA=$this1+35;
  var $m_localAnchorA=$this1+18;
  var $m_localCenterA39=$this1+39;
  __ZmiRK6b2Vec2S1_($ref_tmp38, $m_localAnchorA, $m_localCenterA39);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $qA, $ref_tmp38);
  var $64=$m_rA;
  var $65=$ref_tmp;
  IHEAP[$64]=IHEAP[$65]; FHEAP[$64]=FHEAP[$65]; ; IHEAP[$64+1]=IHEAP[$65+1]; FHEAP[$64+1]=FHEAP[$65+1]; ;
  var $m_rB=$this1+37;
  var $m_localAnchorB=$this1+20;
  var $m_localCenterB42=$this1+41;
  __ZmiRK6b2Vec2S1_($ref_tmp41, $m_localAnchorB, $m_localCenterB42);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp40, $qB, $ref_tmp41);
  var $66=$m_rB;
  var $67=$ref_tmp40;
  IHEAP[$66]=IHEAP[$67]; FHEAP[$66]=FHEAP[$67]; ; IHEAP[$66+1]=IHEAP[$67+1]; FHEAP[$66+1]=FHEAP[$67+1]; ;
  var $m_invMassA43=$this1+43;
  var $68=FHEAP[$m_invMassA43];
  $mA=$68;
  var $m_invMassB44=$this1+44;
  var $69=FHEAP[$m_invMassB44];
  $mB=$69;
  var $m_invIA45=$this1+45;
  var $70=FHEAP[$m_invIA45];
  $iA=$70;
  var $m_invIB46=$this1+46;
  var $71=FHEAP[$m_invIB46];
  $iB=$71;
  var $72=$iA;
  var $73=$iB;
  var $add=($72)+($73);
  var $cmp=($add) == 0;
  var $frombool=($cmp);
  $fixedRotation=$frombool;
  var $74=$mA;
  var $75=$mB;
  var $add47=($74)+($75);
  var $m_rA48=$this1+35;
  var $y=$m_rA48+1;
  var $76=FHEAP[$y];
  var $m_rA49=$this1+35;
  var $y50=$m_rA49+1;
  var $77=FHEAP[$y50];
  var $mul=($76)*($77);
  var $78=$iA;
  var $mul51=($mul)*($78);
  var $add52=($add47)+($mul51);
  var $m_rB53=$this1+37;
  var $y54=$m_rB53+1;
  var $79=FHEAP[$y54];
  var $m_rB55=$this1+37;
  var $y56=$m_rB55+1;
  var $80=FHEAP[$y56];
  var $mul57=($79)*($80);
  var $81=$iB;
  var $mul58=($mul57)*($81);
  var $add59=($add52)+($mul58);
  var $m_mass=$this1+47;
  var $ex=$m_mass;
  var $x=$ex;
  FHEAP[$x]=$add59;
  var $m_rA60=$this1+35;
  var $y61=$m_rA60+1;
  var $82=FHEAP[$y61];
  var $sub=(-($82));
  var $m_rA62=$this1+35;
  var $x63=$m_rA62;
  var $83=FHEAP[$x63];
  var $mul64=($sub)*($83);
  var $84=$iA;
  var $mul65=($mul64)*($84);
  var $m_rB66=$this1+37;
  var $y67=$m_rB66+1;
  var $85=FHEAP[$y67];
  var $m_rB68=$this1+37;
  var $x69=$m_rB68;
  var $86=FHEAP[$x69];
  var $mul70=($85)*($86);
  var $87=$iB;
  var $mul71=($mul70)*($87);
  var $sub72=($mul65)-($mul71);
  var $m_mass73=$this1+47;
  var $ey=$m_mass73+3;
  var $x74=$ey;
  FHEAP[$x74]=$sub72;
  var $m_rA75=$this1+35;
  var $y76=$m_rA75+1;
  var $88=FHEAP[$y76];
  var $sub77=(-($88));
  var $89=$iA;
  var $mul78=($sub77)*($89);
  var $m_rB79=$this1+37;
  var $y80=$m_rB79+1;
  var $90=FHEAP[$y80];
  var $91=$iB;
  var $mul81=($90)*($91);
  var $sub82=($mul78)-($mul81);
  var $m_mass83=$this1+47;
  var $ez=$m_mass83+6;
  var $x84=$ez;
  FHEAP[$x84]=$sub82;
  var $m_mass85=$this1+47;
  var $ey86=$m_mass85+3;
  var $x87=$ey86;
  var $92=FHEAP[$x87];
  var $m_mass88=$this1+47;
  var $ex89=$m_mass88;
  var $y90=$ex89+1;
  FHEAP[$y90]=$92;
  var $93=$mA;
  var $94=$mB;
  var $add91=($93)+($94);
  var $m_rA92=$this1+35;
  var $x93=$m_rA92;
  var $95=FHEAP[$x93];
  var $m_rA94=$this1+35;
  var $x95=$m_rA94;
  var $96=FHEAP[$x95];
  var $mul96=($95)*($96);
  var $97=$iA;
  var $mul97=($mul96)*($97);
  var $add98=($add91)+($mul97);
  var $m_rB99=$this1+37;
  var $x100=$m_rB99;
  var $98=FHEAP[$x100];
  var $m_rB101=$this1+37;
  var $x102=$m_rB101;
  var $99=FHEAP[$x102];
  var $mul103=($98)*($99);
  var $100=$iB;
  var $mul104=($mul103)*($100);
  var $add105=($add98)+($mul104);
  var $m_mass106=$this1+47;
  var $ey107=$m_mass106+3;
  var $y108=$ey107+1;
  FHEAP[$y108]=$add105;
  var $m_rA109=$this1+35;
  var $x110=$m_rA109;
  var $101=FHEAP[$x110];
  var $102=$iA;
  var $mul111=($101)*($102);
  var $m_rB112=$this1+37;
  var $x113=$m_rB112;
  var $103=FHEAP[$x113];
  var $104=$iB;
  var $mul114=($103)*($104);
  var $add115=($mul111)+($mul114);
  var $m_mass116=$this1+47;
  var $ez117=$m_mass116+6;
  var $y118=$ez117+1;
  FHEAP[$y118]=$add115;
  var $m_mass119=$this1+47;
  var $ez120=$m_mass119+6;
  var $x121=$ez120;
  var $105=FHEAP[$x121];
  var $m_mass122=$this1+47;
  var $ex123=$m_mass122;
  var $z=$ex123+2;
  FHEAP[$z]=$105;
  var $m_mass124=$this1+47;
  var $ez125=$m_mass124+6;
  var $y126=$ez125+1;
  var $106=FHEAP[$y126];
  var $m_mass127=$this1+47;
  var $ey128=$m_mass127+3;
  var $z129=$ey128+2;
  FHEAP[$z129]=$106;
  var $107=$iA;
  var $108=$iB;
  var $add130=($107)+($108);
  var $m_mass131=$this1+47;
  var $ez132=$m_mass131+6;
  var $z133=$ez132+2;
  FHEAP[$z133]=$add130;
  var $109=$iA;
  var $110=$iB;
  var $add134=($109)+($110);
  var $m_motorMass=$this1+56;
  FHEAP[$m_motorMass]=$add134;
  var $m_motorMass135=$this1+56;
  var $111=FHEAP[$m_motorMass135];
  var $cmp136=($111) > 0;
  if ($cmp136) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$2: do { 
    if (__label__ == 1) {

      var $m_motorMass137=$this1+56;
      var $112=FHEAP[$m_motorMass137];
      var $div=1/($112);
      var $m_motorMass138=$this1+56;
      FHEAP[$m_motorMass138]=$div;
      ;
    }
  } while(0);

  var $m_enableMotor=$this1+26;
  var $113=IHEAP[$m_enableMotor];
  var $tobool=((($113)) & 1);
  var $conv=($tobool);
  var $cmp139=($conv)==0;
  if ($cmp139) { __label__ = 4;; } else { __label__ = 3;; }
  $if_then141$$lor_lhs_false$5: do { 
    if (__label__ == 3) {

      var $114=$fixedRotation;
      var $tobool140=((($114)) & 1);
      if ($tobool140) { __label__ = 4;break $if_then141$$lor_lhs_false$5; } else { __label__ = 5;break $if_then141$$lor_lhs_false$5; }
    }
  } while(0);
  $if_then141$$if_end142$7: do { 
    if (__label__ == 4) {

      var $m_motorImpulse=$this1+25;
      FHEAP[$m_motorImpulse]=0;
      ;
    }
  } while(0);

  var $m_enableLimit=$this1+29;
  var $115=IHEAP[$m_enableLimit];
  var $tobool143=((($115)) & 1);
  if ($tobool143) { __label__ = 6;; } else { __label__ = 18;; }
  $land_lhs_true$$if_else180$10: do { 
    if (__label__ == 6) {

      var $116=$fixedRotation;
      var $tobool144=((($116)) & 1);
      var $conv145=($tobool144);
      var $cmp146=($conv145)==0;
      if (!($cmp146)) { __label__ = 18;break $land_lhs_true$$if_else180$10; }

      var $117=$aB;
      var $118=$aA;
      var $sub148=($117)-($118);
      var $m_referenceAngle=$this1+30;
      var $119=FHEAP[$m_referenceAngle];
      var $sub149=($sub148)-($119);
      $jointAngle=$sub149;
      var $m_upperAngle=$this1+32;
      var $120=FHEAP[$m_upperAngle];
      var $m_lowerAngle=$this1+31;
      var $121=FHEAP[$m_lowerAngle];
      var $sub150=($120)-($121);
      var $call=__Z5b2AbsIfET_S0_($sub150);
      var $cmp151=($call) < 0.06981317698955536;
      if ($cmp151) { __label__ = 8;; } else { __label__ = 9;; }
      $if_then152$$if_else$13: do { 
        if (__label__ == 8) {

          var $m_limitState=$this1+57;
          IHEAP[$m_limitState]=3;
          __label__ = 19;break $land_lhs_true$$if_else180$10;
        }
        else if (__label__ == 9) {

          var $122=$jointAngle;
          var $m_lowerAngle153=$this1+31;
          var $123=FHEAP[$m_lowerAngle153];
          var $cmp154=($122) <= ($123);
          if ($cmp154) { __label__ = 10;; } else { __label__ = 13;; }
          $if_then155$$if_else162$16: do { 
            if (__label__ == 10) {

              var $m_limitState156=$this1+57;
              var $124=IHEAP[$m_limitState156];
              var $cmp157=($124)!=1;
              if ($cmp157) { __label__ = 11;; } else { __label__ = 12;; }
              $if_then158$$if_end160$18: do { 
                if (__label__ == 11) {

                  var $m_impulse=$this1+22;
                  var $z159=$m_impulse+2;
                  FHEAP[$z159]=0;
                  ;
                }
              } while(0);

              var $m_limitState161=$this1+57;
              IHEAP[$m_limitState161]=1;
              __label__ = 19;break $land_lhs_true$$if_else180$10;
            }
            else if (__label__ == 13) {

              var $125=$jointAngle;
              var $m_upperAngle163=$this1+32;
              var $126=FHEAP[$m_upperAngle163];
              var $cmp164=($125) >= ($126);
              var $m_limitState166=$this1+57;
              if ($cmp164) { __label__ = 14;; } else { __label__ = 17;; }
              $if_then165$$if_else173$22: do { 
                if (__label__ == 14) {

                  var $127=IHEAP[$m_limitState166];
                  var $cmp167=($127)!=2;
                  if ($cmp167) { __label__ = 15;; } else { __label__ = 16;; }
                  $if_then168$$if_end171$24: do { 
                    if (__label__ == 15) {

                      var $m_impulse169=$this1+22;
                      var $z170=$m_impulse169+2;
                      FHEAP[$z170]=0;
                      ;
                    }
                  } while(0);

                  var $m_limitState172=$this1+57;
                  IHEAP[$m_limitState172]=2;
                  __label__ = 19;break $land_lhs_true$$if_else180$10;
                }
                else if (__label__ == 17) {

                  IHEAP[$m_limitState166]=0;
                  var $m_impulse175=$this1+22;
                  var $z176=$m_impulse175+2;
                  FHEAP[$z176]=0;
                  __label__ = 19;break $land_lhs_true$$if_else180$10;
                }
              } while(0);
            }
          } while(0);
        }
      } while(0);
    }
  } while(0);
  $if_end182$$if_else180$28: do { 
    if (__label__ == 18) {

      var $m_limitState181=$this1+57;
      IHEAP[$m_limitState181]=0;
      ;
    }
  } while(0);

  var $128=$data_addr;
  var $step=$128;
  var $warmStarting=$step+5;
  var $129=IHEAP[$warmStarting];
  var $tobool183=((($129)) & 1);
  var $m_impulse185=$this1+22;
  if ($tobool183) { __label__ = 20;; } else { __label__ = 21;; }
  $if_then184$$if_else215$31: do { 
    if (__label__ == 20) {

      var $130=$data_addr;
      var $step186=$130;
      var $dtRatio=$step186+2;
      var $131=FHEAP[$dtRatio];
      __ZN6b2Vec3mLEf($m_impulse185, $131);
      var $132=$data_addr;
      var $step187=$132;
      var $dtRatio188=$step187+2;
      var $133=FHEAP[$dtRatio188];
      var $m_motorImpulse189=$this1+25;
      var $134=FHEAP[$m_motorImpulse189];
      var $mul190=($134)*($133);
      FHEAP[$m_motorImpulse189]=$mul190;
      var $m_impulse191=$this1+22;
      var $x192=$m_impulse191;
      var $135=FHEAP[$x192];
      var $m_impulse193=$this1+22;
      var $y194=$m_impulse193+1;
      var $136=FHEAP[$y194];
      __ZN6b2Vec2C1Eff($P, $135, $136);
      var $137=$mA;
      __ZmlfRK6b2Vec2($ref_tmp195, $137, $P);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp195);
      var $138=$iA;
      var $m_rA196=$this1+35;
      var $call197=__Z7b2CrossRK6b2Vec2S1_($m_rA196, $P);
      var $m_motorImpulse198=$this1+25;
      var $139=FHEAP[$m_motorImpulse198];
      var $add199=($call197)+($139);
      var $m_impulse200=$this1+22;
      var $z201=$m_impulse200+2;
      var $140=FHEAP[$z201];
      var $add202=($add199)+($140);
      var $mul203=($138)*($add202);
      var $141=$wA;
      var $sub204=($141)-($mul203);
      $wA=$sub204;
      var $142=$mB;
      __ZmlfRK6b2Vec2($ref_tmp205, $142, $P);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp205);
      var $143=$iB;
      var $m_rB206=$this1+37;
      var $call207=__Z7b2CrossRK6b2Vec2S1_($m_rB206, $P);
      var $m_motorImpulse208=$this1+25;
      var $144=FHEAP[$m_motorImpulse208];
      var $add209=($call207)+($144);
      var $m_impulse210=$this1+22;
      var $z211=$m_impulse210+2;
      var $145=FHEAP[$z211];
      var $add212=($add209)+($145);
      var $mul213=($143)*($add212);
      var $146=$wB;
      var $add214=($146)+($mul213);
      $wB=$add214;
      ;
    }
    else if (__label__ == 21) {

      __ZN6b2Vec37SetZeroEv($m_impulse185);
      var $m_motorImpulse217=$this1+25;
      FHEAP[$m_motorImpulse217]=0;
      ;
    }
  } while(0);

  var $m_indexA219=$this1+33;
  var $147=IHEAP[$m_indexA219];
  var $148=$data_addr;
  var $velocities220=$148+7;
  var $149=IHEAP[$velocities220];
  var $arrayidx221=$149+$147*3;
  var $v222=$arrayidx221;
  var $150=$v222;
  var $151=$vA;
  IHEAP[$150]=IHEAP[$151]; FHEAP[$150]=FHEAP[$151]; ; IHEAP[$150+1]=IHEAP[$151+1]; FHEAP[$150+1]=FHEAP[$151+1]; ;
  var $152=$wA;
  var $m_indexA223=$this1+33;
  var $153=IHEAP[$m_indexA223];
  var $154=$data_addr;
  var $velocities224=$154+7;
  var $155=IHEAP[$velocities224];
  var $arrayidx225=$155+$153*3;
  var $w226=$arrayidx225+2;
  FHEAP[$w226]=$152;
  var $m_indexB227=$this1+34;
  var $156=IHEAP[$m_indexB227];
  var $157=$data_addr;
  var $velocities228=$157+7;
  var $158=IHEAP[$velocities228];
  var $arrayidx229=$158+$156*3;
  var $v230=$arrayidx229;
  var $159=$v230;
  var $160=$vB;
  IHEAP[$159]=IHEAP[$160]; FHEAP[$159]=FHEAP[$160]; ; IHEAP[$159+1]=IHEAP[$160+1]; FHEAP[$159+1]=FHEAP[$160+1]; ;
  var $161=$wB;
  var $m_indexB231=$this1+34;
  var $162=IHEAP[$m_indexB231];
  var $163=$data_addr;
  var $velocities232=$163+7;
  var $164=IHEAP[$velocities232];
  var $arrayidx233=$164+$162*3;
  var $w234=$arrayidx233+2;
  FHEAP[$w234]=$161;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2RevoluteJoint23InitVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZNK15b2RevoluteJoint10GetAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+18;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorA);
  ;
  return;
  return;
}


function __ZNK15b2RevoluteJoint10GetAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+20;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorB);
  ;
  return;
  return;
}


function __ZNK15b2RevoluteJoint16GetReactionForceEf($agg_result, $this, $inv_dt) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  var $P=__stackBase__;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $m_impulse=$this1+22;
  var $x=$m_impulse;
  var $0=FHEAP[$x];
  var $m_impulse2=$this1+22;
  var $y=$m_impulse2+1;
  var $1=FHEAP[$y];
  __ZN6b2Vec2C1Eff($P, $0, $1);
  var $2=$inv_dt_addr;
  __ZmlfRK6b2Vec2($agg_result, $2, $P);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK15b2RevoluteJoint17GetReactionTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_impulse=$this1+22;
  var $z=$m_impulse+2;
  var $1=FHEAP[$z];
  var $mul=($0)*($1);
  ;
  return $mul;
  return null;
}


function __ZNK15b2RevoluteJoint13GetJointAngleEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $bA;
  var $bB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  $bA=$1;
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  $bB=$3;
  var $4=$bB;
  var $m_sweep=$4+7;
  var $a=$m_sweep+7;
  var $5=FHEAP[$a];
  var $6=$bA;
  var $m_sweep2=$6+7;
  var $a3=$m_sweep2+7;
  var $7=FHEAP[$a3];
  var $sub=($5)-($7);
  var $m_referenceAngle=$this1+30;
  var $8=FHEAP[$m_referenceAngle];
  var $sub4=($sub)-($8);
  ;
  return $sub4;
  return null;
}


function __ZNK15b2RevoluteJoint13GetJointSpeedEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $bA;
  var $bB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  $bA=$1;
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  $bB=$3;
  var $4=$bB;
  var $m_angularVelocity=$4+18;
  var $5=FHEAP[$m_angularVelocity];
  var $6=$bA;
  var $m_angularVelocity2=$6+18;
  var $7=FHEAP[$m_angularVelocity2];
  var $sub=($5)-($7);
  ;
  return $sub;
  return null;
}


function __ZN15b2RevoluteJoint24SolveVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 67;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $fixedRotation;
  var $Cdot;
  var $impulse;
  var $oldImpulse;
  var $maxImpulse;
  var $Cdot1=__stackBase__+4;
  var $ref_tmp=__stackBase__+6;
  var $ref_tmp38=__stackBase__+8;
  var $ref_tmp39=__stackBase__+10;
  var $ref_tmp40=__stackBase__+12;
  var $Cdot2;
  var $Cdot42=__stackBase__+14;
  var $impulse43=__stackBase__+17;
  var $tmp=__stackBase__+20;
  var $newImpulse;
  var $rhs=__stackBase__+23;
  var $ref_tmp57=__stackBase__+25;
  var $ref_tmp58=__stackBase__+27;
  var $ref_tmp61=__stackBase__+29;
  var $reduced=__stackBase__+31;
  var $newImpulse95;
  var $rhs103=__stackBase__+33;
  var $ref_tmp104=__stackBase__+35;
  var $ref_tmp105=__stackBase__+37;
  var $ref_tmp108=__stackBase__+39;
  var $reduced116=__stackBase__+41;
  var $P=__stackBase__+43;
  var $ref_tmp145=__stackBase__+45;
  var $ref_tmp152=__stackBase__+47;
  var $Cdot161=__stackBase__+49;
  var $ref_tmp162=__stackBase__+51;
  var $ref_tmp163=__stackBase__+53;
  var $ref_tmp164=__stackBase__+55;
  var $ref_tmp166=__stackBase__+57;
  var $impulse169=__stackBase__+59;
  var $ref_tmp171=__stackBase__+61;
  var $ref_tmp180=__stackBase__+63;
  var $ref_tmp185=__stackBase__+65;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+33;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $velocities=$1+7;
  var $2=IHEAP[$velocities];
  var $arrayidx=$2+$0*3;
  var $v=$arrayidx;
  var $3=$vA;
  var $4=$v;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+33;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $velocities3=$6+7;
  var $7=IHEAP[$velocities3];
  var $arrayidx4=$7+$5*3;
  var $w=$arrayidx4+2;
  var $8=FHEAP[$w];
  $wA=$8;
  var $m_indexB=$this1+34;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $velocities5=$10+7;
  var $11=IHEAP[$velocities5];
  var $arrayidx6=$11+$9*3;
  var $v7=$arrayidx6;
  var $12=$vB;
  var $13=$v7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+34;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $velocities9=$15+7;
  var $16=IHEAP[$velocities9];
  var $arrayidx10=$16+$14*3;
  var $w11=$arrayidx10+2;
  var $17=FHEAP[$w11];
  $wB=$17;
  var $m_invMassA=$this1+43;
  var $18=FHEAP[$m_invMassA];
  $mA=$18;
  var $m_invMassB=$this1+44;
  var $19=FHEAP[$m_invMassB];
  $mB=$19;
  var $m_invIA=$this1+45;
  var $20=FHEAP[$m_invIA];
  $iA=$20;
  var $m_invIB=$this1+46;
  var $21=FHEAP[$m_invIB];
  $iB=$21;
  var $22=$iA;
  var $23=$iB;
  var $add=($22)+($23);
  var $cmp=($add) == 0;
  var $frombool=($cmp);
  $fixedRotation=$frombool;
  var $m_enableMotor=$this1+26;
  var $24=IHEAP[$m_enableMotor];
  var $tobool=((($24)) & 1);
  if ($tobool) { __label__ = 1;; } else { __label__ = 4;; }
  $land_lhs_true$$if_end$2: do { 
    if (__label__ == 1) {

      var $m_limitState=$this1+57;
      var $25=IHEAP[$m_limitState];
      var $cmp12=($25)!=3;
      if (!($cmp12)) { __label__ = 4;break $land_lhs_true$$if_end$2; }

      var $26=$fixedRotation;
      var $tobool14=((($26)) & 1);
      var $conv=($tobool14);
      var $cmp15=($conv)==0;
      if (!($cmp15)) { __label__ = 4;break $land_lhs_true$$if_end$2; }

      var $27=$wB;
      var $28=$wA;
      var $sub=($27)-($28);
      var $m_motorSpeed=$this1+28;
      var $29=FHEAP[$m_motorSpeed];
      var $sub16=($sub)-($29);
      $Cdot=$sub16;
      var $m_motorMass=$this1+56;
      var $30=FHEAP[$m_motorMass];
      var $sub17=(-($30));
      var $31=$Cdot;
      var $mul=($sub17)*($31);
      $impulse=$mul;
      var $m_motorImpulse=$this1+25;
      var $32=FHEAP[$m_motorImpulse];
      $oldImpulse=$32;
      var $33=$data_addr;
      var $step=$33;
      var $dt=$step;
      var $34=FHEAP[$dt];
      var $m_maxMotorTorque=$this1+27;
      var $35=FHEAP[$m_maxMotorTorque];
      var $mul18=($34)*($35);
      $maxImpulse=$mul18;
      var $m_motorImpulse19=$this1+25;
      var $36=FHEAP[$m_motorImpulse19];
      var $37=$impulse;
      var $add20=($36)+($37);
      var $38=$maxImpulse;
      var $sub21=(-($38));
      var $39=$maxImpulse;
      var $call=__Z7b2ClampIfET_S0_S0_S0_($add20, $sub21, $39);
      var $m_motorImpulse22=$this1+25;
      FHEAP[$m_motorImpulse22]=$call;
      var $m_motorImpulse23=$this1+25;
      var $40=FHEAP[$m_motorImpulse23];
      var $41=$oldImpulse;
      var $sub24=($40)-($41);
      $impulse=$sub24;
      var $42=$iA;
      var $43=$impulse;
      var $mul25=($42)*($43);
      var $44=$wA;
      var $sub26=($44)-($mul25);
      $wA=$sub26;
      var $45=$iB;
      var $46=$impulse;
      var $mul27=($45)*($46);
      var $47=$wB;
      var $add28=($47)+($mul27);
      $wB=$add28;
      ;
    }
  } while(0);

  var $m_enableLimit=$this1+29;
  var $48=IHEAP[$m_enableLimit];
  var $tobool29=((($48)) & 1);
  if ($tobool29) { __label__ = 5;; } else { __label__ = 18;; }
  $land_lhs_true30$$if_else159$7: do { 
    if (__label__ == 5) {

      var $m_limitState31=$this1+57;
      var $49=IHEAP[$m_limitState31];
      var $cmp32=($49)!=0;
      if (!($cmp32)) { __label__ = 18;break $land_lhs_true30$$if_else159$7; }

      var $50=$fixedRotation;
      var $tobool34=((($50)) & 1);
      var $conv35=($tobool34);
      var $cmp36=($conv35)==0;
      if (!($cmp36)) { __label__ = 18;break $land_lhs_true30$$if_else159$7; }

      var $51=$wB;
      var $m_rB=$this1+37;
      __Z7b2CrossfRK6b2Vec2($ref_tmp39, $51, $m_rB);
      __ZplRK6b2Vec2S1_($ref_tmp38, $vB, $ref_tmp39);
      __ZmiRK6b2Vec2S1_($ref_tmp, $ref_tmp38, $vA);
      var $52=$wA;
      var $m_rA=$this1+35;
      __Z7b2CrossfRK6b2Vec2($ref_tmp40, $52, $m_rA);
      __ZmiRK6b2Vec2S1_($Cdot1, $ref_tmp, $ref_tmp40);
      var $53=$wB;
      var $54=$wA;
      var $sub41=($53)-($54);
      $Cdot2=$sub41;
      var $x=$Cdot1;
      var $55=FHEAP[$x];
      var $y=$Cdot1+1;
      var $56=FHEAP[$y];
      var $57=$Cdot2;
      __ZN6b2Vec3C1Efff($Cdot42, $55, $56, $57);
      var $m_mass=$this1+47;
      __ZNK7b2Mat337Solve33ERK6b2Vec3($tmp, $m_mass, $Cdot42);
      __ZNK6b2Vec3ngEv($impulse43, $tmp);
      var $m_limitState44=$this1+57;
      var $58=IHEAP[$m_limitState44];
      var $cmp45=($58)==3;
      if ($cmp45) { __label__ = 8;; } else { __label__ = 9;; }
      $if_then46$$if_else$11: do { 
        if (__label__ == 8) {

          var $m_impulse=$this1+22;
          __ZN6b2Vec3pLERKS_($m_impulse, $impulse43);
          ;
        }
        else if (__label__ == 9) {

          var $m_limitState47=$this1+57;
          var $59=IHEAP[$m_limitState47];
          var $cmp48=($59)==1;
          if ($cmp48) { __label__ = 10;; } else { __label__ = 13;; }
          $if_then49$$if_else90$14: do { 
            if (__label__ == 10) {

              var $m_impulse51=$this1+22;
              var $z=$m_impulse51+2;
              var $60=FHEAP[$z];
              var $z52=$impulse43+2;
              var $61=FHEAP[$z52];
              var $add53=($60)+($61);
              $newImpulse=$add53;
              var $62=$newImpulse;
              var $cmp54=($62) < 0;
              if ($cmp54) { __label__ = 11;; } else { __label__ = 12;; }
              $if_then55$$if_else87$16: do { 
                if (__label__ == 11) {

                  __ZNK6b2Vec2ngEv($ref_tmp57, $Cdot1);
                  var $m_impulse59=$this1+22;
                  var $z60=$m_impulse59+2;
                  var $63=FHEAP[$z60];
                  var $m_mass62=$this1+47;
                  var $ez=$m_mass62+6;
                  var $x63=$ez;
                  var $64=FHEAP[$x63];
                  var $m_mass64=$this1+47;
                  var $ez65=$m_mass64+6;
                  var $y66=$ez65+1;
                  var $65=FHEAP[$y66];
                  __ZN6b2Vec2C1Eff($ref_tmp61, $64, $65);
                  __ZmlfRK6b2Vec2($ref_tmp58, $63, $ref_tmp61);
                  __ZplRK6b2Vec2S1_($rhs, $ref_tmp57, $ref_tmp58);
                  var $m_mass68=$this1+47;
                  __ZNK7b2Mat337Solve22ERK6b2Vec2($reduced, $m_mass68, $rhs);
                  var $x69=$reduced;
                  var $66=FHEAP[$x69];
                  var $x70=$impulse43;
                  FHEAP[$x70]=$66;
                  var $y71=$reduced+1;
                  var $67=FHEAP[$y71];
                  var $y72=$impulse43+1;
                  FHEAP[$y72]=$67;
                  var $m_impulse73=$this1+22;
                  var $z74=$m_impulse73+2;
                  var $68=FHEAP[$z74];
                  var $sub75=(-($68));
                  var $z76=$impulse43+2;
                  FHEAP[$z76]=$sub75;
                  var $x77=$reduced;
                  var $69=FHEAP[$x77];
                  var $m_impulse78=$this1+22;
                  var $x79=$m_impulse78;
                  var $70=FHEAP[$x79];
                  var $add80=($70)+($69);
                  FHEAP[$x79]=$add80;
                  var $y81=$reduced+1;
                  var $71=FHEAP[$y81];
                  var $m_impulse82=$this1+22;
                  var $y83=$m_impulse82+1;
                  var $72=FHEAP[$y83];
                  var $add84=($72)+($71);
                  FHEAP[$y83]=$add84;
                  var $m_impulse85=$this1+22;
                  var $z86=$m_impulse85+2;
                  FHEAP[$z86]=0;
                  ;
                }
                else if (__label__ == 12) {

                  var $m_impulse88=$this1+22;
                  __ZN6b2Vec3pLERKS_($m_impulse88, $impulse43);
                  ;
                }
              } while(0);
            }
            else if (__label__ == 13) {

              var $m_limitState91=$this1+57;
              var $73=IHEAP[$m_limitState91];
              var $cmp92=($73)==2;
              if (!($cmp92)) { __label__ = 17;break $if_then46$$if_else$11; }

              var $m_impulse96=$this1+22;
              var $z97=$m_impulse96+2;
              var $74=FHEAP[$z97];
              var $z98=$impulse43+2;
              var $75=FHEAP[$z98];
              var $add99=($74)+($75);
              $newImpulse95=$add99;
              var $76=$newImpulse95;
              var $cmp100=($76) > 0;
              if ($cmp100) { __label__ = 15;; } else { __label__ = 16;; }
              $if_then101$$if_else136$21: do { 
                if (__label__ == 15) {

                  __ZNK6b2Vec2ngEv($ref_tmp104, $Cdot1);
                  var $m_impulse106=$this1+22;
                  var $z107=$m_impulse106+2;
                  var $77=FHEAP[$z107];
                  var $m_mass109=$this1+47;
                  var $ez110=$m_mass109+6;
                  var $x111=$ez110;
                  var $78=FHEAP[$x111];
                  var $m_mass112=$this1+47;
                  var $ez113=$m_mass112+6;
                  var $y114=$ez113+1;
                  var $79=FHEAP[$y114];
                  __ZN6b2Vec2C1Eff($ref_tmp108, $78, $79);
                  __ZmlfRK6b2Vec2($ref_tmp105, $77, $ref_tmp108);
                  __ZplRK6b2Vec2S1_($rhs103, $ref_tmp104, $ref_tmp105);
                  var $m_mass117=$this1+47;
                  __ZNK7b2Mat337Solve22ERK6b2Vec2($reduced116, $m_mass117, $rhs103);
                  var $x118=$reduced116;
                  var $80=FHEAP[$x118];
                  var $x119=$impulse43;
                  FHEAP[$x119]=$80;
                  var $y120=$reduced116+1;
                  var $81=FHEAP[$y120];
                  var $y121=$impulse43+1;
                  FHEAP[$y121]=$81;
                  var $m_impulse122=$this1+22;
                  var $z123=$m_impulse122+2;
                  var $82=FHEAP[$z123];
                  var $sub124=(-($82));
                  var $z125=$impulse43+2;
                  FHEAP[$z125]=$sub124;
                  var $x126=$reduced116;
                  var $83=FHEAP[$x126];
                  var $m_impulse127=$this1+22;
                  var $x128=$m_impulse127;
                  var $84=FHEAP[$x128];
                  var $add129=($84)+($83);
                  FHEAP[$x128]=$add129;
                  var $y130=$reduced116+1;
                  var $85=FHEAP[$y130];
                  var $m_impulse131=$this1+22;
                  var $y132=$m_impulse131+1;
                  var $86=FHEAP[$y132];
                  var $add133=($86)+($85);
                  FHEAP[$y132]=$add133;
                  var $m_impulse134=$this1+22;
                  var $z135=$m_impulse134+2;
                  FHEAP[$z135]=0;
                  ;
                }
                else if (__label__ == 16) {

                  var $m_impulse137=$this1+22;
                  __ZN6b2Vec3pLERKS_($m_impulse137, $impulse43);
                  ;
                }
              } while(0);
            }
          } while(0);
        }
      } while(0);

      var $x143=$impulse43;
      var $87=FHEAP[$x143];
      var $y144=$impulse43+1;
      var $88=FHEAP[$y144];
      __ZN6b2Vec2C1Eff($P, $87, $88);
      var $89=$mA;
      __ZmlfRK6b2Vec2($ref_tmp145, $89, $P);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp145);
      var $90=$iA;
      var $m_rA146=$this1+35;
      var $call147=__Z7b2CrossRK6b2Vec2S1_($m_rA146, $P);
      var $z148=$impulse43+2;
      var $91=FHEAP[$z148];
      var $add149=($call147)+($91);
      var $mul150=($90)*($add149);
      var $92=$wA;
      var $sub151=($92)-($mul150);
      $wA=$sub151;
      var $93=$mB;
      __ZmlfRK6b2Vec2($ref_tmp152, $93, $P);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp152);
      var $94=$iB;
      var $m_rB153=$this1+37;
      var $call154=__Z7b2CrossRK6b2Vec2S1_($m_rB153, $P);
      var $z155=$impulse43+2;
      var $95=FHEAP[$z155];
      var $add156=($call154)+($95);
      var $mul157=($94)*($add156);
      var $96=$wB;
      var $add158=($96)+($mul157);
      $wB=$add158;
      __label__ = 19;break $land_lhs_true30$$if_else159$7;
    }
  } while(0);
  $if_end190$$if_else159$25: do { 
    if (__label__ == 18) {

      var $97=$wB;
      var $m_rB165=$this1+37;
      __Z7b2CrossfRK6b2Vec2($ref_tmp164, $97, $m_rB165);
      __ZplRK6b2Vec2S1_($ref_tmp163, $vB, $ref_tmp164);
      __ZmiRK6b2Vec2S1_($ref_tmp162, $ref_tmp163, $vA);
      var $98=$wA;
      var $m_rA167=$this1+35;
      __Z7b2CrossfRK6b2Vec2($ref_tmp166, $98, $m_rA167);
      __ZmiRK6b2Vec2S1_($Cdot161, $ref_tmp162, $ref_tmp166);
      var $m_mass170=$this1+47;
      __ZNK6b2Vec2ngEv($ref_tmp171, $Cdot161);
      __ZNK7b2Mat337Solve22ERK6b2Vec2($impulse169, $m_mass170, $ref_tmp171);
      var $x172=$impulse169;
      var $99=FHEAP[$x172];
      var $m_impulse173=$this1+22;
      var $x174=$m_impulse173;
      var $100=FHEAP[$x174];
      var $add175=($100)+($99);
      FHEAP[$x174]=$add175;
      var $y176=$impulse169+1;
      var $101=FHEAP[$y176];
      var $m_impulse177=$this1+22;
      var $y178=$m_impulse177+1;
      var $102=FHEAP[$y178];
      var $add179=($102)+($101);
      FHEAP[$y178]=$add179;
      var $103=$mA;
      __ZmlfRK6b2Vec2($ref_tmp180, $103, $impulse169);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp180);
      var $104=$iA;
      var $m_rA181=$this1+35;
      var $call182=__Z7b2CrossRK6b2Vec2S1_($m_rA181, $impulse169);
      var $mul183=($104)*($call182);
      var $105=$wA;
      var $sub184=($105)-($mul183);
      $wA=$sub184;
      var $106=$mB;
      __ZmlfRK6b2Vec2($ref_tmp185, $106, $impulse169);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp185);
      var $107=$iB;
      var $m_rB186=$this1+37;
      var $call187=__Z7b2CrossRK6b2Vec2S1_($m_rB186, $impulse169);
      var $mul188=($107)*($call187);
      var $108=$wB;
      var $add189=($108)+($mul188);
      $wB=$add189;
      ;
    }
  } while(0);

  var $m_indexA191=$this1+33;
  var $109=IHEAP[$m_indexA191];
  var $110=$data_addr;
  var $velocities192=$110+7;
  var $111=IHEAP[$velocities192];
  var $arrayidx193=$111+$109*3;
  var $v194=$arrayidx193;
  var $112=$v194;
  var $113=$vA;
  IHEAP[$112]=IHEAP[$113]; FHEAP[$112]=FHEAP[$113]; ; IHEAP[$112+1]=IHEAP[$113+1]; FHEAP[$112+1]=FHEAP[$113+1]; ;
  var $114=$wA;
  var $m_indexA195=$this1+33;
  var $115=IHEAP[$m_indexA195];
  var $116=$data_addr;
  var $velocities196=$116+7;
  var $117=IHEAP[$velocities196];
  var $arrayidx197=$117+$115*3;
  var $w198=$arrayidx197+2;
  FHEAP[$w198]=$114;
  var $m_indexB199=$this1+34;
  var $118=IHEAP[$m_indexB199];
  var $119=$data_addr;
  var $velocities200=$119+7;
  var $120=IHEAP[$velocities200];
  var $arrayidx201=$120+$118*3;
  var $v202=$arrayidx201;
  var $121=$v202;
  var $122=$vB;
  IHEAP[$121]=IHEAP[$122]; FHEAP[$121]=FHEAP[$122]; ; IHEAP[$121+1]=IHEAP[$122+1]; FHEAP[$121+1]=FHEAP[$122+1]; ;
  var $123=$wB;
  var $m_indexB203=$this1+34;
  var $124=IHEAP[$m_indexB203];
  var $125=$data_addr;
  var $velocities204=$125+7;
  var $126=IHEAP[$velocities204];
  var $arrayidx205=$126+$124*3;
  var $w206=$arrayidx205+2;
  FHEAP[$w206]=$123;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2RevoluteJoint24SolveVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN15b2RevoluteJoint24SolvePositionConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 34;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $cB=__stackBase__+2;
  var $aB;
  var $qA=__stackBase__+4;
  var $qB=__stackBase__+6;
  var $angularError;
  var $positionError;
  var $fixedRotation;
  var $angle;
  var $limitImpulse;
  var $C;
  var $C26;
  var $C39;
  var $rA=__stackBase__+8;
  var $ref_tmp=__stackBase__+10;
  var $rB=__stackBase__+12;
  var $ref_tmp55=__stackBase__+14;
  var $C56=__stackBase__+16;
  var $ref_tmp57=__stackBase__+18;
  var $ref_tmp58=__stackBase__+20;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $K=__stackBase__+22;
  var $impulse=__stackBase__+26;
  var $tmp=__stackBase__+28;
  var $ref_tmp100=__stackBase__+30;
  var $ref_tmp104=__stackBase__+32;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+33;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $positions=$1+6;
  var $2=IHEAP[$positions];
  var $arrayidx=$2+$0*3;
  var $c=$arrayidx;
  var $3=$cA;
  var $4=$c;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+33;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $positions3=$6+6;
  var $7=IHEAP[$positions3];
  var $arrayidx4=$7+$5*3;
  var $a=$arrayidx4+2;
  var $8=FHEAP[$a];
  $aA=$8;
  var $m_indexB=$this1+34;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $positions5=$10+6;
  var $11=IHEAP[$positions5];
  var $arrayidx6=$11+$9*3;
  var $c7=$arrayidx6;
  var $12=$cB;
  var $13=$c7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+34;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $positions9=$15+6;
  var $16=IHEAP[$positions9];
  var $arrayidx10=$16+$14*3;
  var $a11=$arrayidx10+2;
  var $17=FHEAP[$a11];
  $aB=$17;
  var $18=$aA;
  __ZN5b2RotC1Ef($qA, $18);
  var $19=$aB;
  __ZN5b2RotC1Ef($qB, $19);
  $angularError=0;
  $positionError=0;
  var $m_invIA=$this1+45;
  var $20=FHEAP[$m_invIA];
  var $m_invIB=$this1+46;
  var $21=FHEAP[$m_invIB];
  var $add=($20)+($21);
  var $cmp=($add) == 0;
  var $frombool=($cmp);
  $fixedRotation=$frombool;
  var $m_enableLimit=$this1+29;
  var $22=IHEAP[$m_enableLimit];
  var $tobool=((($22)) & 1);
  if ($tobool) { __label__ = 1;; } else { __label__ = 10;; }
  $land_lhs_true$$if_end54$29: do { 
    if (__label__ == 1) {

      var $m_limitState=$this1+57;
      var $23=IHEAP[$m_limitState];
      var $cmp12=($23)!=0;
      if (!($cmp12)) { __label__ = 10;break $land_lhs_true$$if_end54$29; }

      var $24=$fixedRotation;
      var $tobool14=((($24)) & 1);
      var $conv=($tobool14);
      var $cmp15=($conv)==0;
      if (!($cmp15)) { __label__ = 10;break $land_lhs_true$$if_end54$29; }

      var $25=$aB;
      var $26=$aA;
      var $sub=($25)-($26);
      var $m_referenceAngle=$this1+30;
      var $27=FHEAP[$m_referenceAngle];
      var $sub16=($sub)-($27);
      $angle=$sub16;
      $limitImpulse=0;
      var $m_limitState17=$this1+57;
      var $28=IHEAP[$m_limitState17];
      var $cmp18=($28)==3;
      if ($cmp18) { __label__ = 4;; } else { __label__ = 5;; }
      $if_then19$$if_else$33: do { 
        if (__label__ == 4) {

          var $29=$angle;
          var $m_lowerAngle=$this1+31;
          var $30=FHEAP[$m_lowerAngle];
          var $sub20=($29)-($30);
          var $call=__Z7b2ClampIfET_S0_S0_S0_($sub20, -0.13962635397911072, 0.13962635397911072);
          $C=$call;
          var $m_motorMass=$this1+56;
          var $31=FHEAP[$m_motorMass];
          var $sub21=(-($31));
          var $32=$C;
          var $mul=($sub21)*($32);
          $limitImpulse=$mul;
          var $33=$C;
          var $call22=__Z5b2AbsIfET_S0_($33);
          $angularError=$call22;
          ;
        }
        else if (__label__ == 5) {

          var $m_limitState23=$this1+57;
          var $34=IHEAP[$m_limitState23];
          var $cmp24=($34)==1;
          if ($cmp24) { __label__ = 6;; } else { __label__ = 7;; }
          $if_then25$$if_else35$36: do { 
            if (__label__ == 6) {

              var $35=$angle;
              var $m_lowerAngle27=$this1+31;
              var $36=FHEAP[$m_lowerAngle27];
              var $sub28=($35)-($36);
              $C26=$sub28;
              var $37=$C26;
              var $sub29=(-($37));
              $angularError=$sub29;
              var $38=$C26;
              var $add30=($38)+0.03490658849477768;
              var $call31=__Z7b2ClampIfET_S0_S0_S0_($add30, -0.13962635397911072, 0);
              $C26=$call31;
              var $m_motorMass32=$this1+56;
              var $39=FHEAP[$m_motorMass32];
              var $sub33=(-($39));
              var $40=$C26;
              var $mul34=($sub33)*($40);
              $limitImpulse=$mul34;
              ;
            }
            else if (__label__ == 7) {

              var $m_limitState36=$this1+57;
              var $41=IHEAP[$m_limitState36];
              var $cmp37=($41)==2;
              if (!($cmp37)) { __label__ = 9;break $if_then19$$if_else$33; }

              var $42=$angle;
              var $m_upperAngle=$this1+32;
              var $43=FHEAP[$m_upperAngle];
              var $sub40=($42)-($43);
              $C39=$sub40;
              var $44=$C39;
              $angularError=$44;
              var $45=$C39;
              var $sub41=($45)-0.03490658849477768;
              var $call42=__Z7b2ClampIfET_S0_S0_S0_($sub41, 0, 0.13962635397911072);
              $C39=$call42;
              var $m_motorMass43=$this1+56;
              var $46=FHEAP[$m_motorMass43];
              var $sub44=(-($46));
              var $47=$C39;
              var $mul45=($sub44)*($47);
              $limitImpulse=$mul45;
              ;
            }
          } while(0);
        }
      } while(0);

      var $m_invIA48=$this1+45;
      var $48=FHEAP[$m_invIA48];
      var $49=$limitImpulse;
      var $mul49=($48)*($49);
      var $50=$aA;
      var $sub50=($50)-($mul49);
      $aA=$sub50;
      var $m_invIB51=$this1+46;
      var $51=FHEAP[$m_invIB51];
      var $52=$limitImpulse;
      var $mul52=($51)*($52);
      var $53=$aB;
      var $add53=($53)+($mul52);
      $aB=$add53;
      ;
    }
  } while(0);

  var $54=$aA;
  __ZN5b2Rot3SetEf($qA, $54);
  var $55=$aB;
  __ZN5b2Rot3SetEf($qB, $55);
  var $m_localAnchorA=$this1+18;
  var $m_localCenterA=$this1+39;
  __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorA, $m_localCenterA);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp);
  var $m_localAnchorB=$this1+20;
  var $m_localCenterB=$this1+41;
  __ZmiRK6b2Vec2S1_($ref_tmp55, $m_localAnchorB, $m_localCenterB);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp55);
  __ZplRK6b2Vec2S1_($ref_tmp58, $cB, $rB);
  __ZmiRK6b2Vec2S1_($ref_tmp57, $ref_tmp58, $cA);
  __ZmiRK6b2Vec2S1_($C56, $ref_tmp57, $rA);
  var $call59=__ZNK6b2Vec26LengthEv($C56);
  $positionError=$call59;
  var $m_invMassA=$this1+43;
  var $56=FHEAP[$m_invMassA];
  $mA=$56;
  var $m_invMassB=$this1+44;
  var $57=FHEAP[$m_invMassB];
  $mB=$57;
  var $m_invIA60=$this1+45;
  var $58=FHEAP[$m_invIA60];
  $iA=$58;
  var $m_invIB61=$this1+46;
  var $59=FHEAP[$m_invIB61];
  $iB=$59;
  __ZN7b2Mat22C1Ev($K);
  var $60=$mA;
  var $61=$mB;
  var $add62=($60)+($61);
  var $62=$iA;
  var $y=$rA+1;
  var $63=FHEAP[$y];
  var $mul63=($62)*($63);
  var $y64=$rA+1;
  var $64=FHEAP[$y64];
  var $mul65=($mul63)*($64);
  var $add66=($add62)+($mul65);
  var $65=$iB;
  var $y67=$rB+1;
  var $66=FHEAP[$y67];
  var $mul68=($65)*($66);
  var $y69=$rB+1;
  var $67=FHEAP[$y69];
  var $mul70=($mul68)*($67);
  var $add71=($add66)+($mul70);
  var $ex=$K;
  var $x=$ex;
  FHEAP[$x]=$add71;
  var $68=$iA;
  var $sub72=(-($68));
  var $x73=$rA;
  var $69=FHEAP[$x73];
  var $mul74=($sub72)*($69);
  var $y75=$rA+1;
  var $70=FHEAP[$y75];
  var $mul76=($mul74)*($70);
  var $71=$iB;
  var $x77=$rB;
  var $72=FHEAP[$x77];
  var $mul78=($71)*($72);
  var $y79=$rB+1;
  var $73=FHEAP[$y79];
  var $mul80=($mul78)*($73);
  var $sub81=($mul76)-($mul80);
  var $ex82=$K;
  var $y83=$ex82+1;
  FHEAP[$y83]=$sub81;
  var $ex84=$K;
  var $y85=$ex84+1;
  var $74=FHEAP[$y85];
  var $ey=$K+2;
  var $x86=$ey;
  FHEAP[$x86]=$74;
  var $75=$mA;
  var $76=$mB;
  var $add87=($75)+($76);
  var $77=$iA;
  var $x88=$rA;
  var $78=FHEAP[$x88];
  var $mul89=($77)*($78);
  var $x90=$rA;
  var $79=FHEAP[$x90];
  var $mul91=($mul89)*($79);
  var $add92=($add87)+($mul91);
  var $80=$iB;
  var $x93=$rB;
  var $81=FHEAP[$x93];
  var $mul94=($80)*($81);
  var $x95=$rB;
  var $82=FHEAP[$x95];
  var $mul96=($mul94)*($82);
  var $add97=($add92)+($mul96);
  var $ey98=$K+2;
  var $y99=$ey98+1;
  FHEAP[$y99]=$add97;
  __ZNK7b2Mat225SolveERK6b2Vec2($tmp, $K, $C56);
  __ZNK6b2Vec2ngEv($impulse, $tmp);
  var $83=$mA;
  __ZmlfRK6b2Vec2($ref_tmp100, $83, $impulse);
  __ZN6b2Vec2mIERKS_($cA, $ref_tmp100);
  var $84=$iA;
  var $call101=__Z7b2CrossRK6b2Vec2S1_($rA, $impulse);
  var $mul102=($84)*($call101);
  var $85=$aA;
  var $sub103=($85)-($mul102);
  $aA=$sub103;
  var $86=$mB;
  __ZmlfRK6b2Vec2($ref_tmp104, $86, $impulse);
  __ZN6b2Vec2pLERKS_($cB, $ref_tmp104);
  var $87=$iB;
  var $call105=__Z7b2CrossRK6b2Vec2S1_($rB, $impulse);
  var $mul106=($87)*($call105);
  var $88=$aB;
  var $add107=($88)+($mul106);
  $aB=$add107;
  var $m_indexA108=$this1+33;
  var $89=IHEAP[$m_indexA108];
  var $90=$data_addr;
  var $positions109=$90+6;
  var $91=IHEAP[$positions109];
  var $arrayidx110=$91+$89*3;
  var $c111=$arrayidx110;
  var $92=$c111;
  var $93=$cA;
  IHEAP[$92]=IHEAP[$93]; FHEAP[$92]=FHEAP[$93]; ; IHEAP[$92+1]=IHEAP[$93+1]; FHEAP[$92+1]=FHEAP[$93+1]; ;
  var $94=$aA;
  var $m_indexA112=$this1+33;
  var $95=IHEAP[$m_indexA112];
  var $96=$data_addr;
  var $positions113=$96+6;
  var $97=IHEAP[$positions113];
  var $arrayidx114=$97+$95*3;
  var $a115=$arrayidx114+2;
  FHEAP[$a115]=$94;
  var $m_indexB116=$this1+34;
  var $98=IHEAP[$m_indexB116];
  var $99=$data_addr;
  var $positions117=$99+6;
  var $100=IHEAP[$positions117];
  var $arrayidx118=$100+$98*3;
  var $c119=$arrayidx118;
  var $101=$c119;
  var $102=$cB;
  IHEAP[$101]=IHEAP[$102]; FHEAP[$101]=FHEAP[$102]; ; IHEAP[$101+1]=IHEAP[$102+1]; FHEAP[$101+1]=FHEAP[$102+1]; ;
  var $103=$aB;
  var $m_indexB120=$this1+34;
  var $104=IHEAP[$m_indexB120];
  var $105=$data_addr;
  var $positions121=$105+6;
  var $106=IHEAP[$positions121];
  var $arrayidx122=$106+$104*3;
  var $a123=$arrayidx122+2;
  FHEAP[$a123]=$103;
  var $107=$positionError;
  var $cmp124=($107) <= 0.004999999888241291;
  if ($cmp124) { __label__ = 11;; } else { var $109 = 0;__label__ = 12;; }
  $land_rhs$$land_end$42: do { 
    if (__label__ == 11) {

      var $108=$angularError;
      var $cmp125=($108) <= 0.03490658849477768;
      var $109 = $cmp125;;
    }
  } while(0);

  var $109;
  STACKTOP = __stackBase__;
  return $109;
  return null;
}
__ZN15b2RevoluteJoint24SolvePositionConstraintsERK12b2SolverData["X"]=1;

function __ZN15b2RevoluteJointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2RevoluteJointD2Ev($this1);
  ;
  return;
  return;
}


function __ZN15b2RevoluteJointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2RevoluteJointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN15b2RevoluteJointD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2JointD2Ev($0);
  ;
  return;
  return;
}


function __ZNK15b2RevoluteJoint14IsMotorEnabledEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_enableMotor=$this1+26;
  var $0=IHEAP[$m_enableMotor];
  var $tobool=((($0)) & 1);
  ;
  return $tobool;
  return null;
}


function __ZN15b2RevoluteJoint11EnableMotorEb($this, $flag) {
  ;
  var __label__;

  var $this_addr;
  var $flag_addr;
  $this_addr=$this;
  var $frombool=($flag);
  $flag_addr=$frombool;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  __ZN6b2Body8SetAwakeEb($1, 1);
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  __ZN6b2Body8SetAwakeEb($3, 1);
  var $4=$flag_addr;
  var $tobool=((($4)) & 1);
  var $m_enableMotor=$this1+26;
  var $frombool2=($tobool);
  IHEAP[$m_enableMotor]=$frombool2;
  ;
  return;
  return;
}


function __ZNK15b2RevoluteJoint14GetMotorTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_motorImpulse=$this1+25;
  var $1=FHEAP[$m_motorImpulse];
  var $mul=($0)*($1);
  ;
  return $mul;
  return null;
}


function __ZN15b2RevoluteJoint13SetMotorSpeedEf($this, $speed) {
  ;
  var __label__;

  var $this_addr;
  var $speed_addr;
  $this_addr=$this;
  $speed_addr=$speed;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  __ZN6b2Body8SetAwakeEb($1, 1);
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  __ZN6b2Body8SetAwakeEb($3, 1);
  var $4=$speed_addr;
  var $m_motorSpeed=$this1+28;
  FHEAP[$m_motorSpeed]=$4;
  ;
  return;
  return;
}


function __ZN15b2RevoluteJoint17SetMaxMotorTorqueEf($this, $torque) {
  ;
  var __label__;

  var $this_addr;
  var $torque_addr;
  $this_addr=$this;
  $torque_addr=$torque;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  __ZN6b2Body8SetAwakeEb($1, 1);
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  __ZN6b2Body8SetAwakeEb($3, 1);
  var $4=$torque_addr;
  var $m_maxMotorTorque=$this1+27;
  FHEAP[$m_maxMotorTorque]=$4;
  ;
  return;
  return;
}


function __ZNK15b2RevoluteJoint14IsLimitEnabledEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_enableLimit=$this1+29;
  var $0=IHEAP[$m_enableLimit];
  var $tobool=((($0)) & 1);
  ;
  return $tobool;
  return null;
}


function __ZN15b2RevoluteJoint11EnableLimitEb($this, $flag) {
  ;
  var __label__;

  var $this_addr;
  var $flag_addr;
  $this_addr=$this;
  var $frombool=($flag);
  $flag_addr=$frombool;
  var $this1=$this_addr;
  var $0=$flag_addr;
  var $tobool=((($0)) & 1);
  var $conv=($tobool);
  var $m_enableLimit=$this1+29;
  var $1=IHEAP[$m_enableLimit];
  var $tobool2=((($1)) & 1);
  var $conv3=($tobool2);
  var $cmp=($conv)!=($conv3);
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$8: do { 
    if (__label__ == 1) {

      var $2=$this1;
      var $m_bodyA=$2+12;
      var $3=IHEAP[$m_bodyA];
      __ZN6b2Body8SetAwakeEb($3, 1);
      var $4=$this1;
      var $m_bodyB=$4+13;
      var $5=IHEAP[$m_bodyB];
      __ZN6b2Body8SetAwakeEb($5, 1);
      var $6=$flag_addr;
      var $tobool4=((($6)) & 1);
      var $m_enableLimit5=$this1+29;
      var $frombool6=($tobool4);
      IHEAP[$m_enableLimit5]=$frombool6;
      var $m_impulse=$this1+22;
      var $z=$m_impulse+2;
      FHEAP[$z]=0;
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZNK15b2RevoluteJoint13GetLowerLimitEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_lowerAngle=$this1+31;
  var $0=FHEAP[$m_lowerAngle];
  ;
  return $0;
  return null;
}


function __ZNK15b2RevoluteJoint13GetUpperLimitEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_upperAngle=$this1+32;
  var $0=FHEAP[$m_upperAngle];
  ;
  return $0;
  return null;
}


function __ZN15b2RevoluteJoint9SetLimitsEff($this, $lower, $upper) {
  ;
  var __label__;

  var $this_addr;
  var $lower_addr;
  var $upper_addr;
  $this_addr=$this;
  $lower_addr=$lower;
  $upper_addr=$upper;
  var $this1=$this_addr;
  var $0=$lower_addr;
  var $1=$upper_addr;
  var $cmp=($0) <= ($1);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$14: do { 
    if (__label__ == 1) {

      ___assert_func(__str319, 473, ___PRETTY_FUNCTION____ZN15b2RevoluteJoint9SetLimitsEff, __str1320);
      ;
    }
  } while(0);

  var $2=$lower_addr;
  var $m_lowerAngle=$this1+31;
  var $3=FHEAP[$m_lowerAngle];
  var $cmp2=($2) != ($3);
  if ($cmp2) { __label__ = 4;; } else { __label__ = 3;; }
  $if_then$$lor_lhs_false$17: do { 
    if (__label__ == 3) {

      var $4=$upper_addr;
      var $m_upperAngle=$this1+32;
      var $5=FHEAP[$m_upperAngle];
      var $cmp3=($4) != ($5);
      if ($cmp3) { __label__ = 4;break $if_then$$lor_lhs_false$17; } else { __label__ = 5;break $if_then$$lor_lhs_false$17; }
    }
  } while(0);
  $if_then$$if_end$19: do { 
    if (__label__ == 4) {

      var $6=$this1;
      var $m_bodyA=$6+12;
      var $7=IHEAP[$m_bodyA];
      __ZN6b2Body8SetAwakeEb($7, 1);
      var $8=$this1;
      var $m_bodyB=$8+13;
      var $9=IHEAP[$m_bodyB];
      __ZN6b2Body8SetAwakeEb($9, 1);
      var $m_impulse=$this1+22;
      var $z=$m_impulse+2;
      FHEAP[$z]=0;
      var $10=$lower_addr;
      var $m_lowerAngle4=$this1+31;
      FHEAP[$m_lowerAngle4]=$10;
      var $11=$upper_addr;
      var $m_upperAngle5=$this1+32;
      FHEAP[$m_upperAngle5]=$11;
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN15b2RevoluteJoint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $indexA;
  var $indexB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  $indexA=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  $indexB=$5;
  __Z5b2LogPKcz(__str2321, allocate(1, "i32", ALLOC_STACK));
  var $6=$indexA;
  __Z5b2LogPKcz(__str1392, allocate([$6], "i32", ALLOC_STACK));
  var $7=$indexB;
  __Z5b2LogPKcz(__str2393, allocate([$7], "i32", ALLOC_STACK));
  var $8=$this1;
  var $m_collideConnected=$8+16;
  var $9=IHEAP[$m_collideConnected];
  var $tobool=((($9)) & 1);
  var $conv=($tobool);
  __Z5b2LogPKcz(__str3394, allocate([$conv], "i32", ALLOC_STACK));
  var $m_localAnchorA=$this1+18;
  var $x=$m_localAnchorA;
  var $10=FHEAP[$x];
  var $conv3=($10);
  var $m_localAnchorA4=$this1+18;
  var $y=$m_localAnchorA4+1;
  var $11=FHEAP[$y];
  var $conv5=($11);
  __Z5b2LogPKcz(__str4395, allocate([$conv3,$conv5], "double", ALLOC_STACK));
  var $m_localAnchorB=$this1+20;
  var $x6=$m_localAnchorB;
  var $12=FHEAP[$x6];
  var $conv7=($12);
  var $m_localAnchorB8=$this1+20;
  var $y9=$m_localAnchorB8+1;
  var $13=FHEAP[$y9];
  var $conv10=($13);
  __Z5b2LogPKcz(__str5396, allocate([$conv7,$conv10], "double", ALLOC_STACK));
  var $m_referenceAngle=$this1+30;
  var $14=FHEAP[$m_referenceAngle];
  var $conv11=($14);
  __Z5b2LogPKcz(__str6385, allocate([$conv11], "double", ALLOC_STACK));
  var $m_enableLimit=$this1+29;
  var $15=IHEAP[$m_enableLimit];
  var $tobool12=((($15)) & 1);
  var $conv13=($tobool12);
  __Z5b2LogPKcz(__str9328, allocate([$conv13], "i32", ALLOC_STACK));
  var $m_lowerAngle=$this1+31;
  var $16=FHEAP[$m_lowerAngle];
  var $conv14=($16);
  __Z5b2LogPKcz(__str10329, allocate([$conv14], "double", ALLOC_STACK));
  var $m_upperAngle=$this1+32;
  var $17=FHEAP[$m_upperAngle];
  var $conv15=($17);
  __Z5b2LogPKcz(__str11330, allocate([$conv15], "double", ALLOC_STACK));
  var $m_enableMotor=$this1+26;
  var $18=IHEAP[$m_enableMotor];
  var $tobool16=((($18)) & 1);
  var $conv17=($tobool16);
  __Z5b2LogPKcz(__str7398, allocate([$conv17], "i32", ALLOC_STACK));
  var $m_motorSpeed=$this1+28;
  var $19=FHEAP[$m_motorSpeed];
  var $conv18=($19);
  __Z5b2LogPKcz(__str8399, allocate([$conv18], "double", ALLOC_STACK));
  var $m_maxMotorTorque=$this1+27;
  var $20=FHEAP[$m_maxMotorTorque];
  var $conv19=($20);
  __Z5b2LogPKcz(__str9400, allocate([$conv19], "double", ALLOC_STACK));
  var $21=$this1;
  var $m_index=$21+14;
  var $22=IHEAP[$m_index];
  __Z5b2LogPKcz(__str12403, allocate([$22], "i32", ALLOC_STACK));
  ;
  return;
  return;
}
__ZN15b2RevoluteJoint4DumpEv["X"]=1;

function __ZN6b2RopeC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_gravity=$this1+7;
  __ZN6b2Vec2C1Ev($m_gravity);
  var $m_count=$this1;
  IHEAP[$m_count]=0;
  var $m_ps=$this1+1;
  IHEAP[$m_ps]=0;
  var $m_p0s=$this1+2;
  IHEAP[$m_p0s]=0;
  var $m_vs=$this1+3;
  IHEAP[$m_vs]=0;
  var $m_ims=$this1+4;
  IHEAP[$m_ims]=0;
  var $m_Ls=$this1+5;
  IHEAP[$m_Ls]=0;
  var $m_as=$this1+6;
  IHEAP[$m_as]=0;
  var $m_gravity2=$this1+7;
  __ZN6b2Vec27SetZeroEv($m_gravity2);
  var $m_k2=$this1+10;
  FHEAP[$m_k2]=1;
  var $m_k3=$this1+11;
  FHEAP[$m_k3]=0.10000000149011612;
  ;
  return;
  return;
}


function __ZN6b2RopeD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_ps=$this1+1;
  var $0=IHEAP[$m_ps];
  var $1=$0;
  __Z6b2FreePv($1);
  var $m_p0s=$this1+2;
  var $2=IHEAP[$m_p0s];
  var $3=$2;
  __Z6b2FreePv($3);
  var $m_vs=$this1+3;
  var $4=IHEAP[$m_vs];
  var $5=$4;
  __Z6b2FreePv($5);
  var $m_ims=$this1+4;
  var $6=IHEAP[$m_ims];
  var $7=$6;
  __Z6b2FreePv($7);
  var $m_Ls=$this1+5;
  var $8=IHEAP[$m_Ls];
  var $9=$8;
  __Z6b2FreePv($9);
  var $m_as=$this1+6;
  var $10=IHEAP[$m_as];
  var $11=$10;
  __Z6b2FreePv($11);
  ;
  return;
  return;
}


function __ZN6b2Rope10InitializeEPK9b2RopeDef($this, $def) {
  var __stackBase__  = STACKTOP; STACKTOP += 14;
  var __label__;

  var $__y_addr_i;
  var $__x_addr_i;
  var $this_addr;
  var $def_addr;
  var $i;
  var $m;
  var $count229;
  var $count3;
  var $i37;
  var $p1=__stackBase__;
  var $p2=__stackBase__+2;
  var $i51;
  var $p155=__stackBase__+4;
  var $p258=__stackBase__+6;
  var $p3=__stackBase__+8;
  var $d1=__stackBase__+10;
  var $d2=__stackBase__+12;
  var $a;
  var $b;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$def_addr;
  var $count=$0+1;
  var $1=IHEAP[$count];
  var $cmp=($1) >= 3;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$29: do { 
    if (__label__ == 1) {

      ___assert_func(__str337, 48, ___PRETTY_FUNCTION____ZN6b2Rope10InitializeEPK9b2RopeDef, __str1338);
      ;
    }
  } while(0);

  var $2=$def_addr;
  var $count2=$2+1;
  var $3=IHEAP[$count2];
  var $m_count=$this1;
  IHEAP[$m_count]=$3;
  var $m_count3=$this1;
  var $4=IHEAP[$m_count3];
  var $mul=(($4)<<3);
  var $call=__Z7b2Alloci($mul);
  var $5=$call;
  var $m_ps=$this1+1;
  IHEAP[$m_ps]=$5;
  var $m_count4=$this1;
  var $6=IHEAP[$m_count4];
  var $mul5=(($6)<<3);
  var $call6=__Z7b2Alloci($mul5);
  var $7=$call6;
  var $m_p0s=$this1+2;
  IHEAP[$m_p0s]=$7;
  var $m_count7=$this1;
  var $8=IHEAP[$m_count7];
  var $mul8=(($8)<<3);
  var $call9=__Z7b2Alloci($mul8);
  var $9=$call9;
  var $m_vs=$this1+3;
  IHEAP[$m_vs]=$9;
  var $m_count10=$this1;
  var $10=IHEAP[$m_count10];
  var $mul11=(($10)<<2);
  var $call12=__Z7b2Alloci($mul11);
  var $11=$call12;
  var $m_ims=$this1+4;
  IHEAP[$m_ims]=$11;
  $i=0;
  var $12=$i;
  var $m_count13=$this1;
  var $13=IHEAP[$m_count13];
  var $cmp143=($12) < ($13);
  if ($cmp143) { __label__ = 3;; } else { __label__ = 8;; }
  $for_body_lr_ph$$for_end$32: do { 
    if (__label__ == 3) {

      var $m_ps15=$this1+1;
      var $m_p0s17=$this1+2;
      var $m_vs21=$this1+3;
      var $m_ims25=$this1+4;
      var $m_ims27=$this1+4;
      ;
      $for_body$34: while(1) { 

        var $14=$i;
        var $15=IHEAP[$m_ps15];
        var $arrayidx=$15+($14<<1);
        var $16=$i;
        var $17=$def_addr;
        var $vertices=$17;
        var $18=IHEAP[$vertices];
        var $arrayidx16=$18+($16<<1);
        var $19=$arrayidx;
        var $20=$arrayidx16;
        IHEAP[$19]=IHEAP[$20]; FHEAP[$19]=FHEAP[$20]; ; IHEAP[$19+1]=IHEAP[$20+1]; FHEAP[$19+1]=FHEAP[$20+1]; ;
        var $21=$i;
        var $22=IHEAP[$m_p0s17];
        var $arrayidx18=$22+($21<<1);
        var $23=$i;
        var $24=$def_addr;
        var $vertices19=$24;
        var $25=IHEAP[$vertices19];
        var $arrayidx20=$25+($23<<1);
        var $26=$arrayidx18;
        var $27=$arrayidx20;
        IHEAP[$26]=IHEAP[$27]; FHEAP[$26]=FHEAP[$27]; ; IHEAP[$26+1]=IHEAP[$27+1]; FHEAP[$26+1]=FHEAP[$27+1]; ;
        var $28=$i;
        var $29=IHEAP[$m_vs21];
        var $arrayidx22=$29+($28<<1);
        __ZN6b2Vec27SetZeroEv($arrayidx22);
        var $30=$i;
        var $31=$def_addr;
        var $masses=$31+2;
        var $32=IHEAP[$masses];
        var $arrayidx23=$32+$30;
        var $33=FHEAP[$arrayidx23];
        $m=$33;
        var $cmp24=($33) > 0;
        if ($cmp24) { __label__ = 5;; } else { __label__ = 6;; }
        $if_then$$if_else$36: do { 
          if (__label__ == 5) {

            var $34=$m;
            var $div=1/($34);
            var $35=$i;
            var $36=IHEAP[$m_ims25];
            var $arrayidx26=$36+$35;
            FHEAP[$arrayidx26]=$div;
            ;
          }
          else if (__label__ == 6) {

            var $37=$i;
            var $38=IHEAP[$m_ims27];
            var $arrayidx28=$38+$37;
            FHEAP[$arrayidx28]=0;
            ;
          }
        } while(0);

        var $39=$i;
        var $inc=($39)+1;
        $i=$inc;
        var $40=$i;
        var $41=IHEAP[$m_count13];
        var $cmp14=($40) < ($41);
        if (!($cmp14)) { __label__ = 8;break $for_body_lr_ph$$for_end$32; }
      }
    }
  } while(0);

  var $m_count30=$this1;
  var $42=IHEAP[$m_count30];
  var $sub=($42)-1;
  $count229=$sub;
  var $m_count31=$this1;
  var $43=IHEAP[$m_count31];
  var $sub32=($43)-2;
  $count3=$sub32;
  var $44=$count229;
  var $mul33=(($44)<<2);
  var $call34=__Z7b2Alloci($mul33);
  var $45=$call34;
  var $m_Ls=$this1+5;
  IHEAP[$m_Ls]=$45;
  var $46=$count3;
  var $mul35=(($46)<<2);
  var $call36=__Z7b2Alloci($mul35);
  var $47=$call36;
  var $m_as=$this1+6;
  IHEAP[$m_as]=$47;
  $i37=0;
  var $48=$i37;
  var $49=$count229;
  var $cmp392=($48) < ($49);
  if ($cmp392) { __label__ = 9;; } else { __label__ = 11;; }
  $for_body40_lr_ph$$for_end50$41: do { 
    if (__label__ == 9) {

      var $m_ps41=$this1+1;
      var $50=$p1;
      var $m_ps43=$this1+1;
      var $51=$p2;
      var $m_Ls46=$this1+5;
      ;
      $for_body40$43: while(1) { 

        var $52=$i37;
        var $53=IHEAP[$m_ps41];
        var $arrayidx42=$53+($52<<1);
        var $54=$arrayidx42;
        IHEAP[$50]=IHEAP[$54]; FHEAP[$50]=FHEAP[$54]; ; IHEAP[$50+1]=IHEAP[$54+1]; FHEAP[$50+1]=FHEAP[$54+1]; ;
        var $55=$i37;
        var $add=($55)+1;
        var $56=IHEAP[$m_ps43];
        var $arrayidx44=$56+($add<<1);
        var $57=$arrayidx44;
        IHEAP[$51]=IHEAP[$57]; FHEAP[$51]=FHEAP[$57]; ; IHEAP[$51+1]=IHEAP[$57+1]; FHEAP[$51+1]=FHEAP[$57+1]; ;
        var $call45=__Z10b2DistanceRK6b2Vec2S1_($p1, $p2);
        var $58=$i37;
        var $59=IHEAP[$m_Ls46];
        var $arrayidx47=$59+$58;
        FHEAP[$arrayidx47]=$call45;
        var $60=$i37;
        var $inc49=($60)+1;
        $i37=$inc49;
        var $61=$i37;
        var $62=$count229;
        var $cmp39=($61) < ($62);
        if (!($cmp39)) { __label__ = 11;break $for_body40_lr_ph$$for_end50$41; }
      }
    }
  } while(0);

  $i51=0;
  var $63=$i51;
  var $64=$count3;
  var $cmp531=($63) < ($64);
  if ($cmp531) { __label__ = 12;; } else { __label__ = 14;; }
  $for_body54_lr_ph$$for_end72$46: do { 
    if (__label__ == 12) {

      var $m_ps56=$this1+1;
      var $65=$p155;
      var $m_ps60=$this1+1;
      var $66=$p258;
      var $m_ps63=$this1+1;
      var $67=$p3;
      ;
      ;
      ;
      ;
      var $m_as68=$this1+6;
      ;
      $for_body54$48: while(1) { 

        var $72=$i51;
        var $73=IHEAP[$m_ps56];
        var $arrayidx57=$73+($72<<1);
        var $74=$arrayidx57;
        IHEAP[$65]=IHEAP[$74]; FHEAP[$65]=FHEAP[$74]; ; IHEAP[$65+1]=IHEAP[$74+1]; FHEAP[$65+1]=FHEAP[$74+1]; ;
        var $75=$i51;
        var $add59=($75)+1;
        var $76=IHEAP[$m_ps60];
        var $arrayidx61=$76+($add59<<1);
        var $77=$arrayidx61;
        IHEAP[$66]=IHEAP[$77]; FHEAP[$66]=FHEAP[$77]; ; IHEAP[$66+1]=IHEAP[$77+1]; FHEAP[$66+1]=FHEAP[$77+1]; ;
        var $78=$i51;
        var $add62=($78)+2;
        var $79=IHEAP[$m_ps63];
        var $arrayidx64=$79+($add62<<1);
        var $80=$arrayidx64;
        IHEAP[$67]=IHEAP[$80]; FHEAP[$67]=FHEAP[$80]; ; IHEAP[$67+1]=IHEAP[$80+1]; FHEAP[$67+1]=FHEAP[$80+1]; ;
        __ZmiRK6b2Vec2S1_($d1, $p258, $p155);
        __ZmiRK6b2Vec2S1_($d2, $p3, $p258);
        var $call65=__Z7b2CrossRK6b2Vec2S1_($d1, $d2);
        $a=$call65;
        var $call66=__Z5b2DotRK6b2Vec2S1_($d1, $d2);
        $b=$call66;
        var $81=$a;
        var $82=$b;
        $__y_addr_i=$81;
        $__x_addr_i=$82;
        var $83=$__y_addr_i;
        var $84=$__x_addr_i;
        var $call_i=_atan2f($83, $84);
        var $85=$i51;
        var $86=IHEAP[$m_as68];
        var $arrayidx69=$86+$85;
        FHEAP[$arrayidx69]=$call_i;
        var $87=$i51;
        var $inc71=($87)+1;
        $i51=$inc71;
        var $88=$i51;
        var $89=$count3;
        var $cmp53=($88) < ($89);
        if (!($cmp53)) { __label__ = 14;break $for_body54_lr_ph$$for_end72$46; }
      }
    }
  } while(0);

  var $m_gravity=$this1+7;
  var $90=$def_addr;
  var $gravity=$90+3;
  var $91=$m_gravity;
  var $92=$gravity;
  IHEAP[$91]=IHEAP[$92]; FHEAP[$91]=FHEAP[$92]; ; IHEAP[$91+1]=IHEAP[$92+1]; FHEAP[$91+1]=FHEAP[$92+1]; ;
  var $93=$def_addr;
  var $damping=$93+5;
  var $94=FHEAP[$damping];
  var $m_damping=$this1+9;
  FHEAP[$m_damping]=$94;
  var $95=$def_addr;
  var $k2=$95+6;
  var $96=FHEAP[$k2];
  var $m_k2=$this1+10;
  FHEAP[$m_k2]=$96;
  var $97=$def_addr;
  var $k3=$97+7;
  var $98=FHEAP[$k3];
  var $m_k3=$this1+11;
  FHEAP[$m_k3]=$98;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN6b2Rope10InitializeEPK9b2RopeDef["X"]=1;

function __ZN6b2Rope4StepEfi($this, $h, $iterations) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $this_addr;
  var $h_addr;
  var $iterations_addr;
  var $d;
  var $i;
  var $ref_tmp=__stackBase__;
  var $ref_tmp13=__stackBase__+2;
  var $i16;
  var $inv_h;
  var $i23;
  var $ref_tmp30=__stackBase__+4;
  var $ref_tmp31=__stackBase__+6;
  $this_addr=$this;
  $h_addr=$h;
  $iterations_addr=$iterations;
  var $this1=$this_addr;
  var $0=$h_addr;
  var $conv=($0);
  var $cmp=($conv) == 0;
  if ($cmp) { __label__ = 11;; } else { __label__ = 1;; }
  $for_end38$$if_end$52: do { 
    if (__label__ == 1) {

      var $1=$h_addr;
      var $sub=(-($1));
      var $m_damping=$this1+9;
      var $2=FHEAP[$m_damping];
      var $mul=($sub)*($2);
      var $call=_expf($mul);
      $d=$call;
      $i=0;
      var $3=$i;
      var $m_count=$this1;
      var $4=IHEAP[$m_count];
      var $cmp23=($3) < ($4);
      if ($cmp23) { __label__ = 2;; } else { __label__ = 6;; }
      $for_body_lr_ph$$for_end$54: do { 
        if (__label__ == 2) {

          var $m_p0s=$this1+2;
          var $m_ps=$this1+1;
          var $m_ims=$this1+4;
          var $m_vs=$this1+3;
          var $m_gravity=$this1+7;
          var $m_vs9=$this1+3;
          var $m_ps11=$this1+1;
          var $m_vs14=$this1+3;
          ;
          $for_body$56: while(1) { 

            var $5=$i;
            var $6=IHEAP[$m_p0s];
            var $arrayidx=$6+($5<<1);
            var $7=$i;
            var $8=IHEAP[$m_ps];
            var $arrayidx3=$8+($7<<1);
            var $9=$arrayidx;
            var $10=$arrayidx3;
            IHEAP[$9]=IHEAP[$10]; FHEAP[$9]=FHEAP[$10]; ; IHEAP[$9+1]=IHEAP[$10+1]; FHEAP[$9+1]=FHEAP[$10+1]; ;
            var $11=$i;
            var $12=IHEAP[$m_ims];
            var $arrayidx4=$12+$11;
            var $13=FHEAP[$arrayidx4];
            var $cmp5=($13) > 0;
            if ($cmp5) { __label__ = 4;; } else { __label__ = 5;; }
            $if_then6$$if_end8$58: do { 
              if (__label__ == 4) {

                var $14=$i;
                var $15=IHEAP[$m_vs];
                var $arrayidx7=$15+($14<<1);
                var $16=$h_addr;
                __ZmlfRK6b2Vec2($ref_tmp, $16, $m_gravity);
                __ZN6b2Vec2pLERKS_($arrayidx7, $ref_tmp);
                ;
              }
            } while(0);

            var $17=$i;
            var $18=IHEAP[$m_vs9];
            var $arrayidx10=$18+($17<<1);
            var $19=$d;
            __ZN6b2Vec2mLEf($arrayidx10, $19);
            var $20=$i;
            var $21=IHEAP[$m_ps11];
            var $arrayidx12=$21+($20<<1);
            var $22=$h_addr;
            var $23=$i;
            var $24=IHEAP[$m_vs14];
            var $arrayidx15=$24+($23<<1);
            __ZmlfRK6b2Vec2($ref_tmp13, $22, $arrayidx15);
            __ZN6b2Vec2pLERKS_($arrayidx12, $ref_tmp13);
            var $25=$i;
            var $inc=($25)+1;
            $i=$inc;
            var $26=$i;
            var $27=IHEAP[$m_count];
            var $cmp2=($26) < ($27);
            if (!($cmp2)) { __label__ = 6;break $for_body_lr_ph$$for_end$54; }
          }
        }
      } while(0);

      $i16=0;
      var $28=$i16;
      var $29=$iterations_addr;
      var $cmp182=($28) < ($29);
      if ($cmp182) { __label__ = 7;; } else { __label__ = 8;; }
      $for_body19$$for_end22$62: do { 
        if (__label__ == 7) {
          $for_body19$63: while(1) { 

            __ZN6b2Rope7SolveC2Ev($this1);
            __ZN6b2Rope7SolveC3Ev($this1);
            __ZN6b2Rope7SolveC2Ev($this1);
            var $30=$i16;
            var $inc21=($30)+1;
            $i16=$inc21;
            var $31=$i16;
            var $32=$iterations_addr;
            var $cmp18=($31) < ($32);
            if (!($cmp18)) { __label__ = 8;break $for_body19$$for_end22$62; }
          }
        }
      } while(0);

      var $33=$h_addr;
      var $div=1/($33);
      $inv_h=$div;
      $i23=0;
      var $34=$i23;
      var $m_count25=$this1;
      var $35=IHEAP[$m_count25];
      var $cmp261=($34) < ($35);
      if (!($cmp261)) { __label__ = 11;break $for_end38$$if_end$52; }

      var $m_vs28=$this1+3;
      var $m_ps32=$this1+1;
      var $m_p0s34=$this1+2;
      var $36=$ref_tmp30;
      ;
      $for_body27$67: while(1) { 

        var $37=$i23;
        var $38=IHEAP[$m_vs28];
        var $arrayidx29=$38+($37<<1);
        var $39=$inv_h;
        var $40=$i23;
        var $41=IHEAP[$m_ps32];
        var $arrayidx33=$41+($40<<1);
        var $42=$i23;
        var $43=IHEAP[$m_p0s34];
        var $arrayidx35=$43+($42<<1);
        __ZmiRK6b2Vec2S1_($ref_tmp31, $arrayidx33, $arrayidx35);
        __ZmlfRK6b2Vec2($ref_tmp30, $39, $ref_tmp31);
        var $44=$arrayidx29;
        IHEAP[$44]=IHEAP[$36]; FHEAP[$44]=FHEAP[$36]; ; IHEAP[$44+1]=IHEAP[$36+1]; FHEAP[$44+1]=FHEAP[$36+1]; ;
        var $45=$i23;
        var $inc37=($45)+1;
        $i23=$inc37;
        var $46=$i23;
        var $47=IHEAP[$m_count25];
        var $cmp26=($46) < ($47);
        if (!($cmp26)) { __label__ = 11;break $for_end38$$if_end$52; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN6b2Rope4StepEfi["X"]=1;

function __ZN6b2Rope7SolveC2Ev($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 10;
  var __label__;

  var $this_addr;
  var $count2;
  var $i;
  var $p1=__stackBase__;
  var $p2=__stackBase__+2;
  var $d=__stackBase__+4;
  var $L;
  var $im1;
  var $im2;
  var $s1;
  var $s2;
  var $ref_tmp=__stackBase__+6;
  var $ref_tmp16=__stackBase__+8;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_count=$this1;
  var $0=IHEAP[$m_count];
  var $sub=($0)-1;
  $count2=$sub;
  $i=0;
  var $1=$i;
  var $2=$count2;
  var $cmp1=($1) < ($2);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 5;; }
  $for_body_lr_ph$$for_end$71: do { 
    if (__label__ == 1) {

      var $m_ps=$this1+1;
      var $3=$p1;
      var $m_ps2=$this1+1;
      var $4=$p2;
      var $m_ims=$this1+4;
      var $m_ims6=$this1+4;
      var $m_k2=$this1+10;
      var $m_Ls=$this1+5;
      var $m_k217=$this1+10;
      var $m_Ls19=$this1+5;
      var $m_ps23=$this1+1;
      var $5=$p1;
      var $m_ps26=$this1+1;
      var $6=$p2;
      ;
      $for_body$73: while(1) { 

        var $7=$i;
        var $8=IHEAP[$m_ps];
        var $arrayidx=$8+($7<<1);
        var $9=$arrayidx;
        IHEAP[$3]=IHEAP[$9]; FHEAP[$3]=FHEAP[$9]; ; IHEAP[$3+1]=IHEAP[$9+1]; FHEAP[$3+1]=FHEAP[$9+1]; ;
        var $10=$i;
        var $add=($10)+1;
        var $11=IHEAP[$m_ps2];
        var $arrayidx3=$11+($add<<1);
        var $12=$arrayidx3;
        IHEAP[$4]=IHEAP[$12]; FHEAP[$4]=FHEAP[$12]; ; IHEAP[$4+1]=IHEAP[$12+1]; FHEAP[$4+1]=FHEAP[$12+1]; ;
        __ZmiRK6b2Vec2S1_($d, $p2, $p1);
        var $call=__ZN6b2Vec29NormalizeEv($d);
        $L=$call;
        var $13=$i;
        var $14=IHEAP[$m_ims];
        var $arrayidx4=$14+$13;
        var $15=FHEAP[$arrayidx4];
        $im1=$15;
        var $16=$i;
        var $add5=($16)+1;
        var $17=IHEAP[$m_ims6];
        var $arrayidx7=$17+$add5;
        var $18=FHEAP[$arrayidx7];
        $im2=$18;
        var $19=$im1;
        var $20=$im2;
        var $add8=($19)+($20);
        var $cmp9=($add8) == 0;
        if ($cmp9) { __label__ = 4;; } else { __label__ = 3;; }
        $for_inc$$if_end$75: do { 
          if (__label__ == 3) {

            var $21=$im1;
            var $22=$im1;
            var $23=$im2;
            var $add10=($22)+($23);
            var $div=($21)/($add10);
            $s1=$div;
            var $24=$im2;
            var $25=$im1;
            var $26=$im2;
            var $add11=($25)+($26);
            var $div12=($24)/($add11);
            $s2=$div12;
            var $27=FHEAP[$m_k2];
            var $28=$s1;
            var $mul=($27)*($28);
            var $29=$i;
            var $30=IHEAP[$m_Ls];
            var $arrayidx13=$30+$29;
            var $31=FHEAP[$arrayidx13];
            var $32=$L;
            var $sub14=($31)-($32);
            var $mul15=($mul)*($sub14);
            __ZmlfRK6b2Vec2($ref_tmp, $mul15, $d);
            __ZN6b2Vec2mIERKS_($p1, $ref_tmp);
            var $33=FHEAP[$m_k217];
            var $34=$s2;
            var $mul18=($33)*($34);
            var $35=$i;
            var $36=IHEAP[$m_Ls19];
            var $arrayidx20=$36+$35;
            var $37=FHEAP[$arrayidx20];
            var $38=$L;
            var $sub21=($37)-($38);
            var $mul22=($mul18)*($sub21);
            __ZmlfRK6b2Vec2($ref_tmp16, $mul22, $d);
            __ZN6b2Vec2pLERKS_($p2, $ref_tmp16);
            var $39=$i;
            var $40=IHEAP[$m_ps23];
            var $arrayidx24=$40+($39<<1);
            var $41=$arrayidx24;
            IHEAP[$41]=IHEAP[$5]; FHEAP[$41]=FHEAP[$5]; ; IHEAP[$41+1]=IHEAP[$5+1]; FHEAP[$41+1]=FHEAP[$5+1]; ;
            var $42=$i;
            var $add25=($42)+1;
            var $43=IHEAP[$m_ps26];
            var $arrayidx27=$43+($add25<<1);
            var $44=$arrayidx27;
            IHEAP[$44]=IHEAP[$6]; FHEAP[$44]=FHEAP[$6]; ; IHEAP[$44+1]=IHEAP[$6+1]; FHEAP[$44+1]=FHEAP[$6+1]; ;
            ;
          }
        } while(0);

        var $45=$i;
        var $inc=($45)+1;
        $i=$inc;
        var $46=$i;
        var $47=$count2;
        var $cmp=($46) < ($47);
        if (!($cmp)) { __label__ = 5;break $for_body_lr_ph$$for_end$71; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN6b2Rope7SolveC2Ev["X"]=1;

function __ZN7b2ColorC1Efff($this, $r, $g, $b) {
  ;
  var __label__;

  var $this_addr;
  var $r_addr;
  var $g_addr;
  var $b_addr;
  $this_addr=$this;
  $r_addr=$r;
  $g_addr=$g;
  $b_addr=$b;
  var $this1=$this_addr;
  var $0=$r_addr;
  var $1=$g_addr;
  var $2=$b_addr;
  __ZN7b2ColorC2Efff($this1, $0, $1, $2);
  ;
  return;
  return;
}


function __ZN6b2Rope8SetAngleEf($this, $angle) {
  ;
  var __label__;

  var $this_addr;
  var $angle_addr;
  var $count3;
  var $i;
  $this_addr=$this;
  $angle_addr=$angle;
  var $this1=$this_addr;
  var $m_count=$this1;
  var $0=IHEAP[$m_count];
  var $sub=($0)-2;
  $count3=$sub;
  $i=0;
  var $1=$i;
  var $2=$count3;
  var $cmp1=($1) < ($2);
  if ($cmp1) { __label__ = 1;; } else { __label__ = 3;; }
  $for_body_lr_ph$$for_end$20: do { 
    if (__label__ == 1) {

      var $m_as=$this1+6;
      ;
      $for_body$22: while(1) { 

        var $3=$angle_addr;
        var $4=$i;
        var $5=IHEAP[$m_as];
        var $arrayidx=$5+$4;
        FHEAP[$arrayidx]=$3;
        var $6=$i;
        var $inc=($6)+1;
        $i=$inc;
        var $7=$i;
        var $8=$count3;
        var $cmp=($7) < ($8);
        if (!($cmp)) { __label__ = 3;break $for_body_lr_ph$$for_end$20; }
      }
    }
  } while(0);

  ;
  return;
  return;
}


function __ZNK6b2Vec24SkewEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $y=$this1+1;
  var $0=FHEAP[$y];
  var $sub=(-($0));
  var $x=$this1;
  var $1=FHEAP[$x];
  __ZN6b2Vec2C1Eff($agg_result, $sub, $1);
  ;
  return;
  return;
}


function __ZNK6b2Rope4DrawEP6b2Draw($this, $draw) {
  var __stackBase__  = STACKTOP; STACKTOP += 3;
  var __label__;

  var $this_addr;
  var $draw_addr;
  var $c=__stackBase__;
  var $i;
  $this_addr=$this;
  $draw_addr=$draw;
  var $this1=$this_addr;
  __ZN7b2ColorC1Efff($c, 0.4000000059604645, 0.5, 0.699999988079071);
  $i=0;
  var $0=$i;
  var $m_count=$this1;
  var $1=IHEAP[$m_count];
  var $sub1=($1)-1;
  var $cmp2=($0) < ($sub1);
  if ($cmp2) { __label__ = 1;; } else { __label__ = 3;; }
  $for_body_lr_ph$$for_end$27: do { 
    if (__label__ == 1) {

      var $m_ps=$this1+1;
      var $m_ps2=$this1+1;
      ;
      $for_body$29: while(1) { 

        var $2=$draw_addr;
        var $3=$2;
        var $vtable=IHEAP[$3];
        var $vfn=$vtable+6;
        var $4=IHEAP[$vfn];
        var $5=$i;
        var $6=IHEAP[$m_ps];
        var $arrayidx=$6+($5<<1);
        var $7=$i;
        var $add=($7)+1;
        var $8=IHEAP[$m_ps2];
        var $arrayidx3=$8+($add<<1);
        FUNCTION_TABLE[$4]($2, $arrayidx, $arrayidx3, $c);
        var $9=$i;
        var $inc=($9)+1;
        $i=$inc;
        var $10=$i;
        var $11=IHEAP[$m_count];
        var $sub=($11)-1;
        var $cmp=($10) < ($sub);
        if (!($cmp)) { __label__ = 3;break $for_body_lr_ph$$for_end$27; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN7b2ColorC2Efff($this, $r, $g, $b) {
  ;
  var __label__;

  var $this_addr;
  var $r_addr;
  var $g_addr;
  var $b_addr;
  $this_addr=$this;
  $r_addr=$r;
  $g_addr=$g;
  $b_addr=$b;
  var $this1=$this_addr;
  var $r2=$this1;
  var $0=$r_addr;
  FHEAP[$r2]=$0;
  var $g3=$this1+1;
  var $1=$g_addr;
  FHEAP[$g3]=$1;
  var $b4=$this1+2;
  var $2=$b_addr;
  FHEAP[$b4]=$2;
  ;
  return;
  return;
}


function __ZN11b2RopeJointC2EPK14b2RopeJointDef($this, $def) {
  ;
  var __label__;

  var $this_addr;
  var $def_addr;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$def_addr;
  var $2=$1;
  __ZN7b2JointC2EPK10b2JointDef($0, $2);
  var $3=$this1;
  IHEAP[$3]=__ZTV11b2RopeJoint+2;
  var $m_localAnchorA=$this1+18;
  __ZN6b2Vec2C1Ev($m_localAnchorA);
  var $m_localAnchorB=$this1+20;
  __ZN6b2Vec2C1Ev($m_localAnchorB);
  var $m_u=$this1+27;
  __ZN6b2Vec2C1Ev($m_u);
  var $m_rA=$this1+29;
  __ZN6b2Vec2C1Ev($m_rA);
  var $m_rB=$this1+31;
  __ZN6b2Vec2C1Ev($m_rB);
  var $m_localCenterA=$this1+33;
  __ZN6b2Vec2C1Ev($m_localCenterA);
  var $m_localCenterB=$this1+35;
  __ZN6b2Vec2C1Ev($m_localCenterB);
  var $m_localAnchorA8=$this1+18;
  var $4=$def_addr;
  var $localAnchorA=$4+5;
  var $5=$m_localAnchorA8;
  var $6=$localAnchorA;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_localAnchorB9=$this1+20;
  var $7=$def_addr;
  var $localAnchorB=$7+7;
  var $8=$m_localAnchorB9;
  var $9=$localAnchorB;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $10=$def_addr;
  var $maxLength=$10+9;
  var $11=FHEAP[$maxLength];
  var $m_maxLength=$this1+22;
  FHEAP[$m_maxLength]=$11;
  var $m_mass=$this1+41;
  FHEAP[$m_mass]=0;
  var $m_impulse=$this1+24;
  FHEAP[$m_impulse]=0;
  var $m_state=$this1+42;
  IHEAP[$m_state]=0;
  var $m_length=$this1+23;
  FHEAP[$m_length]=0;
  ;
  return;
  return;
}
__ZN11b2RopeJointC2EPK14b2RopeJointDef["X"]=1;

function __ZN6b2Rope7SolveC3Ev($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 30;
  var __label__;

  var $__y_addr_i;
  var $__x_addr_i;
  var $this_addr;
  var $count3;
  var $i;
  var $p1=__stackBase__;
  var $p2=__stackBase__+2;
  var $p3=__stackBase__+4;
  var $m1;
  var $m2;
  var $m3;
  var $d1=__stackBase__+6;
  var $d2=__stackBase__+8;
  var $L1sqr;
  var $L2sqr;
  var $a;
  var $b;
  var $angle;
  var $Jd1=__stackBase__+10;
  var $ref_tmp=__stackBase__+12;
  var $Jd2=__stackBase__+14;
  var $ref_tmp20=__stackBase__+16;
  var $J1=__stackBase__+18;
  var $J2=__stackBase__+20;
  var $J3=__stackBase__+22;
  var $mass;
  var $C;
  var $impulse;
  var $ref_tmp51=__stackBase__+24;
  var $ref_tmp53=__stackBase__+26;
  var $ref_tmp55=__stackBase__+28;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_count=$this1;
  var $0=IHEAP[$m_count];
  var $sub=($0)-2;
  $count3=$sub;
  $i=0;
  var $1=$i;
  var $2=$count3;
  var $cmp3=($1) < ($2);
  if ($cmp3) { __label__ = 1;; } else { __label__ = 10;; }
  $for_body_lr_ph$$for_end$2: do { 
    if (__label__ == 1) {

      var $m_ps=$this1+1;
      var $3=$p1;
      var $m_ps2=$this1+1;
      var $4=$p2;
      var $m_ps5=$this1+1;
      var $5=$p3;
      var $m_ims=$this1+4;
      var $m_ims9=$this1+4;
      var $m_ims12=$this1+4;
      ;
      ;
      ;
      ;
      var $10=$J3;
      var $11=$Jd2;
      var $m_as=$this1+6;
      var $m_k3=$this1+11;
      var $m_ps57=$this1+1;
      var $12=$p1;
      var $m_ps60=$this1+1;
      var $13=$p2;
      var $m_ps63=$this1+1;
      var $14=$p3;
      var $m_as44=$this1+6;
      var $m_as37=$this1+6;
      ;
      $for_body$4: while(1) { 

        var $15=$i;
        var $16=IHEAP[$m_ps];
        var $arrayidx=$16+($15<<1);
        var $17=$arrayidx;
        IHEAP[$3]=IHEAP[$17]; FHEAP[$3]=FHEAP[$17]; ; IHEAP[$3+1]=IHEAP[$17+1]; FHEAP[$3+1]=FHEAP[$17+1]; ;
        var $18=$i;
        var $add=($18)+1;
        var $19=IHEAP[$m_ps2];
        var $arrayidx3=$19+($add<<1);
        var $20=$arrayidx3;
        IHEAP[$4]=IHEAP[$20]; FHEAP[$4]=FHEAP[$20]; ; IHEAP[$4+1]=IHEAP[$20+1]; FHEAP[$4+1]=FHEAP[$20+1]; ;
        var $21=$i;
        var $add4=($21)+2;
        var $22=IHEAP[$m_ps5];
        var $arrayidx6=$22+($add4<<1);
        var $23=$arrayidx6;
        IHEAP[$5]=IHEAP[$23]; FHEAP[$5]=FHEAP[$23]; ; IHEAP[$5+1]=IHEAP[$23+1]; FHEAP[$5+1]=FHEAP[$23+1]; ;
        var $24=$i;
        var $25=IHEAP[$m_ims];
        var $arrayidx7=$25+$24;
        var $26=FHEAP[$arrayidx7];
        $m1=$26;
        var $27=$i;
        var $add8=($27)+1;
        var $28=IHEAP[$m_ims9];
        var $arrayidx10=$28+$add8;
        var $29=FHEAP[$arrayidx10];
        $m2=$29;
        var $30=$i;
        var $add11=($30)+2;
        var $31=IHEAP[$m_ims12];
        var $arrayidx13=$31+$add11;
        var $32=FHEAP[$arrayidx13];
        $m3=$32;
        __ZmiRK6b2Vec2S1_($d1, $p2, $p1);
        __ZmiRK6b2Vec2S1_($d2, $p3, $p2);
        var $call=__ZNK6b2Vec213LengthSquaredEv($d1);
        $L1sqr=$call;
        var $call14=__ZNK6b2Vec213LengthSquaredEv($d2);
        $L2sqr=$call14;
        var $33=$L1sqr;
        var $34=$L2sqr;
        var $mul=($33)*($34);
        var $cmp15=($mul) == 0;
        if ($cmp15) { __label__ = 9;; } else { __label__ = 3;; }
        $for_inc$$if_end$6: do { 
          if (__label__ == 3) {

            var $call16=__Z7b2CrossRK6b2Vec2S1_($d1, $d2);
            $a=$call16;
            var $call17=__Z5b2DotRK6b2Vec2S1_($d1, $d2);
            $b=$call17;
            var $35=$a;
            var $36=$b;
            $__y_addr_i=$35;
            $__x_addr_i=$36;
            var $37=$__y_addr_i;
            var $38=$__x_addr_i;
            var $call_i=_atan2f($37, $38);
            $angle=$call_i;
            var $39=$L1sqr;
            var $div=-1/($39);
            __ZNK6b2Vec24SkewEv($ref_tmp, $d1);
            __ZmlfRK6b2Vec2($Jd1, $div, $ref_tmp);
            var $40=$L2sqr;
            var $div19=1/($40);
            __ZNK6b2Vec24SkewEv($ref_tmp20, $d2);
            __ZmlfRK6b2Vec2($Jd2, $div19, $ref_tmp20);
            __ZNK6b2Vec2ngEv($J1, $Jd1);
            __ZmiRK6b2Vec2S1_($J2, $Jd1, $Jd2);
            IHEAP[$10]=IHEAP[$11]; FHEAP[$10]=FHEAP[$11]; ; IHEAP[$10+1]=IHEAP[$11+1]; FHEAP[$10+1]=FHEAP[$11+1]; ;
            var $41=$m1;
            var $call21=__Z5b2DotRK6b2Vec2S1_($J1, $J1);
            var $mul22=($41)*($call21);
            var $42=$m2;
            var $call23=__Z5b2DotRK6b2Vec2S1_($J2, $J2);
            var $mul24=($42)*($call23);
            var $add25=($mul22)+($mul24);
            var $43=$m3;
            var $call26=__Z5b2DotRK6b2Vec2S1_($J3, $J3);
            var $mul27=($43)*($call26);
            var $add28=($add25)+($mul27);
            $mass=$add28;
            var $44=$mass;
            var $cmp29=($44) == 0;
            if ($cmp29) { __label__ = 9;break $for_inc$$if_end$6; }

            var $45=$mass;
            var $div32=1/($45);
            $mass=$div32;
            var $46=$angle;
            var $47=$i;
            var $48=IHEAP[$m_as];
            var $arrayidx33=$48+$47;
            var $49=FHEAP[$arrayidx33];
            var $sub34=($46)-($49);
            $C=$sub34;
            var $cmp351=($sub34) > 3.1415927410125732;
            if ($cmp351) { __label__ = 5;; } else { var $_pr = $sub34;__label__ = 6;; }
            $while_body$$while_cond40thread_pre_split$9: do { 
              if (__label__ == 5) {
                $while_body$10: while(1) { 

                  var $50=$angle;
                  var $sub36=($50)-6.2831854820251465;
                  $angle=$sub36;
                  var $51=$angle;
                  var $52=$i;
                  var $53=IHEAP[$m_as37];
                  var $arrayidx38=$53+$52;
                  var $54=FHEAP[$arrayidx38];
                  var $sub39=($51)-($54);
                  $C=$sub39;
                  var $cmp35=($sub39) > 3.1415927410125732;
                  if (!($cmp35)) { var $_pr = $sub39;__label__ = 6;break $while_body$$while_cond40thread_pre_split$9; }
                }
              }
            } while(0);

            var $_pr;
            var $cmp412=($_pr) < -3.1415927410125732;
            if ($cmp412) { __label__ = 7;; } else { __label__ = 8;; }
            $while_body42$$while_end47$13: do { 
              if (__label__ == 7) {
                $while_body42$14: while(1) { 

                  var $55=$angle;
                  var $add43=($55)+6.2831854820251465;
                  $angle=$add43;
                  var $56=$angle;
                  var $57=$i;
                  var $58=IHEAP[$m_as44];
                  var $arrayidx45=$58+$57;
                  var $59=FHEAP[$arrayidx45];
                  var $sub46=($56)-($59);
                  $C=$sub46;
                  var $cmp41=($sub46) < -3.1415927410125732;
                  if (!($cmp41)) { __label__ = 8;break $while_body42$$while_end47$13; }
                }
              }
            } while(0);

            var $60=FHEAP[$m_k3];
            var $sub48=(-($60));
            var $61=$mass;
            var $mul49=($sub48)*($61);
            var $62=$C;
            var $mul50=($mul49)*($62);
            $impulse=$mul50;
            var $63=$m1;
            var $64=$impulse;
            var $mul52=($63)*($64);
            __ZmlfRK6b2Vec2($ref_tmp51, $mul52, $J1);
            __ZN6b2Vec2pLERKS_($p1, $ref_tmp51);
            var $65=$m2;
            var $66=$impulse;
            var $mul54=($65)*($66);
            __ZmlfRK6b2Vec2($ref_tmp53, $mul54, $J2);
            __ZN6b2Vec2pLERKS_($p2, $ref_tmp53);
            var $67=$m3;
            var $68=$impulse;
            var $mul56=($67)*($68);
            __ZmlfRK6b2Vec2($ref_tmp55, $mul56, $J3);
            __ZN6b2Vec2pLERKS_($p3, $ref_tmp55);
            var $69=$i;
            var $70=IHEAP[$m_ps57];
            var $arrayidx58=$70+($69<<1);
            var $71=$arrayidx58;
            IHEAP[$71]=IHEAP[$12]; FHEAP[$71]=FHEAP[$12]; ; IHEAP[$71+1]=IHEAP[$12+1]; FHEAP[$71+1]=FHEAP[$12+1]; ;
            var $72=$i;
            var $add59=($72)+1;
            var $73=IHEAP[$m_ps60];
            var $arrayidx61=$73+($add59<<1);
            var $74=$arrayidx61;
            IHEAP[$74]=IHEAP[$13]; FHEAP[$74]=FHEAP[$13]; ; IHEAP[$74+1]=IHEAP[$13+1]; FHEAP[$74+1]=FHEAP[$13+1]; ;
            var $75=$i;
            var $add62=($75)+2;
            var $76=IHEAP[$m_ps63];
            var $arrayidx64=$76+($add62<<1);
            var $77=$arrayidx64;
            IHEAP[$77]=IHEAP[$14]; FHEAP[$77]=FHEAP[$14]; ; IHEAP[$77+1]=IHEAP[$14+1]; FHEAP[$77+1]=FHEAP[$14+1]; ;
            ;
          }
        } while(0);

        var $78=$i;
        var $inc=($78)+1;
        $i=$inc;
        var $79=$i;
        var $80=$count3;
        var $cmp=($79) < ($80);
        if (!($cmp)) { __label__ = 10;break $for_body_lr_ph$$for_end$2; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN6b2Rope7SolveC3Ev["X"]=1;

function __ZN11b2RopeJoint23InitVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 32;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $vA=__stackBase__+2;
  var $wA;
  var $cB=__stackBase__+4;
  var $aB;
  var $vB=__stackBase__+6;
  var $wB;
  var $qA=__stackBase__+8;
  var $qB=__stackBase__+10;
  var $ref_tmp=__stackBase__+12;
  var $ref_tmp38=__stackBase__+14;
  var $ref_tmp40=__stackBase__+16;
  var $ref_tmp41=__stackBase__+18;
  var $ref_tmp43=__stackBase__+20;
  var $ref_tmp44=__stackBase__+22;
  var $ref_tmp45=__stackBase__+24;
  var $C;
  var $crA;
  var $crB;
  var $invMass;
  var $P=__stackBase__+26;
  var $ref_tmp83=__stackBase__+28;
  var $ref_tmp90=__stackBase__+30;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  var $m_indexA=$this1+25;
  IHEAP[$m_indexA]=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  var $m_indexB=$this1+26;
  IHEAP[$m_indexB]=$5;
  var $m_localCenterA=$this1+33;
  var $6=$this1;
  var $m_bodyA3=$6+12;
  var $7=IHEAP[$m_bodyA3];
  var $m_sweep=$7+7;
  var $localCenter=$m_sweep;
  var $8=$m_localCenterA;
  var $9=$localCenter;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localCenterB=$this1+35;
  var $10=$this1;
  var $m_bodyB4=$10+13;
  var $11=IHEAP[$m_bodyB4];
  var $m_sweep5=$11+7;
  var $localCenter6=$m_sweep5;
  var $12=$m_localCenterB;
  var $13=$localCenter6;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$this1;
  var $m_bodyA7=$14+12;
  var $15=IHEAP[$m_bodyA7];
  var $m_invMass=$15+30;
  var $16=FHEAP[$m_invMass];
  var $m_invMassA=$this1+37;
  FHEAP[$m_invMassA]=$16;
  var $17=$this1;
  var $m_bodyB8=$17+13;
  var $18=IHEAP[$m_bodyB8];
  var $m_invMass9=$18+30;
  var $19=FHEAP[$m_invMass9];
  var $m_invMassB=$this1+38;
  FHEAP[$m_invMassB]=$19;
  var $20=$this1;
  var $m_bodyA10=$20+12;
  var $21=IHEAP[$m_bodyA10];
  var $m_invI=$21+32;
  var $22=FHEAP[$m_invI];
  var $m_invIA=$this1+39;
  FHEAP[$m_invIA]=$22;
  var $23=$this1;
  var $m_bodyB11=$23+13;
  var $24=IHEAP[$m_bodyB11];
  var $m_invI12=$24+32;
  var $25=FHEAP[$m_invI12];
  var $m_invIB=$this1+40;
  FHEAP[$m_invIB]=$25;
  var $m_indexA13=$this1+25;
  var $26=IHEAP[$m_indexA13];
  var $27=$data_addr;
  var $positions=$27+6;
  var $28=IHEAP[$positions];
  var $arrayidx=$28+$26*3;
  var $c=$arrayidx;
  var $29=$cA;
  var $30=$c;
  IHEAP[$29]=IHEAP[$30]; FHEAP[$29]=FHEAP[$30]; ; IHEAP[$29+1]=IHEAP[$30+1]; FHEAP[$29+1]=FHEAP[$30+1]; ;
  var $m_indexA14=$this1+25;
  var $31=IHEAP[$m_indexA14];
  var $32=$data_addr;
  var $positions15=$32+6;
  var $33=IHEAP[$positions15];
  var $arrayidx16=$33+$31*3;
  var $a=$arrayidx16+2;
  var $34=FHEAP[$a];
  $aA=$34;
  var $m_indexA17=$this1+25;
  var $35=IHEAP[$m_indexA17];
  var $36=$data_addr;
  var $velocities=$36+7;
  var $37=IHEAP[$velocities];
  var $arrayidx18=$37+$35*3;
  var $v=$arrayidx18;
  var $38=$vA;
  var $39=$v;
  IHEAP[$38]=IHEAP[$39]; FHEAP[$38]=FHEAP[$39]; ; IHEAP[$38+1]=IHEAP[$39+1]; FHEAP[$38+1]=FHEAP[$39+1]; ;
  var $m_indexA19=$this1+25;
  var $40=IHEAP[$m_indexA19];
  var $41=$data_addr;
  var $velocities20=$41+7;
  var $42=IHEAP[$velocities20];
  var $arrayidx21=$42+$40*3;
  var $w=$arrayidx21+2;
  var $43=FHEAP[$w];
  $wA=$43;
  var $m_indexB22=$this1+26;
  var $44=IHEAP[$m_indexB22];
  var $45=$data_addr;
  var $positions23=$45+6;
  var $46=IHEAP[$positions23];
  var $arrayidx24=$46+$44*3;
  var $c25=$arrayidx24;
  var $47=$cB;
  var $48=$c25;
  IHEAP[$47]=IHEAP[$48]; FHEAP[$47]=FHEAP[$48]; ; IHEAP[$47+1]=IHEAP[$48+1]; FHEAP[$47+1]=FHEAP[$48+1]; ;
  var $m_indexB26=$this1+26;
  var $49=IHEAP[$m_indexB26];
  var $50=$data_addr;
  var $positions27=$50+6;
  var $51=IHEAP[$positions27];
  var $arrayidx28=$51+$49*3;
  var $a29=$arrayidx28+2;
  var $52=FHEAP[$a29];
  $aB=$52;
  var $m_indexB30=$this1+26;
  var $53=IHEAP[$m_indexB30];
  var $54=$data_addr;
  var $velocities31=$54+7;
  var $55=IHEAP[$velocities31];
  var $arrayidx32=$55+$53*3;
  var $v33=$arrayidx32;
  var $56=$vB;
  var $57=$v33;
  IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
  var $m_indexB34=$this1+26;
  var $58=IHEAP[$m_indexB34];
  var $59=$data_addr;
  var $velocities35=$59+7;
  var $60=IHEAP[$velocities35];
  var $arrayidx36=$60+$58*3;
  var $w37=$arrayidx36+2;
  var $61=FHEAP[$w37];
  $wB=$61;
  var $62=$aA;
  __ZN5b2RotC1Ef($qA, $62);
  var $63=$aB;
  __ZN5b2RotC1Ef($qB, $63);
  var $m_rA=$this1+29;
  var $m_localAnchorA=$this1+18;
  var $m_localCenterA39=$this1+33;
  __ZmiRK6b2Vec2S1_($ref_tmp38, $m_localAnchorA, $m_localCenterA39);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $qA, $ref_tmp38);
  var $64=$m_rA;
  var $65=$ref_tmp;
  IHEAP[$64]=IHEAP[$65]; FHEAP[$64]=FHEAP[$65]; ; IHEAP[$64+1]=IHEAP[$65+1]; FHEAP[$64+1]=FHEAP[$65+1]; ;
  var $m_rB=$this1+31;
  var $m_localAnchorB=$this1+20;
  var $m_localCenterB42=$this1+35;
  __ZmiRK6b2Vec2S1_($ref_tmp41, $m_localAnchorB, $m_localCenterB42);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp40, $qB, $ref_tmp41);
  var $66=$m_rB;
  var $67=$ref_tmp40;
  IHEAP[$66]=IHEAP[$67]; FHEAP[$66]=FHEAP[$67]; ; IHEAP[$66+1]=IHEAP[$67+1]; FHEAP[$66+1]=FHEAP[$67+1]; ;
  var $m_u=$this1+27;
  var $m_rB46=$this1+31;
  __ZplRK6b2Vec2S1_($ref_tmp45, $cB, $m_rB46);
  __ZmiRK6b2Vec2S1_($ref_tmp44, $ref_tmp45, $cA);
  var $m_rA47=$this1+29;
  __ZmiRK6b2Vec2S1_($ref_tmp43, $ref_tmp44, $m_rA47);
  var $68=$m_u;
  var $69=$ref_tmp43;
  IHEAP[$68]=IHEAP[$69]; FHEAP[$68]=FHEAP[$69]; ; IHEAP[$68+1]=IHEAP[$69+1]; FHEAP[$68+1]=FHEAP[$69+1]; ;
  var $m_u48=$this1+27;
  var $call=__ZNK6b2Vec26LengthEv($m_u48);
  var $m_length=$this1+23;
  FHEAP[$m_length]=$call;
  var $m_length49=$this1+23;
  var $70=FHEAP[$m_length49];
  var $m_maxLength=$this1+22;
  var $71=FHEAP[$m_maxLength];
  var $sub=($70)-($71);
  $C=$sub;
  var $72=$C;
  var $cmp=($72) > 0;
  var $m_state=$this1+42;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_else$36: do { 
    if (__label__ == 1) {

      IHEAP[$m_state]=2;
      ;
    }
    else if (__label__ == 2) {

      IHEAP[$m_state]=0;
      ;
    }
  } while(0);

  var $m_length51=$this1+23;
  var $73=FHEAP[$m_length51];
  var $cmp52=($73) > 0.004999999888241291;
  var $m_u54=$this1+27;
  if ($cmp52) { __label__ = 4;; } else { __label__ = 5;; }
  $if_then53$$if_else56$40: do { 
    if (__label__ == 4) {

      var $m_length55=$this1+23;
      var $74=FHEAP[$m_length55];
      var $div=1/($74);
      __ZN6b2Vec2mLEf($m_u54, $div);
      var $m_rA59=$this1+29;
      var $m_u60=$this1+27;
      var $call61=__Z7b2CrossRK6b2Vec2S1_($m_rA59, $m_u60);
      $crA=$call61;
      var $m_rB62=$this1+31;
      var $m_u63=$this1+27;
      var $call64=__Z7b2CrossRK6b2Vec2S1_($m_rB62, $m_u63);
      $crB=$call64;
      var $m_invMassA65=$this1+37;
      var $75=FHEAP[$m_invMassA65];
      var $m_invIA66=$this1+39;
      var $76=FHEAP[$m_invIA66];
      var $77=$crA;
      var $mul=($76)*($77);
      var $78=$crA;
      var $mul67=($mul)*($78);
      var $add=($75)+($mul67);
      var $m_invMassB68=$this1+38;
      var $79=FHEAP[$m_invMassB68];
      var $add69=($add)+($79);
      var $m_invIB70=$this1+40;
      var $80=FHEAP[$m_invIB70];
      var $81=$crB;
      var $mul71=($80)*($81);
      var $82=$crB;
      var $mul72=($mul71)*($82);
      var $add73=($add69)+($mul72);
      $invMass=$add73;
      var $83=$invMass;
      var $cmp74=($83) != 0;
      if ($cmp74) { __label__ = 6;; } else { var $cond = 0;__label__ = 7;; }
      $cond_true$$cond_end$42: do { 
        if (__label__ == 6) {

          var $84=$invMass;
          var $div75=1/($84);
          var $cond = $div75;;
        }
      } while(0);

      var $cond;
      var $m_mass76=$this1+41;
      FHEAP[$m_mass76]=$cond;
      var $85=$data_addr;
      var $step=$85;
      var $warmStarting=$step+5;
      var $86=IHEAP[$warmStarting];
      var $tobool=((($86)) & 1);
      if ($tobool) { __label__ = 8;; } else { __label__ = 9;; }
      $if_then77$$if_else97$45: do { 
        if (__label__ == 8) {

          var $87=$data_addr;
          var $step78=$87;
          var $dtRatio=$step78+2;
          var $88=FHEAP[$dtRatio];
          var $m_impulse79=$this1+24;
          var $89=FHEAP[$m_impulse79];
          var $mul80=($89)*($88);
          FHEAP[$m_impulse79]=$mul80;
          var $m_impulse81=$this1+24;
          var $90=FHEAP[$m_impulse81];
          var $m_u82=$this1+27;
          __ZmlfRK6b2Vec2($P, $90, $m_u82);
          var $m_invMassA84=$this1+37;
          var $91=FHEAP[$m_invMassA84];
          __ZmlfRK6b2Vec2($ref_tmp83, $91, $P);
          __ZN6b2Vec2mIERKS_($vA, $ref_tmp83);
          var $m_invIA85=$this1+39;
          var $92=FHEAP[$m_invIA85];
          var $m_rA86=$this1+29;
          var $call87=__Z7b2CrossRK6b2Vec2S1_($m_rA86, $P);
          var $mul88=($92)*($call87);
          var $93=$wA;
          var $sub89=($93)-($mul88);
          $wA=$sub89;
          var $m_invMassB91=$this1+38;
          var $94=FHEAP[$m_invMassB91];
          __ZmlfRK6b2Vec2($ref_tmp90, $94, $P);
          __ZN6b2Vec2pLERKS_($vB, $ref_tmp90);
          var $m_invIB92=$this1+40;
          var $95=FHEAP[$m_invIB92];
          var $m_rB93=$this1+31;
          var $call94=__Z7b2CrossRK6b2Vec2S1_($m_rB93, $P);
          var $mul95=($95)*($call94);
          var $96=$wB;
          var $add96=($96)+($mul95);
          $wB=$add96;
          ;
        }
        else if (__label__ == 9) {

          var $m_impulse98=$this1+24;
          FHEAP[$m_impulse98]=0;
          ;
        }
      } while(0);

      var $m_indexA100=$this1+25;
      var $97=IHEAP[$m_indexA100];
      var $98=$data_addr;
      var $velocities101=$98+7;
      var $99=IHEAP[$velocities101];
      var $arrayidx102=$99+$97*3;
      var $v103=$arrayidx102;
      var $100=$v103;
      var $101=$vA;
      IHEAP[$100]=IHEAP[$101]; FHEAP[$100]=FHEAP[$101]; ; IHEAP[$100+1]=IHEAP[$101+1]; FHEAP[$100+1]=FHEAP[$101+1]; ;
      var $102=$wA;
      var $m_indexA104=$this1+25;
      var $103=IHEAP[$m_indexA104];
      var $104=$data_addr;
      var $velocities105=$104+7;
      var $105=IHEAP[$velocities105];
      var $arrayidx106=$105+$103*3;
      var $w107=$arrayidx106+2;
      FHEAP[$w107]=$102;
      var $m_indexB108=$this1+26;
      var $106=IHEAP[$m_indexB108];
      var $107=$data_addr;
      var $velocities109=$107+7;
      var $108=IHEAP[$velocities109];
      var $arrayidx110=$108+$106*3;
      var $v111=$arrayidx110;
      var $109=$v111;
      var $110=$vB;
      IHEAP[$109]=IHEAP[$110]; FHEAP[$109]=FHEAP[$110]; ; IHEAP[$109+1]=IHEAP[$110+1]; FHEAP[$109+1]=FHEAP[$110+1]; ;
      var $111=$wB;
      var $m_indexB112=$this1+26;
      var $112=IHEAP[$m_indexB112];
      var $113=$data_addr;
      var $velocities113=$113+7;
      var $114=IHEAP[$velocities113];
      var $arrayidx114=$114+$112*3;
      var $w115=$arrayidx114+2;
      FHEAP[$w115]=$111;
      ;
    }
    else if (__label__ == 5) {

      __ZN6b2Vec27SetZeroEv($m_u54);
      var $m_mass=$this1+41;
      FHEAP[$m_mass]=0;
      var $m_impulse=$this1+24;
      FHEAP[$m_impulse]=0;
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN11b2RopeJoint23InitVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZNK11b2RopeJoint17GetReactionTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  ;
  return 0;
  return null;
}


function __ZN11b2RopeJointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2RopeJointD2Ev($this1);
  ;
  return;
  return;
}


function __Z6b2FreePv($mem) {
  ;
  var __label__;

  var $mem_addr;
  $mem_addr=$mem;
  var $0=$mem_addr;
  ;
  ;
  return;
  return;
}


function __ZN11b2RopeJointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2RopeJointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN11b2RopeJointD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2JointD2Ev($0);
  ;
  return;
  return;
}


function __ZNK11b2RopeJoint10GetAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+18;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorA);
  ;
  return;
  return;
}


function __ZNK11b2RopeJoint10GetAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+20;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorB);
  ;
  return;
  return;
}


function __ZNK11b2RopeJoint16GetReactionForceEf($agg_result, $this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_impulse=$this1+24;
  var $1=FHEAP[$m_impulse];
  var $mul=($0)*($1);
  var $m_u=$this1+27;
  __ZmlfRK6b2Vec2($agg_result, $mul, $m_u);
  ;
  return;
  return;
}


function __ZNK11b2RopeJoint12GetMaxLengthEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_maxLength=$this1+22;
  var $0=FHEAP[$m_maxLength];
  ;
  return $0;
  return null;
}


function __ZNK11b2RopeJoint13GetLimitStateEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_state=$this1+42;
  var $0=IHEAP[$m_state];
  ;
  return $0;
  return null;
}


function __ZN11b2RopeJoint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $indexA;
  var $indexB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  $indexA=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  $indexB=$5;
  __Z5b2LogPKcz(__str339, allocate(1, "i32", ALLOC_STACK));
  var $6=$indexA;
  __Z5b2LogPKcz(__str1392, allocate([$6], "i32", ALLOC_STACK));
  var $7=$indexB;
  __Z5b2LogPKcz(__str2393, allocate([$7], "i32", ALLOC_STACK));
  var $8=$this1;
  var $m_collideConnected=$8+16;
  var $9=IHEAP[$m_collideConnected];
  var $tobool=((($9)) & 1);
  var $conv=($tobool);
  __Z5b2LogPKcz(__str3394, allocate([$conv], "i32", ALLOC_STACK));
  var $m_localAnchorA=$this1+18;
  var $x=$m_localAnchorA;
  var $10=FHEAP[$x];
  var $conv3=($10);
  var $m_localAnchorA4=$this1+18;
  var $y=$m_localAnchorA4+1;
  var $11=FHEAP[$y];
  var $conv5=($11);
  __Z5b2LogPKcz(__str4395, allocate([$conv3,$conv5], "double", ALLOC_STACK));
  var $m_localAnchorB=$this1+20;
  var $x6=$m_localAnchorB;
  var $12=FHEAP[$x6];
  var $conv7=($12);
  var $m_localAnchorB8=$this1+20;
  var $y9=$m_localAnchorB8+1;
  var $13=FHEAP[$y9];
  var $conv10=($13);
  __Z5b2LogPKcz(__str5396, allocate([$conv7,$conv10], "double", ALLOC_STACK));
  var $m_maxLength=$this1+22;
  var $14=FHEAP[$m_maxLength];
  var $conv11=($14);
  __Z5b2LogPKcz(__str6345, allocate([$conv11], "double", ALLOC_STACK));
  var $15=$this1;
  var $m_index=$15+14;
  var $16=IHEAP[$m_index];
  __Z5b2LogPKcz(__str12403, allocate([$16], "i32", ALLOC_STACK));
  ;
  return;
  return;
}
__ZN11b2RopeJoint4DumpEv["X"]=1;

function __ZN16b2StackAllocatorC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_index=$this1+102400;
  IHEAP[$m_index]=0;
  var $m_allocation=$this1+102401;
  IHEAP[$m_allocation]=0;
  var $m_maxAllocation=$this1+102402;
  IHEAP[$m_maxAllocation]=0;
  var $m_entryCount=$this1+102499;
  IHEAP[$m_entryCount]=0;
  ;
  return;
  return;
}


function __ZN16b2StackAllocatorD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_index=$this1+102400;
  var $0=IHEAP[$m_index];
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$21: do { 
    if (__label__ == 1) {

      ___assert_func(__str355, 32, ___PRETTY_FUNCTION____ZN16b2StackAllocatorD2Ev, __str1356);
      ;
    }
  } while(0);

  var $m_entryCount=$this1+102499;
  var $1=IHEAP[$m_entryCount];
  var $cmp2=($1)==0;
  if ($cmp2) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end5$$cond_false4$24: do { 
    if (__label__ == 3) {

      ___assert_func(__str355, 33, ___PRETTY_FUNCTION____ZN16b2StackAllocatorD2Ev, __str2357);
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN16b2StackAllocator4FreeEPv($this, $p) {
  ;
  var __label__;

  var $this_addr;
  var $p_addr;
  var $entry2;
  $this_addr=$this;
  $p_addr=$p;
  var $this1=$this_addr;
  var $m_entryCount=$this1+102499;
  var $0=IHEAP[$m_entryCount];
  var $cmp=($0) > 0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$36: do { 
    if (__label__ == 1) {

      ___assert_func(__str355, 63, ___PRETTY_FUNCTION____ZN16b2StackAllocator4FreeEPv, __str4359);
      ;
    }
  } while(0);

  var $m_entries=$this1+102403;
  var $arraydecay=$m_entries;
  var $m_entryCount3=$this1+102499;
  var $1=IHEAP[$m_entryCount3];
  var $add_ptr=$arraydecay+$1*3;
  var $add_ptr4=$add_ptr-3;
  $entry2=$add_ptr4;
  var $2=$p_addr;
  var $3=$entry2;
  var $data=$3;
  var $4=IHEAP[$data];
  var $cmp5=($2)==($4);
  if ($cmp5) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end8$$cond_false7$39: do { 
    if (__label__ == 3) {

      ___assert_func(__str355, 65, ___PRETTY_FUNCTION____ZN16b2StackAllocator4FreeEPv, __str5360);
      ;
    }
  } while(0);

  var $5=$entry2;
  var $usedMalloc=$5+2;
  var $6=IHEAP[$usedMalloc];
  var $tobool=((($6)) & 1);
  if ($tobool) { __label__ = 5;; } else { __label__ = 6;; }
  $if_then$$if_else$42: do { 
    if (__label__ == 5) {

      var $7=$p_addr;
      __Z6b2FreePv($7);
      ;
    }
    else if (__label__ == 6) {

      var $8=$entry2;
      var $size=$8+1;
      var $9=IHEAP[$size];
      var $m_index=$this1+102400;
      var $10=IHEAP[$m_index];
      var $sub=($10)-($9);
      IHEAP[$m_index]=$sub;
      ;
    }
  } while(0);

  var $11=$entry2;
  var $size9=$11+1;
  var $12=IHEAP[$size9];
  var $m_allocation=$this1+102401;
  var $13=IHEAP[$m_allocation];
  var $sub10=($13)-($12);
  IHEAP[$m_allocation]=$sub10;
  var $m_entryCount11=$this1+102499;
  var $14=IHEAP[$m_entryCount11];
  var $dec=($14)-1;
  IHEAP[$m_entryCount11]=$dec;
  ;
  return;
  return;
}
__ZN16b2StackAllocator4FreeEPv["X"]=1;

function __ZNK16b2StackAllocator16GetMaxAllocationEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_maxAllocation=$this1+102402;
  var $0=IHEAP[$m_maxAllocation];
  ;
  return $0;
  return null;
}


function __ZN11b2RopeJoint24SolveVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 20;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $vpA=__stackBase__+4;
  var $ref_tmp=__stackBase__+6;
  var $vpB=__stackBase__+8;
  var $ref_tmp12=__stackBase__+10;
  var $C;
  var $Cdot;
  var $ref_tmp13=__stackBase__+12;
  var $impulse;
  var $oldImpulse;
  var $P=__stackBase__+14;
  var $ref_tmp23=__stackBase__+16;
  var $ref_tmp28=__stackBase__+18;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+25;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $velocities=$1+7;
  var $2=IHEAP[$velocities];
  var $arrayidx=$2+$0*3;
  var $v=$arrayidx;
  var $3=$vA;
  var $4=$v;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+25;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $velocities3=$6+7;
  var $7=IHEAP[$velocities3];
  var $arrayidx4=$7+$5*3;
  var $w=$arrayidx4+2;
  var $8=FHEAP[$w];
  $wA=$8;
  var $m_indexB=$this1+26;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $velocities5=$10+7;
  var $11=IHEAP[$velocities5];
  var $arrayidx6=$11+$9*3;
  var $v7=$arrayidx6;
  var $12=$vB;
  var $13=$v7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+26;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $velocities9=$15+7;
  var $16=IHEAP[$velocities9];
  var $arrayidx10=$16+$14*3;
  var $w11=$arrayidx10+2;
  var $17=FHEAP[$w11];
  $wB=$17;
  var $18=$wA;
  var $m_rA=$this1+29;
  __Z7b2CrossfRK6b2Vec2($ref_tmp, $18, $m_rA);
  __ZplRK6b2Vec2S1_($vpA, $vA, $ref_tmp);
  var $19=$wB;
  var $m_rB=$this1+31;
  __Z7b2CrossfRK6b2Vec2($ref_tmp12, $19, $m_rB);
  __ZplRK6b2Vec2S1_($vpB, $vB, $ref_tmp12);
  var $m_length=$this1+23;
  var $20=FHEAP[$m_length];
  var $m_maxLength=$this1+22;
  var $21=FHEAP[$m_maxLength];
  var $sub=($20)-($21);
  $C=$sub;
  var $m_u=$this1+27;
  __ZmiRK6b2Vec2S1_($ref_tmp13, $vpB, $vpA);
  var $call=__Z5b2DotRK6b2Vec2S1_($m_u, $ref_tmp13);
  $Cdot=$call;
  var $22=$C;
  var $cmp=($22) < 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$2: do { 
    if (__label__ == 1) {

      var $23=$data_addr;
      var $step=$23;
      var $inv_dt=$step+1;
      var $24=FHEAP[$inv_dt];
      var $25=$C;
      var $mul=($24)*($25);
      var $26=$Cdot;
      var $add=($26)+($mul);
      $Cdot=$add;
      ;
    }
  } while(0);

  var $m_mass=$this1+41;
  var $27=FHEAP[$m_mass];
  var $sub14=(-($27));
  var $28=$Cdot;
  var $mul15=($sub14)*($28);
  $impulse=$mul15;
  var $m_impulse=$this1+24;
  var $29=FHEAP[$m_impulse];
  $oldImpulse=$29;
  var $m_impulse16=$this1+24;
  var $30=FHEAP[$m_impulse16];
  var $31=$impulse;
  var $add17=($30)+($31);
  var $call18=__Z5b2MinIfET_S0_S0_(0, $add17);
  var $m_impulse19=$this1+24;
  FHEAP[$m_impulse19]=$call18;
  var $m_impulse20=$this1+24;
  var $32=FHEAP[$m_impulse20];
  var $33=$oldImpulse;
  var $sub21=($32)-($33);
  $impulse=$sub21;
  var $34=$impulse;
  var $m_u22=$this1+27;
  __ZmlfRK6b2Vec2($P, $34, $m_u22);
  var $m_invMassA=$this1+37;
  var $35=FHEAP[$m_invMassA];
  __ZmlfRK6b2Vec2($ref_tmp23, $35, $P);
  __ZN6b2Vec2mIERKS_($vA, $ref_tmp23);
  var $m_invIA=$this1+39;
  var $36=FHEAP[$m_invIA];
  var $m_rA24=$this1+29;
  var $call25=__Z7b2CrossRK6b2Vec2S1_($m_rA24, $P);
  var $mul26=($36)*($call25);
  var $37=$wA;
  var $sub27=($37)-($mul26);
  $wA=$sub27;
  var $m_invMassB=$this1+38;
  var $38=FHEAP[$m_invMassB];
  __ZmlfRK6b2Vec2($ref_tmp28, $38, $P);
  __ZN6b2Vec2pLERKS_($vB, $ref_tmp28);
  var $m_invIB=$this1+40;
  var $39=FHEAP[$m_invIB];
  var $m_rB29=$this1+31;
  var $call30=__Z7b2CrossRK6b2Vec2S1_($m_rB29, $P);
  var $mul31=($39)*($call30);
  var $40=$wB;
  var $add32=($40)+($mul31);
  $wB=$add32;
  var $m_indexA33=$this1+25;
  var $41=IHEAP[$m_indexA33];
  var $42=$data_addr;
  var $velocities34=$42+7;
  var $43=IHEAP[$velocities34];
  var $arrayidx35=$43+$41*3;
  var $v36=$arrayidx35;
  var $44=$v36;
  var $45=$vA;
  IHEAP[$44]=IHEAP[$45]; FHEAP[$44]=FHEAP[$45]; ; IHEAP[$44+1]=IHEAP[$45+1]; FHEAP[$44+1]=FHEAP[$45+1]; ;
  var $46=$wA;
  var $m_indexA37=$this1+25;
  var $47=IHEAP[$m_indexA37];
  var $48=$data_addr;
  var $velocities38=$48+7;
  var $49=IHEAP[$velocities38];
  var $arrayidx39=$49+$47*3;
  var $w40=$arrayidx39+2;
  FHEAP[$w40]=$46;
  var $m_indexB41=$this1+26;
  var $50=IHEAP[$m_indexB41];
  var $51=$data_addr;
  var $velocities42=$51+7;
  var $52=IHEAP[$velocities42];
  var $arrayidx43=$52+$50*3;
  var $v44=$arrayidx43;
  var $53=$v44;
  var $54=$vB;
  IHEAP[$53]=IHEAP[$54]; FHEAP[$53]=FHEAP[$54]; ; IHEAP[$53+1]=IHEAP[$54+1]; FHEAP[$53+1]=FHEAP[$54+1]; ;
  var $55=$wB;
  var $m_indexB45=$this1+26;
  var $56=IHEAP[$m_indexB45];
  var $57=$data_addr;
  var $velocities46=$57+7;
  var $58=IHEAP[$velocities46];
  var $arrayidx47=$58+$56*3;
  var $w48=$arrayidx47+2;
  FHEAP[$w48]=$55;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN11b2RopeJoint24SolveVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN11b2RopeJoint24SolvePositionConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 28;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $cB=__stackBase__+2;
  var $aB;
  var $qA=__stackBase__+4;
  var $qB=__stackBase__+6;
  var $rA=__stackBase__+8;
  var $ref_tmp=__stackBase__+10;
  var $rB=__stackBase__+12;
  var $ref_tmp12=__stackBase__+14;
  var $u=__stackBase__+16;
  var $ref_tmp13=__stackBase__+18;
  var $ref_tmp14=__stackBase__+20;
  var $length;
  var $C;
  var $impulse;
  var $P=__stackBase__+22;
  var $ref_tmp17=__stackBase__+24;
  var $ref_tmp21=__stackBase__+26;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+25;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $positions=$1+6;
  var $2=IHEAP[$positions];
  var $arrayidx=$2+$0*3;
  var $c=$arrayidx;
  var $3=$cA;
  var $4=$c;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+25;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $positions3=$6+6;
  var $7=IHEAP[$positions3];
  var $arrayidx4=$7+$5*3;
  var $a=$arrayidx4+2;
  var $8=FHEAP[$a];
  $aA=$8;
  var $m_indexB=$this1+26;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $positions5=$10+6;
  var $11=IHEAP[$positions5];
  var $arrayidx6=$11+$9*3;
  var $c7=$arrayidx6;
  var $12=$cB;
  var $13=$c7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+26;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $positions9=$15+6;
  var $16=IHEAP[$positions9];
  var $arrayidx10=$16+$14*3;
  var $a11=$arrayidx10+2;
  var $17=FHEAP[$a11];
  $aB=$17;
  var $18=$aA;
  __ZN5b2RotC1Ef($qA, $18);
  var $19=$aB;
  __ZN5b2RotC1Ef($qB, $19);
  var $m_localAnchorA=$this1+18;
  var $m_localCenterA=$this1+33;
  __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorA, $m_localCenterA);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp);
  var $m_localAnchorB=$this1+20;
  var $m_localCenterB=$this1+35;
  __ZmiRK6b2Vec2S1_($ref_tmp12, $m_localAnchorB, $m_localCenterB);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp12);
  __ZplRK6b2Vec2S1_($ref_tmp14, $cB, $rB);
  __ZmiRK6b2Vec2S1_($ref_tmp13, $ref_tmp14, $cA);
  __ZmiRK6b2Vec2S1_($u, $ref_tmp13, $rA);
  var $call=__ZN6b2Vec29NormalizeEv($u);
  $length=$call;
  var $20=$length;
  var $m_maxLength=$this1+22;
  var $21=FHEAP[$m_maxLength];
  var $sub=($20)-($21);
  $C=$sub;
  var $22=$C;
  var $call15=__Z7b2ClampIfET_S0_S0_S0_($22, 0, 0.20000000298023224);
  $C=$call15;
  var $m_mass=$this1+41;
  var $23=FHEAP[$m_mass];
  var $sub16=(-($23));
  var $24=$C;
  var $mul=($sub16)*($24);
  $impulse=$mul;
  var $25=$impulse;
  __ZmlfRK6b2Vec2($P, $25, $u);
  var $m_invMassA=$this1+37;
  var $26=FHEAP[$m_invMassA];
  __ZmlfRK6b2Vec2($ref_tmp17, $26, $P);
  __ZN6b2Vec2mIERKS_($cA, $ref_tmp17);
  var $m_invIA=$this1+39;
  var $27=FHEAP[$m_invIA];
  var $call18=__Z7b2CrossRK6b2Vec2S1_($rA, $P);
  var $mul19=($27)*($call18);
  var $28=$aA;
  var $sub20=($28)-($mul19);
  $aA=$sub20;
  var $m_invMassB=$this1+38;
  var $29=FHEAP[$m_invMassB];
  __ZmlfRK6b2Vec2($ref_tmp21, $29, $P);
  __ZN6b2Vec2pLERKS_($cB, $ref_tmp21);
  var $m_invIB=$this1+40;
  var $30=FHEAP[$m_invIB];
  var $call22=__Z7b2CrossRK6b2Vec2S1_($rB, $P);
  var $mul23=($30)*($call22);
  var $31=$aB;
  var $add=($31)+($mul23);
  $aB=$add;
  var $m_indexA24=$this1+25;
  var $32=IHEAP[$m_indexA24];
  var $33=$data_addr;
  var $positions25=$33+6;
  var $34=IHEAP[$positions25];
  var $arrayidx26=$34+$32*3;
  var $c27=$arrayidx26;
  var $35=$c27;
  var $36=$cA;
  IHEAP[$35]=IHEAP[$36]; FHEAP[$35]=FHEAP[$36]; ; IHEAP[$35+1]=IHEAP[$36+1]; FHEAP[$35+1]=FHEAP[$36+1]; ;
  var $37=$aA;
  var $m_indexA28=$this1+25;
  var $38=IHEAP[$m_indexA28];
  var $39=$data_addr;
  var $positions29=$39+6;
  var $40=IHEAP[$positions29];
  var $arrayidx30=$40+$38*3;
  var $a31=$arrayidx30+2;
  FHEAP[$a31]=$37;
  var $m_indexB32=$this1+26;
  var $41=IHEAP[$m_indexB32];
  var $42=$data_addr;
  var $positions33=$42+6;
  var $43=IHEAP[$positions33];
  var $arrayidx34=$43+$41*3;
  var $c35=$arrayidx34;
  var $44=$c35;
  var $45=$cB;
  IHEAP[$44]=IHEAP[$45]; FHEAP[$44]=FHEAP[$45]; ; IHEAP[$44+1]=IHEAP[$45+1]; FHEAP[$44+1]=FHEAP[$45+1]; ;
  var $46=$aB;
  var $m_indexB36=$this1+26;
  var $47=IHEAP[$m_indexB36];
  var $48=$data_addr;
  var $positions37=$48+6;
  var $49=IHEAP[$positions37];
  var $arrayidx38=$49+$47*3;
  var $a39=$arrayidx38+2;
  FHEAP[$a39]=$46;
  var $50=$length;
  var $m_maxLength40=$this1+22;
  var $51=FHEAP[$m_maxLength40];
  var $sub41=($50)-($51);
  var $cmp=($sub41) < 0.004999999888241291;
  STACKTOP = __stackBase__;
  return $cmp;
  return null;
}
__ZN11b2RopeJoint24SolvePositionConstraintsERK12b2SolverData["X"]=1;

function __Z7b2Alloci($size) {
  ;
  var __label__;

  var $size_addr;
  $size_addr=$size;
  var $0=$size_addr;
  var $call=_malloc($0);
  ;
  return $call;
  return null;
}


function __Z5b2LogPKcz($string) {
  var __stackBase__  = STACKTOP; STACKTOP += 1;
  var __label__;

  var $string_addr;
  var $args=__stackBase__;
  $string_addr=$string;
  var $args1=$args;
  IHEAP[$args1]=arguments[__Z5b2LogPKcz.length];
  var $0=$string_addr;
  var $1=IHEAP[$args];
  var $call=_vprintf($0, $1);
  var $args2=$args;
  ;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN16b2StackAllocator8AllocateEi($this, $size) {
  ;
  var __label__;

  var $this_addr;
  var $size_addr;
  var $entry2;
  $this_addr=$this;
  $size_addr=$size;
  var $this1=$this_addr;
  var $m_entryCount=$this1+102499;
  var $0=IHEAP[$m_entryCount];
  var $cmp=($0) < 32;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$28: do { 
    if (__label__ == 1) {

      ___assert_func(__str355, 38, ___PRETTY_FUNCTION____ZN16b2StackAllocator8AllocateEi, __str3358);
      ;
    }
  } while(0);

  var $m_entries=$this1+102403;
  var $arraydecay=$m_entries;
  var $m_entryCount3=$this1+102499;
  var $1=IHEAP[$m_entryCount3];
  var $add_ptr=$arraydecay+$1*3;
  $entry2=$add_ptr;
  var $2=$size_addr;
  var $3=$entry2;
  var $size4=$3+1;
  IHEAP[$size4]=$2;
  var $m_index=$this1+102400;
  var $4=IHEAP[$m_index];
  var $5=$size_addr;
  var $add=($5)+($4);
  var $cmp5=($add) > 102400;
  if ($cmp5) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then$$if_else$31: do { 
    if (__label__ == 3) {

      var $6=$size_addr;
      var $call=__Z7b2Alloci($6);
      var $7=$entry2;
      var $data=$7;
      IHEAP[$data]=$call;
      var $8=$entry2;
      var $usedMalloc=$8+2;
      IHEAP[$usedMalloc]=1;
      ;
    }
    else if (__label__ == 4) {

      var $m_data=$this1;
      var $arraydecay6=$m_data;
      var $m_index7=$this1+102400;
      var $9=IHEAP[$m_index7];
      var $add_ptr8=$arraydecay6+$9;
      var $10=$entry2;
      var $data9=$10;
      IHEAP[$data9]=$add_ptr8;
      var $11=$entry2;
      var $usedMalloc10=$11+2;
      IHEAP[$usedMalloc10]=0;
      var $12=$size_addr;
      var $m_index11=$this1+102400;
      var $13=IHEAP[$m_index11];
      var $add12=($13)+($12);
      IHEAP[$m_index11]=$add12;
      ;
    }
  } while(0);

  var $14=$size_addr;
  var $m_allocation=$this1+102401;
  var $15=IHEAP[$m_allocation];
  var $add13=($15)+($14);
  IHEAP[$m_allocation]=$add13;
  var $m_maxAllocation=$this1+102402;
  var $16=IHEAP[$m_maxAllocation];
  var $m_allocation14=$this1+102401;
  var $17=IHEAP[$m_allocation14];
  var $call15=__Z5b2MaxIiET_S0_S0_($16, $17);
  var $m_maxAllocation16=$this1+102402;
  IHEAP[$m_maxAllocation16]=$call15;
  var $m_entryCount17=$this1+102499;
  var $18=IHEAP[$m_entryCount17];
  var $inc=($18)+1;
  IHEAP[$m_entryCount17]=$inc;
  var $19=$entry2;
  var $data18=$19;
  var $20=IHEAP[$data18];
  ;
  return $20;
  return null;
}
__ZN16b2StackAllocator8AllocateEi["X"]=1;

function __ZN20b2SeparationFunctionC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN20b2SeparationFunctionC2Ev($this1);
  ;
  return;
  return;
}


function __ZNK7b2Sweep12GetTransformEP11b2Transformf($this, $xf, $beta) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $this_addr;
  var $xf_addr;
  var $beta_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp2=__stackBase__+2;
  var $ref_tmp3=__stackBase__+4;
  var $angle;
  var $ref_tmp7=__stackBase__+6;
  $this_addr=$this;
  $xf_addr=$xf;
  $beta_addr=$beta;
  var $this1=$this_addr;
  var $0=$xf_addr;
  var $p=$0;
  var $1=$beta_addr;
  var $sub=1-($1);
  var $c0=$this1+2;
  __ZmlfRK6b2Vec2($ref_tmp2, $sub, $c0);
  var $2=$beta_addr;
  var $c=$this1+4;
  __ZmlfRK6b2Vec2($ref_tmp3, $2, $c);
  __ZplRK6b2Vec2S1_($ref_tmp, $ref_tmp2, $ref_tmp3);
  var $3=$p;
  var $4=$ref_tmp;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $5=$beta_addr;
  var $sub4=1-($5);
  var $a0=$this1+6;
  var $6=FHEAP[$a0];
  var $mul=($sub4)*($6);
  var $7=$beta_addr;
  var $a=$this1+7;
  var $8=FHEAP[$a];
  var $mul5=($7)*($8);
  var $add=($mul)+($mul5);
  $angle=$add;
  var $9=$xf_addr;
  var $q=$9+2;
  var $10=$angle;
  __ZN5b2Rot3SetEf($q, $10);
  var $11=$xf_addr;
  var $p6=$11;
  var $12=$xf_addr;
  var $q8=$12+2;
  var $localCenter=$this1;
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp7, $q8, $localCenter);
  __ZN6b2Vec2mIERKS_($p6, $ref_tmp7);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput($output, $input) {
  var __stackBase__  = STACKTOP; STACKTOP += 90;
  var __label__;

  var $output_addr;
  var $input_addr;
  var $proxyA;
  var $proxyB;
  var $sweepA=__stackBase__;
  var $sweepB=__stackBase__+9;
  var $tMax5;
  var $totalRadius;
  var $target;
  var $tolerance;
  var $t1;
  var $k_maxIterations;
  var $iter;
  var $cache=__stackBase__+18;
  var $distanceInput=__stackBase__+26;
  var $xfA=__stackBase__+49;
  var $xfB=__stackBase__+53;
  var $distanceOutput=__stackBase__+57;
  var $fcn=__stackBase__+63;
  var $done;
  var $t2;
  var $pushBackIter;
  var $indexA=__stackBase__+88;
  var $indexB=__stackBase__+89;
  var $s2;
  var $s1;
  var $rootIterCount;
  var $a1;
  var $a2;
  var $t49;
  var $s;
  $output_addr=$output;
  $input_addr=$input;
  var $0=IHEAP[_b2_toiCalls];
  var $inc=($0)+1;
  IHEAP[_b2_toiCalls]=$inc;
  var $1=$output_addr;
  var $state=$1;
  IHEAP[$state]=0;
  var $2=$input_addr;
  var $tMax=$2+32;
  var $3=FHEAP[$tMax];
  var $4=$output_addr;
  var $t=$4+1;
  FHEAP[$t]=$3;
  var $5=$input_addr;
  var $proxyA1=$5;
  $proxyA=$proxyA1;
  var $6=$input_addr;
  var $proxyB2=$6+7;
  $proxyB=$proxyB2;
  var $7=$input_addr;
  var $sweepA3=$7+14;
  var $8=$sweepA;
  var $9=$sweepA3;
  for (var mcpi_s=$9,mcpi_e=$9+9,mcpi_d=$8; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $10=$input_addr;
  var $sweepB4=$10+23;
  var $11=$sweepB;
  var $12=$sweepB4;
  for (var mcpi_s=$12,mcpi_e=$12+9,mcpi_d=$11; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  __ZN7b2Sweep9NormalizeEv($sweepA);
  __ZN7b2Sweep9NormalizeEv($sweepB);
  var $13=$input_addr;
  var $tMax6=$13+32;
  var $14=FHEAP[$tMax6];
  $tMax5=$14;
  var $15=$proxyA;
  var $m_radius=$15+6;
  var $16=FHEAP[$m_radius];
  var $17=$proxyB;
  var $m_radius7=$17+6;
  var $18=FHEAP[$m_radius7];
  var $add=($16)+($18);
  $totalRadius=$add;
  var $19=$totalRadius;
  var $sub=($19)-0.014999999664723873;
  var $call=__Z5b2MaxIfET_S0_S0_(0.004999999888241291, $sub);
  $target=$call;
  $tolerance=0.0012499999720603228;
  var $20=$target;
  var $21=$tolerance;
  var $cmp=($20) > ($21);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$2: do { 
    if (__label__ == 1) {

      ___assert_func(__str366, 280, ___PRETTY_FUNCTION____Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput, __str1367);
      ;
    }
  } while(0);

  $t1=0;
  $k_maxIterations=20;
  $iter=0;
  var $count=$cache+1;
  IHEAP[$count]=0;
  __ZN15b2DistanceInputC1Ev($distanceInput);
  var $proxyA8=$distanceInput;
  var $22=$input_addr;
  var $proxyA9=$22;
  var $23=$proxyA8;
  var $24=$proxyA9;
  for (var mcpi_s=$24,mcpi_e=$24+7,mcpi_d=$23; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $proxyB10=$distanceInput+7;
  var $25=$input_addr;
  var $proxyB11=$25+7;
  var $26=$proxyB10;
  var $27=$proxyB11;
  for (var mcpi_s=$27,mcpi_e=$27+7,mcpi_d=$26; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $useRadii=$distanceInput+22;
  IHEAP[$useRadii]=0;
  var $transformA=$distanceInput+14;
  var $28=$transformA;
  var $29=$xfA;
  var $transformB=$distanceInput+18;
  var $30=$transformB;
  var $31=$xfB;
  var $distance=$distanceOutput+4;
  var $distance15=$distanceOutput+4;
  ;
  $for_cond$5: while(1) { 

    __ZN11b2TransformC1Ev($xfA);
    __ZN11b2TransformC1Ev($xfB);
    var $32=$t1;
    __ZNK7b2Sweep12GetTransformEP11b2Transformf($sweepA, $xfA, $32);
    var $33=$t1;
    __ZNK7b2Sweep12GetTransformEP11b2Transformf($sweepB, $xfB, $33);
    IHEAP[$28]=IHEAP[$29]; FHEAP[$28]=FHEAP[$29]; ; IHEAP[$28+1]=IHEAP[$29+1]; FHEAP[$28+1]=FHEAP[$29+1]; ; IHEAP[$28+2]=IHEAP[$29+2]; FHEAP[$28+2]=FHEAP[$29+2]; ; IHEAP[$28+3]=IHEAP[$29+3]; FHEAP[$28+3]=FHEAP[$29+3]; ;
    IHEAP[$30]=IHEAP[$31]; FHEAP[$30]=FHEAP[$31]; ; IHEAP[$30+1]=IHEAP[$31+1]; FHEAP[$30+1]=FHEAP[$31+1]; ; IHEAP[$30+2]=IHEAP[$31+2]; FHEAP[$30+2]=FHEAP[$31+2]; ; IHEAP[$30+3]=IHEAP[$31+3]; FHEAP[$30+3]=FHEAP[$31+3]; ;
    __ZN16b2DistanceOutputC1Ev($distanceOutput);
    __Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput($distanceOutput, $cache, $distanceInput);
    var $34=FHEAP[$distance];
    var $cmp12=($34) <= 0;
    if ($cmp12) { __label__ = 4;break $for_cond$5; }

    var $37=FHEAP[$distance15];
    var $38=$target;
    var $39=$tolerance;
    var $add16=($38)+($39);
    var $cmp17=($37) < ($add16);
    if ($cmp17) { __label__ = 6;break $for_cond$5; }

    __ZN20b2SeparationFunctionC1Ev($fcn);
    var $43=$proxyA;
    var $44=$proxyB;
    var $45=$t1;
    var $call22=__ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f($fcn, $cache, $43, $sweepA, $44, $sweepB, $45);
    $done=0;
    var $46=$tMax5;
    $t2=$46;
    $pushBackIter=0;
    ;
    $for_cond23$9: while(1) { 

      var $47=$t2;
      var $call24=__ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f($fcn, $indexA, $indexB, $47);
      $s2=$call24;
      var $48=$s2;
      var $49=$target;
      var $50=$tolerance;
      var $add25=($49)+($50);
      var $cmp26=($48) > ($add25);
      if ($cmp26) { __label__ = 9;break $for_cond23$9; }

      var $54=$s2;
      var $55=$target;
      var $56=$tolerance;
      var $sub31=($55)-($56);
      var $cmp32=($54) > ($sub31);
      if ($cmp32) { __label__ = 11;break $for_cond23$9; }

      var $58=IHEAP[$indexA];
      var $59=IHEAP[$indexB];
      var $60=$t1;
      var $call35=__ZNK20b2SeparationFunction8EvaluateEiif($fcn, $58, $59, $60);
      $s1=$call35;
      var $61=$s1;
      var $62=$target;
      var $63=$tolerance;
      var $sub36=($62)-($63);
      var $cmp37=($61) < ($sub36);
      if ($cmp37) { __label__ = 13;break $for_cond23$9; }

      var $67=$s1;
      var $68=$target;
      var $69=$tolerance;
      var $add42=($68)+($69);
      var $cmp43=($67) <= ($add42);
      if ($cmp43) { __label__ = 15;break $for_cond23$9; }

      $rootIterCount=0;
      var $73=$t1;
      $a1=$73;
      var $74=$t2;
      $a2=$74;
      ;
      $for_cond48$15: while(1) { 

        var $75=$rootIterCount;
        var $and=($75) & 1;
        var $tobool=($and)!=0;
        var $76=$a1;
        if ($tobool) { __label__ = 18;; } else { __label__ = 19;; }
        $if_then50$$if_else$17: do { 
          if (__label__ == 18) {

            var $77=$target;
            var $78=$s1;
            var $sub51=($77)-($78);
            var $79=$a2;
            var $80=$a1;
            var $sub52=($79)-($80);
            var $mul=($sub51)*($sub52);
            var $81=$s2;
            var $82=$s1;
            var $sub53=($81)-($82);
            var $div=($mul)/($sub53);
            var $add54=($76)+($div);
            $t49=$add54;
            ;
          }
          else if (__label__ == 19) {

            var $83=$a2;
            var $add55=($76)+($83);
            var $mul56=($add55)*0.5;
            $t49=$mul56;
            ;
          }
        } while(0);

        var $84=IHEAP[$indexA];
        var $85=IHEAP[$indexB];
        var $86=$t49;
        var $call58=__ZNK20b2SeparationFunction8EvaluateEiif($fcn, $84, $85, $86);
        $s=$call58;
        var $87=$s;
        var $88=$target;
        var $sub59=($87)-($88);
        var $call60=__Z5b2AbsIfET_S0_($sub59);
        var $89=$tolerance;
        var $cmp61=($call60) < ($89);
        if ($cmp61) { __label__ = 21;break $for_cond48$15; }

        var $91=$s;
        var $92=$target;
        var $cmp64=($91) > ($92);
        var $93=$t49;
        if ($cmp64) { __label__ = 23;; } else { __label__ = 24;; }
        $if_then65$$if_else66$22: do { 
          if (__label__ == 23) {

            $a1=$93;
            var $94=$s;
            $s1=$94;
            ;
          }
          else if (__label__ == 24) {

            $a2=$93;
            var $95=$s;
            $s2=$95;
            ;
          }
        } while(0);

        var $96=$rootIterCount;
        var $inc68=($96)+1;
        $rootIterCount=$inc68;
        var $97=IHEAP[_b2_toiRootIters];
        var $inc69=($97)+1;
        IHEAP[_b2_toiRootIters]=$inc69;
        var $cmp70=($inc68)==50;
        if ($cmp70) { __label__ = 26;break $for_cond48$15; }
      }
      $if_then62$$for_end$26: do { 
        if (__label__ == 21) {

          var $90=$t49;
          $t2=$90;
          ;
        }
      } while(0);

      var $98=IHEAP[_b2_toiMaxRootIters];
      var $99=$rootIterCount;
      var $call73=__Z5b2MaxIiET_S0_S0_($98, $99);
      IHEAP[_b2_toiMaxRootIters]=$call73;
      var $100=$pushBackIter;
      var $inc74=($100)+1;
      $pushBackIter=$inc74;
      var $cmp75=($inc74)==8;
      if ($cmp75) { __label__ = 27;break $for_cond23$9; }
    }
    $if_then27$$if_then33$$if_then38$$if_then44$$for_end78$29: do { 
      if (__label__ == 9) {

        var $51=$output_addr;
        var $state28=$51;
        IHEAP[$state28]=4;
        var $52=$tMax5;
        var $53=$output_addr;
        var $t29=$53+1;
        FHEAP[$t29]=$52;
        $done=1;
        ;
      }
      else if (__label__ == 11) {

        var $57=$t2;
        $t1=$57;
        ;
      }
      else if (__label__ == 13) {

        var $64=$output_addr;
        var $state39=$64;
        IHEAP[$state39]=1;
        var $65=$t1;
        var $66=$output_addr;
        var $t40=$66+1;
        FHEAP[$t40]=$65;
        $done=1;
        ;
      }
      else if (__label__ == 15) {

        var $70=$output_addr;
        var $state45=$70;
        IHEAP[$state45]=3;
        var $71=$t1;
        var $72=$output_addr;
        var $t46=$72+1;
        FHEAP[$t46]=$71;
        $done=1;
        ;
      }
    } while(0);

    var $101=$iter;
    var $inc79=($101)+1;
    $iter=$inc79;
    var $102=IHEAP[_b2_toiIters];
    var $inc80=($102)+1;
    IHEAP[_b2_toiIters]=$inc80;
    var $103=$done;
    var $tobool81=((($103)) & 1);
    if ($tobool81) { __label__ = 30;break $for_cond$5; }

    var $104=$iter;
    var $cmp84=($104)==20;
    if ($cmp84) { __label__ = 29;break $for_cond$5; }
  }
  $if_then$$if_then18$$for_end89$$if_then85$36: do { 
    if (__label__ == 4) {

      var $35=$output_addr;
      var $state13=$35;
      IHEAP[$state13]=2;
      var $36=$output_addr;
      var $t14=$36+1;
      FHEAP[$t14]=0;
      ;
    }
    else if (__label__ == 6) {

      var $40=$output_addr;
      var $state19=$40;
      IHEAP[$state19]=3;
      var $41=$t1;
      var $42=$output_addr;
      var $t20=$42+1;
      FHEAP[$t20]=$41;
      ;
    }
    else if (__label__ == 29) {

      var $105=$output_addr;
      var $state86=$105;
      IHEAP[$state86]=1;
      var $106=$t1;
      var $107=$output_addr;
      var $t87=$107+1;
      FHEAP[$t87]=$106;
      ;
    }
  } while(0);

  var $108=IHEAP[_b2_toiMaxIters];
  var $109=$iter;
  var $call90=__Z5b2MaxIiET_S0_S0_($108, $109);
  IHEAP[_b2_toiMaxIters]=$call90;
  STACKTOP = __stackBase__;
  return;
  return;
}
__Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput["X"]=1;

function __ZN7b2Sweep9NormalizeEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $twoPi;
  var $d;
  $this_addr=$this;
  var $this1=$this_addr;
  $twoPi=6.2831854820251465;
  var $0=$twoPi;
  var $a0=$this1+6;
  var $1=FHEAP[$a0];
  var $2=$twoPi;
  var $div=($1)/($2);
  var $call=_floorf($div);
  var $mul=($0)*($call);
  $d=$mul;
  var $3=$d;
  var $a02=$this1+6;
  var $4=FHEAP[$a02];
  var $sub=($4)-($3);
  FHEAP[$a02]=$sub;
  var $5=$d;
  var $a=$this1+7;
  var $6=FHEAP[$a];
  var $sub3=($6)-($5);
  FHEAP[$a]=$sub3;
  ;
  return;
  return;
}


function __ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f($this, $cache, $proxyA, $sweepA, $proxyB, $sweepB, $t1) {
  var __stackBase__  = STACKTOP; STACKTOP += 66;
  var __label__;

  var $retval;
  var $this_addr;
  var $cache_addr;
  var $proxyA_addr;
  var $sweepA_addr;
  var $proxyB_addr;
  var $sweepB_addr;
  var $t1_addr;
  var $count;
  var $xfA=__stackBase__;
  var $xfB=__stackBase__+4;
  var $localPointA=__stackBase__+8;
  var $localPointB=__stackBase__+10;
  var $pointA=__stackBase__+12;
  var $pointB=__stackBase__+14;
  var $ref_tmp=__stackBase__+16;
  var $s;
  var $localPointB1=__stackBase__+18;
  var $localPointB2=__stackBase__+20;
  var $ref_tmp33=__stackBase__+22;
  var $ref_tmp34=__stackBase__+24;
  var $normal=__stackBase__+26;
  var $ref_tmp38=__stackBase__+28;
  var $ref_tmp39=__stackBase__+30;
  var $pointB40=__stackBase__+32;
  var $localPointA42=__stackBase__+34;
  var $pointA47=__stackBase__+36;
  var $s48;
  var $ref_tmp49=__stackBase__+38;
  var $ref_tmp54=__stackBase__+40;
  var $localPointA1=__stackBase__+42;
  var $localPointA2=__stackBase__+44;
  var $ref_tmp69=__stackBase__+46;
  var $ref_tmp70=__stackBase__+48;
  var $normal73=__stackBase__+50;
  var $ref_tmp77=__stackBase__+52;
  var $ref_tmp78=__stackBase__+54;
  var $pointA79=__stackBase__+56;
  var $localPointB81=__stackBase__+58;
  var $pointB87=__stackBase__+60;
  var $s88;
  var $ref_tmp89=__stackBase__+62;
  var $ref_tmp94=__stackBase__+64;
  $this_addr=$this;
  $cache_addr=$cache;
  $proxyA_addr=$proxyA;
  $sweepA_addr=$sweepA;
  $proxyB_addr=$proxyB;
  $sweepB_addr=$sweepB;
  $t1_addr=$t1;
  var $this1=$this_addr;
  var $0=$proxyA_addr;
  var $m_proxyA=$this1;
  IHEAP[$m_proxyA]=$0;
  var $1=$proxyB_addr;
  var $m_proxyB=$this1+1;
  IHEAP[$m_proxyB]=$1;
  var $2=$cache_addr;
  var $count2=$2+1;
  var $3=IHEAP[$count2];
  var $conv=($3);
  $count=$conv;
  var $4=$count;
  var $cmp=0 < ($4);
  var $5=$count;
  var $cmp3=($5) < 3;
  var $or_cond=($cmp) & ($cmp3);
  if ($or_cond) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$45: do { 
    if (__label__ == 1) {

      ___assert_func(__str366, 50, ___PRETTY_FUNCTION____ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f, __str5372);
      ;
    }
  } while(0);

  var $m_sweepA=$this1+2;
  var $6=$sweepA_addr;
  var $7=$m_sweepA;
  var $8=$6;
  for (var mcpi_s=$8,mcpi_e=$8+9,mcpi_d=$7; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  var $m_sweepB=$this1+11;
  var $9=$sweepB_addr;
  var $10=$m_sweepB;
  var $11=$9;
  for (var mcpi_s=$11,mcpi_e=$11+9,mcpi_d=$10; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
  __ZN11b2TransformC1Ev($xfA);
  __ZN11b2TransformC1Ev($xfB);
  var $m_sweepA4=$this1+2;
  var $12=$t1_addr;
  __ZNK7b2Sweep12GetTransformEP11b2Transformf($m_sweepA4, $xfA, $12);
  var $m_sweepB5=$this1+11;
  var $13=$t1_addr;
  __ZNK7b2Sweep12GetTransformEP11b2Transformf($m_sweepB5, $xfB, $13);
  var $14=$count;
  var $cmp6=($14)==1;
  if ($cmp6) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then$$if_else$48: do { 
    if (__label__ == 3) {

      var $m_type=$this1+20;
      IHEAP[$m_type]=0;
      var $m_proxyA7=$this1;
      var $15=IHEAP[$m_proxyA7];
      var $16=$cache_addr;
      var $indexA=$16+2;
      var $arrayidx=$indexA;
      var $17=IHEAP[$arrayidx];
      var $conv8=($17);
      var $call=__ZNK15b2DistanceProxy9GetVertexEi($15, $conv8);
      var $18=$localPointA;
      var $19=$call;
      IHEAP[$18]=IHEAP[$19]; FHEAP[$18]=FHEAP[$19]; ; IHEAP[$18+1]=IHEAP[$19+1]; FHEAP[$18+1]=FHEAP[$19+1]; ;
      var $m_proxyB9=$this1+1;
      var $20=IHEAP[$m_proxyB9];
      var $21=$cache_addr;
      var $indexB=$21+5;
      var $arrayidx10=$indexB;
      var $22=IHEAP[$arrayidx10];
      var $conv11=($22);
      var $call12=__ZNK15b2DistanceProxy9GetVertexEi($20, $conv11);
      var $23=$localPointB;
      var $24=$call12;
      IHEAP[$23]=IHEAP[$24]; FHEAP[$23]=FHEAP[$24]; ; IHEAP[$23+1]=IHEAP[$24+1]; FHEAP[$23+1]=FHEAP[$24+1]; ;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointA, $xfA, $localPointA);
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointB, $xfB, $localPointB);
      var $m_axis=$this1+23;
      __ZmiRK6b2Vec2S1_($ref_tmp, $pointB, $pointA);
      var $25=$m_axis;
      var $26=$ref_tmp;
      IHEAP[$25]=IHEAP[$26]; FHEAP[$25]=FHEAP[$26]; ; IHEAP[$25+1]=IHEAP[$26+1]; FHEAP[$25+1]=FHEAP[$26+1]; ;
      var $m_axis13=$this1+23;
      var $call14=__ZN6b2Vec29NormalizeEv($m_axis13);
      $s=$call14;
      var $27=$s;
      $retval=$27;
      ;
    }
    else if (__label__ == 4) {

      var $28=$cache_addr;
      var $indexA15=$28+2;
      var $arrayidx16=$indexA15;
      var $29=IHEAP[$arrayidx16];
      var $conv17=($29);
      var $30=$cache_addr;
      var $indexA18=$30+2;
      var $arrayidx19=$indexA18+1;
      var $31=IHEAP[$arrayidx19];
      var $conv20=($31);
      var $cmp21=($conv17)==($conv20);
      var $m_type23=$this1+20;
      if ($cmp21) { __label__ = 5;; } else { __label__ = 8;; }
      $if_then22$$if_else56$51: do { 
        if (__label__ == 5) {

          IHEAP[$m_type23]=2;
          var $32=$proxyB_addr;
          var $33=$cache_addr;
          var $indexB24=$33+5;
          var $arrayidx25=$indexB24;
          var $34=IHEAP[$arrayidx25];
          var $conv26=($34);
          var $call27=__ZNK15b2DistanceProxy9GetVertexEi($32, $conv26);
          var $35=$localPointB1;
          var $36=$call27;
          IHEAP[$35]=IHEAP[$36]; FHEAP[$35]=FHEAP[$36]; ; IHEAP[$35+1]=IHEAP[$36+1]; FHEAP[$35+1]=FHEAP[$36+1]; ;
          var $37=$proxyB_addr;
          var $38=$cache_addr;
          var $indexB28=$38+5;
          var $arrayidx29=$indexB28+1;
          var $39=IHEAP[$arrayidx29];
          var $conv30=($39);
          var $call31=__ZNK15b2DistanceProxy9GetVertexEi($37, $conv30);
          var $40=$localPointB2;
          var $41=$call31;
          IHEAP[$40]=IHEAP[$41]; FHEAP[$40]=FHEAP[$41]; ; IHEAP[$40+1]=IHEAP[$41+1]; FHEAP[$40+1]=FHEAP[$41+1]; ;
          var $m_axis32=$this1+23;
          __ZmiRK6b2Vec2S1_($ref_tmp34, $localPointB2, $localPointB1);
          __Z7b2CrossRK6b2Vec2f($ref_tmp33, $ref_tmp34, 1);
          var $42=$m_axis32;
          var $43=$ref_tmp33;
          IHEAP[$42]=IHEAP[$43]; FHEAP[$42]=FHEAP[$43]; ; IHEAP[$42+1]=IHEAP[$43+1]; FHEAP[$42+1]=FHEAP[$43+1]; ;
          var $m_axis35=$this1+23;
          var $call36=__ZN6b2Vec29NormalizeEv($m_axis35);
          var $q=$xfB+2;
          var $m_axis37=$this1+23;
          __Z5b2MulRK5b2RotRK6b2Vec2($normal, $q, $m_axis37);
          var $m_localPoint=$this1+21;
          __ZplRK6b2Vec2S1_($ref_tmp39, $localPointB1, $localPointB2);
          __ZmlfRK6b2Vec2($ref_tmp38, 0.5, $ref_tmp39);
          var $44=$m_localPoint;
          var $45=$ref_tmp38;
          IHEAP[$44]=IHEAP[$45]; FHEAP[$44]=FHEAP[$45]; ; IHEAP[$44+1]=IHEAP[$45+1]; FHEAP[$44+1]=FHEAP[$45+1]; ;
          var $m_localPoint41=$this1+21;
          __Z5b2MulRK11b2TransformRK6b2Vec2($pointB40, $xfB, $m_localPoint41);
          var $46=$proxyA_addr;
          var $47=$cache_addr;
          var $indexA43=$47+2;
          var $arrayidx44=$indexA43;
          var $48=IHEAP[$arrayidx44];
          var $conv45=($48);
          var $call46=__ZNK15b2DistanceProxy9GetVertexEi($46, $conv45);
          var $49=$localPointA42;
          var $50=$call46;
          IHEAP[$49]=IHEAP[$50]; FHEAP[$49]=FHEAP[$50]; ; IHEAP[$49+1]=IHEAP[$50+1]; FHEAP[$49+1]=FHEAP[$50+1]; ;
          __Z5b2MulRK11b2TransformRK6b2Vec2($pointA47, $xfA, $localPointA42);
          __ZmiRK6b2Vec2S1_($ref_tmp49, $pointA47, $pointB40);
          var $call50=__Z5b2DotRK6b2Vec2S1_($ref_tmp49, $normal);
          $s48=$call50;
          var $51=$s48;
          var $cmp51=($51) < 0;
          if ($cmp51) { __label__ = 6;; } else { __label__ = 7;; }
          $if_then52$$if_end$53: do { 
            if (__label__ == 6) {

              var $m_axis53=$this1+23;
              var $m_axis55=$this1+23;
              __ZNK6b2Vec2ngEv($ref_tmp54, $m_axis55);
              var $52=$m_axis53;
              var $53=$ref_tmp54;
              IHEAP[$52]=IHEAP[$53]; FHEAP[$52]=FHEAP[$53]; ; IHEAP[$52+1]=IHEAP[$53+1]; FHEAP[$52+1]=FHEAP[$53+1]; ;
              var $54=$s48;
              var $sub=(-($54));
              $s48=$sub;
              ;
            }
          } while(0);

          var $55=$s48;
          $retval=$55;
          ;
        }
        else if (__label__ == 8) {

          IHEAP[$m_type23]=1;
          var $m_proxyA58=$this1;
          var $56=IHEAP[$m_proxyA58];
          var $57=$cache_addr;
          var $indexA59=$57+2;
          var $arrayidx60=$indexA59;
          var $58=IHEAP[$arrayidx60];
          var $conv61=($58);
          var $call62=__ZNK15b2DistanceProxy9GetVertexEi($56, $conv61);
          var $59=$localPointA1;
          var $60=$call62;
          IHEAP[$59]=IHEAP[$60]; FHEAP[$59]=FHEAP[$60]; ; IHEAP[$59+1]=IHEAP[$60+1]; FHEAP[$59+1]=FHEAP[$60+1]; ;
          var $m_proxyA63=$this1;
          var $61=IHEAP[$m_proxyA63];
          var $62=$cache_addr;
          var $indexA64=$62+2;
          var $arrayidx65=$indexA64+1;
          var $63=IHEAP[$arrayidx65];
          var $conv66=($63);
          var $call67=__ZNK15b2DistanceProxy9GetVertexEi($61, $conv66);
          var $64=$localPointA2;
          var $65=$call67;
          IHEAP[$64]=IHEAP[$65]; FHEAP[$64]=FHEAP[$65]; ; IHEAP[$64+1]=IHEAP[$65+1]; FHEAP[$64+1]=FHEAP[$65+1]; ;
          var $m_axis68=$this1+23;
          __ZmiRK6b2Vec2S1_($ref_tmp70, $localPointA2, $localPointA1);
          __Z7b2CrossRK6b2Vec2f($ref_tmp69, $ref_tmp70, 1);
          var $66=$m_axis68;
          var $67=$ref_tmp69;
          IHEAP[$66]=IHEAP[$67]; FHEAP[$66]=FHEAP[$67]; ; IHEAP[$66+1]=IHEAP[$67+1]; FHEAP[$66+1]=FHEAP[$67+1]; ;
          var $m_axis71=$this1+23;
          var $call72=__ZN6b2Vec29NormalizeEv($m_axis71);
          var $q74=$xfA+2;
          var $m_axis75=$this1+23;
          __Z5b2MulRK5b2RotRK6b2Vec2($normal73, $q74, $m_axis75);
          var $m_localPoint76=$this1+21;
          __ZplRK6b2Vec2S1_($ref_tmp78, $localPointA1, $localPointA2);
          __ZmlfRK6b2Vec2($ref_tmp77, 0.5, $ref_tmp78);
          var $68=$m_localPoint76;
          var $69=$ref_tmp77;
          IHEAP[$68]=IHEAP[$69]; FHEAP[$68]=FHEAP[$69]; ; IHEAP[$68+1]=IHEAP[$69+1]; FHEAP[$68+1]=FHEAP[$69+1]; ;
          var $m_localPoint80=$this1+21;
          __Z5b2MulRK11b2TransformRK6b2Vec2($pointA79, $xfA, $m_localPoint80);
          var $m_proxyB82=$this1+1;
          var $70=IHEAP[$m_proxyB82];
          var $71=$cache_addr;
          var $indexB83=$71+5;
          var $arrayidx84=$indexB83;
          var $72=IHEAP[$arrayidx84];
          var $conv85=($72);
          var $call86=__ZNK15b2DistanceProxy9GetVertexEi($70, $conv85);
          var $73=$localPointB81;
          var $74=$call86;
          IHEAP[$73]=IHEAP[$74]; FHEAP[$73]=FHEAP[$74]; ; IHEAP[$73+1]=IHEAP[$74+1]; FHEAP[$73+1]=FHEAP[$74+1]; ;
          __Z5b2MulRK11b2TransformRK6b2Vec2($pointB87, $xfB, $localPointB81);
          __ZmiRK6b2Vec2S1_($ref_tmp89, $pointB87, $pointA79);
          var $call90=__Z5b2DotRK6b2Vec2S1_($ref_tmp89, $normal73);
          $s88=$call90;
          var $75=$s88;
          var $cmp91=($75) < 0;
          if ($cmp91) { __label__ = 9;; } else { __label__ = 10;; }
          $if_then92$$if_end97$57: do { 
            if (__label__ == 9) {

              var $m_axis93=$this1+23;
              var $m_axis95=$this1+23;
              __ZNK6b2Vec2ngEv($ref_tmp94, $m_axis95);
              var $76=$m_axis93;
              var $77=$ref_tmp94;
              IHEAP[$76]=IHEAP[$77]; FHEAP[$76]=FHEAP[$77]; ; IHEAP[$76+1]=IHEAP[$77+1]; FHEAP[$76+1]=FHEAP[$77+1]; ;
              var $78=$s88;
              var $sub96=(-($78));
              $s88=$sub96;
              ;
            }
          } while(0);

          var $79=$s88;
          $retval=$79;
          ;
        }
      } while(0);
    }
  } while(0);

  var $80=$retval;
  STACKTOP = __stackBase__;
  return $80;
  return null;
}
__ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f["X"]=1;

function __ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f($this, $indexA, $indexB, $t) {
  var __stackBase__  = STACKTOP; STACKTOP += 52;
  var __label__;

  var $retval;
  var $this_addr;
  var $indexA_addr;
  var $indexB_addr;
  var $t_addr;
  var $xfA=__stackBase__;
  var $xfB=__stackBase__+4;
  var $axisA=__stackBase__+8;
  var $axisB=__stackBase__+10;
  var $ref_tmp=__stackBase__+12;
  var $localPointA=__stackBase__+14;
  var $localPointB=__stackBase__+16;
  var $pointA=__stackBase__+18;
  var $pointB=__stackBase__+20;
  var $separation;
  var $ref_tmp9=__stackBase__+22;
  var $normal=__stackBase__+24;
  var $pointA15=__stackBase__+26;
  var $axisB16=__stackBase__+28;
  var $ref_tmp18=__stackBase__+30;
  var $localPointB21=__stackBase__+32;
  var $pointB24=__stackBase__+34;
  var $separation25;
  var $ref_tmp26=__stackBase__+36;
  var $normal29=__stackBase__+38;
  var $pointB32=__stackBase__+40;
  var $axisA34=__stackBase__+42;
  var $ref_tmp36=__stackBase__+44;
  var $localPointA39=__stackBase__+46;
  var $pointA42=__stackBase__+48;
  var $separation43;
  var $ref_tmp44=__stackBase__+50;
  $this_addr=$this;
  $indexA_addr=$indexA;
  $indexB_addr=$indexB;
  $t_addr=$t;
  var $this1=$this_addr;
  __ZN11b2TransformC1Ev($xfA);
  __ZN11b2TransformC1Ev($xfB);
  var $m_sweepA=$this1+2;
  var $0=$t_addr;
  __ZNK7b2Sweep12GetTransformEP11b2Transformf($m_sweepA, $xfA, $0);
  var $m_sweepB=$this1+11;
  var $1=$t_addr;
  __ZNK7b2Sweep12GetTransformEP11b2Transformf($m_sweepB, $xfB, $1);
  var $m_type=$this1+20;
  var $2=IHEAP[$m_type];
  if ($2 == 0) {
    __label__ = 1;;
  }
  else if ($2 == 1) {
    __label__ = 2;;
  }
  else if ($2 == 2) {
    __label__ = 3;;
  }
  else {
  __label__ = 4;;
  }
  
  $sw_default$$sw_bb$$sw_bb12$$sw_bb28$62: do { 
    if (__label__ == 4) {

      ___assert_func(__str366, 183, ___PRETTY_FUNCTION____ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f, __str2368);
      var $36=$indexA_addr;
      IHEAP[$36]=-1;
      var $37=$indexB_addr;
      IHEAP[$37]=-1;
      $retval=0;
      ;
    }
    else if (__label__ == 1) {

      var $q=$xfA+2;
      var $m_axis=$this1+23;
      __Z6b2MulTRK5b2RotRK6b2Vec2($axisA, $q, $m_axis);
      var $q2=$xfB+2;
      var $m_axis3=$this1+23;
      __ZNK6b2Vec2ngEv($ref_tmp, $m_axis3);
      __Z6b2MulTRK5b2RotRK6b2Vec2($axisB, $q2, $ref_tmp);
      var $m_proxyA=$this1;
      var $3=IHEAP[$m_proxyA];
      var $call=__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($3, $axisA);
      var $4=$indexA_addr;
      IHEAP[$4]=$call;
      var $m_proxyB=$this1+1;
      var $5=IHEAP[$m_proxyB];
      var $call4=__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($5, $axisB);
      var $6=$indexB_addr;
      IHEAP[$6]=$call4;
      var $m_proxyA5=$this1;
      var $7=IHEAP[$m_proxyA5];
      var $8=$indexA_addr;
      var $9=IHEAP[$8];
      var $call6=__ZNK15b2DistanceProxy9GetVertexEi($7, $9);
      var $10=$localPointA;
      var $11=$call6;
      IHEAP[$10]=IHEAP[$11]; FHEAP[$10]=FHEAP[$11]; ; IHEAP[$10+1]=IHEAP[$11+1]; FHEAP[$10+1]=FHEAP[$11+1]; ;
      var $m_proxyB7=$this1+1;
      var $12=IHEAP[$m_proxyB7];
      var $13=$indexB_addr;
      var $14=IHEAP[$13];
      var $call8=__ZNK15b2DistanceProxy9GetVertexEi($12, $14);
      var $15=$localPointB;
      var $16=$call8;
      IHEAP[$15]=IHEAP[$16]; FHEAP[$15]=FHEAP[$16]; ; IHEAP[$15+1]=IHEAP[$16+1]; FHEAP[$15+1]=FHEAP[$16+1]; ;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointA, $xfA, $localPointA);
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointB, $xfB, $localPointB);
      __ZmiRK6b2Vec2S1_($ref_tmp9, $pointB, $pointA);
      var $m_axis10=$this1+23;
      var $call11=__Z5b2DotRK6b2Vec2S1_($ref_tmp9, $m_axis10);
      $separation=$call11;
      var $17=$separation;
      $retval=$17;
      ;
    }
    else if (__label__ == 2) {

      var $q13=$xfA+2;
      var $m_axis14=$this1+23;
      __Z5b2MulRK5b2RotRK6b2Vec2($normal, $q13, $m_axis14);
      var $m_localPoint=$this1+21;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointA15, $xfA, $m_localPoint);
      var $q17=$xfB+2;
      __ZNK6b2Vec2ngEv($ref_tmp18, $normal);
      __Z6b2MulTRK5b2RotRK6b2Vec2($axisB16, $q17, $ref_tmp18);
      var $18=$indexA_addr;
      IHEAP[$18]=-1;
      var $m_proxyB19=$this1+1;
      var $19=IHEAP[$m_proxyB19];
      var $call20=__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($19, $axisB16);
      var $20=$indexB_addr;
      IHEAP[$20]=$call20;
      var $m_proxyB22=$this1+1;
      var $21=IHEAP[$m_proxyB22];
      var $22=$indexB_addr;
      var $23=IHEAP[$22];
      var $call23=__ZNK15b2DistanceProxy9GetVertexEi($21, $23);
      var $24=$localPointB21;
      var $25=$call23;
      IHEAP[$24]=IHEAP[$25]; FHEAP[$24]=FHEAP[$25]; ; IHEAP[$24+1]=IHEAP[$25+1]; FHEAP[$24+1]=FHEAP[$25+1]; ;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointB24, $xfB, $localPointB21);
      __ZmiRK6b2Vec2S1_($ref_tmp26, $pointB24, $pointA15);
      var $call27=__Z5b2DotRK6b2Vec2S1_($ref_tmp26, $normal);
      $separation25=$call27;
      var $26=$separation25;
      $retval=$26;
      ;
    }
    else if (__label__ == 3) {

      var $q30=$xfB+2;
      var $m_axis31=$this1+23;
      __Z5b2MulRK5b2RotRK6b2Vec2($normal29, $q30, $m_axis31);
      var $m_localPoint33=$this1+21;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointB32, $xfB, $m_localPoint33);
      var $q35=$xfA+2;
      __ZNK6b2Vec2ngEv($ref_tmp36, $normal29);
      __Z6b2MulTRK5b2RotRK6b2Vec2($axisA34, $q35, $ref_tmp36);
      var $27=$indexB_addr;
      IHEAP[$27]=-1;
      var $m_proxyA37=$this1;
      var $28=IHEAP[$m_proxyA37];
      var $call38=__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($28, $axisA34);
      var $29=$indexA_addr;
      IHEAP[$29]=$call38;
      var $m_proxyA40=$this1;
      var $30=IHEAP[$m_proxyA40];
      var $31=$indexA_addr;
      var $32=IHEAP[$31];
      var $call41=__ZNK15b2DistanceProxy9GetVertexEi($30, $32);
      var $33=$localPointA39;
      var $34=$call41;
      IHEAP[$33]=IHEAP[$34]; FHEAP[$33]=FHEAP[$34]; ; IHEAP[$33+1]=IHEAP[$34+1]; FHEAP[$33+1]=FHEAP[$34+1]; ;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointA42, $xfA, $localPointA39);
      __ZmiRK6b2Vec2S1_($ref_tmp44, $pointA42, $pointB32);
      var $call45=__Z5b2DotRK6b2Vec2S1_($ref_tmp44, $normal29);
      $separation43=$call45;
      var $35=$separation43;
      $retval=$35;
      ;
    }
  } while(0);

  var $38=$retval;
  STACKTOP = __stackBase__;
  return $38;
  return null;
}
__ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f["X"]=1;

function __ZN7b2TimerC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN7b2Timer5ResetEv($this1);
  ;
  return;
  return;
}


function __ZN20b2SeparationFunctionC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_sweepA=$this1+2;
  __ZN7b2SweepC1Ev($m_sweepA);
  var $m_sweepB=$this1+11;
  __ZN7b2SweepC1Ev($m_sweepB);
  var $m_localPoint=$this1+21;
  __ZN6b2Vec2C1Ev($m_localPoint);
  var $m_axis=$this1+23;
  __ZN6b2Vec2C1Ev($m_axis);
  ;
  return;
  return;
}


function __ZN11b2WeldJointC2EPK14b2WeldJointDef($this, $def) {
  ;
  var __label__;

  var $this_addr;
  var $def_addr;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$def_addr;
  var $2=$1;
  __ZN7b2JointC2EPK10b2JointDef($0, $2);
  var $3=$this1;
  IHEAP[$3]=__ZTV11b2WeldJoint+2;
  var $m_localAnchorA=$this1+21;
  __ZN6b2Vec2C1Ev($m_localAnchorA);
  var $m_localAnchorB=$this1+23;
  __ZN6b2Vec2C1Ev($m_localAnchorB);
  var $m_impulse=$this1+27;
  __ZN6b2Vec3C1Ev($m_impulse);
  var $m_rA=$this1+32;
  __ZN6b2Vec2C1Ev($m_rA);
  var $m_rB=$this1+34;
  __ZN6b2Vec2C1Ev($m_rB);
  var $m_localCenterA=$this1+36;
  __ZN6b2Vec2C1Ev($m_localCenterA);
  var $m_localCenterB=$this1+38;
  __ZN6b2Vec2C1Ev($m_localCenterB);
  var $m_mass=$this1+44;
  __ZN7b2Mat33C1Ev($m_mass);
  var $m_localAnchorA9=$this1+21;
  var $4=$def_addr;
  var $localAnchorA=$4+5;
  var $5=$m_localAnchorA9;
  var $6=$localAnchorA;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_localAnchorB10=$this1+23;
  var $7=$def_addr;
  var $localAnchorB=$7+7;
  var $8=$m_localAnchorB10;
  var $9=$localAnchorB;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $10=$def_addr;
  var $referenceAngle=$10+9;
  var $11=FHEAP[$referenceAngle];
  var $m_referenceAngle=$this1+25;
  FHEAP[$m_referenceAngle]=$11;
  var $12=$def_addr;
  var $frequencyHz=$12+10;
  var $13=FHEAP[$frequencyHz];
  var $m_frequencyHz=$this1+18;
  FHEAP[$m_frequencyHz]=$13;
  var $14=$def_addr;
  var $dampingRatio=$14+11;
  var $15=FHEAP[$dampingRatio];
  var $m_dampingRatio=$this1+19;
  FHEAP[$m_dampingRatio]=$15;
  var $m_impulse11=$this1+27;
  __ZN6b2Vec37SetZeroEv($m_impulse11);
  ;
  return;
  return;
}
__ZN11b2WeldJointC2EPK14b2WeldJointDef["X"]=1;

function __ZNK20b2SeparationFunction8EvaluateEiif($this, $indexA, $indexB, $t) {
  var __stackBase__  = STACKTOP; STACKTOP += 52;
  var __label__;

  var $retval;
  var $this_addr;
  var $indexA_addr;
  var $indexB_addr;
  var $t_addr;
  var $xfA=__stackBase__;
  var $xfB=__stackBase__+4;
  var $axisA=__stackBase__+8;
  var $axisB=__stackBase__+10;
  var $ref_tmp=__stackBase__+12;
  var $localPointA=__stackBase__+14;
  var $localPointB=__stackBase__+16;
  var $pointA=__stackBase__+18;
  var $pointB=__stackBase__+20;
  var $separation;
  var $ref_tmp5=__stackBase__+22;
  var $normal=__stackBase__+24;
  var $pointA11=__stackBase__+26;
  var $axisB12=__stackBase__+28;
  var $ref_tmp14=__stackBase__+30;
  var $localPointB15=__stackBase__+32;
  var $pointB18=__stackBase__+34;
  var $separation19;
  var $ref_tmp20=__stackBase__+36;
  var $normal23=__stackBase__+38;
  var $pointB26=__stackBase__+40;
  var $axisA28=__stackBase__+42;
  var $ref_tmp30=__stackBase__+44;
  var $localPointA31=__stackBase__+46;
  var $pointA34=__stackBase__+48;
  var $separation35;
  var $ref_tmp36=__stackBase__+50;
  $this_addr=$this;
  $indexA_addr=$indexA;
  $indexB_addr=$indexB;
  $t_addr=$t;
  var $this1=$this_addr;
  __ZN11b2TransformC1Ev($xfA);
  __ZN11b2TransformC1Ev($xfB);
  var $m_sweepA=$this1+2;
  var $0=$t_addr;
  __ZNK7b2Sweep12GetTransformEP11b2Transformf($m_sweepA, $xfA, $0);
  var $m_sweepB=$this1+11;
  var $1=$t_addr;
  __ZNK7b2Sweep12GetTransformEP11b2Transformf($m_sweepB, $xfB, $1);
  var $m_type=$this1+20;
  var $2=IHEAP[$m_type];
  if ($2 == 0) {
    __label__ = 1;;
  }
  else if ($2 == 1) {
    __label__ = 2;;
  }
  else if ($2 == 2) {
    __label__ = 3;;
  }
  else {
  __label__ = 4;;
  }
  
  $sw_default$$sw_bb$$sw_bb8$$sw_bb22$2: do { 
    if (__label__ == 4) {

      ___assert_func(__str366, 242, ___PRETTY_FUNCTION____ZNK20b2SeparationFunction8EvaluateEiif, __str2368);
      $retval=0;
      ;
    }
    else if (__label__ == 1) {

      var $q=$xfA+2;
      var $m_axis=$this1+23;
      __Z6b2MulTRK5b2RotRK6b2Vec2($axisA, $q, $m_axis);
      var $q2=$xfB+2;
      var $m_axis3=$this1+23;
      __ZNK6b2Vec2ngEv($ref_tmp, $m_axis3);
      __Z6b2MulTRK5b2RotRK6b2Vec2($axisB, $q2, $ref_tmp);
      var $m_proxyA=$this1;
      var $3=IHEAP[$m_proxyA];
      var $4=$indexA_addr;
      var $call=__ZNK15b2DistanceProxy9GetVertexEi($3, $4);
      var $5=$localPointA;
      var $6=$call;
      IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
      var $m_proxyB=$this1+1;
      var $7=IHEAP[$m_proxyB];
      var $8=$indexB_addr;
      var $call4=__ZNK15b2DistanceProxy9GetVertexEi($7, $8);
      var $9=$localPointB;
      var $10=$call4;
      IHEAP[$9]=IHEAP[$10]; FHEAP[$9]=FHEAP[$10]; ; IHEAP[$9+1]=IHEAP[$10+1]; FHEAP[$9+1]=FHEAP[$10+1]; ;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointA, $xfA, $localPointA);
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointB, $xfB, $localPointB);
      __ZmiRK6b2Vec2S1_($ref_tmp5, $pointB, $pointA);
      var $m_axis6=$this1+23;
      var $call7=__Z5b2DotRK6b2Vec2S1_($ref_tmp5, $m_axis6);
      $separation=$call7;
      var $11=$separation;
      $retval=$11;
      ;
    }
    else if (__label__ == 2) {

      var $q9=$xfA+2;
      var $m_axis10=$this1+23;
      __Z5b2MulRK5b2RotRK6b2Vec2($normal, $q9, $m_axis10);
      var $m_localPoint=$this1+21;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointA11, $xfA, $m_localPoint);
      var $q13=$xfB+2;
      __ZNK6b2Vec2ngEv($ref_tmp14, $normal);
      __Z6b2MulTRK5b2RotRK6b2Vec2($axisB12, $q13, $ref_tmp14);
      var $m_proxyB16=$this1+1;
      var $12=IHEAP[$m_proxyB16];
      var $13=$indexB_addr;
      var $call17=__ZNK15b2DistanceProxy9GetVertexEi($12, $13);
      var $14=$localPointB15;
      var $15=$call17;
      IHEAP[$14]=IHEAP[$15]; FHEAP[$14]=FHEAP[$15]; ; IHEAP[$14+1]=IHEAP[$15+1]; FHEAP[$14+1]=FHEAP[$15+1]; ;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointB18, $xfB, $localPointB15);
      __ZmiRK6b2Vec2S1_($ref_tmp20, $pointB18, $pointA11);
      var $call21=__Z5b2DotRK6b2Vec2S1_($ref_tmp20, $normal);
      $separation19=$call21;
      var $16=$separation19;
      $retval=$16;
      ;
    }
    else if (__label__ == 3) {

      var $q24=$xfB+2;
      var $m_axis25=$this1+23;
      __Z5b2MulRK5b2RotRK6b2Vec2($normal23, $q24, $m_axis25);
      var $m_localPoint27=$this1+21;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointB26, $xfB, $m_localPoint27);
      var $q29=$xfA+2;
      __ZNK6b2Vec2ngEv($ref_tmp30, $normal23);
      __Z6b2MulTRK5b2RotRK6b2Vec2($axisA28, $q29, $ref_tmp30);
      var $m_proxyA32=$this1;
      var $17=IHEAP[$m_proxyA32];
      var $18=$indexA_addr;
      var $call33=__ZNK15b2DistanceProxy9GetVertexEi($17, $18);
      var $19=$localPointA31;
      var $20=$call33;
      IHEAP[$19]=IHEAP[$20]; FHEAP[$19]=FHEAP[$20]; ; IHEAP[$19+1]=IHEAP[$20+1]; FHEAP[$19+1]=FHEAP[$20+1]; ;
      __Z5b2MulRK11b2TransformRK6b2Vec2($pointA34, $xfA, $localPointA31);
      __ZmiRK6b2Vec2S1_($ref_tmp36, $pointA34, $pointB26);
      var $call37=__Z5b2DotRK6b2Vec2S1_($ref_tmp36, $normal23);
      $separation35=$call37;
      var $21=$separation35;
      $retval=$21;
      ;
    }
  } while(0);

  var $22=$retval;
  STACKTOP = __stackBase__;
  return $22;
  return null;
}
__ZNK20b2SeparationFunction8EvaluateEiif["X"]=1;

function __ZN7b2Timer5ResetEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $t=__stackBase__;
  $this_addr=$this;
  var $this1=$this_addr;
  var $call=_gettimeofday($t, 0);
  var $tv_sec=$t;
  var $0=IHEAP[$tv_sec];
  var $m_start_sec=$this1;
  IHEAP[$m_start_sec]=$0;
  var $tv_usec=$t+1;
  var $1=IHEAP[$tv_usec];
  var $conv=($1);
  var $mul=($conv)*0.0010000000474974513;
  var $conv2=Math.floor(($mul));
  var $m_start_msec=$this1+1;
  IHEAP[$m_start_msec]=$conv2;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK7b2Timer15GetMillisecondsEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $t=__stackBase__;
  $this_addr=$this;
  var $this1=$this_addr;
  var $call=_gettimeofday($t, 0);
  var $tv_sec=$t;
  var $0=IHEAP[$tv_sec];
  var $m_start_sec=$this1;
  var $1=IHEAP[$m_start_sec];
  var $sub=($0)-($1);
  var $mul=($sub)*1000;
  var $conv=($mul);
  var $tv_usec=$t+1;
  var $2=IHEAP[$tv_usec];
  var $conv2=($2);
  var $mul3=($conv2)*0.0010000000474974513;
  var $add=($conv)+($mul3);
  var $m_start_msec=$this1+1;
  var $3=IHEAP[$m_start_msec];
  var $conv4=($3);
  var $sub5=($add)-($conv4);
  STACKTOP = __stackBase__;
  return $sub5;
  return null;
}


function __ZN14b2WeldJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($this, $bA, $bB, $anchor) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $bA_addr;
  var $bB_addr;
  var $anchor_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp3=__stackBase__+2;
  $this_addr=$this;
  $bA_addr=$bA;
  $bB_addr=$bB;
  $anchor_addr=$anchor;
  var $this1=$this_addr;
  var $0=$bA_addr;
  var $1=$this1;
  var $bodyA=$1+2;
  IHEAP[$bodyA]=$0;
  var $2=$bB_addr;
  var $3=$this1;
  var $bodyB=$3+3;
  IHEAP[$bodyB]=$2;
  var $localAnchorA=$this1+5;
  var $4=$this1;
  var $bodyA2=$4+2;
  var $5=IHEAP[$bodyA2];
  var $6=$anchor_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp, $5, $6);
  var $7=$localAnchorA;
  var $8=$ref_tmp;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
  var $localAnchorB=$this1+7;
  var $9=$this1;
  var $bodyB4=$9+3;
  var $10=IHEAP[$bodyB4];
  var $11=$anchor_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp3, $10, $11);
  var $12=$localAnchorB;
  var $13=$ref_tmp3;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$this1;
  var $bodyB5=$14+3;
  var $15=IHEAP[$bodyB5];
  var $call=__ZNK6b2Body8GetAngleEv($15);
  var $16=$this1;
  var $bodyA6=$16+2;
  var $17=IHEAP[$bodyA6];
  var $call7=__ZNK6b2Body8GetAngleEv($17);
  var $sub=($call)-($call7);
  var $referenceAngle=$this1+9;
  FHEAP[$referenceAngle]=$sub;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN11b2WeldJoint23InitVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 35;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $vA=__stackBase__+2;
  var $wA;
  var $cB=__stackBase__+4;
  var $aB;
  var $vB=__stackBase__+6;
  var $wB;
  var $qA=__stackBase__+8;
  var $qB=__stackBase__+10;
  var $ref_tmp=__stackBase__+12;
  var $ref_tmp38=__stackBase__+14;
  var $ref_tmp40=__stackBase__+16;
  var $ref_tmp41=__stackBase__+18;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $K=__stackBase__+20;
  var $invM;
  var $m;
  var $C;
  var $omega;
  var $d;
  var $k;
  var $h;
  var $P=__stackBase__+29;
  var $ref_tmp170=__stackBase__+31;
  var $ref_tmp177=__stackBase__+33;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  var $m_indexA=$this1+30;
  IHEAP[$m_indexA]=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  var $m_indexB=$this1+31;
  IHEAP[$m_indexB]=$5;
  var $m_localCenterA=$this1+36;
  var $6=$this1;
  var $m_bodyA3=$6+12;
  var $7=IHEAP[$m_bodyA3];
  var $m_sweep=$7+7;
  var $localCenter=$m_sweep;
  var $8=$m_localCenterA;
  var $9=$localCenter;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localCenterB=$this1+38;
  var $10=$this1;
  var $m_bodyB4=$10+13;
  var $11=IHEAP[$m_bodyB4];
  var $m_sweep5=$11+7;
  var $localCenter6=$m_sweep5;
  var $12=$m_localCenterB;
  var $13=$localCenter6;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$this1;
  var $m_bodyA7=$14+12;
  var $15=IHEAP[$m_bodyA7];
  var $m_invMass=$15+30;
  var $16=FHEAP[$m_invMass];
  var $m_invMassA=$this1+40;
  FHEAP[$m_invMassA]=$16;
  var $17=$this1;
  var $m_bodyB8=$17+13;
  var $18=IHEAP[$m_bodyB8];
  var $m_invMass9=$18+30;
  var $19=FHEAP[$m_invMass9];
  var $m_invMassB=$this1+41;
  FHEAP[$m_invMassB]=$19;
  var $20=$this1;
  var $m_bodyA10=$20+12;
  var $21=IHEAP[$m_bodyA10];
  var $m_invI=$21+32;
  var $22=FHEAP[$m_invI];
  var $m_invIA=$this1+42;
  FHEAP[$m_invIA]=$22;
  var $23=$this1;
  var $m_bodyB11=$23+13;
  var $24=IHEAP[$m_bodyB11];
  var $m_invI12=$24+32;
  var $25=FHEAP[$m_invI12];
  var $m_invIB=$this1+43;
  FHEAP[$m_invIB]=$25;
  var $m_indexA13=$this1+30;
  var $26=IHEAP[$m_indexA13];
  var $27=$data_addr;
  var $positions=$27+6;
  var $28=IHEAP[$positions];
  var $arrayidx=$28+$26*3;
  var $c=$arrayidx;
  var $29=$cA;
  var $30=$c;
  IHEAP[$29]=IHEAP[$30]; FHEAP[$29]=FHEAP[$30]; ; IHEAP[$29+1]=IHEAP[$30+1]; FHEAP[$29+1]=FHEAP[$30+1]; ;
  var $m_indexA14=$this1+30;
  var $31=IHEAP[$m_indexA14];
  var $32=$data_addr;
  var $positions15=$32+6;
  var $33=IHEAP[$positions15];
  var $arrayidx16=$33+$31*3;
  var $a=$arrayidx16+2;
  var $34=FHEAP[$a];
  $aA=$34;
  var $m_indexA17=$this1+30;
  var $35=IHEAP[$m_indexA17];
  var $36=$data_addr;
  var $velocities=$36+7;
  var $37=IHEAP[$velocities];
  var $arrayidx18=$37+$35*3;
  var $v=$arrayidx18;
  var $38=$vA;
  var $39=$v;
  IHEAP[$38]=IHEAP[$39]; FHEAP[$38]=FHEAP[$39]; ; IHEAP[$38+1]=IHEAP[$39+1]; FHEAP[$38+1]=FHEAP[$39+1]; ;
  var $m_indexA19=$this1+30;
  var $40=IHEAP[$m_indexA19];
  var $41=$data_addr;
  var $velocities20=$41+7;
  var $42=IHEAP[$velocities20];
  var $arrayidx21=$42+$40*3;
  var $w=$arrayidx21+2;
  var $43=FHEAP[$w];
  $wA=$43;
  var $m_indexB22=$this1+31;
  var $44=IHEAP[$m_indexB22];
  var $45=$data_addr;
  var $positions23=$45+6;
  var $46=IHEAP[$positions23];
  var $arrayidx24=$46+$44*3;
  var $c25=$arrayidx24;
  var $47=$cB;
  var $48=$c25;
  IHEAP[$47]=IHEAP[$48]; FHEAP[$47]=FHEAP[$48]; ; IHEAP[$47+1]=IHEAP[$48+1]; FHEAP[$47+1]=FHEAP[$48+1]; ;
  var $m_indexB26=$this1+31;
  var $49=IHEAP[$m_indexB26];
  var $50=$data_addr;
  var $positions27=$50+6;
  var $51=IHEAP[$positions27];
  var $arrayidx28=$51+$49*3;
  var $a29=$arrayidx28+2;
  var $52=FHEAP[$a29];
  $aB=$52;
  var $m_indexB30=$this1+31;
  var $53=IHEAP[$m_indexB30];
  var $54=$data_addr;
  var $velocities31=$54+7;
  var $55=IHEAP[$velocities31];
  var $arrayidx32=$55+$53*3;
  var $v33=$arrayidx32;
  var $56=$vB;
  var $57=$v33;
  IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
  var $m_indexB34=$this1+31;
  var $58=IHEAP[$m_indexB34];
  var $59=$data_addr;
  var $velocities35=$59+7;
  var $60=IHEAP[$velocities35];
  var $arrayidx36=$60+$58*3;
  var $w37=$arrayidx36+2;
  var $61=FHEAP[$w37];
  $wB=$61;
  var $62=$aA;
  __ZN5b2RotC1Ef($qA, $62);
  var $63=$aB;
  __ZN5b2RotC1Ef($qB, $63);
  var $m_rA=$this1+32;
  var $m_localAnchorA=$this1+21;
  var $m_localCenterA39=$this1+36;
  __ZmiRK6b2Vec2S1_($ref_tmp38, $m_localAnchorA, $m_localCenterA39);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp, $qA, $ref_tmp38);
  var $64=$m_rA;
  var $65=$ref_tmp;
  IHEAP[$64]=IHEAP[$65]; FHEAP[$64]=FHEAP[$65]; ; IHEAP[$64+1]=IHEAP[$65+1]; FHEAP[$64+1]=FHEAP[$65+1]; ;
  var $m_rB=$this1+34;
  var $m_localAnchorB=$this1+23;
  var $m_localCenterB42=$this1+38;
  __ZmiRK6b2Vec2S1_($ref_tmp41, $m_localAnchorB, $m_localCenterB42);
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp40, $qB, $ref_tmp41);
  var $66=$m_rB;
  var $67=$ref_tmp40;
  IHEAP[$66]=IHEAP[$67]; FHEAP[$66]=FHEAP[$67]; ; IHEAP[$66+1]=IHEAP[$67+1]; FHEAP[$66+1]=FHEAP[$67+1]; ;
  var $m_invMassA43=$this1+40;
  var $68=FHEAP[$m_invMassA43];
  $mA=$68;
  var $m_invMassB44=$this1+41;
  var $69=FHEAP[$m_invMassB44];
  $mB=$69;
  var $m_invIA45=$this1+42;
  var $70=FHEAP[$m_invIA45];
  $iA=$70;
  var $m_invIB46=$this1+43;
  var $71=FHEAP[$m_invIB46];
  $iB=$71;
  __ZN7b2Mat33C1Ev($K);
  var $72=$mA;
  var $73=$mB;
  var $add=($72)+($73);
  var $m_rA47=$this1+32;
  var $y=$m_rA47+1;
  var $74=FHEAP[$y];
  var $m_rA48=$this1+32;
  var $y49=$m_rA48+1;
  var $75=FHEAP[$y49];
  var $mul=($74)*($75);
  var $76=$iA;
  var $mul50=($mul)*($76);
  var $add51=($add)+($mul50);
  var $m_rB52=$this1+34;
  var $y53=$m_rB52+1;
  var $77=FHEAP[$y53];
  var $m_rB54=$this1+34;
  var $y55=$m_rB54+1;
  var $78=FHEAP[$y55];
  var $mul56=($77)*($78);
  var $79=$iB;
  var $mul57=($mul56)*($79);
  var $add58=($add51)+($mul57);
  var $ex=$K;
  var $x=$ex;
  FHEAP[$x]=$add58;
  var $m_rA59=$this1+32;
  var $y60=$m_rA59+1;
  var $80=FHEAP[$y60];
  var $sub=(-($80));
  var $m_rA61=$this1+32;
  var $x62=$m_rA61;
  var $81=FHEAP[$x62];
  var $mul63=($sub)*($81);
  var $82=$iA;
  var $mul64=($mul63)*($82);
  var $m_rB65=$this1+34;
  var $y66=$m_rB65+1;
  var $83=FHEAP[$y66];
  var $m_rB67=$this1+34;
  var $x68=$m_rB67;
  var $84=FHEAP[$x68];
  var $mul69=($83)*($84);
  var $85=$iB;
  var $mul70=($mul69)*($85);
  var $sub71=($mul64)-($mul70);
  var $ey=$K+3;
  var $x72=$ey;
  FHEAP[$x72]=$sub71;
  var $m_rA73=$this1+32;
  var $y74=$m_rA73+1;
  var $86=FHEAP[$y74];
  var $sub75=(-($86));
  var $87=$iA;
  var $mul76=($sub75)*($87);
  var $m_rB77=$this1+34;
  var $y78=$m_rB77+1;
  var $88=FHEAP[$y78];
  var $89=$iB;
  var $mul79=($88)*($89);
  var $sub80=($mul76)-($mul79);
  var $ez=$K+6;
  var $x81=$ez;
  FHEAP[$x81]=$sub80;
  var $ey82=$K+3;
  var $x83=$ey82;
  var $90=FHEAP[$x83];
  var $ex84=$K;
  var $y85=$ex84+1;
  FHEAP[$y85]=$90;
  var $91=$mA;
  var $92=$mB;
  var $add86=($91)+($92);
  var $m_rA87=$this1+32;
  var $x88=$m_rA87;
  var $93=FHEAP[$x88];
  var $m_rA89=$this1+32;
  var $x90=$m_rA89;
  var $94=FHEAP[$x90];
  var $mul91=($93)*($94);
  var $95=$iA;
  var $mul92=($mul91)*($95);
  var $add93=($add86)+($mul92);
  var $m_rB94=$this1+34;
  var $x95=$m_rB94;
  var $96=FHEAP[$x95];
  var $m_rB96=$this1+34;
  var $x97=$m_rB96;
  var $97=FHEAP[$x97];
  var $mul98=($96)*($97);
  var $98=$iB;
  var $mul99=($mul98)*($98);
  var $add100=($add93)+($mul99);
  var $ey101=$K+3;
  var $y102=$ey101+1;
  FHEAP[$y102]=$add100;
  var $m_rA103=$this1+32;
  var $x104=$m_rA103;
  var $99=FHEAP[$x104];
  var $100=$iA;
  var $mul105=($99)*($100);
  var $m_rB106=$this1+34;
  var $x107=$m_rB106;
  var $101=FHEAP[$x107];
  var $102=$iB;
  var $mul108=($101)*($102);
  var $add109=($mul105)+($mul108);
  var $ez110=$K+6;
  var $y111=$ez110+1;
  FHEAP[$y111]=$add109;
  var $ez112=$K+6;
  var $x113=$ez112;
  var $103=FHEAP[$x113];
  var $ex114=$K;
  var $z=$ex114+2;
  FHEAP[$z]=$103;
  var $ez115=$K+6;
  var $y116=$ez115+1;
  var $104=FHEAP[$y116];
  var $ey117=$K+3;
  var $z118=$ey117+2;
  FHEAP[$z118]=$104;
  var $105=$iA;
  var $106=$iB;
  var $add119=($105)+($106);
  var $ez120=$K+6;
  var $z121=$ez120+2;
  FHEAP[$z121]=$add119;
  var $m_frequencyHz=$this1+18;
  var $107=FHEAP[$m_frequencyHz];
  var $cmp=($107) > 0;
  var $m_mass=$this1+44;
  if ($cmp) { __label__ = 1;; } else { __label__ = 8;; }
  $if_then$$if_else$15: do { 
    if (__label__ == 1) {

      __ZNK7b2Mat3312GetInverse22EPS_($K, $m_mass);
      var $108=$iA;
      var $109=$iB;
      var $add122=($108)+($109);
      $invM=$add122;
      var $110=$invM;
      var $cmp123=($110) > 0;
      if ($cmp123) { __label__ = 2;; } else { var $cond = 0;__label__ = 3;; }
      $cond_true$$cond_end$17: do { 
        if (__label__ == 2) {

          var $111=$invM;
          var $div=1/($111);
          var $cond = $div;;
        }
      } while(0);

      var $cond;
      $m=$cond;
      var $112=$aB;
      var $113=$aA;
      var $sub124=($112)-($113);
      var $m_referenceAngle=$this1+25;
      var $114=FHEAP[$m_referenceAngle];
      var $sub125=($sub124)-($114);
      $C=$sub125;
      var $m_frequencyHz126=$this1+18;
      var $115=FHEAP[$m_frequencyHz126];
      var $mul127=($115)*6.2831854820251465;
      $omega=$mul127;
      var $116=$m;
      var $mul128=($116)*2;
      var $m_dampingRatio=$this1+19;
      var $117=FHEAP[$m_dampingRatio];
      var $mul129=($mul128)*($117);
      var $118=$omega;
      var $mul130=($mul129)*($118);
      $d=$mul130;
      var $119=$m;
      var $120=$omega;
      var $mul131=($119)*($120);
      var $121=$omega;
      var $mul132=($mul131)*($121);
      $k=$mul132;
      var $122=$data_addr;
      var $step=$122;
      var $dt=$step;
      var $123=FHEAP[$dt];
      $h=$123;
      var $124=$h;
      var $125=$d;
      var $126=$h;
      var $127=$k;
      var $mul133=($126)*($127);
      var $add134=($125)+($mul133);
      var $mul135=($124)*($add134);
      var $m_gamma=$this1+26;
      FHEAP[$m_gamma]=$mul135;
      var $m_gamma136=$this1+26;
      var $128=FHEAP[$m_gamma136];
      var $cmp137=($128) != 0;
      if ($cmp137) { __label__ = 4;; } else { var $cond143 = 0;__label__ = 5;; }
      $cond_true138$$cond_end142$20: do { 
        if (__label__ == 4) {

          var $m_gamma139=$this1+26;
          var $129=FHEAP[$m_gamma139];
          var $div140=1/($129);
          var $cond143 = $div140;;
        }
      } while(0);

      var $cond143;
      var $m_gamma144=$this1+26;
      FHEAP[$m_gamma144]=$cond143;
      var $130=$C;
      var $131=$h;
      var $mul145=($130)*($131);
      var $132=$k;
      var $mul146=($mul145)*($132);
      var $m_gamma147=$this1+26;
      var $133=FHEAP[$m_gamma147];
      var $mul148=($mul146)*($133);
      var $m_bias=$this1+20;
      FHEAP[$m_bias]=$mul148;
      var $m_gamma149=$this1+26;
      var $134=FHEAP[$m_gamma149];
      var $135=$invM;
      var $add150=($135)+($134);
      $invM=$add150;
      var $cmp151=($add150) != 0;
      if ($cmp151) { __label__ = 6;; } else { var $cond156 = 0;__label__ = 7;; }
      $cond_true152$$cond_end155$23: do { 
        if (__label__ == 6) {

          var $136=$invM;
          var $div153=1/($136);
          var $cond156 = $div153;;
        }
      } while(0);

      var $cond156;
      var $m_mass157=$this1+44;
      var $ez158=$m_mass157+6;
      var $z159=$ez158+2;
      FHEAP[$z159]=$cond156;
      ;
    }
    else if (__label__ == 8) {

      __ZNK7b2Mat3315GetSymInverse33EPS_($K, $m_mass);
      var $m_gamma161=$this1+26;
      FHEAP[$m_gamma161]=0;
      var $m_bias162=$this1+20;
      FHEAP[$m_bias162]=0;
      ;
    }
  } while(0);

  var $137=$data_addr;
  var $step163=$137;
  var $warmStarting=$step163+5;
  var $138=IHEAP[$warmStarting];
  var $tobool=((($138)) & 1);
  var $m_impulse=$this1+27;
  if ($tobool) { __label__ = 10;; } else { __label__ = 11;; }
  $if_then164$$if_else185$28: do { 
    if (__label__ == 10) {

      var $139=$data_addr;
      var $step165=$139;
      var $dtRatio=$step165+2;
      var $140=FHEAP[$dtRatio];
      __ZN6b2Vec3mLEf($m_impulse, $140);
      var $m_impulse166=$this1+27;
      var $x167=$m_impulse166;
      var $141=FHEAP[$x167];
      var $m_impulse168=$this1+27;
      var $y169=$m_impulse168+1;
      var $142=FHEAP[$y169];
      __ZN6b2Vec2C1Eff($P, $141, $142);
      var $143=$mA;
      __ZmlfRK6b2Vec2($ref_tmp170, $143, $P);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp170);
      var $144=$iA;
      var $m_rA171=$this1+32;
      var $call=__Z7b2CrossRK6b2Vec2S1_($m_rA171, $P);
      var $m_impulse172=$this1+27;
      var $z173=$m_impulse172+2;
      var $145=FHEAP[$z173];
      var $add174=($call)+($145);
      var $mul175=($144)*($add174);
      var $146=$wA;
      var $sub176=($146)-($mul175);
      $wA=$sub176;
      var $147=$mB;
      __ZmlfRK6b2Vec2($ref_tmp177, $147, $P);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp177);
      var $148=$iB;
      var $m_rB178=$this1+34;
      var $call179=__Z7b2CrossRK6b2Vec2S1_($m_rB178, $P);
      var $m_impulse180=$this1+27;
      var $z181=$m_impulse180+2;
      var $149=FHEAP[$z181];
      var $add182=($call179)+($149);
      var $mul183=($148)*($add182);
      var $150=$wB;
      var $add184=($150)+($mul183);
      $wB=$add184;
      ;
    }
    else if (__label__ == 11) {

      __ZN6b2Vec37SetZeroEv($m_impulse);
      ;
    }
  } while(0);

  var $m_indexA188=$this1+30;
  var $151=IHEAP[$m_indexA188];
  var $152=$data_addr;
  var $velocities189=$152+7;
  var $153=IHEAP[$velocities189];
  var $arrayidx190=$153+$151*3;
  var $v191=$arrayidx190;
  var $154=$v191;
  var $155=$vA;
  IHEAP[$154]=IHEAP[$155]; FHEAP[$154]=FHEAP[$155]; ; IHEAP[$154+1]=IHEAP[$155+1]; FHEAP[$154+1]=FHEAP[$155+1]; ;
  var $156=$wA;
  var $m_indexA192=$this1+30;
  var $157=IHEAP[$m_indexA192];
  var $158=$data_addr;
  var $velocities193=$158+7;
  var $159=IHEAP[$velocities193];
  var $arrayidx194=$159+$157*3;
  var $w195=$arrayidx194+2;
  FHEAP[$w195]=$156;
  var $m_indexB196=$this1+31;
  var $160=IHEAP[$m_indexB196];
  var $161=$data_addr;
  var $velocities197=$161+7;
  var $162=IHEAP[$velocities197];
  var $arrayidx198=$162+$160*3;
  var $v199=$arrayidx198;
  var $163=$v199;
  var $164=$vB;
  IHEAP[$163]=IHEAP[$164]; FHEAP[$163]=FHEAP[$164]; ; IHEAP[$163+1]=IHEAP[$164+1]; FHEAP[$163+1]=FHEAP[$164+1]; ;
  var $165=$wB;
  var $m_indexB200=$this1+31;
  var $166=IHEAP[$m_indexB200];
  var $167=$data_addr;
  var $velocities201=$167+7;
  var $168=IHEAP[$velocities201];
  var $arrayidx202=$168+$166*3;
  var $w203=$arrayidx202+2;
  FHEAP[$w203]=$165;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN11b2WeldJoint23InitVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN11b2WeldJointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2WeldJointD2Ev($this1);
  ;
  return;
  return;
}


function __ZN11b2WeldJointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN11b2WeldJointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN11b2WeldJointD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2JointD2Ev($0);
  ;
  return;
  return;
}


function __Z5b2MulRK7b2Mat33RK6b2Vec3($agg_result, $A, $v) {
  var __stackBase__  = STACKTOP; STACKTOP += 12;
  var __label__;

  var $A_addr;
  var $v_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp1=__stackBase__+3;
  var $ref_tmp2=__stackBase__+6;
  var $ref_tmp3=__stackBase__+9;
  $A_addr=$A;
  $v_addr=$v;
  var $0=$v_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$A_addr;
  var $ex=$2;
  __ZmlfRK6b2Vec3($ref_tmp1, $1, $ex);
  var $3=$v_addr;
  var $y=$3+1;
  var $4=FHEAP[$y];
  var $5=$A_addr;
  var $ey=$5+3;
  __ZmlfRK6b2Vec3($ref_tmp2, $4, $ey);
  __ZplRK6b2Vec3S1_($ref_tmp, $ref_tmp1, $ref_tmp2);
  var $6=$v_addr;
  var $z=$6+2;
  var $7=FHEAP[$z];
  var $8=$A_addr;
  var $ez=$8+6;
  __ZmlfRK6b2Vec3($ref_tmp3, $7, $ez);
  __ZplRK6b2Vec3S1_($agg_result, $ref_tmp, $ref_tmp3);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK11b2WeldJoint10GetAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+21;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorA);
  ;
  return;
  return;
}


function __ZNK11b2WeldJoint10GetAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+23;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorB);
  ;
  return;
  return;
}


function __ZNK11b2WeldJoint16GetReactionForceEf($agg_result, $this, $inv_dt) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  var $P=__stackBase__;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $m_impulse=$this1+27;
  var $x=$m_impulse;
  var $0=FHEAP[$x];
  var $m_impulse2=$this1+27;
  var $y=$m_impulse2+1;
  var $1=FHEAP[$y];
  __ZN6b2Vec2C1Eff($P, $0, $1);
  var $2=$inv_dt_addr;
  __ZmlfRK6b2Vec2($agg_result, $2, $P);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK11b2WeldJoint17GetReactionTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_impulse=$this1+27;
  var $z=$m_impulse+2;
  var $1=FHEAP[$z];
  var $mul=($0)*($1);
  ;
  return $mul;
  return null;
}


function __ZN11b2WeldJoint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $indexA;
  var $indexB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  $indexA=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  $indexB=$5;
  __Z5b2LogPKcz(__str379, allocate(1, "i32", ALLOC_STACK));
  var $6=$indexA;
  __Z5b2LogPKcz(__str1392, allocate([$6], "i32", ALLOC_STACK));
  var $7=$indexB;
  __Z5b2LogPKcz(__str2393, allocate([$7], "i32", ALLOC_STACK));
  var $8=$this1;
  var $m_collideConnected=$8+16;
  var $9=IHEAP[$m_collideConnected];
  var $tobool=((($9)) & 1);
  var $conv=($tobool);
  __Z5b2LogPKcz(__str3394, allocate([$conv], "i32", ALLOC_STACK));
  var $m_localAnchorA=$this1+21;
  var $x=$m_localAnchorA;
  var $10=FHEAP[$x];
  var $conv3=($10);
  var $m_localAnchorA4=$this1+21;
  var $y=$m_localAnchorA4+1;
  var $11=FHEAP[$y];
  var $conv5=($11);
  __Z5b2LogPKcz(__str4395, allocate([$conv3,$conv5], "double", ALLOC_STACK));
  var $m_localAnchorB=$this1+23;
  var $x6=$m_localAnchorB;
  var $12=FHEAP[$x6];
  var $conv7=($12);
  var $m_localAnchorB8=$this1+23;
  var $y9=$m_localAnchorB8+1;
  var $13=FHEAP[$y9];
  var $conv10=($13);
  __Z5b2LogPKcz(__str5396, allocate([$conv7,$conv10], "double", ALLOC_STACK));
  var $m_referenceAngle=$this1+25;
  var $14=FHEAP[$m_referenceAngle];
  var $conv11=($14);
  __Z5b2LogPKcz(__str6385, allocate([$conv11], "double", ALLOC_STACK));
  var $m_frequencyHz=$this1+18;
  var $15=FHEAP[$m_frequencyHz];
  var $conv12=($15);
  __Z5b2LogPKcz(__str10401, allocate([$conv12], "double", ALLOC_STACK));
  var $m_dampingRatio=$this1+19;
  var $16=FHEAP[$m_dampingRatio];
  var $conv13=($16);
  __Z5b2LogPKcz(__str11402, allocate([$conv13], "double", ALLOC_STACK));
  var $17=$this1;
  var $m_index=$17+14;
  var $18=IHEAP[$m_index];
  __Z5b2LogPKcz(__str12403, allocate([$18], "i32", ALLOC_STACK));
  ;
  return;
  return;
}
__ZN11b2WeldJoint4DumpEv["X"]=1;

function __ZplRK6b2Vec3S1_($agg_result, $a, $b) {
  ;
  var __label__;

  var $a_addr;
  var $b_addr;
  $a_addr=$a;
  $b_addr=$b;
  var $0=$a_addr;
  var $x=$0;
  var $1=FHEAP[$x];
  var $2=$b_addr;
  var $x1=$2;
  var $3=FHEAP[$x1];
  var $add=($1)+($3);
  var $4=$a_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $6=$b_addr;
  var $y2=$6+1;
  var $7=FHEAP[$y2];
  var $add3=($5)+($7);
  var $8=$a_addr;
  var $z=$8+2;
  var $9=FHEAP[$z];
  var $10=$b_addr;
  var $z4=$10+2;
  var $11=FHEAP[$z4];
  var $add5=($9)+($11);
  __ZN6b2Vec3C1Efff($agg_result, $add, $add3, $add5);
  ;
  return;
  return;
}


function __ZmlfRK6b2Vec3($agg_result, $s, $a) {
  ;
  var __label__;

  var $s_addr;
  var $a_addr;
  $s_addr=$s;
  $a_addr=$a;
  var $0=$s_addr;
  var $1=$a_addr;
  var $x=$1;
  var $2=FHEAP[$x];
  var $mul=($0)*($2);
  var $3=$s_addr;
  var $4=$a_addr;
  var $y=$4+1;
  var $5=FHEAP[$y];
  var $mul1=($3)*($5);
  var $6=$s_addr;
  var $7=$a_addr;
  var $z=$7+2;
  var $8=FHEAP[$z];
  var $mul2=($6)*($8);
  __ZN6b2Vec3C1Efff($agg_result, $mul, $mul1, $mul2);
  ;
  return;
  return;
}


function __ZN15b2WheelJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($this, $bA, $bB, $anchor, $axis) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $bA_addr;
  var $bB_addr;
  var $anchor_addr;
  var $axis_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp3=__stackBase__+2;
  var $ref_tmp5=__stackBase__+4;
  $this_addr=$this;
  $bA_addr=$bA;
  $bB_addr=$bB;
  $anchor_addr=$anchor;
  $axis_addr=$axis;
  var $this1=$this_addr;
  var $0=$bA_addr;
  var $1=$this1;
  var $bodyA=$1+2;
  IHEAP[$bodyA]=$0;
  var $2=$bB_addr;
  var $3=$this1;
  var $bodyB=$3+3;
  IHEAP[$bodyB]=$2;
  var $localAnchorA=$this1+5;
  var $4=$this1;
  var $bodyA2=$4+2;
  var $5=IHEAP[$bodyA2];
  var $6=$anchor_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp, $5, $6);
  var $7=$localAnchorA;
  var $8=$ref_tmp;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
  var $localAnchorB=$this1+7;
  var $9=$this1;
  var $bodyB4=$9+3;
  var $10=IHEAP[$bodyB4];
  var $11=$anchor_addr;
  __ZNK6b2Body13GetLocalPointERK6b2Vec2($ref_tmp3, $10, $11);
  var $12=$localAnchorB;
  var $13=$ref_tmp3;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $localAxisA=$this1+9;
  var $14=$this1;
  var $bodyA6=$14+2;
  var $15=IHEAP[$bodyA6];
  var $16=$axis_addr;
  __ZNK6b2Body14GetLocalVectorERK6b2Vec2($ref_tmp5, $15, $16);
  var $17=$localAxisA;
  var $18=$ref_tmp5;
  IHEAP[$17]=IHEAP[$18]; FHEAP[$17]=FHEAP[$18]; ; IHEAP[$17+1]=IHEAP[$18+1]; FHEAP[$17+1]=FHEAP[$18+1]; ;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN15b2WheelJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_["X"]=1;

function __ZN11b2WeldJoint24SolveVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 49;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $Cdot2;
  var $impulse2;
  var $Cdot1=__stackBase__+4;
  var $ref_tmp=__stackBase__+6;
  var $ref_tmp23=__stackBase__+8;
  var $ref_tmp24=__stackBase__+10;
  var $ref_tmp25=__stackBase__+12;
  var $impulse1=__stackBase__+14;
  var $tmp=__stackBase__+16;
  var $P=__stackBase__+18;
  var $ref_tmp34=__stackBase__+20;
  var $ref_tmp38=__stackBase__+22;
  var $Cdot144=__stackBase__+24;
  var $ref_tmp45=__stackBase__+26;
  var $ref_tmp46=__stackBase__+28;
  var $ref_tmp47=__stackBase__+30;
  var $ref_tmp49=__stackBase__+32;
  var $Cdot252;
  var $Cdot=__stackBase__+34;
  var $impulse=__stackBase__+37;
  var $tmp59=__stackBase__+40;
  var $P62=__stackBase__+43;
  var $ref_tmp65=__stackBase__+45;
  var $ref_tmp72=__stackBase__+47;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+30;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $velocities=$1+7;
  var $2=IHEAP[$velocities];
  var $arrayidx=$2+$0*3;
  var $v=$arrayidx;
  var $3=$vA;
  var $4=$v;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+30;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $velocities3=$6+7;
  var $7=IHEAP[$velocities3];
  var $arrayidx4=$7+$5*3;
  var $w=$arrayidx4+2;
  var $8=FHEAP[$w];
  $wA=$8;
  var $m_indexB=$this1+31;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $velocities5=$10+7;
  var $11=IHEAP[$velocities5];
  var $arrayidx6=$11+$9*3;
  var $v7=$arrayidx6;
  var $12=$vB;
  var $13=$v7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+31;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $velocities9=$15+7;
  var $16=IHEAP[$velocities9];
  var $arrayidx10=$16+$14*3;
  var $w11=$arrayidx10+2;
  var $17=FHEAP[$w11];
  $wB=$17;
  var $m_invMassA=$this1+40;
  var $18=FHEAP[$m_invMassA];
  $mA=$18;
  var $m_invMassB=$this1+41;
  var $19=FHEAP[$m_invMassB];
  $mB=$19;
  var $m_invIA=$this1+42;
  var $20=FHEAP[$m_invIA];
  $iA=$20;
  var $m_invIB=$this1+43;
  var $21=FHEAP[$m_invIB];
  $iB=$21;
  var $m_frequencyHz=$this1+18;
  var $22=FHEAP[$m_frequencyHz];
  var $cmp=($22) > 0;
  var $23=$wB;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_else$2: do { 
    if (__label__ == 1) {

      var $24=$wA;
      var $sub=($23)-($24);
      $Cdot2=$sub;
      var $m_mass=$this1+44;
      var $ez=$m_mass+6;
      var $z=$ez+2;
      var $25=FHEAP[$z];
      var $sub12=(-($25));
      var $26=$Cdot2;
      var $m_bias=$this1+20;
      var $27=FHEAP[$m_bias];
      var $add=($26)+($27);
      var $m_gamma=$this1+26;
      var $28=FHEAP[$m_gamma];
      var $m_impulse=$this1+27;
      var $z13=$m_impulse+2;
      var $29=FHEAP[$z13];
      var $mul=($28)*($29);
      var $add14=($add)+($mul);
      var $mul15=($sub12)*($add14);
      $impulse2=$mul15;
      var $30=$impulse2;
      var $m_impulse16=$this1+27;
      var $z17=$m_impulse16+2;
      var $31=FHEAP[$z17];
      var $add18=($31)+($30);
      FHEAP[$z17]=$add18;
      var $32=$iA;
      var $33=$impulse2;
      var $mul19=($32)*($33);
      var $34=$wA;
      var $sub20=($34)-($mul19);
      $wA=$sub20;
      var $35=$iB;
      var $36=$impulse2;
      var $mul21=($35)*($36);
      var $37=$wB;
      var $add22=($37)+($mul21);
      $wB=$add22;
      var $38=$wB;
      var $m_rB=$this1+34;
      __Z7b2CrossfRK6b2Vec2($ref_tmp24, $38, $m_rB);
      __ZplRK6b2Vec2S1_($ref_tmp23, $vB, $ref_tmp24);
      __ZmiRK6b2Vec2S1_($ref_tmp, $ref_tmp23, $vA);
      var $39=$wA;
      var $m_rA=$this1+32;
      __Z7b2CrossfRK6b2Vec2($ref_tmp25, $39, $m_rA);
      __ZmiRK6b2Vec2S1_($Cdot1, $ref_tmp, $ref_tmp25);
      var $m_mass26=$this1+44;
      __Z7b2Mul22RK7b2Mat33RK6b2Vec2($tmp, $m_mass26, $Cdot1);
      __ZNK6b2Vec2ngEv($impulse1, $tmp);
      var $x=$impulse1;
      var $40=FHEAP[$x];
      var $m_impulse27=$this1+27;
      var $x28=$m_impulse27;
      var $41=FHEAP[$x28];
      var $add29=($41)+($40);
      FHEAP[$x28]=$add29;
      var $y=$impulse1+1;
      var $42=FHEAP[$y];
      var $m_impulse30=$this1+27;
      var $y31=$m_impulse30+1;
      var $43=FHEAP[$y31];
      var $add32=($43)+($42);
      FHEAP[$y31]=$add32;
      var $44=$P;
      var $45=$impulse1;
      IHEAP[$44]=IHEAP[$45]; FHEAP[$44]=FHEAP[$45]; ; IHEAP[$44+1]=IHEAP[$45+1]; FHEAP[$44+1]=FHEAP[$45+1]; ;
      var $46=$mA;
      __ZmlfRK6b2Vec2($ref_tmp34, $46, $P);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp34);
      var $47=$iA;
      var $m_rA35=$this1+32;
      var $call=__Z7b2CrossRK6b2Vec2S1_($m_rA35, $P);
      var $mul36=($47)*($call);
      var $48=$wA;
      var $sub37=($48)-($mul36);
      $wA=$sub37;
      var $49=$mB;
      __ZmlfRK6b2Vec2($ref_tmp38, $49, $P);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp38);
      var $50=$iB;
      var $m_rB39=$this1+34;
      var $call40=__Z7b2CrossRK6b2Vec2S1_($m_rB39, $P);
      var $mul41=($50)*($call40);
      var $51=$wB;
      var $add42=($51)+($mul41);
      $wB=$add42;
      ;
    }
    else if (__label__ == 2) {

      var $m_rB48=$this1+34;
      __Z7b2CrossfRK6b2Vec2($ref_tmp47, $23, $m_rB48);
      __ZplRK6b2Vec2S1_($ref_tmp46, $vB, $ref_tmp47);
      __ZmiRK6b2Vec2S1_($ref_tmp45, $ref_tmp46, $vA);
      var $52=$wA;
      var $m_rA50=$this1+32;
      __Z7b2CrossfRK6b2Vec2($ref_tmp49, $52, $m_rA50);
      __ZmiRK6b2Vec2S1_($Cdot144, $ref_tmp45, $ref_tmp49);
      var $53=$wB;
      var $54=$wA;
      var $sub53=($53)-($54);
      $Cdot252=$sub53;
      var $x55=$Cdot144;
      var $55=FHEAP[$x55];
      var $y56=$Cdot144+1;
      var $56=FHEAP[$y56];
      var $57=$Cdot252;
      __ZN6b2Vec3C1Efff($Cdot, $55, $56, $57);
      var $m_mass58=$this1+44;
      __Z5b2MulRK7b2Mat33RK6b2Vec3($tmp59, $m_mass58, $Cdot);
      __ZNK6b2Vec3ngEv($impulse, $tmp59);
      var $m_impulse60=$this1+27;
      __ZN6b2Vec3pLERKS_($m_impulse60, $impulse);
      var $x63=$impulse;
      var $58=FHEAP[$x63];
      var $y64=$impulse+1;
      var $59=FHEAP[$y64];
      __ZN6b2Vec2C1Eff($P62, $58, $59);
      var $60=$mA;
      __ZmlfRK6b2Vec2($ref_tmp65, $60, $P62);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp65);
      var $61=$iA;
      var $m_rA66=$this1+32;
      var $call67=__Z7b2CrossRK6b2Vec2S1_($m_rA66, $P62);
      var $z68=$impulse+2;
      var $62=FHEAP[$z68];
      var $add69=($call67)+($62);
      var $mul70=($61)*($add69);
      var $63=$wA;
      var $sub71=($63)-($mul70);
      $wA=$sub71;
      var $64=$mB;
      __ZmlfRK6b2Vec2($ref_tmp72, $64, $P62);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp72);
      var $65=$iB;
      var $m_rB73=$this1+34;
      var $call74=__Z7b2CrossRK6b2Vec2S1_($m_rB73, $P62);
      var $z75=$impulse+2;
      var $66=FHEAP[$z75];
      var $add76=($call74)+($66);
      var $mul77=($65)*($add76);
      var $67=$wB;
      var $add78=($67)+($mul77);
      $wB=$add78;
      ;
    }
  } while(0);

  var $m_indexA79=$this1+30;
  var $68=IHEAP[$m_indexA79];
  var $69=$data_addr;
  var $velocities80=$69+7;
  var $70=IHEAP[$velocities80];
  var $arrayidx81=$70+$68*3;
  var $v82=$arrayidx81;
  var $71=$v82;
  var $72=$vA;
  IHEAP[$71]=IHEAP[$72]; FHEAP[$71]=FHEAP[$72]; ; IHEAP[$71+1]=IHEAP[$72+1]; FHEAP[$71+1]=FHEAP[$72+1]; ;
  var $73=$wA;
  var $m_indexA83=$this1+30;
  var $74=IHEAP[$m_indexA83];
  var $75=$data_addr;
  var $velocities84=$75+7;
  var $76=IHEAP[$velocities84];
  var $arrayidx85=$76+$74*3;
  var $w86=$arrayidx85+2;
  FHEAP[$w86]=$73;
  var $m_indexB87=$this1+31;
  var $77=IHEAP[$m_indexB87];
  var $78=$data_addr;
  var $velocities88=$78+7;
  var $79=IHEAP[$velocities88];
  var $arrayidx89=$79+$77*3;
  var $v90=$arrayidx89;
  var $80=$v90;
  var $81=$vB;
  IHEAP[$80]=IHEAP[$81]; FHEAP[$80]=FHEAP[$81]; ; IHEAP[$80+1]=IHEAP[$81+1]; FHEAP[$80+1]=FHEAP[$81+1]; ;
  var $82=$wB;
  var $m_indexB91=$this1+31;
  var $83=IHEAP[$m_indexB91];
  var $84=$data_addr;
  var $velocities92=$84+7;
  var $85=IHEAP[$velocities92];
  var $arrayidx93=$85+$83*3;
  var $w94=$arrayidx93+2;
  FHEAP[$w94]=$82;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN11b2WeldJoint24SolveVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN11b2WeldJoint24SolvePositionConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 60;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $cB=__stackBase__+2;
  var $aB;
  var $qA=__stackBase__+4;
  var $qB=__stackBase__+6;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $rA=__stackBase__+8;
  var $ref_tmp=__stackBase__+10;
  var $rB=__stackBase__+12;
  var $ref_tmp12=__stackBase__+14;
  var $positionError;
  var $angularError;
  var $K=__stackBase__+16;
  var $C1=__stackBase__+25;
  var $ref_tmp72=__stackBase__+27;
  var $ref_tmp73=__stackBase__+29;
  var $P=__stackBase__+31;
  var $tmp=__stackBase__+33;
  var $ref_tmp74=__stackBase__+35;
  var $ref_tmp78=__stackBase__+37;
  var $C183=__stackBase__+39;
  var $ref_tmp84=__stackBase__+41;
  var $ref_tmp85=__stackBase__+43;
  var $C2;
  var $C=__stackBase__+45;
  var $impulse=__stackBase__+48;
  var $tmp95=__stackBase__+51;
  var $P97=__stackBase__+54;
  var $ref_tmp100=__stackBase__+56;
  var $ref_tmp106=__stackBase__+58;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+30;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $positions=$1+6;
  var $2=IHEAP[$positions];
  var $arrayidx=$2+$0*3;
  var $c=$arrayidx;
  var $3=$cA;
  var $4=$c;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+30;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $positions3=$6+6;
  var $7=IHEAP[$positions3];
  var $arrayidx4=$7+$5*3;
  var $a=$arrayidx4+2;
  var $8=FHEAP[$a];
  $aA=$8;
  var $m_indexB=$this1+31;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $positions5=$10+6;
  var $11=IHEAP[$positions5];
  var $arrayidx6=$11+$9*3;
  var $c7=$arrayidx6;
  var $12=$cB;
  var $13=$c7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+31;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $positions9=$15+6;
  var $16=IHEAP[$positions9];
  var $arrayidx10=$16+$14*3;
  var $a11=$arrayidx10+2;
  var $17=FHEAP[$a11];
  $aB=$17;
  var $18=$aA;
  __ZN5b2RotC1Ef($qA, $18);
  var $19=$aB;
  __ZN5b2RotC1Ef($qB, $19);
  var $m_invMassA=$this1+40;
  var $20=FHEAP[$m_invMassA];
  $mA=$20;
  var $m_invMassB=$this1+41;
  var $21=FHEAP[$m_invMassB];
  $mB=$21;
  var $m_invIA=$this1+42;
  var $22=FHEAP[$m_invIA];
  $iA=$22;
  var $m_invIB=$this1+43;
  var $23=FHEAP[$m_invIB];
  $iB=$23;
  var $m_localAnchorA=$this1+21;
  var $m_localCenterA=$this1+36;
  __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorA, $m_localCenterA);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp);
  var $m_localAnchorB=$this1+23;
  var $m_localCenterB=$this1+38;
  __ZmiRK6b2Vec2S1_($ref_tmp12, $m_localAnchorB, $m_localCenterB);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp12);
  __ZN7b2Mat33C1Ev($K);
  var $24=$mA;
  var $25=$mB;
  var $add=($24)+($25);
  var $y=$rA+1;
  var $26=FHEAP[$y];
  var $y13=$rA+1;
  var $27=FHEAP[$y13];
  var $mul=($26)*($27);
  var $28=$iA;
  var $mul14=($mul)*($28);
  var $add15=($add)+($mul14);
  var $y16=$rB+1;
  var $29=FHEAP[$y16];
  var $y17=$rB+1;
  var $30=FHEAP[$y17];
  var $mul18=($29)*($30);
  var $31=$iB;
  var $mul19=($mul18)*($31);
  var $add20=($add15)+($mul19);
  var $ex=$K;
  var $x=$ex;
  FHEAP[$x]=$add20;
  var $y21=$rA+1;
  var $32=FHEAP[$y21];
  var $sub=(-($32));
  var $x22=$rA;
  var $33=FHEAP[$x22];
  var $mul23=($sub)*($33);
  var $34=$iA;
  var $mul24=($mul23)*($34);
  var $y25=$rB+1;
  var $35=FHEAP[$y25];
  var $x26=$rB;
  var $36=FHEAP[$x26];
  var $mul27=($35)*($36);
  var $37=$iB;
  var $mul28=($mul27)*($37);
  var $sub29=($mul24)-($mul28);
  var $ey=$K+3;
  var $x30=$ey;
  FHEAP[$x30]=$sub29;
  var $y31=$rA+1;
  var $38=FHEAP[$y31];
  var $sub32=(-($38));
  var $39=$iA;
  var $mul33=($sub32)*($39);
  var $y34=$rB+1;
  var $40=FHEAP[$y34];
  var $41=$iB;
  var $mul35=($40)*($41);
  var $sub36=($mul33)-($mul35);
  var $ez=$K+6;
  var $x37=$ez;
  FHEAP[$x37]=$sub36;
  var $ey38=$K+3;
  var $x39=$ey38;
  var $42=FHEAP[$x39];
  var $ex40=$K;
  var $y41=$ex40+1;
  FHEAP[$y41]=$42;
  var $43=$mA;
  var $44=$mB;
  var $add42=($43)+($44);
  var $x43=$rA;
  var $45=FHEAP[$x43];
  var $x44=$rA;
  var $46=FHEAP[$x44];
  var $mul45=($45)*($46);
  var $47=$iA;
  var $mul46=($mul45)*($47);
  var $add47=($add42)+($mul46);
  var $x48=$rB;
  var $48=FHEAP[$x48];
  var $x49=$rB;
  var $49=FHEAP[$x49];
  var $mul50=($48)*($49);
  var $50=$iB;
  var $mul51=($mul50)*($50);
  var $add52=($add47)+($mul51);
  var $ey53=$K+3;
  var $y54=$ey53+1;
  FHEAP[$y54]=$add52;
  var $x55=$rA;
  var $51=FHEAP[$x55];
  var $52=$iA;
  var $mul56=($51)*($52);
  var $x57=$rB;
  var $53=FHEAP[$x57];
  var $54=$iB;
  var $mul58=($53)*($54);
  var $add59=($mul56)+($mul58);
  var $ez60=$K+6;
  var $y61=$ez60+1;
  FHEAP[$y61]=$add59;
  var $ez62=$K+6;
  var $x63=$ez62;
  var $55=FHEAP[$x63];
  var $ex64=$K;
  var $z=$ex64+2;
  FHEAP[$z]=$55;
  var $ez65=$K+6;
  var $y66=$ez65+1;
  var $56=FHEAP[$y66];
  var $ey67=$K+3;
  var $z68=$ey67+2;
  FHEAP[$z68]=$56;
  var $57=$iA;
  var $58=$iB;
  var $add69=($57)+($58);
  var $ez70=$K+6;
  var $z71=$ez70+2;
  FHEAP[$z71]=$add69;
  var $m_frequencyHz=$this1+18;
  var $59=FHEAP[$m_frequencyHz];
  var $cmp=($59) > 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_else$8: do { 
    if (__label__ == 1) {

      __ZplRK6b2Vec2S1_($ref_tmp73, $cB, $rB);
      __ZmiRK6b2Vec2S1_($ref_tmp72, $ref_tmp73, $cA);
      __ZmiRK6b2Vec2S1_($C1, $ref_tmp72, $rA);
      var $call=__ZNK6b2Vec26LengthEv($C1);
      $positionError=$call;
      $angularError=0;
      __ZNK7b2Mat337Solve22ERK6b2Vec2($tmp, $K, $C1);
      __ZNK6b2Vec2ngEv($P, $tmp);
      var $60=$mA;
      __ZmlfRK6b2Vec2($ref_tmp74, $60, $P);
      __ZN6b2Vec2mIERKS_($cA, $ref_tmp74);
      var $61=$iA;
      var $call75=__Z7b2CrossRK6b2Vec2S1_($rA, $P);
      var $mul76=($61)*($call75);
      var $62=$aA;
      var $sub77=($62)-($mul76);
      $aA=$sub77;
      var $63=$mB;
      __ZmlfRK6b2Vec2($ref_tmp78, $63, $P);
      __ZN6b2Vec2pLERKS_($cB, $ref_tmp78);
      var $64=$iB;
      var $call79=__Z7b2CrossRK6b2Vec2S1_($rB, $P);
      var $mul80=($64)*($call79);
      var $65=$aB;
      var $add81=($65)+($mul80);
      $aB=$add81;
      ;
    }
    else if (__label__ == 2) {

      __ZplRK6b2Vec2S1_($ref_tmp85, $cB, $rB);
      __ZmiRK6b2Vec2S1_($ref_tmp84, $ref_tmp85, $cA);
      __ZmiRK6b2Vec2S1_($C183, $ref_tmp84, $rA);
      var $66=$aB;
      var $67=$aA;
      var $sub87=($66)-($67);
      var $m_referenceAngle=$this1+25;
      var $68=FHEAP[$m_referenceAngle];
      var $sub88=($sub87)-($68);
      $C2=$sub88;
      var $call89=__ZNK6b2Vec26LengthEv($C183);
      $positionError=$call89;
      var $69=$C2;
      var $call90=__Z5b2AbsIfET_S0_($69);
      $angularError=$call90;
      var $x92=$C183;
      var $70=FHEAP[$x92];
      var $y93=$C183+1;
      var $71=FHEAP[$y93];
      var $72=$C2;
      __ZN6b2Vec3C1Efff($C, $70, $71, $72);
      __ZNK7b2Mat337Solve33ERK6b2Vec3($tmp95, $K, $C);
      __ZNK6b2Vec3ngEv($impulse, $tmp95);
      var $x98=$impulse;
      var $73=FHEAP[$x98];
      var $y99=$impulse+1;
      var $74=FHEAP[$y99];
      __ZN6b2Vec2C1Eff($P97, $73, $74);
      var $75=$mA;
      __ZmlfRK6b2Vec2($ref_tmp100, $75, $P97);
      __ZN6b2Vec2mIERKS_($cA, $ref_tmp100);
      var $76=$iA;
      var $call101=__Z7b2CrossRK6b2Vec2S1_($rA, $P97);
      var $z102=$impulse+2;
      var $77=FHEAP[$z102];
      var $add103=($call101)+($77);
      var $mul104=($76)*($add103);
      var $78=$aA;
      var $sub105=($78)-($mul104);
      $aA=$sub105;
      var $79=$mB;
      __ZmlfRK6b2Vec2($ref_tmp106, $79, $P97);
      __ZN6b2Vec2pLERKS_($cB, $ref_tmp106);
      var $80=$iB;
      var $call107=__Z7b2CrossRK6b2Vec2S1_($rB, $P97);
      var $z108=$impulse+2;
      var $81=FHEAP[$z108];
      var $add109=($call107)+($81);
      var $mul110=($80)*($add109);
      var $82=$aB;
      var $add111=($82)+($mul110);
      $aB=$add111;
      ;
    }
  } while(0);

  var $m_indexA112=$this1+30;
  var $83=IHEAP[$m_indexA112];
  var $84=$data_addr;
  var $positions113=$84+6;
  var $85=IHEAP[$positions113];
  var $arrayidx114=$85+$83*3;
  var $c115=$arrayidx114;
  var $86=$c115;
  var $87=$cA;
  IHEAP[$86]=IHEAP[$87]; FHEAP[$86]=FHEAP[$87]; ; IHEAP[$86+1]=IHEAP[$87+1]; FHEAP[$86+1]=FHEAP[$87+1]; ;
  var $88=$aA;
  var $m_indexA116=$this1+30;
  var $89=IHEAP[$m_indexA116];
  var $90=$data_addr;
  var $positions117=$90+6;
  var $91=IHEAP[$positions117];
  var $arrayidx118=$91+$89*3;
  var $a119=$arrayidx118+2;
  FHEAP[$a119]=$88;
  var $m_indexB120=$this1+31;
  var $92=IHEAP[$m_indexB120];
  var $93=$data_addr;
  var $positions121=$93+6;
  var $94=IHEAP[$positions121];
  var $arrayidx122=$94+$92*3;
  var $c123=$arrayidx122;
  var $95=$c123;
  var $96=$cB;
  IHEAP[$95]=IHEAP[$96]; FHEAP[$95]=FHEAP[$96]; ; IHEAP[$95+1]=IHEAP[$96+1]; FHEAP[$95+1]=FHEAP[$96+1]; ;
  var $97=$aB;
  var $m_indexB124=$this1+31;
  var $98=IHEAP[$m_indexB124];
  var $99=$data_addr;
  var $positions125=$99+6;
  var $100=IHEAP[$positions125];
  var $arrayidx126=$100+$98*3;
  var $a127=$arrayidx126+2;
  FHEAP[$a127]=$97;
  var $101=$positionError;
  var $cmp128=($101) <= 0.004999999888241291;
  if ($cmp128) { __label__ = 4;; } else { var $103 = 0;__label__ = 5;; }
  $land_rhs$$land_end$12: do { 
    if (__label__ == 4) {

      var $102=$angularError;
      var $cmp129=($102) <= 0.03490658849477768;
      var $103 = $cmp129;;
    }
  } while(0);

  var $103;
  STACKTOP = __stackBase__;
  return $103;
  return null;
}
__ZN11b2WeldJoint24SolvePositionConstraintsERK12b2SolverData["X"]=1;

function __ZN12b2WheelJointC2EPK15b2WheelJointDef($this, $def) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $def_addr;
  var $ref_tmp=__stackBase__;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $0=$this1;
  var $1=$def_addr;
  var $2=$1;
  __ZN7b2JointC2EPK10b2JointDef($0, $2);
  var $3=$this1;
  IHEAP[$3]=__ZTV12b2WheelJoint+2;
  var $m_localAnchorA=$this1+20;
  __ZN6b2Vec2C1Ev($m_localAnchorA);
  var $m_localAnchorB=$this1+22;
  __ZN6b2Vec2C1Ev($m_localAnchorB);
  var $m_localXAxisA=$this1+24;
  __ZN6b2Vec2C1Ev($m_localXAxisA);
  var $m_localYAxisA=$this1+26;
  __ZN6b2Vec2C1Ev($m_localYAxisA);
  var $m_localCenterA=$this1+36;
  __ZN6b2Vec2C1Ev($m_localCenterA);
  var $m_localCenterB=$this1+38;
  __ZN6b2Vec2C1Ev($m_localCenterB);
  var $m_ax=$this1+44;
  __ZN6b2Vec2C1Ev($m_ax);
  var $m_ay=$this1+46;
  __ZN6b2Vec2C1Ev($m_ay);
  var $m_localAnchorA9=$this1+20;
  var $4=$def_addr;
  var $localAnchorA=$4+5;
  var $5=$m_localAnchorA9;
  var $6=$localAnchorA;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_localAnchorB10=$this1+22;
  var $7=$def_addr;
  var $localAnchorB=$7+7;
  var $8=$m_localAnchorB10;
  var $9=$localAnchorB;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localXAxisA11=$this1+24;
  var $10=$def_addr;
  var $localAxisA=$10+9;
  var $11=$m_localXAxisA11;
  var $12=$localAxisA;
  IHEAP[$11]=IHEAP[$12]; FHEAP[$11]=FHEAP[$12]; ; IHEAP[$11+1]=IHEAP[$12+1]; FHEAP[$11+1]=FHEAP[$12+1]; ;
  var $m_localYAxisA12=$this1+26;
  var $m_localXAxisA13=$this1+24;
  __Z7b2CrossfRK6b2Vec2($ref_tmp, 1, $m_localXAxisA13);
  var $13=$m_localYAxisA12;
  var $14=$ref_tmp;
  IHEAP[$13]=IHEAP[$14]; FHEAP[$13]=FHEAP[$14]; ; IHEAP[$13+1]=IHEAP[$14+1]; FHEAP[$13+1]=FHEAP[$14+1]; ;
  var $m_mass=$this1+52;
  FHEAP[$m_mass]=0;
  var $m_impulse=$this1+28;
  FHEAP[$m_impulse]=0;
  var $m_motorMass=$this1+53;
  FHEAP[$m_motorMass]=0;
  var $m_motorImpulse=$this1+29;
  FHEAP[$m_motorImpulse]=0;
  var $m_springMass=$this1+54;
  FHEAP[$m_springMass]=0;
  var $m_springImpulse=$this1+30;
  FHEAP[$m_springImpulse]=0;
  var $15=$def_addr;
  var $maxMotorTorque=$15+12;
  var $16=FHEAP[$maxMotorTorque];
  var $m_maxMotorTorque=$this1+31;
  FHEAP[$m_maxMotorTorque]=$16;
  var $17=$def_addr;
  var $motorSpeed=$17+13;
  var $18=FHEAP[$motorSpeed];
  var $m_motorSpeed=$this1+32;
  FHEAP[$m_motorSpeed]=$18;
  var $19=$def_addr;
  var $enableMotor=$19+11;
  var $20=IHEAP[$enableMotor];
  var $tobool=((($20)) & 1);
  var $m_enableMotor=$this1+33;
  var $frombool=($tobool);
  IHEAP[$m_enableMotor]=$frombool;
  var $21=$def_addr;
  var $frequencyHz=$21+14;
  var $22=FHEAP[$frequencyHz];
  var $m_frequencyHz=$this1+18;
  FHEAP[$m_frequencyHz]=$22;
  var $23=$def_addr;
  var $dampingRatio=$23+15;
  var $24=FHEAP[$dampingRatio];
  var $m_dampingRatio=$this1+19;
  FHEAP[$m_dampingRatio]=$24;
  var $m_bias=$this1+55;
  FHEAP[$m_bias]=0;
  var $m_gamma=$this1+56;
  FHEAP[$m_gamma]=0;
  var $m_ax15=$this1+44;
  __ZN6b2Vec27SetZeroEv($m_ax15);
  var $m_ay17=$this1+46;
  __ZN6b2Vec27SetZeroEv($m_ay17);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN12b2WheelJointC2EPK15b2WheelJointDef["X"]=1;

function __ZN12b2WheelJoint23InitVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 44;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $cA=__stackBase__;
  var $aA;
  var $vA=__stackBase__+2;
  var $wA;
  var $cB=__stackBase__+4;
  var $aB;
  var $vB=__stackBase__+6;
  var $wB;
  var $qA=__stackBase__+8;
  var $qB=__stackBase__+10;
  var $rA=__stackBase__+12;
  var $ref_tmp=__stackBase__+14;
  var $rB=__stackBase__+16;
  var $ref_tmp43=__stackBase__+18;
  var $d=__stackBase__+20;
  var $ref_tmp45=__stackBase__+22;
  var $ref_tmp46=__stackBase__+24;
  var $ref_tmp47=__stackBase__+26;
  var $ref_tmp48=__stackBase__+28;
  var $ref_tmp66=__stackBase__+30;
  var $ref_tmp67=__stackBase__+32;
  var $invMass;
  var $C;
  var $omega;
  var $d91;
  var $k;
  var $h;
  var $P=__stackBase__+34;
  var $ref_tmp152=__stackBase__+36;
  var $ref_tmp155=__stackBase__+38;
  var $LA;
  var $LB;
  var $ref_tmp176=__stackBase__+40;
  var $ref_tmp180=__stackBase__+42;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  var $m_indexA=$this1+34;
  IHEAP[$m_indexA]=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  var $m_indexB=$this1+35;
  IHEAP[$m_indexB]=$5;
  var $m_localCenterA=$this1+36;
  var $6=$this1;
  var $m_bodyA3=$6+12;
  var $7=IHEAP[$m_bodyA3];
  var $m_sweep=$7+7;
  var $localCenter=$m_sweep;
  var $8=$m_localCenterA;
  var $9=$localCenter;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $m_localCenterB=$this1+38;
  var $10=$this1;
  var $m_bodyB4=$10+13;
  var $11=IHEAP[$m_bodyB4];
  var $m_sweep5=$11+7;
  var $localCenter6=$m_sweep5;
  var $12=$m_localCenterB;
  var $13=$localCenter6;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $14=$this1;
  var $m_bodyA7=$14+12;
  var $15=IHEAP[$m_bodyA7];
  var $m_invMass=$15+30;
  var $16=FHEAP[$m_invMass];
  var $m_invMassA=$this1+40;
  FHEAP[$m_invMassA]=$16;
  var $17=$this1;
  var $m_bodyB8=$17+13;
  var $18=IHEAP[$m_bodyB8];
  var $m_invMass9=$18+30;
  var $19=FHEAP[$m_invMass9];
  var $m_invMassB=$this1+41;
  FHEAP[$m_invMassB]=$19;
  var $20=$this1;
  var $m_bodyA10=$20+12;
  var $21=IHEAP[$m_bodyA10];
  var $m_invI=$21+32;
  var $22=FHEAP[$m_invI];
  var $m_invIA=$this1+42;
  FHEAP[$m_invIA]=$22;
  var $23=$this1;
  var $m_bodyB11=$23+13;
  var $24=IHEAP[$m_bodyB11];
  var $m_invI12=$24+32;
  var $25=FHEAP[$m_invI12];
  var $m_invIB=$this1+43;
  FHEAP[$m_invIB]=$25;
  var $m_invMassA13=$this1+40;
  var $26=FHEAP[$m_invMassA13];
  $mA=$26;
  var $m_invMassB14=$this1+41;
  var $27=FHEAP[$m_invMassB14];
  $mB=$27;
  var $m_invIA15=$this1+42;
  var $28=FHEAP[$m_invIA15];
  $iA=$28;
  var $m_invIB16=$this1+43;
  var $29=FHEAP[$m_invIB16];
  $iB=$29;
  var $m_indexA17=$this1+34;
  var $30=IHEAP[$m_indexA17];
  var $31=$data_addr;
  var $positions=$31+6;
  var $32=IHEAP[$positions];
  var $arrayidx=$32+$30*3;
  var $c=$arrayidx;
  var $33=$cA;
  var $34=$c;
  IHEAP[$33]=IHEAP[$34]; FHEAP[$33]=FHEAP[$34]; ; IHEAP[$33+1]=IHEAP[$34+1]; FHEAP[$33+1]=FHEAP[$34+1]; ;
  var $m_indexA18=$this1+34;
  var $35=IHEAP[$m_indexA18];
  var $36=$data_addr;
  var $positions19=$36+6;
  var $37=IHEAP[$positions19];
  var $arrayidx20=$37+$35*3;
  var $a=$arrayidx20+2;
  var $38=FHEAP[$a];
  $aA=$38;
  var $m_indexA21=$this1+34;
  var $39=IHEAP[$m_indexA21];
  var $40=$data_addr;
  var $velocities=$40+7;
  var $41=IHEAP[$velocities];
  var $arrayidx22=$41+$39*3;
  var $v=$arrayidx22;
  var $42=$vA;
  var $43=$v;
  IHEAP[$42]=IHEAP[$43]; FHEAP[$42]=FHEAP[$43]; ; IHEAP[$42+1]=IHEAP[$43+1]; FHEAP[$42+1]=FHEAP[$43+1]; ;
  var $m_indexA23=$this1+34;
  var $44=IHEAP[$m_indexA23];
  var $45=$data_addr;
  var $velocities24=$45+7;
  var $46=IHEAP[$velocities24];
  var $arrayidx25=$46+$44*3;
  var $w=$arrayidx25+2;
  var $47=FHEAP[$w];
  $wA=$47;
  var $m_indexB26=$this1+35;
  var $48=IHEAP[$m_indexB26];
  var $49=$data_addr;
  var $positions27=$49+6;
  var $50=IHEAP[$positions27];
  var $arrayidx28=$50+$48*3;
  var $c29=$arrayidx28;
  var $51=$cB;
  var $52=$c29;
  IHEAP[$51]=IHEAP[$52]; FHEAP[$51]=FHEAP[$52]; ; IHEAP[$51+1]=IHEAP[$52+1]; FHEAP[$51+1]=FHEAP[$52+1]; ;
  var $m_indexB30=$this1+35;
  var $53=IHEAP[$m_indexB30];
  var $54=$data_addr;
  var $positions31=$54+6;
  var $55=IHEAP[$positions31];
  var $arrayidx32=$55+$53*3;
  var $a33=$arrayidx32+2;
  var $56=FHEAP[$a33];
  $aB=$56;
  var $m_indexB34=$this1+35;
  var $57=IHEAP[$m_indexB34];
  var $58=$data_addr;
  var $velocities35=$58+7;
  var $59=IHEAP[$velocities35];
  var $arrayidx36=$59+$57*3;
  var $v37=$arrayidx36;
  var $60=$vB;
  var $61=$v37;
  IHEAP[$60]=IHEAP[$61]; FHEAP[$60]=FHEAP[$61]; ; IHEAP[$60+1]=IHEAP[$61+1]; FHEAP[$60+1]=FHEAP[$61+1]; ;
  var $m_indexB38=$this1+35;
  var $62=IHEAP[$m_indexB38];
  var $63=$data_addr;
  var $velocities39=$63+7;
  var $64=IHEAP[$velocities39];
  var $arrayidx40=$64+$62*3;
  var $w41=$arrayidx40+2;
  var $65=FHEAP[$w41];
  $wB=$65;
  var $66=$aA;
  __ZN5b2RotC1Ef($qA, $66);
  var $67=$aB;
  __ZN5b2RotC1Ef($qB, $67);
  var $m_localAnchorA=$this1+20;
  var $m_localCenterA42=$this1+36;
  __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorA, $m_localCenterA42);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp);
  var $m_localAnchorB=$this1+22;
  var $m_localCenterB44=$this1+38;
  __ZmiRK6b2Vec2S1_($ref_tmp43, $m_localAnchorB, $m_localCenterB44);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp43);
  __ZplRK6b2Vec2S1_($ref_tmp46, $cB, $rB);
  __ZmiRK6b2Vec2S1_($ref_tmp45, $ref_tmp46, $cA);
  __ZmiRK6b2Vec2S1_($d, $ref_tmp45, $rA);
  var $m_ay=$this1+46;
  var $m_localYAxisA=$this1+26;
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp47, $qA, $m_localYAxisA);
  var $68=$m_ay;
  var $69=$ref_tmp47;
  IHEAP[$68]=IHEAP[$69]; FHEAP[$68]=FHEAP[$69]; ; IHEAP[$68+1]=IHEAP[$69+1]; FHEAP[$68+1]=FHEAP[$69+1]; ;
  __ZplRK6b2Vec2S1_($ref_tmp48, $d, $rA);
  var $m_ay49=$this1+46;
  var $call=__Z7b2CrossRK6b2Vec2S1_($ref_tmp48, $m_ay49);
  var $m_sAy=$this1+50;
  FHEAP[$m_sAy]=$call;
  var $m_ay50=$this1+46;
  var $call51=__Z7b2CrossRK6b2Vec2S1_($rB, $m_ay50);
  var $m_sBy=$this1+51;
  FHEAP[$m_sBy]=$call51;
  var $70=$mA;
  var $71=$mB;
  var $add=($70)+($71);
  var $72=$iA;
  var $m_sAy52=$this1+50;
  var $73=FHEAP[$m_sAy52];
  var $mul=($72)*($73);
  var $m_sAy53=$this1+50;
  var $74=FHEAP[$m_sAy53];
  var $mul54=($mul)*($74);
  var $add55=($add)+($mul54);
  var $75=$iB;
  var $m_sBy56=$this1+51;
  var $76=FHEAP[$m_sBy56];
  var $mul57=($75)*($76);
  var $m_sBy58=$this1+51;
  var $77=FHEAP[$m_sBy58];
  var $mul59=($mul57)*($77);
  var $add60=($add55)+($mul59);
  var $m_mass=$this1+52;
  FHEAP[$m_mass]=$add60;
  var $m_mass61=$this1+52;
  var $78=FHEAP[$m_mass61];
  var $cmp=($78) > 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$3: do { 
    if (__label__ == 1) {

      var $m_mass62=$this1+52;
      var $79=FHEAP[$m_mass62];
      var $div=1/($79);
      var $m_mass63=$this1+52;
      FHEAP[$m_mass63]=$div;
      ;
    }
  } while(0);

  var $m_springMass=$this1+54;
  FHEAP[$m_springMass]=0;
  var $m_bias=$this1+55;
  FHEAP[$m_bias]=0;
  var $m_gamma=$this1+56;
  FHEAP[$m_gamma]=0;
  var $m_frequencyHz=$this1+18;
  var $80=FHEAP[$m_frequencyHz];
  var $cmp64=($80) > 0;
  if ($cmp64) { __label__ = 3;; } else { __label__ = 8;; }
  $if_then65$$if_else$6: do { 
    if (__label__ == 3) {

      var $m_ax=$this1+44;
      var $m_localXAxisA=$this1+24;
      __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp66, $qA, $m_localXAxisA);
      var $81=$m_ax;
      var $82=$ref_tmp66;
      IHEAP[$81]=IHEAP[$82]; FHEAP[$81]=FHEAP[$82]; ; IHEAP[$81+1]=IHEAP[$82+1]; FHEAP[$81+1]=FHEAP[$82+1]; ;
      __ZplRK6b2Vec2S1_($ref_tmp67, $d, $rA);
      var $m_ax68=$this1+44;
      var $call69=__Z7b2CrossRK6b2Vec2S1_($ref_tmp67, $m_ax68);
      var $m_sAx=$this1+48;
      FHEAP[$m_sAx]=$call69;
      var $m_ax70=$this1+44;
      var $call71=__Z7b2CrossRK6b2Vec2S1_($rB, $m_ax70);
      var $m_sBx=$this1+49;
      FHEAP[$m_sBx]=$call71;
      var $83=$mA;
      var $84=$mB;
      var $add72=($83)+($84);
      var $85=$iA;
      var $m_sAx73=$this1+48;
      var $86=FHEAP[$m_sAx73];
      var $mul74=($85)*($86);
      var $m_sAx75=$this1+48;
      var $87=FHEAP[$m_sAx75];
      var $mul76=($mul74)*($87);
      var $add77=($add72)+($mul76);
      var $88=$iB;
      var $m_sBx78=$this1+49;
      var $89=FHEAP[$m_sBx78];
      var $mul79=($88)*($89);
      var $m_sBx80=$this1+49;
      var $90=FHEAP[$m_sBx80];
      var $mul81=($mul79)*($90);
      var $add82=($add77)+($mul81);
      $invMass=$add82;
      var $91=$invMass;
      var $cmp83=($91) > 0;
      if (!($cmp83)) { __label__ = 9;break $if_then65$$if_else$6; }

      var $92=$invMass;
      var $div85=1/($92);
      var $m_springMass86=$this1+54;
      FHEAP[$m_springMass86]=$div85;
      var $m_ax87=$this1+44;
      var $call88=__Z5b2DotRK6b2Vec2S1_($d, $m_ax87);
      $C=$call88;
      var $m_frequencyHz89=$this1+18;
      var $93=FHEAP[$m_frequencyHz89];
      var $mul90=($93)*6.2831854820251465;
      $omega=$mul90;
      var $m_springMass92=$this1+54;
      var $94=FHEAP[$m_springMass92];
      var $mul93=($94)*2;
      var $m_dampingRatio=$this1+19;
      var $95=FHEAP[$m_dampingRatio];
      var $mul94=($mul93)*($95);
      var $96=$omega;
      var $mul95=($mul94)*($96);
      $d91=$mul95;
      var $m_springMass96=$this1+54;
      var $97=FHEAP[$m_springMass96];
      var $98=$omega;
      var $mul97=($97)*($98);
      var $99=$omega;
      var $mul98=($mul97)*($99);
      $k=$mul98;
      var $100=$data_addr;
      var $step=$100;
      var $dt=$step;
      var $101=FHEAP[$dt];
      $h=$101;
      var $102=$h;
      var $103=$d91;
      var $104=$h;
      var $105=$k;
      var $mul99=($104)*($105);
      var $add100=($103)+($mul99);
      var $mul101=($102)*($add100);
      var $m_gamma102=$this1+56;
      FHEAP[$m_gamma102]=$mul101;
      var $m_gamma103=$this1+56;
      var $106=FHEAP[$m_gamma103];
      var $cmp104=($106) > 0;
      if ($cmp104) { __label__ = 5;; } else { __label__ = 6;; }
      $if_then105$$if_end109$9: do { 
        if (__label__ == 5) {

          var $m_gamma106=$this1+56;
          var $107=FHEAP[$m_gamma106];
          var $div107=1/($107);
          var $m_gamma108=$this1+56;
          FHEAP[$m_gamma108]=$div107;
          ;
        }
      } while(0);

      var $108=$C;
      var $109=$h;
      var $mul110=($108)*($109);
      var $110=$k;
      var $mul111=($mul110)*($110);
      var $m_gamma112=$this1+56;
      var $111=FHEAP[$m_gamma112];
      var $mul113=($mul111)*($111);
      var $m_bias114=$this1+55;
      FHEAP[$m_bias114]=$mul113;
      var $112=$invMass;
      var $m_gamma115=$this1+56;
      var $113=FHEAP[$m_gamma115];
      var $add116=($112)+($113);
      var $m_springMass117=$this1+54;
      FHEAP[$m_springMass117]=$add116;
      var $m_springMass118=$this1+54;
      var $114=FHEAP[$m_springMass118];
      var $cmp119=($114) > 0;
      if (!($cmp119)) { __label__ = 9;break $if_then65$$if_else$6; }

      var $m_springMass121=$this1+54;
      var $115=FHEAP[$m_springMass121];
      var $div122=1/($115);
      var $m_springMass123=$this1+54;
      FHEAP[$m_springMass123]=$div122;
      ;
    }
    else if (__label__ == 8) {

      var $m_springImpulse=$this1+30;
      FHEAP[$m_springImpulse]=0;
      ;
    }
  } while(0);

  var $m_enableMotor=$this1+33;
  var $116=IHEAP[$m_enableMotor];
  var $tobool=((($116)) & 1);
  if ($tobool) { __label__ = 10;; } else { __label__ = 12;; }
  $if_then127$$if_else136$15: do { 
    if (__label__ == 10) {

      var $117=$iA;
      var $118=$iB;
      var $add128=($117)+($118);
      var $m_motorMass=$this1+53;
      FHEAP[$m_motorMass]=$add128;
      var $m_motorMass129=$this1+53;
      var $119=FHEAP[$m_motorMass129];
      var $cmp130=($119) > 0;
      if (!($cmp130)) { __label__ = 13;break $if_then127$$if_else136$15; }

      var $m_motorMass132=$this1+53;
      var $120=FHEAP[$m_motorMass132];
      var $div133=1/($120);
      var $m_motorMass134=$this1+53;
      FHEAP[$m_motorMass134]=$div133;
      ;
    }
    else if (__label__ == 12) {

      var $m_motorMass137=$this1+53;
      FHEAP[$m_motorMass137]=0;
      var $m_motorImpulse=$this1+29;
      FHEAP[$m_motorImpulse]=0;
      ;
    }
  } while(0);

  var $121=$data_addr;
  var $step139=$121;
  var $warmStarting=$step139+5;
  var $122=IHEAP[$warmStarting];
  var $tobool140=((($122)) & 1);
  if ($tobool140) { __label__ = 14;; } else { __label__ = 15;; }
  $if_then141$$if_else185$20: do { 
    if (__label__ == 14) {

      var $123=$data_addr;
      var $step142=$123;
      var $dtRatio=$step142+2;
      var $124=FHEAP[$dtRatio];
      var $m_impulse=$this1+28;
      var $125=FHEAP[$m_impulse];
      var $mul143=($125)*($124);
      FHEAP[$m_impulse]=$mul143;
      var $126=$data_addr;
      var $step144=$126;
      var $dtRatio145=$step144+2;
      var $127=FHEAP[$dtRatio145];
      var $m_springImpulse146=$this1+30;
      var $128=FHEAP[$m_springImpulse146];
      var $mul147=($128)*($127);
      FHEAP[$m_springImpulse146]=$mul147;
      var $129=$data_addr;
      var $step148=$129;
      var $dtRatio149=$step148+2;
      var $130=FHEAP[$dtRatio149];
      var $m_motorImpulse150=$this1+29;
      var $131=FHEAP[$m_motorImpulse150];
      var $mul151=($131)*($130);
      FHEAP[$m_motorImpulse150]=$mul151;
      var $m_impulse153=$this1+28;
      var $132=FHEAP[$m_impulse153];
      var $m_ay154=$this1+46;
      __ZmlfRK6b2Vec2($ref_tmp152, $132, $m_ay154);
      var $m_springImpulse156=$this1+30;
      var $133=FHEAP[$m_springImpulse156];
      var $m_ax157=$this1+44;
      __ZmlfRK6b2Vec2($ref_tmp155, $133, $m_ax157);
      __ZplRK6b2Vec2S1_($P, $ref_tmp152, $ref_tmp155);
      var $m_impulse158=$this1+28;
      var $134=FHEAP[$m_impulse158];
      var $m_sAy159=$this1+50;
      var $135=FHEAP[$m_sAy159];
      var $mul160=($134)*($135);
      var $m_springImpulse161=$this1+30;
      var $136=FHEAP[$m_springImpulse161];
      var $m_sAx162=$this1+48;
      var $137=FHEAP[$m_sAx162];
      var $mul163=($136)*($137);
      var $add164=($mul160)+($mul163);
      var $m_motorImpulse165=$this1+29;
      var $138=FHEAP[$m_motorImpulse165];
      var $add166=($add164)+($138);
      $LA=$add166;
      var $m_impulse167=$this1+28;
      var $139=FHEAP[$m_impulse167];
      var $m_sBy168=$this1+51;
      var $140=FHEAP[$m_sBy168];
      var $mul169=($139)*($140);
      var $m_springImpulse170=$this1+30;
      var $141=FHEAP[$m_springImpulse170];
      var $m_sBx171=$this1+49;
      var $142=FHEAP[$m_sBx171];
      var $mul172=($141)*($142);
      var $add173=($mul169)+($mul172);
      var $m_motorImpulse174=$this1+29;
      var $143=FHEAP[$m_motorImpulse174];
      var $add175=($add173)+($143);
      $LB=$add175;
      var $m_invMassA177=$this1+40;
      var $144=FHEAP[$m_invMassA177];
      __ZmlfRK6b2Vec2($ref_tmp176, $144, $P);
      __ZN6b2Vec2mIERKS_($vA, $ref_tmp176);
      var $m_invIA178=$this1+42;
      var $145=FHEAP[$m_invIA178];
      var $146=$LA;
      var $mul179=($145)*($146);
      var $147=$wA;
      var $sub=($147)-($mul179);
      $wA=$sub;
      var $m_invMassB181=$this1+41;
      var $148=FHEAP[$m_invMassB181];
      __ZmlfRK6b2Vec2($ref_tmp180, $148, $P);
      __ZN6b2Vec2pLERKS_($vB, $ref_tmp180);
      var $m_invIB182=$this1+43;
      var $149=FHEAP[$m_invIB182];
      var $150=$LB;
      var $mul183=($149)*($150);
      var $151=$wB;
      var $add184=($151)+($mul183);
      $wB=$add184;
      ;
    }
    else if (__label__ == 15) {

      var $m_impulse186=$this1+28;
      FHEAP[$m_impulse186]=0;
      var $m_springImpulse187=$this1+30;
      FHEAP[$m_springImpulse187]=0;
      var $m_motorImpulse188=$this1+29;
      FHEAP[$m_motorImpulse188]=0;
      ;
    }
  } while(0);

  var $m_indexA190=$this1+34;
  var $152=IHEAP[$m_indexA190];
  var $153=$data_addr;
  var $velocities191=$153+7;
  var $154=IHEAP[$velocities191];
  var $arrayidx192=$154+$152*3;
  var $v193=$arrayidx192;
  var $155=$v193;
  var $156=$vA;
  IHEAP[$155]=IHEAP[$156]; FHEAP[$155]=FHEAP[$156]; ; IHEAP[$155+1]=IHEAP[$156+1]; FHEAP[$155+1]=FHEAP[$156+1]; ;
  var $157=$wA;
  var $m_indexA194=$this1+34;
  var $158=IHEAP[$m_indexA194];
  var $159=$data_addr;
  var $velocities195=$159+7;
  var $160=IHEAP[$velocities195];
  var $arrayidx196=$160+$158*3;
  var $w197=$arrayidx196+2;
  FHEAP[$w197]=$157;
  var $m_indexB198=$this1+35;
  var $161=IHEAP[$m_indexB198];
  var $162=$data_addr;
  var $velocities199=$162+7;
  var $163=IHEAP[$velocities199];
  var $arrayidx200=$163+$161*3;
  var $v201=$arrayidx200;
  var $164=$v201;
  var $165=$vB;
  IHEAP[$164]=IHEAP[$165]; FHEAP[$164]=FHEAP[$165]; ; IHEAP[$164+1]=IHEAP[$165+1]; FHEAP[$164+1]=FHEAP[$165+1]; ;
  var $166=$wB;
  var $m_indexB202=$this1+35;
  var $167=IHEAP[$m_indexB202];
  var $168=$data_addr;
  var $velocities203=$168+7;
  var $169=IHEAP[$velocities203];
  var $arrayidx204=$169+$167*3;
  var $w205=$arrayidx204+2;
  FHEAP[$w205]=$166;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN12b2WheelJoint23InitVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN12b2WheelJoint24SolveVelocityConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 20;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $mA;
  var $mB;
  var $iA;
  var $iB;
  var $vA=__stackBase__;
  var $wA;
  var $vB=__stackBase__+2;
  var $wB;
  var $Cdot;
  var $ref_tmp=__stackBase__+4;
  var $impulse;
  var $P=__stackBase__+6;
  var $LA;
  var $LB;
  var $ref_tmp25=__stackBase__+8;
  var $ref_tmp28=__stackBase__+10;
  var $Cdot31;
  var $impulse34;
  var $oldImpulse;
  var $maxImpulse;
  var $Cdot49;
  var $ref_tmp50=__stackBase__+12;
  var $impulse56;
  var $P60=__stackBase__+14;
  var $LA62;
  var $LB65;
  var $ref_tmp68=__stackBase__+16;
  var $ref_tmp71=__stackBase__+18;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_invMassA=$this1+40;
  var $0=FHEAP[$m_invMassA];
  $mA=$0;
  var $m_invMassB=$this1+41;
  var $1=FHEAP[$m_invMassB];
  $mB=$1;
  var $m_invIA=$this1+42;
  var $2=FHEAP[$m_invIA];
  $iA=$2;
  var $m_invIB=$this1+43;
  var $3=FHEAP[$m_invIB];
  $iB=$3;
  var $m_indexA=$this1+34;
  var $4=IHEAP[$m_indexA];
  var $5=$data_addr;
  var $velocities=$5+7;
  var $6=IHEAP[$velocities];
  var $arrayidx=$6+$4*3;
  var $v=$arrayidx;
  var $7=$vA;
  var $8=$v;
  IHEAP[$7]=IHEAP[$8]; FHEAP[$7]=FHEAP[$8]; ; IHEAP[$7+1]=IHEAP[$8+1]; FHEAP[$7+1]=FHEAP[$8+1]; ;
  var $m_indexA2=$this1+34;
  var $9=IHEAP[$m_indexA2];
  var $10=$data_addr;
  var $velocities3=$10+7;
  var $11=IHEAP[$velocities3];
  var $arrayidx4=$11+$9*3;
  var $w=$arrayidx4+2;
  var $12=FHEAP[$w];
  $wA=$12;
  var $m_indexB=$this1+35;
  var $13=IHEAP[$m_indexB];
  var $14=$data_addr;
  var $velocities5=$14+7;
  var $15=IHEAP[$velocities5];
  var $arrayidx6=$15+$13*3;
  var $v7=$arrayidx6;
  var $16=$vB;
  var $17=$v7;
  IHEAP[$16]=IHEAP[$17]; FHEAP[$16]=FHEAP[$17]; ; IHEAP[$16+1]=IHEAP[$17+1]; FHEAP[$16+1]=FHEAP[$17+1]; ;
  var $m_indexB8=$this1+35;
  var $18=IHEAP[$m_indexB8];
  var $19=$data_addr;
  var $velocities9=$19+7;
  var $20=IHEAP[$velocities9];
  var $arrayidx10=$20+$18*3;
  var $w11=$arrayidx10+2;
  var $21=FHEAP[$w11];
  $wB=$21;
  var $m_ax=$this1+44;
  __ZmiRK6b2Vec2S1_($ref_tmp, $vB, $vA);
  var $call=__Z5b2DotRK6b2Vec2S1_($m_ax, $ref_tmp);
  var $m_sBx=$this1+49;
  var $22=FHEAP[$m_sBx];
  var $23=$wB;
  var $mul=($22)*($23);
  var $add=($call)+($mul);
  var $m_sAx=$this1+48;
  var $24=FHEAP[$m_sAx];
  var $25=$wA;
  var $mul12=($24)*($25);
  var $sub=($add)-($mul12);
  $Cdot=$sub;
  var $m_springMass=$this1+54;
  var $26=FHEAP[$m_springMass];
  var $sub13=(-($26));
  var $27=$Cdot;
  var $m_bias=$this1+55;
  var $28=FHEAP[$m_bias];
  var $add14=($27)+($28);
  var $m_gamma=$this1+56;
  var $29=FHEAP[$m_gamma];
  var $m_springImpulse=$this1+30;
  var $30=FHEAP[$m_springImpulse];
  var $mul15=($29)*($30);
  var $add16=($add14)+($mul15);
  var $mul17=($sub13)*($add16);
  $impulse=$mul17;
  var $31=$impulse;
  var $m_springImpulse18=$this1+30;
  var $32=FHEAP[$m_springImpulse18];
  var $add19=($32)+($31);
  FHEAP[$m_springImpulse18]=$add19;
  var $33=$impulse;
  var $m_ax20=$this1+44;
  __ZmlfRK6b2Vec2($P, $33, $m_ax20);
  var $34=$impulse;
  var $m_sAx21=$this1+48;
  var $35=FHEAP[$m_sAx21];
  var $mul22=($34)*($35);
  $LA=$mul22;
  var $36=$impulse;
  var $m_sBx23=$this1+49;
  var $37=FHEAP[$m_sBx23];
  var $mul24=($36)*($37);
  $LB=$mul24;
  var $38=$mA;
  __ZmlfRK6b2Vec2($ref_tmp25, $38, $P);
  __ZN6b2Vec2mIERKS_($vA, $ref_tmp25);
  var $39=$iA;
  var $40=$LA;
  var $mul26=($39)*($40);
  var $41=$wA;
  var $sub27=($41)-($mul26);
  $wA=$sub27;
  var $42=$mB;
  __ZmlfRK6b2Vec2($ref_tmp28, $42, $P);
  __ZN6b2Vec2pLERKS_($vB, $ref_tmp28);
  var $43=$iB;
  var $44=$LB;
  var $mul29=($43)*($44);
  var $45=$wB;
  var $add30=($45)+($mul29);
  $wB=$add30;
  var $46=$wB;
  var $47=$wA;
  var $sub32=($46)-($47);
  var $m_motorSpeed=$this1+32;
  var $48=FHEAP[$m_motorSpeed];
  var $sub33=($sub32)-($48);
  $Cdot31=$sub33;
  var $m_motorMass=$this1+53;
  var $49=FHEAP[$m_motorMass];
  var $sub35=(-($49));
  var $50=$Cdot31;
  var $mul36=($sub35)*($50);
  $impulse34=$mul36;
  var $m_motorImpulse=$this1+29;
  var $51=FHEAP[$m_motorImpulse];
  $oldImpulse=$51;
  var $52=$data_addr;
  var $step=$52;
  var $dt=$step;
  var $53=FHEAP[$dt];
  var $m_maxMotorTorque=$this1+31;
  var $54=FHEAP[$m_maxMotorTorque];
  var $mul37=($53)*($54);
  $maxImpulse=$mul37;
  var $m_motorImpulse38=$this1+29;
  var $55=FHEAP[$m_motorImpulse38];
  var $56=$impulse34;
  var $add39=($55)+($56);
  var $57=$maxImpulse;
  var $sub40=(-($57));
  var $58=$maxImpulse;
  var $call41=__Z7b2ClampIfET_S0_S0_S0_($add39, $sub40, $58);
  var $m_motorImpulse42=$this1+29;
  FHEAP[$m_motorImpulse42]=$call41;
  var $m_motorImpulse43=$this1+29;
  var $59=FHEAP[$m_motorImpulse43];
  var $60=$oldImpulse;
  var $sub44=($59)-($60);
  $impulse34=$sub44;
  var $61=$iA;
  var $62=$impulse34;
  var $mul45=($61)*($62);
  var $63=$wA;
  var $sub46=($63)-($mul45);
  $wA=$sub46;
  var $64=$iB;
  var $65=$impulse34;
  var $mul47=($64)*($65);
  var $66=$wB;
  var $add48=($66)+($mul47);
  $wB=$add48;
  var $m_ay=$this1+46;
  __ZmiRK6b2Vec2S1_($ref_tmp50, $vB, $vA);
  var $call51=__Z5b2DotRK6b2Vec2S1_($m_ay, $ref_tmp50);
  var $m_sBy=$this1+51;
  var $67=FHEAP[$m_sBy];
  var $68=$wB;
  var $mul52=($67)*($68);
  var $add53=($call51)+($mul52);
  var $m_sAy=$this1+50;
  var $69=FHEAP[$m_sAy];
  var $70=$wA;
  var $mul54=($69)*($70);
  var $sub55=($add53)-($mul54);
  $Cdot49=$sub55;
  var $m_mass=$this1+52;
  var $71=FHEAP[$m_mass];
  var $sub57=(-($71));
  var $72=$Cdot49;
  var $mul58=($sub57)*($72);
  $impulse56=$mul58;
  var $73=$impulse56;
  var $m_impulse=$this1+28;
  var $74=FHEAP[$m_impulse];
  var $add59=($74)+($73);
  FHEAP[$m_impulse]=$add59;
  var $75=$impulse56;
  var $m_ay61=$this1+46;
  __ZmlfRK6b2Vec2($P60, $75, $m_ay61);
  var $76=$impulse56;
  var $m_sAy63=$this1+50;
  var $77=FHEAP[$m_sAy63];
  var $mul64=($76)*($77);
  $LA62=$mul64;
  var $78=$impulse56;
  var $m_sBy66=$this1+51;
  var $79=FHEAP[$m_sBy66];
  var $mul67=($78)*($79);
  $LB65=$mul67;
  var $80=$mA;
  __ZmlfRK6b2Vec2($ref_tmp68, $80, $P60);
  __ZN6b2Vec2mIERKS_($vA, $ref_tmp68);
  var $81=$iA;
  var $82=$LA62;
  var $mul69=($81)*($82);
  var $83=$wA;
  var $sub70=($83)-($mul69);
  $wA=$sub70;
  var $84=$mB;
  __ZmlfRK6b2Vec2($ref_tmp71, $84, $P60);
  __ZN6b2Vec2pLERKS_($vB, $ref_tmp71);
  var $85=$iB;
  var $86=$LB65;
  var $mul72=($85)*($86);
  var $87=$wB;
  var $add73=($87)+($mul72);
  $wB=$add73;
  var $m_indexA74=$this1+34;
  var $88=IHEAP[$m_indexA74];
  var $89=$data_addr;
  var $velocities75=$89+7;
  var $90=IHEAP[$velocities75];
  var $arrayidx76=$90+$88*3;
  var $v77=$arrayidx76;
  var $91=$v77;
  var $92=$vA;
  IHEAP[$91]=IHEAP[$92]; FHEAP[$91]=FHEAP[$92]; ; IHEAP[$91+1]=IHEAP[$92+1]; FHEAP[$91+1]=FHEAP[$92+1]; ;
  var $93=$wA;
  var $m_indexA78=$this1+34;
  var $94=IHEAP[$m_indexA78];
  var $95=$data_addr;
  var $velocities79=$95+7;
  var $96=IHEAP[$velocities79];
  var $arrayidx80=$96+$94*3;
  var $w81=$arrayidx80+2;
  FHEAP[$w81]=$93;
  var $m_indexB82=$this1+35;
  var $97=IHEAP[$m_indexB82];
  var $98=$data_addr;
  var $velocities83=$98+7;
  var $99=IHEAP[$velocities83];
  var $arrayidx84=$99+$97*3;
  var $v85=$arrayidx84;
  var $100=$v85;
  var $101=$vB;
  IHEAP[$100]=IHEAP[$101]; FHEAP[$100]=FHEAP[$101]; ; IHEAP[$100+1]=IHEAP[$101+1]; FHEAP[$100+1]=FHEAP[$101+1]; ;
  var $102=$wB;
  var $m_indexB86=$this1+35;
  var $103=IHEAP[$m_indexB86];
  var $104=$data_addr;
  var $velocities87=$104+7;
  var $105=IHEAP[$velocities87];
  var $arrayidx88=$105+$103*3;
  var $w89=$arrayidx88+2;
  FHEAP[$w89]=$102;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN12b2WheelJoint24SolveVelocityConstraintsERK12b2SolverData["X"]=1;

function __ZN12b2WheelJointD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN12b2WheelJointD2Ev($this1);
  ;
  return;
  return;
}


function __ZN16b2ContactManagerD1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN16b2ContactManagerD2Ev($this1);
  ;
  return;
  return;
}


function __ZN12b2WheelJointD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN12b2WheelJointD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN12b2WheelJointD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  __ZN7b2JointD2Ev($0);
  ;
  return;
  return;
}


function __ZNK12b2WheelJoint10GetAnchorAEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_localAnchorA=$this1+20;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorA);
  ;
  return;
  return;
}


function __ZNK12b2WheelJoint10GetAnchorBEv($agg_result, $this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyB=$0+13;
  var $1=IHEAP[$m_bodyB];
  var $m_localAnchorB=$this1+22;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result, $1, $m_localAnchorB);
  ;
  return;
  return;
}


function __ZNK12b2WheelJoint16GetReactionForceEf($agg_result, $this, $inv_dt) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp2=__stackBase__+2;
  var $ref_tmp3=__stackBase__+4;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_impulse=$this1+28;
  var $1=FHEAP[$m_impulse];
  var $m_ay=$this1+46;
  __ZmlfRK6b2Vec2($ref_tmp2, $1, $m_ay);
  var $m_springImpulse=$this1+30;
  var $2=FHEAP[$m_springImpulse];
  var $m_ax=$this1+44;
  __ZmlfRK6b2Vec2($ref_tmp3, $2, $m_ax);
  __ZplRK6b2Vec2S1_($ref_tmp, $ref_tmp2, $ref_tmp3);
  __ZmlfRK6b2Vec2($agg_result, $0, $ref_tmp);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK12b2WheelJoint17GetReactionTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_motorImpulse=$this1+29;
  var $1=FHEAP[$m_motorImpulse];
  var $mul=($0)*($1);
  ;
  return $mul;
  return null;
}


function __ZNK12b2WheelJoint13GetJointSpeedEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $wA;
  var $wB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_angularVelocity=$1+18;
  var $2=FHEAP[$m_angularVelocity];
  $wA=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_angularVelocity2=$4+18;
  var $5=FHEAP[$m_angularVelocity2];
  $wB=$5;
  var $6=$wB;
  var $7=$wA;
  var $sub=($6)-($7);
  ;
  return $sub;
  return null;
}


function __ZNK12b2WheelJoint14IsMotorEnabledEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_enableMotor=$this1+33;
  var $0=IHEAP[$m_enableMotor];
  var $tobool=((($0)) & 1);
  ;
  return $tobool;
  return null;
}


function __ZN12b2WheelJoint11EnableMotorEb($this, $flag) {
  ;
  var __label__;

  var $this_addr;
  var $flag_addr;
  $this_addr=$this;
  var $frombool=($flag);
  $flag_addr=$frombool;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  __ZN6b2Body8SetAwakeEb($1, 1);
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  __ZN6b2Body8SetAwakeEb($3, 1);
  var $4=$flag_addr;
  var $tobool=((($4)) & 1);
  var $m_enableMotor=$this1+33;
  var $frombool2=($tobool);
  IHEAP[$m_enableMotor]=$frombool2;
  ;
  return;
  return;
}


function __ZN12b2WheelJoint13SetMotorSpeedEf($this, $speed) {
  ;
  var __label__;

  var $this_addr;
  var $speed_addr;
  $this_addr=$this;
  $speed_addr=$speed;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  __ZN6b2Body8SetAwakeEb($1, 1);
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  __ZN6b2Body8SetAwakeEb($3, 1);
  var $4=$speed_addr;
  var $m_motorSpeed=$this1+32;
  FHEAP[$m_motorSpeed]=$4;
  ;
  return;
  return;
}


function __ZN12b2WheelJoint17SetMaxMotorTorqueEf($this, $torque) {
  ;
  var __label__;

  var $this_addr;
  var $torque_addr;
  $this_addr=$this;
  $torque_addr=$torque;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  __ZN6b2Body8SetAwakeEb($1, 1);
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  __ZN6b2Body8SetAwakeEb($3, 1);
  var $4=$torque_addr;
  var $m_maxMotorTorque=$this1+31;
  FHEAP[$m_maxMotorTorque]=$4;
  ;
  return;
  return;
}


function __ZNK12b2WheelJoint14GetMotorTorqueEf($this, $inv_dt) {
  ;
  var __label__;

  var $this_addr;
  var $inv_dt_addr;
  $this_addr=$this;
  $inv_dt_addr=$inv_dt;
  var $this1=$this_addr;
  var $0=$inv_dt_addr;
  var $m_motorImpulse=$this1+29;
  var $1=FHEAP[$m_motorImpulse];
  var $mul=($0)*($1);
  ;
  return $mul;
  return null;
}


function __ZN12b2WheelJoint4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $indexA;
  var $indexB;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  var $m_islandIndex=$1+2;
  var $2=IHEAP[$m_islandIndex];
  $indexA=$2;
  var $3=$this1;
  var $m_bodyB=$3+13;
  var $4=IHEAP[$m_bodyB];
  var $m_islandIndex2=$4+2;
  var $5=IHEAP[$m_islandIndex2];
  $indexB=$5;
  __Z5b2LogPKcz(__str391, allocate(1, "i32", ALLOC_STACK));
  var $6=$indexA;
  __Z5b2LogPKcz(__str1392, allocate([$6], "i32", ALLOC_STACK));
  var $7=$indexB;
  __Z5b2LogPKcz(__str2393, allocate([$7], "i32", ALLOC_STACK));
  var $8=$this1;
  var $m_collideConnected=$8+16;
  var $9=IHEAP[$m_collideConnected];
  var $tobool=((($9)) & 1);
  var $conv=($tobool);
  __Z5b2LogPKcz(__str3394, allocate([$conv], "i32", ALLOC_STACK));
  var $m_localAnchorA=$this1+20;
  var $x=$m_localAnchorA;
  var $10=FHEAP[$x];
  var $conv3=($10);
  var $m_localAnchorA4=$this1+20;
  var $y=$m_localAnchorA4+1;
  var $11=FHEAP[$y];
  var $conv5=($11);
  __Z5b2LogPKcz(__str4395, allocate([$conv3,$conv5], "double", ALLOC_STACK));
  var $m_localAnchorB=$this1+22;
  var $x6=$m_localAnchorB;
  var $12=FHEAP[$x6];
  var $conv7=($12);
  var $m_localAnchorB8=$this1+22;
  var $y9=$m_localAnchorB8+1;
  var $13=FHEAP[$y9];
  var $conv10=($13);
  __Z5b2LogPKcz(__str5396, allocate([$conv7,$conv10], "double", ALLOC_STACK));
  var $m_localXAxisA=$this1+24;
  var $x11=$m_localXAxisA;
  var $14=FHEAP[$x11];
  var $conv12=($14);
  var $m_localXAxisA13=$this1+24;
  var $y14=$m_localXAxisA13+1;
  var $15=FHEAP[$y14];
  var $conv15=($15);
  __Z5b2LogPKcz(__str6397, allocate([$conv12,$conv15], "double", ALLOC_STACK));
  var $m_enableMotor=$this1+33;
  var $16=IHEAP[$m_enableMotor];
  var $tobool16=((($16)) & 1);
  var $conv17=($tobool16);
  __Z5b2LogPKcz(__str7398, allocate([$conv17], "i32", ALLOC_STACK));
  var $m_motorSpeed=$this1+32;
  var $17=FHEAP[$m_motorSpeed];
  var $conv18=($17);
  __Z5b2LogPKcz(__str8399, allocate([$conv18], "double", ALLOC_STACK));
  var $m_maxMotorTorque=$this1+31;
  var $18=FHEAP[$m_maxMotorTorque];
  var $conv19=($18);
  __Z5b2LogPKcz(__str9400, allocate([$conv19], "double", ALLOC_STACK));
  var $m_frequencyHz=$this1+18;
  var $19=FHEAP[$m_frequencyHz];
  var $conv20=($19);
  __Z5b2LogPKcz(__str10401, allocate([$conv20], "double", ALLOC_STACK));
  var $m_dampingRatio=$this1+19;
  var $20=FHEAP[$m_dampingRatio];
  var $conv21=($20);
  __Z5b2LogPKcz(__str11402, allocate([$conv21], "double", ALLOC_STACK));
  var $21=$this1;
  var $m_index=$21+14;
  var $22=IHEAP[$m_index];
  __Z5b2LogPKcz(__str12403, allocate([$22], "i32", ALLOC_STACK));
  ;
  return;
  return;
}
__ZN12b2WheelJoint4DumpEv["X"]=1;

function __ZN7b2WorldC2ERK6b2Vec2($this, $gravity) {
  ;
  var __label__;

  var $this_addr;
  var $gravity_addr;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  $gravity_addr=$gravity;
  var $this1=$this_addr;
  var $m_blockAllocator=$this1;
  __ZN16b2BlockAllocatorC2Ev($m_blockAllocator);
  var $m_stackAllocator=$this1+17;
  __ZN16b2StackAllocatorC2Ev($m_stackAllocator);
  var $m_contactManager=$this1+102518;
  __ZN16b2ContactManagerC2Ev($m_contactManager);
  ;

  var $m_gravity=$this1+102542;
  __ZN6b2Vec2C1Ev($m_gravity);
  var $m_destructionListener=$this1+102545;
  IHEAP[$m_destructionListener]=0;
  var $m_debugDraw=$this1+102546;
  IHEAP[$m_debugDraw]=0;
  var $m_bodyList=$this1+102538;
  IHEAP[$m_bodyList]=0;
  var $m_jointList=$this1+102539;
  IHEAP[$m_jointList]=0;
  var $m_bodyCount=$this1+102540;
  IHEAP[$m_bodyCount]=0;
  var $m_jointCount=$this1+102541;
  IHEAP[$m_jointCount]=0;
  var $m_warmStarting=$this1+102548;
  IHEAP[$m_warmStarting]=1;
  var $m_continuousPhysics=$this1+102549;
  IHEAP[$m_continuousPhysics]=1;
  var $m_subStepping=$this1+102550;
  IHEAP[$m_subStepping]=0;
  var $m_stepComplete=$this1+102551;
  IHEAP[$m_stepComplete]=1;
  var $m_allowSleep=$this1+102544;
  IHEAP[$m_allowSleep]=1;
  var $m_gravity6=$this1+102542;
  var $0=$gravity_addr;
  var $1=$m_gravity6;
  var $2=$0;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ;
  var $m_flags=$this1+102517;
  IHEAP[$m_flags]=4;
  var $m_inv_dt0=$this1+102547;
  FHEAP[$m_inv_dt0]=0;
  var $m_blockAllocator7=$this1;
  var $m_contactManager8=$this1+102518;
  var $m_allocator=$m_contactManager8+19;
  IHEAP[$m_allocator]=$m_blockAllocator7;
  var $m_profile9=$this1+102552;
  var $3=$m_profile9;
  for (var mspi = 0; mspi < 8; mspi++) {
  IHEAP[$3+mspi]=0; FHEAP[$3+mspi]=0
  };
  ;
  return;
  return;
}
__ZN7b2WorldC2ERK6b2Vec2["X"]=1;

function __ZN7b2WorldD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  var $b;
  var $bNext;
  var $f;
  var $fNext;
  var $exn_slot;
  var $ehselector_slot;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_bodyList=$this1+102538;
  var $0=IHEAP[$m_bodyList];
  $b=$0;
  var $m_blockAllocator=$this1;
  var $1 = $0;;
  $while_cond$25: while(1) { 

    var $1;
    var $tobool=($1)!=0;
    if (!($tobool)) { __label__ = 8;break $while_cond$25; }

    var $2=$b;
    var $m_next=$2+24;
    var $3=IHEAP[$m_next];
    $bNext=$3;
    var $4=$b;
    var $m_fixtureList=$4+25;
    var $5=IHEAP[$m_fixtureList];
    $f=$5;
    var $6 = $5;;
    $while_cond2$28: while(1) { 

      var $6;
      var $tobool3=($6)!=0;
      if (!($tobool3)) { __label__ = 7;break $while_cond2$28; }

      var $7=$f;
      var $m_next5=$7+1;
      var $8=IHEAP[$m_next5];
      $fNext=$8;
      var $9=$f;
      var $m_proxyCount=$9+7;
      IHEAP[$m_proxyCount]=0;
      var $10=$f;
      __ZN9b2Fixture7DestroyEP16b2BlockAllocator($10, $m_blockAllocator);
      ;

      var $11=$fNext;
      $f=$11;
      var $6 = $11;;
    }

    var $15=$bNext;
    $b=$15;
    var $1 = $15;;
  }

  var $m_contactManager=$this1+102518;
  __ZN16b2ContactManagerD1Ev($m_contactManager);
  ;

  var $m_stackAllocator=$this1+17;
  __ZN16b2StackAllocatorD2Ev($m_stackAllocator);
  ;

  var $m_blockAllocator15=$this1;
  __ZN16b2BlockAllocatorD2Ev($m_blockAllocator15);
  ;
  return;
  return;
}
__ZN7b2WorldD2Ev["X"]=1;

function __ZN7b2World22SetDestructionListenerEP21b2DestructionListener($this, $listener) {
  ;
  var __label__;

  var $this_addr;
  var $listener_addr;
  $this_addr=$this;
  $listener_addr=$listener;
  var $this1=$this_addr;
  var $0=$listener_addr;
  var $m_destructionListener=$this1+102545;
  IHEAP[$m_destructionListener]=$0;
  ;
  return;
  return;
}


function __ZN7b2World16SetContactFilterEP15b2ContactFilter($this, $filter) {
  ;
  var __label__;

  var $this_addr;
  var $filter_addr;
  $this_addr=$this;
  $filter_addr=$filter;
  var $this1=$this_addr;
  var $0=$filter_addr;
  var $m_contactManager=$this1+102518;
  var $m_contactFilter=$m_contactManager+17;
  IHEAP[$m_contactFilter]=$0;
  ;
  return;
  return;
}


function __ZN7b2World18SetContactListenerEP17b2ContactListener($this, $listener) {
  ;
  var __label__;

  var $this_addr;
  var $listener_addr;
  $this_addr=$this;
  $listener_addr=$listener;
  var $this1=$this_addr;
  var $0=$listener_addr;
  var $m_contactManager=$this1+102518;
  var $m_contactListener=$m_contactManager+18;
  IHEAP[$m_contactListener]=$0;
  ;
  return;
  return;
}


function __ZN7b2World12SetDebugDrawEP6b2Draw($this, $debugDraw) {
  ;
  var __label__;

  var $this_addr;
  var $debugDraw_addr;
  $this_addr=$this;
  $debugDraw_addr=$debugDraw;
  var $this1=$this_addr;
  var $0=$debugDraw_addr;
  var $m_debugDraw=$this1+102546;
  IHEAP[$m_debugDraw]=$0;
  ;
  return;
  return;
}


function __ZN12b2WheelJoint24SolvePositionConstraintsERK12b2SolverData($this, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 32;
  var __label__;

  var $this_addr;
  var $data_addr;
  var $cA=__stackBase__;
  var $aA;
  var $cB=__stackBase__+2;
  var $aB;
  var $qA=__stackBase__+4;
  var $qB=__stackBase__+6;
  var $rA=__stackBase__+8;
  var $ref_tmp=__stackBase__+10;
  var $rB=__stackBase__+12;
  var $ref_tmp12=__stackBase__+14;
  var $d=__stackBase__+16;
  var $ref_tmp13=__stackBase__+18;
  var $ref_tmp14=__stackBase__+20;
  var $ay=__stackBase__+22;
  var $sAy;
  var $ref_tmp15=__stackBase__+24;
  var $sBy;
  var $C;
  var $k;
  var $impulse;
  var $P=__stackBase__+26;
  var $LA;
  var $LB;
  var $ref_tmp27=__stackBase__+28;
  var $ref_tmp32=__stackBase__+30;
  $this_addr=$this;
  $data_addr=$data;
  var $this1=$this_addr;
  var $m_indexA=$this1+34;
  var $0=IHEAP[$m_indexA];
  var $1=$data_addr;
  var $positions=$1+6;
  var $2=IHEAP[$positions];
  var $arrayidx=$2+$0*3;
  var $c=$arrayidx;
  var $3=$cA;
  var $4=$c;
  IHEAP[$3]=IHEAP[$4]; FHEAP[$3]=FHEAP[$4]; ; IHEAP[$3+1]=IHEAP[$4+1]; FHEAP[$3+1]=FHEAP[$4+1]; ;
  var $m_indexA2=$this1+34;
  var $5=IHEAP[$m_indexA2];
  var $6=$data_addr;
  var $positions3=$6+6;
  var $7=IHEAP[$positions3];
  var $arrayidx4=$7+$5*3;
  var $a=$arrayidx4+2;
  var $8=FHEAP[$a];
  $aA=$8;
  var $m_indexB=$this1+35;
  var $9=IHEAP[$m_indexB];
  var $10=$data_addr;
  var $positions5=$10+6;
  var $11=IHEAP[$positions5];
  var $arrayidx6=$11+$9*3;
  var $c7=$arrayidx6;
  var $12=$cB;
  var $13=$c7;
  IHEAP[$12]=IHEAP[$13]; FHEAP[$12]=FHEAP[$13]; ; IHEAP[$12+1]=IHEAP[$13+1]; FHEAP[$12+1]=FHEAP[$13+1]; ;
  var $m_indexB8=$this1+35;
  var $14=IHEAP[$m_indexB8];
  var $15=$data_addr;
  var $positions9=$15+6;
  var $16=IHEAP[$positions9];
  var $arrayidx10=$16+$14*3;
  var $a11=$arrayidx10+2;
  var $17=FHEAP[$a11];
  $aB=$17;
  var $18=$aA;
  __ZN5b2RotC1Ef($qA, $18);
  var $19=$aB;
  __ZN5b2RotC1Ef($qB, $19);
  var $m_localAnchorA=$this1+20;
  var $m_localCenterA=$this1+36;
  __ZmiRK6b2Vec2S1_($ref_tmp, $m_localAnchorA, $m_localCenterA);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA, $qA, $ref_tmp);
  var $m_localAnchorB=$this1+22;
  var $m_localCenterB=$this1+38;
  __ZmiRK6b2Vec2S1_($ref_tmp12, $m_localAnchorB, $m_localCenterB);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB, $qB, $ref_tmp12);
  __ZmiRK6b2Vec2S1_($ref_tmp14, $cB, $cA);
  __ZplRK6b2Vec2S1_($ref_tmp13, $ref_tmp14, $rB);
  __ZmiRK6b2Vec2S1_($d, $ref_tmp13, $rA);
  var $m_localYAxisA=$this1+26;
  __Z5b2MulRK5b2RotRK6b2Vec2($ay, $qA, $m_localYAxisA);
  __ZplRK6b2Vec2S1_($ref_tmp15, $d, $rA);
  var $call=__Z7b2CrossRK6b2Vec2S1_($ref_tmp15, $ay);
  $sAy=$call;
  var $call16=__Z7b2CrossRK6b2Vec2S1_($rB, $ay);
  $sBy=$call16;
  var $call17=__Z5b2DotRK6b2Vec2S1_($d, $ay);
  $C=$call17;
  var $m_invMassA=$this1+40;
  var $20=FHEAP[$m_invMassA];
  var $m_invMassB=$this1+41;
  var $21=FHEAP[$m_invMassB];
  var $add=($20)+($21);
  var $m_invIA=$this1+42;
  var $22=FHEAP[$m_invIA];
  var $m_sAy=$this1+50;
  var $23=FHEAP[$m_sAy];
  var $mul=($22)*($23);
  var $m_sAy18=$this1+50;
  var $24=FHEAP[$m_sAy18];
  var $mul19=($mul)*($24);
  var $add20=($add)+($mul19);
  var $m_invIB=$this1+43;
  var $25=FHEAP[$m_invIB];
  var $m_sBy=$this1+51;
  var $26=FHEAP[$m_sBy];
  var $mul21=($25)*($26);
  var $m_sBy22=$this1+51;
  var $27=FHEAP[$m_sBy22];
  var $mul23=($mul21)*($27);
  var $add24=($add20)+($mul23);
  $k=$add24;
  var $28=$k;
  var $cmp=($28) != 0;
  if ($cmp) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_else$2: do { 
    if (__label__ == 1) {

      var $29=$C;
      var $sub=(-($29));
      var $30=$k;
      var $div=($sub)/($30);
      $impulse=$div;
      ;
    }
    else if (__label__ == 2) {

      $impulse=0;
      ;
    }
  } while(0);

  var $31=$impulse;
  __ZmlfRK6b2Vec2($P, $31, $ay);
  var $32=$impulse;
  var $33=$sAy;
  var $mul25=($32)*($33);
  $LA=$mul25;
  var $34=$impulse;
  var $35=$sBy;
  var $mul26=($34)*($35);
  $LB=$mul26;
  var $m_invMassA28=$this1+40;
  var $36=FHEAP[$m_invMassA28];
  __ZmlfRK6b2Vec2($ref_tmp27, $36, $P);
  __ZN6b2Vec2mIERKS_($cA, $ref_tmp27);
  var $m_invIA29=$this1+42;
  var $37=FHEAP[$m_invIA29];
  var $38=$LA;
  var $mul30=($37)*($38);
  var $39=$aA;
  var $sub31=($39)-($mul30);
  $aA=$sub31;
  var $m_invMassB33=$this1+41;
  var $40=FHEAP[$m_invMassB33];
  __ZmlfRK6b2Vec2($ref_tmp32, $40, $P);
  __ZN6b2Vec2pLERKS_($cB, $ref_tmp32);
  var $m_invIB34=$this1+43;
  var $41=FHEAP[$m_invIB34];
  var $42=$LB;
  var $mul35=($41)*($42);
  var $43=$aB;
  var $add36=($43)+($mul35);
  $aB=$add36;
  var $m_indexA37=$this1+34;
  var $44=IHEAP[$m_indexA37];
  var $45=$data_addr;
  var $positions38=$45+6;
  var $46=IHEAP[$positions38];
  var $arrayidx39=$46+$44*3;
  var $c40=$arrayidx39;
  var $47=$c40;
  var $48=$cA;
  IHEAP[$47]=IHEAP[$48]; FHEAP[$47]=FHEAP[$48]; ; IHEAP[$47+1]=IHEAP[$48+1]; FHEAP[$47+1]=FHEAP[$48+1]; ;
  var $49=$aA;
  var $m_indexA41=$this1+34;
  var $50=IHEAP[$m_indexA41];
  var $51=$data_addr;
  var $positions42=$51+6;
  var $52=IHEAP[$positions42];
  var $arrayidx43=$52+$50*3;
  var $a44=$arrayidx43+2;
  FHEAP[$a44]=$49;
  var $m_indexB45=$this1+35;
  var $53=IHEAP[$m_indexB45];
  var $54=$data_addr;
  var $positions46=$54+6;
  var $55=IHEAP[$positions46];
  var $arrayidx47=$55+$53*3;
  var $c48=$arrayidx47;
  var $56=$c48;
  var $57=$cB;
  IHEAP[$56]=IHEAP[$57]; FHEAP[$56]=FHEAP[$57]; ; IHEAP[$56+1]=IHEAP[$57+1]; FHEAP[$56+1]=FHEAP[$57+1]; ;
  var $58=$aB;
  var $m_indexB49=$this1+35;
  var $59=IHEAP[$m_indexB49];
  var $60=$data_addr;
  var $positions50=$60+6;
  var $61=IHEAP[$positions50];
  var $arrayidx51=$61+$59*3;
  var $a52=$arrayidx51+2;
  FHEAP[$a52]=$58;
  var $62=$C;
  var $call53=__Z5b2AbsIfET_S0_($62);
  var $cmp54=($call53) <= 0.004999999888241291;
  STACKTOP = __stackBase__;
  return $cmp54;
  return null;
}
__ZN12b2WheelJoint24SolvePositionConstraintsERK12b2SolverData["X"]=1;

function __ZNK12b2WheelJoint19GetJointTranslationEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 8;
  var __label__;

  var $this_addr;
  var $bA;
  var $bB;
  var $pA=__stackBase__;
  var $pB=__stackBase__+2;
  var $d=__stackBase__+4;
  var $axis=__stackBase__+6;
  var $translation;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1;
  var $m_bodyA=$0+12;
  var $1=IHEAP[$m_bodyA];
  $bA=$1;
  var $2=$this1;
  var $m_bodyB=$2+13;
  var $3=IHEAP[$m_bodyB];
  $bB=$3;
  var $4=$bA;
  var $m_localAnchorA=$this1+20;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($pA, $4, $m_localAnchorA);
  var $5=$bB;
  var $m_localAnchorB=$this1+22;
  __ZNK6b2Body13GetWorldPointERK6b2Vec2($pB, $5, $m_localAnchorB);
  __ZmiRK6b2Vec2S1_($d, $pB, $pA);
  var $6=$bA;
  var $m_localXAxisA=$this1+24;
  __ZNK6b2Body14GetWorldVectorERK6b2Vec2($axis, $6, $m_localXAxisA);
  var $call=__Z5b2DotRK6b2Vec2S1_($d, $axis);
  $translation=$call;
  var $7=$translation;
  STACKTOP = __stackBase__;
  return $7;
  return null;
}


function __ZN7b2World10CreateBodyEPK9b2BodyDef($this, $def) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $def_addr;
  var $mem;
  var $b;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $call=__ZNK7b2World8IsLockedEv($this1);
  var $conv=($call);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$41: do { 
    if (__label__ == 1) {

      ___assert_func(__str406, 109, ___PRETTY_FUNCTION____ZN7b2World10CreateBodyEPK9b2BodyDef, __str1407);
      ;
    }
  } while(0);

  var $call2=__ZNK7b2World8IsLockedEv($this1);
  if ($call2) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then$$if_end$44: do { 
    if (__label__ == 3) {

      $retval=0;
      ;
    }
    else if (__label__ == 4) {

      var $m_blockAllocator=$this1;
      var $call3=__ZN16b2BlockAllocator8AllocateEi($m_blockAllocator, 152);
      $mem=$call3;
      var $0=$mem;
      var $new_isnull=($0)==0;
      if ($new_isnull) { var $3 = 0;__label__ = 6;; } else { __label__ = 5;; }
      $new_cont$$new_notnull$47: do { 
        if (__label__ == 5) {

          var $1=$0;
          var $2=$def_addr;
          __ZN6b2BodyC2EPK9b2BodyDefP7b2World($1, $2, $this1);
          var $3 = $1;;
        }
      } while(0);

      var $3;
      $b=$3;
      var $4=$b;
      var $m_prev=$4+23;
      IHEAP[$m_prev]=0;
      var $m_bodyList=$this1+102538;
      var $5=IHEAP[$m_bodyList];
      var $6=$b;
      var $m_next=$6+24;
      IHEAP[$m_next]=$5;
      var $m_bodyList4=$this1+102538;
      var $7=IHEAP[$m_bodyList4];
      var $tobool=($7)!=0;
      if ($tobool) { __label__ = 7;; } else { __label__ = 8;; }
      $if_then5$$if_end8$50: do { 
        if (__label__ == 7) {

          var $8=$b;
          var $m_bodyList6=$this1+102538;
          var $9=IHEAP[$m_bodyList6];
          var $m_prev7=$9+23;
          IHEAP[$m_prev7]=$8;
          ;
        }
      } while(0);

      var $10=$b;
      var $m_bodyList9=$this1+102538;
      IHEAP[$m_bodyList9]=$10;
      var $m_bodyCount=$this1+102540;
      var $11=IHEAP[$m_bodyCount];
      var $inc=($11)+1;
      IHEAP[$m_bodyCount]=$inc;
      var $12=$b;
      $retval=$12;
      ;
    }
  } while(0);

  var $13=$retval;
  ;
  return $13;
  return null;
}
__ZN7b2World10CreateBodyEPK9b2BodyDef["X"]=1;

function __ZN7b2World16SetAllowSleepingEb($this, $flag) {
  ;
  var __label__;

  var $this_addr;
  var $flag_addr;
  var $b;
  $this_addr=$this;
  var $frombool=($flag);
  $flag_addr=$frombool;
  var $this1=$this_addr;
  var $0=$flag_addr;
  var $tobool=((($0)) & 1);
  var $conv=($tobool);
  var $m_allowSleep=$this1+102544;
  var $1=IHEAP[$m_allowSleep];
  var $tobool2=((($1)) & 1);
  var $conv3=($tobool2);
  var $cmp=($conv)==($conv3);
  if ($cmp) { __label__ = 4;; } else { __label__ = 1;; }
  $if_end13$$if_end$110: do { 
    if (__label__ == 1) {

      var $2=$flag_addr;
      var $tobool4=((($2)) & 1);
      var $m_allowSleep5=$this1+102544;
      var $frombool6=($tobool4);
      IHEAP[$m_allowSleep5]=$frombool6;
      var $m_allowSleep7=$this1+102544;
      var $3=IHEAP[$m_allowSleep7];
      var $tobool8=((($3)) & 1);
      var $conv9=($tobool8);
      var $cmp10=($conv9)==0;
      if (!($cmp10)) { __label__ = 4;break $if_end13$$if_end$110; }

      var $m_bodyList=$this1+102538;
      var $4=IHEAP[$m_bodyList];
      $b=$4;
      var $tobool121=($4)!=0;
      if (!($tobool121)) { __label__ = 4;break $if_end13$$if_end$110; }
      $for_body$113: while(1) { 

        var $5=$b;
        __ZN6b2Body8SetAwakeEb($5, 1);
        var $6=$b;
        var $m_next=$6+24;
        var $7=IHEAP[$m_next];
        $b=$7;
        var $tobool12=($7)!=0;
        if (!($tobool12)) { __label__ = 4;break $if_end13$$if_end$110; }
      }
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN7b2World11DestroyBodyEP6b2Body($this, $b) {
  ;
  var __label__;

  var $this_addr;
  var $b_addr;
  var $je;
  var $je0;
  var $ce;
  var $ce0;
  var $f;
  var $f0;
  $this_addr=$this;
  $b_addr=$b;
  var $this1=$this_addr;
  var $m_bodyCount=$this1+102540;
  var $0=IHEAP[$m_bodyCount];
  var $cmp=($0) > 0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$2: do { 
    if (__label__ == 1) {

      ___assert_func(__str406, 133, ___PRETTY_FUNCTION____ZN7b2World11DestroyBodyEP6b2Body, __str2408);
      ;
    }
  } while(0);

  var $call=__ZNK7b2World8IsLockedEv($this1);
  var $conv=($call);
  var $cmp2=($conv)==0;
  if ($cmp2) { __label__ = 4;; } else { __label__ = 3;; }
  $cond_end5$$cond_false4$5: do { 
    if (__label__ == 3) {

      ___assert_func(__str406, 134, ___PRETTY_FUNCTION____ZN7b2World11DestroyBodyEP6b2Body, __str1407);
      ;
    }
  } while(0);

  var $call6=__ZNK7b2World8IsLockedEv($this1);
  if ($call6) { __label__ = 25;; } else { __label__ = 5;; }
  $return$$if_end$8: do { 
    if (__label__ == 5) {

      var $1=$b_addr;
      var $m_jointList=$1+27;
      var $2=IHEAP[$m_jointList];
      $je=$2;
      var $tobool5=($2)!=0;
      if ($tobool5) { __label__ = 6;; } else { __label__ = 10;; }
      $while_body_lr_ph$$while_end$10: do { 
        if (__label__ == 6) {

          var $m_destructionListener=$this1+102545;
          var $m_destructionListener9=$this1+102545;
          ;
          $while_body$12: while(1) { 

            var $3=$je;
            $je0=$3;
            var $4=$je;
            var $next=$4+3;
            var $5=IHEAP[$next];
            $je=$5;
            var $6=IHEAP[$m_destructionListener];
            var $tobool7=($6)!=0;
            if ($tobool7) { __label__ = 8;; } else { __label__ = 9;; }
            $if_then8$$if_end10$14: do { 
              if (__label__ == 8) {

                var $7=IHEAP[$m_destructionListener9];
                var $8=$7;
                var $vtable=IHEAP[$8];
                var $vfn=$vtable+2;
                var $9=IHEAP[$vfn];
                var $10=$je0;
                var $joint=$10+1;
                var $11=IHEAP[$joint];
                FUNCTION_TABLE[$9]($7, $11);
                ;
              }
            } while(0);

            var $12=$je0;
            var $joint11=$12+1;
            var $13=IHEAP[$joint11];
            __ZN7b2World12DestroyJointEP7b2Joint($this1, $13);
            var $14=$je;
            var $15=$b_addr;
            var $m_jointList12=$15+27;
            IHEAP[$m_jointList12]=$14;
            var $_pr=$je;
            var $tobool=($_pr)!=0;
            if (!($tobool)) { __label__ = 10;break $while_body_lr_ph$$while_end$10; }
          }
        }
      } while(0);

      var $16=$b_addr;
      var $m_jointList13=$16+27;
      IHEAP[$m_jointList13]=0;
      var $17=$b_addr;
      var $m_contactList=$17+28;
      var $18=IHEAP[$m_contactList];
      $ce=$18;
      var $tobool154=($18)!=0;
      if ($tobool154) { __label__ = 11;; } else { __label__ = 13;; }
      $while_body16_lr_ph$$while_end18$18: do { 
        if (__label__ == 11) {

          var $m_contactManager=$this1+102518;
          ;
          $while_body16$20: while(1) { 

            var $19=$ce;
            $ce0=$19;
            var $20=$ce;
            var $next17=$20+3;
            var $21=IHEAP[$next17];
            $ce=$21;
            var $22=$ce0;
            var $contact=$22+1;
            var $23=IHEAP[$contact];
            __ZN16b2ContactManager7DestroyEP9b2Contact($m_contactManager, $23);
            var $_pr1=$ce;
            var $tobool15=($_pr1)!=0;
            if (!($tobool15)) { __label__ = 13;break $while_body16_lr_ph$$while_end18$18; }
          }
        }
      } while(0);

      var $24=$b_addr;
      var $m_contactList19=$24+28;
      IHEAP[$m_contactList19]=0;
      var $25=$b_addr;
      var $m_fixtureList=$25+25;
      var $26=IHEAP[$m_fixtureList];
      $f=$26;
      var $tobool213=($26)!=0;
      if ($tobool213) { __label__ = 14;; } else { __label__ = 18;; }
      $while_body22_lr_ph$$while_end33$23: do { 
        if (__label__ == 14) {

          var $m_destructionListener23=$this1+102545;
          var $m_destructionListener26=$this1+102545;
          var $m_contactManager30=$this1+102518;
          var $m_broadPhase=$m_contactManager30;
          var $m_blockAllocator=$this1;
          var $m_blockAllocator31=$this1;
          ;
          $while_body22$25: while(1) { 

            var $27=$f;
            $f0=$27;
            var $28=$f;
            var $m_next=$28+1;
            var $29=IHEAP[$m_next];
            $f=$29;
            var $30=IHEAP[$m_destructionListener23];
            var $tobool24=($30)!=0;
            if ($tobool24) { __label__ = 16;; } else { __label__ = 17;; }
            $if_then25$$if_end29$27: do { 
              if (__label__ == 16) {

                var $31=IHEAP[$m_destructionListener26];
                var $32=$31;
                var $vtable27=IHEAP[$32];
                var $vfn28=$vtable27+3;
                var $33=IHEAP[$vfn28];
                var $34=$f0;
                FUNCTION_TABLE[$33]($31, $34);
                ;
              }
            } while(0);

            var $35=$f0;
            __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($35, $m_broadPhase);
            var $36=$f0;
            __ZN9b2Fixture7DestroyEP16b2BlockAllocator($36, $m_blockAllocator);
            var $37=$f0;
            var $38=$37;
            __ZN16b2BlockAllocator4FreeEPvi($m_blockAllocator31, $38, 44);
            var $39=$f;
            var $40=$b_addr;
            var $m_fixtureList32=$40+25;
            IHEAP[$m_fixtureList32]=$39;
            var $41=$b_addr;
            var $m_fixtureCount=$41+26;
            var $42=IHEAP[$m_fixtureCount];
            var $sub=($42)-1;
            IHEAP[$m_fixtureCount]=$sub;
            var $_pr2=$f;
            var $tobool21=($_pr2)!=0;
            if (!($tobool21)) { __label__ = 18;break $while_body22_lr_ph$$while_end33$23; }
          }
        }
      } while(0);

      var $43=$b_addr;
      var $m_fixtureList34=$43+25;
      IHEAP[$m_fixtureList34]=0;
      var $44=$b_addr;
      var $m_fixtureCount35=$44+26;
      IHEAP[$m_fixtureCount35]=0;
      var $45=$b_addr;
      var $m_prev=$45+23;
      var $46=IHEAP[$m_prev];
      var $tobool36=($46)!=0;
      if ($tobool36) { __label__ = 19;; } else { __label__ = 20;; }
      $if_then37$$if_end41$31: do { 
        if (__label__ == 19) {

          var $47=$b_addr;
          var $m_next38=$47+24;
          var $48=IHEAP[$m_next38];
          var $49=$b_addr;
          var $m_prev39=$49+23;
          var $50=IHEAP[$m_prev39];
          var $m_next40=$50+24;
          IHEAP[$m_next40]=$48;
          ;
        }
      } while(0);

      var $51=$b_addr;
      var $m_next42=$51+24;
      var $52=IHEAP[$m_next42];
      var $tobool43=($52)!=0;
      if ($tobool43) { __label__ = 21;; } else { __label__ = 22;; }
      $if_then44$$if_end48$34: do { 
        if (__label__ == 21) {

          var $53=$b_addr;
          var $m_prev45=$53+23;
          var $54=IHEAP[$m_prev45];
          var $55=$b_addr;
          var $m_next46=$55+24;
          var $56=IHEAP[$m_next46];
          var $m_prev47=$56+23;
          IHEAP[$m_prev47]=$54;
          ;
        }
      } while(0);

      var $57=$b_addr;
      var $m_bodyList=$this1+102538;
      var $58=IHEAP[$m_bodyList];
      var $cmp49=($57)==($58);
      if ($cmp49) { __label__ = 23;; } else { __label__ = 24;; }
      $if_then50$$if_end53$37: do { 
        if (__label__ == 23) {

          var $59=$b_addr;
          var $m_next51=$59+24;
          var $60=IHEAP[$m_next51];
          var $m_bodyList52=$this1+102538;
          IHEAP[$m_bodyList52]=$60;
          ;
        }
      } while(0);

      var $m_bodyCount54=$this1+102540;
      var $61=IHEAP[$m_bodyCount54];
      var $dec=($61)-1;
      IHEAP[$m_bodyCount54]=$dec;
      var $62=$b_addr;
      __ZN6b2BodyD2Ev($62);
      var $m_blockAllocator55=$this1;
      var $63=$b_addr;
      var $64=$63;
      __ZN16b2BlockAllocator4FreeEPvi($m_blockAllocator55, $64, 152);
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN7b2World11DestroyBodyEP6b2Body["X"]=1;

function __ZN7b2World12DestroyJointEP7b2Joint($this, $j) {
  ;
  var __label__;

  var $this_addr;
  var $j_addr;
  var $collideConnected;
  var $bodyA;
  var $bodyB;
  var $edge;
  $this_addr=$this;
  $j_addr=$j;
  var $this1=$this_addr;
  var $call=__ZNK7b2World8IsLockedEv($this1);
  var $conv=($call);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$42: do { 
    if (__label__ == 1) {

      ___assert_func(__str406, 274, ___PRETTY_FUNCTION____ZN7b2World12DestroyJointEP7b2Joint, __str1407);
      ;
    }
  } while(0);

  var $call2=__ZNK7b2World8IsLockedEv($this1);
  if ($call2) { __label__ = 28;; } else { __label__ = 3;; }
  $if_end95$$if_end$45: do { 
    if (__label__ == 3) {

      var $0=$j_addr;
      var $m_collideConnected=$0+16;
      var $1=IHEAP[$m_collideConnected];
      var $tobool=((($1)) & 1);
      var $frombool=($tobool);
      $collideConnected=$frombool;
      var $2=$j_addr;
      var $m_prev=$2+2;
      var $3=IHEAP[$m_prev];
      var $tobool3=($3)!=0;
      if ($tobool3) { __label__ = 4;; } else { __label__ = 5;; }
      $if_then4$$if_end7$47: do { 
        if (__label__ == 4) {

          var $4=$j_addr;
          var $m_next=$4+3;
          var $5=IHEAP[$m_next];
          var $6=$j_addr;
          var $m_prev5=$6+2;
          var $7=IHEAP[$m_prev5];
          var $m_next6=$7+3;
          IHEAP[$m_next6]=$5;
          ;
        }
      } while(0);

      var $8=$j_addr;
      var $m_next8=$8+3;
      var $9=IHEAP[$m_next8];
      var $tobool9=($9)!=0;
      if ($tobool9) { __label__ = 6;; } else { __label__ = 7;; }
      $if_then10$$if_end14$50: do { 
        if (__label__ == 6) {

          var $10=$j_addr;
          var $m_prev11=$10+2;
          var $11=IHEAP[$m_prev11];
          var $12=$j_addr;
          var $m_next12=$12+3;
          var $13=IHEAP[$m_next12];
          var $m_prev13=$13+2;
          IHEAP[$m_prev13]=$11;
          ;
        }
      } while(0);

      var $14=$j_addr;
      var $m_jointList=$this1+102539;
      var $15=IHEAP[$m_jointList];
      var $cmp15=($14)==($15);
      if ($cmp15) { __label__ = 8;; } else { __label__ = 9;; }
      $if_then16$$if_end19$53: do { 
        if (__label__ == 8) {

          var $16=$j_addr;
          var $m_next17=$16+3;
          var $17=IHEAP[$m_next17];
          var $m_jointList18=$this1+102539;
          IHEAP[$m_jointList18]=$17;
          ;
        }
      } while(0);

      var $18=$j_addr;
      var $m_bodyA=$18+12;
      var $19=IHEAP[$m_bodyA];
      $bodyA=$19;
      var $20=$j_addr;
      var $m_bodyB=$20+13;
      var $21=IHEAP[$m_bodyB];
      $bodyB=$21;
      var $22=$bodyA;
      __ZN6b2Body8SetAwakeEb($22, 1);
      var $23=$bodyB;
      __ZN6b2Body8SetAwakeEb($23, 1);
      var $24=$j_addr;
      var $m_edgeA=$24+4;
      var $prev=$m_edgeA+2;
      var $25=IHEAP[$prev];
      var $tobool20=($25)!=0;
      if ($tobool20) { __label__ = 10;; } else { __label__ = 11;; }
      $if_then21$$if_end26$56: do { 
        if (__label__ == 10) {

          var $26=$j_addr;
          var $m_edgeA22=$26+4;
          var $next=$m_edgeA22+3;
          var $27=IHEAP[$next];
          var $28=$j_addr;
          var $m_edgeA23=$28+4;
          var $prev24=$m_edgeA23+2;
          var $29=IHEAP[$prev24];
          var $next25=$29+3;
          IHEAP[$next25]=$27;
          ;
        }
      } while(0);

      var $30=$j_addr;
      var $m_edgeA27=$30+4;
      var $next28=$m_edgeA27+3;
      var $31=IHEAP[$next28];
      var $tobool29=($31)!=0;
      if ($tobool29) { __label__ = 12;; } else { __label__ = 13;; }
      $if_then30$$if_end36$59: do { 
        if (__label__ == 12) {

          var $32=$j_addr;
          var $m_edgeA31=$32+4;
          var $prev32=$m_edgeA31+2;
          var $33=IHEAP[$prev32];
          var $34=$j_addr;
          var $m_edgeA33=$34+4;
          var $next34=$m_edgeA33+3;
          var $35=IHEAP[$next34];
          var $prev35=$35+2;
          IHEAP[$prev35]=$33;
          ;
        }
      } while(0);

      var $36=$j_addr;
      var $m_edgeA37=$36+4;
      var $37=$bodyA;
      var $m_jointList38=$37+27;
      var $38=IHEAP[$m_jointList38];
      var $cmp39=($m_edgeA37)==($38);
      if ($cmp39) { __label__ = 14;; } else { __label__ = 15;; }
      $if_then40$$if_end44$62: do { 
        if (__label__ == 14) {

          var $39=$j_addr;
          var $m_edgeA41=$39+4;
          var $next42=$m_edgeA41+3;
          var $40=IHEAP[$next42];
          var $41=$bodyA;
          var $m_jointList43=$41+27;
          IHEAP[$m_jointList43]=$40;
          ;
        }
      } while(0);

      var $42=$j_addr;
      var $m_edgeA45=$42+4;
      var $prev46=$m_edgeA45+2;
      IHEAP[$prev46]=0;
      var $43=$j_addr;
      var $m_edgeA47=$43+4;
      var $next48=$m_edgeA47+3;
      IHEAP[$next48]=0;
      var $44=$j_addr;
      var $m_edgeB=$44+8;
      var $prev49=$m_edgeB+2;
      var $45=IHEAP[$prev49];
      var $tobool50=($45)!=0;
      if ($tobool50) { __label__ = 16;; } else { __label__ = 17;; }
      $if_then51$$if_end57$65: do { 
        if (__label__ == 16) {

          var $46=$j_addr;
          var $m_edgeB52=$46+8;
          var $next53=$m_edgeB52+3;
          var $47=IHEAP[$next53];
          var $48=$j_addr;
          var $m_edgeB54=$48+8;
          var $prev55=$m_edgeB54+2;
          var $49=IHEAP[$prev55];
          var $next56=$49+3;
          IHEAP[$next56]=$47;
          ;
        }
      } while(0);

      var $50=$j_addr;
      var $m_edgeB58=$50+8;
      var $next59=$m_edgeB58+3;
      var $51=IHEAP[$next59];
      var $tobool60=($51)!=0;
      if ($tobool60) { __label__ = 18;; } else { __label__ = 19;; }
      $if_then61$$if_end67$68: do { 
        if (__label__ == 18) {

          var $52=$j_addr;
          var $m_edgeB62=$52+8;
          var $prev63=$m_edgeB62+2;
          var $53=IHEAP[$prev63];
          var $54=$j_addr;
          var $m_edgeB64=$54+8;
          var $next65=$m_edgeB64+3;
          var $55=IHEAP[$next65];
          var $prev66=$55+2;
          IHEAP[$prev66]=$53;
          ;
        }
      } while(0);

      var $56=$j_addr;
      var $m_edgeB68=$56+8;
      var $57=$bodyB;
      var $m_jointList69=$57+27;
      var $58=IHEAP[$m_jointList69];
      var $cmp70=($m_edgeB68)==($58);
      if ($cmp70) { __label__ = 20;; } else { __label__ = 21;; }
      $if_then71$$if_end75$71: do { 
        if (__label__ == 20) {

          var $59=$j_addr;
          var $m_edgeB72=$59+8;
          var $next73=$m_edgeB72+3;
          var $60=IHEAP[$next73];
          var $61=$bodyB;
          var $m_jointList74=$61+27;
          IHEAP[$m_jointList74]=$60;
          ;
        }
      } while(0);

      var $62=$j_addr;
      var $m_edgeB76=$62+8;
      var $prev77=$m_edgeB76+2;
      IHEAP[$prev77]=0;
      var $63=$j_addr;
      var $m_edgeB78=$63+8;
      var $next79=$m_edgeB78+3;
      IHEAP[$next79]=0;
      var $64=$j_addr;
      var $m_blockAllocator=$this1;
      __ZN7b2Joint7DestroyEPS_P16b2BlockAllocator($64, $m_blockAllocator);
      var $m_jointCount=$this1+102541;
      var $65=IHEAP[$m_jointCount];
      var $cmp80=($65) > 0;
      if ($cmp80) { __label__ = 23;; } else { __label__ = 22;; }
      $cond_end83$$cond_false82$74: do { 
        if (__label__ == 22) {

          ___assert_func(__str406, 346, ___PRETTY_FUNCTION____ZN7b2World12DestroyJointEP7b2Joint, __str3409);
          ;
        }
      } while(0);

      var $m_jointCount84=$this1+102541;
      var $66=IHEAP[$m_jointCount84];
      var $dec=($66)-1;
      IHEAP[$m_jointCount84]=$dec;
      var $67=$collideConnected;
      var $tobool85=((($67)) & 1);
      var $conv86=($tobool85);
      var $cmp87=($conv86)==0;
      if (!($cmp87)) { __label__ = 28;break $if_end95$$if_end$45; }

      var $68=$bodyB;
      var $call89=__ZN6b2Body14GetContactListEv($68);
      $edge=$call89;
      var $tobool901=($call89)!=0;
      if (!($tobool901)) { __label__ = 28;break $if_end95$$if_end$45; }
      $while_body$78: while(1) { 

        var $69=$edge;
        var $other=$69;
        var $70=IHEAP[$other];
        var $71=$bodyA;
        var $cmp91=($70)==($71);
        if ($cmp91) { __label__ = 26;; } else { __label__ = 27;; }
        $if_then92$$if_end93$80: do { 
          if (__label__ == 26) {

            var $72=$edge;
            var $contact=$72+1;
            var $73=IHEAP[$contact];
            __ZN9b2Contact16FlagForFilteringEv($73);
            ;
          }
        } while(0);

        var $74=$edge;
        var $next94=$74+3;
        var $75=IHEAP[$next94];
        $edge=$75;
        var $tobool90=($75)!=0;
        if (!($tobool90)) { __label__ = 28;break $if_end95$$if_end$45; }
      }
    }
  } while(0);

  ;
  return;
  return;
}
__ZN7b2World12DestroyJointEP7b2Joint["X"]=1;

function __ZN7b2World11CreateJointEPK10b2JointDef($this, $def) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $def_addr;
  var $j;
  var $bodyA;
  var $bodyB;
  var $edge;
  $this_addr=$this;
  $def_addr=$def;
  var $this1=$this_addr;
  var $call=__ZNK7b2World8IsLockedEv($this1);
  var $conv=($call);
  var $cmp=($conv)==0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$85: do { 
    if (__label__ == 1) {

      ___assert_func(__str406, 214, ___PRETTY_FUNCTION____ZN7b2World11CreateJointEPK10b2JointDef, __str1407);
      ;
    }
  } while(0);

  var $call2=__ZNK7b2World8IsLockedEv($this1);
  if ($call2) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then$$if_end$88: do { 
    if (__label__ == 3) {

      $retval=0;
      ;
    }
    else if (__label__ == 4) {

      var $0=$def_addr;
      var $m_blockAllocator=$this1;
      var $call3=__ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator($0, $m_blockAllocator);
      $j=$call3;
      var $1=$j;
      var $m_prev=$1+2;
      IHEAP[$m_prev]=0;
      var $m_jointList=$this1+102539;
      var $2=IHEAP[$m_jointList];
      var $3=$j;
      var $m_next=$3+3;
      IHEAP[$m_next]=$2;
      var $m_jointList4=$this1+102539;
      var $4=IHEAP[$m_jointList4];
      var $tobool=($4)!=0;
      if ($tobool) { __label__ = 5;; } else { __label__ = 6;; }
      $if_then5$$if_end8$91: do { 
        if (__label__ == 5) {

          var $5=$j;
          var $m_jointList6=$this1+102539;
          var $6=IHEAP[$m_jointList6];
          var $m_prev7=$6+2;
          IHEAP[$m_prev7]=$5;
          ;
        }
      } while(0);

      var $7=$j;
      var $m_jointList9=$this1+102539;
      IHEAP[$m_jointList9]=$7;
      var $m_jointCount=$this1+102541;
      var $8=IHEAP[$m_jointCount];
      var $inc=($8)+1;
      IHEAP[$m_jointCount]=$inc;
      var $9=$j;
      var $10=$j;
      var $m_edgeA=$10+4;
      var $joint=$m_edgeA+1;
      IHEAP[$joint]=$9;
      var $11=$j;
      var $m_bodyB=$11+13;
      var $12=IHEAP[$m_bodyB];
      var $13=$j;
      var $m_edgeA10=$13+4;
      var $other=$m_edgeA10;
      IHEAP[$other]=$12;
      var $14=$j;
      var $m_edgeA11=$14+4;
      var $prev=$m_edgeA11+2;
      IHEAP[$prev]=0;
      var $15=$j;
      var $m_bodyA=$15+12;
      var $16=IHEAP[$m_bodyA];
      var $m_jointList12=$16+27;
      var $17=IHEAP[$m_jointList12];
      var $18=$j;
      var $m_edgeA13=$18+4;
      var $next=$m_edgeA13+3;
      IHEAP[$next]=$17;
      var $19=$j;
      var $m_bodyA14=$19+12;
      var $20=IHEAP[$m_bodyA14];
      var $m_jointList15=$20+27;
      var $21=IHEAP[$m_jointList15];
      var $tobool16=($21)!=0;
      if ($tobool16) { __label__ = 7;; } else { __label__ = 8;; }
      $if_then17$$if_end22$94: do { 
        if (__label__ == 7) {

          var $22=$j;
          var $m_edgeA18=$22+4;
          var $23=$j;
          var $m_bodyA19=$23+12;
          var $24=IHEAP[$m_bodyA19];
          var $m_jointList20=$24+27;
          var $25=IHEAP[$m_jointList20];
          var $prev21=$25+2;
          IHEAP[$prev21]=$m_edgeA18;
          ;
        }
      } while(0);

      var $26=$j;
      var $m_edgeA23=$26+4;
      var $27=$j;
      var $m_bodyA24=$27+12;
      var $28=IHEAP[$m_bodyA24];
      var $m_jointList25=$28+27;
      IHEAP[$m_jointList25]=$m_edgeA23;
      var $29=$j;
      var $30=$j;
      var $m_edgeB=$30+8;
      var $joint26=$m_edgeB+1;
      IHEAP[$joint26]=$29;
      var $31=$j;
      var $m_bodyA27=$31+12;
      var $32=IHEAP[$m_bodyA27];
      var $33=$j;
      var $m_edgeB28=$33+8;
      var $other29=$m_edgeB28;
      IHEAP[$other29]=$32;
      var $34=$j;
      var $m_edgeB30=$34+8;
      var $prev31=$m_edgeB30+2;
      IHEAP[$prev31]=0;
      var $35=$j;
      var $m_bodyB32=$35+13;
      var $36=IHEAP[$m_bodyB32];
      var $m_jointList33=$36+27;
      var $37=IHEAP[$m_jointList33];
      var $38=$j;
      var $m_edgeB34=$38+8;
      var $next35=$m_edgeB34+3;
      IHEAP[$next35]=$37;
      var $39=$j;
      var $m_bodyB36=$39+13;
      var $40=IHEAP[$m_bodyB36];
      var $m_jointList37=$40+27;
      var $41=IHEAP[$m_jointList37];
      var $tobool38=($41)!=0;
      if ($tobool38) { __label__ = 9;; } else { __label__ = 10;; }
      $if_then39$$if_end44$97: do { 
        if (__label__ == 9) {

          var $42=$j;
          var $m_edgeB40=$42+8;
          var $43=$j;
          var $m_bodyB41=$43+13;
          var $44=IHEAP[$m_bodyB41];
          var $m_jointList42=$44+27;
          var $45=IHEAP[$m_jointList42];
          var $prev43=$45+2;
          IHEAP[$prev43]=$m_edgeB40;
          ;
        }
      } while(0);

      var $46=$j;
      var $m_edgeB45=$46+8;
      var $47=$j;
      var $m_bodyB46=$47+13;
      var $48=IHEAP[$m_bodyB46];
      var $m_jointList47=$48+27;
      IHEAP[$m_jointList47]=$m_edgeB45;
      var $49=$def_addr;
      var $bodyA48=$49+2;
      var $50=IHEAP[$bodyA48];
      $bodyA=$50;
      var $51=$def_addr;
      var $bodyB49=$51+3;
      var $52=IHEAP[$bodyB49];
      $bodyB=$52;
      var $53=$def_addr;
      var $collideConnected=$53+4;
      var $54=IHEAP[$collideConnected];
      var $tobool50=((($54)) & 1);
      var $conv51=($tobool50);
      var $cmp52=($conv51)==0;
      if ($cmp52) { __label__ = 11;; } else { __label__ = 15;; }
      $if_then53$$if_end61$100: do { 
        if (__label__ == 11) {

          var $55=$bodyB;
          var $call54=__ZN6b2Body14GetContactListEv($55);
          $edge=$call54;
          var $tobool551=($call54)!=0;
          if (!($tobool551)) { __label__ = 15;break $if_then53$$if_end61$100; }
          $while_body$102: while(1) { 

            var $56=$edge;
            var $other56=$56;
            var $57=IHEAP[$other56];
            var $58=$bodyA;
            var $cmp57=($57)==($58);
            if ($cmp57) { __label__ = 13;; } else { __label__ = 14;; }
            $if_then58$$if_end59$104: do { 
              if (__label__ == 13) {

                var $59=$edge;
                var $contact=$59+1;
                var $60=IHEAP[$contact];
                __ZN9b2Contact16FlagForFilteringEv($60);
                ;
              }
            } while(0);

            var $61=$edge;
            var $next60=$61+3;
            var $62=IHEAP[$next60];
            $edge=$62;
            var $tobool55=($62)!=0;
            if (!($tobool55)) { __label__ = 15;break $if_then53$$if_end61$100; }
          }
        }
      } while(0);

      var $63=$j;
      $retval=$63;
      ;
    }
  } while(0);

  var $64=$retval;
  ;
  return $64;
  return null;
}
__ZN7b2World11CreateJointEPK10b2JointDef["X"]=1;

function __ZN8b2Island5ClearEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_bodyCount=$this1+7;
  IHEAP[$m_bodyCount]=0;
  var $m_contactCount=$this1+9;
  IHEAP[$m_contactCount]=0;
  var $m_jointCount=$this1+8;
  IHEAP[$m_jointCount]=0;
  ;
  return;
  return;
}


function __ZN8b2Island3AddEP6b2Body($this, $body) {
  ;
  var __label__;

  var $this_addr;
  var $body_addr;
  $this_addr=$this;
  $body_addr=$body;
  var $this1=$this_addr;
  var $m_bodyCount=$this1+7;
  var $0=IHEAP[$m_bodyCount];
  var $m_bodyCapacity=$this1+10;
  var $1=IHEAP[$m_bodyCapacity];
  var $cmp=($0) < ($1);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$93: do { 
    if (__label__ == 1) {

      ___assert_func(__str25434, 54, ___PRETTY_FUNCTION____ZN8b2Island3AddEP6b2Body, __str28437);
      ;
    }
  } while(0);

  var $m_bodyCount2=$this1+7;
  var $2=IHEAP[$m_bodyCount2];
  var $3=$body_addr;
  var $m_islandIndex=$3+2;
  IHEAP[$m_islandIndex]=$2;
  var $4=$body_addr;
  var $m_bodyCount3=$this1+7;
  var $5=IHEAP[$m_bodyCount3];
  var $m_bodies=$this1+2;
  var $6=IHEAP[$m_bodies];
  var $arrayidx=$6+$5;
  IHEAP[$arrayidx]=$4;
  var $m_bodyCount4=$this1+7;
  var $7=IHEAP[$m_bodyCount4];
  var $inc=($7)+1;
  IHEAP[$m_bodyCount4]=$inc;
  ;
  return;
  return;
}


function __ZNK9b2Contact9IsEnabledEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_flags=$this1+1;
  var $0=IHEAP[$m_flags];
  var $and=($0) & 4;
  var $cmp=($and)==4;
  ;
  return $cmp;
  return null;
}


function __ZN8b2Island3AddEP9b2Contact($this, $contact) {
  ;
  var __label__;

  var $this_addr;
  var $contact_addr;
  $this_addr=$this;
  $contact_addr=$contact;
  var $this1=$this_addr;
  var $m_contactCount=$this1+9;
  var $0=IHEAP[$m_contactCount];
  var $m_contactCapacity=$this1+11;
  var $1=IHEAP[$m_contactCapacity];
  var $cmp=($0) < ($1);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$98: do { 
    if (__label__ == 1) {

      ___assert_func(__str25434, 62, ___PRETTY_FUNCTION____ZN8b2Island3AddEP9b2Contact, __str27436);
      ;
    }
  } while(0);

  var $2=$contact_addr;
  var $m_contactCount2=$this1+9;
  var $3=IHEAP[$m_contactCount2];
  var $inc=($3)+1;
  IHEAP[$m_contactCount2]=$inc;
  var $m_contacts=$this1+3;
  var $4=IHEAP[$m_contacts];
  var $arrayidx=$4+$3;
  IHEAP[$arrayidx]=$2;
  ;
  return;
  return;
}


function __ZN8b2Island3AddEP7b2Joint($this, $joint) {
  ;
  var __label__;

  var $this_addr;
  var $joint_addr;
  $this_addr=$this;
  $joint_addr=$joint;
  var $this1=$this_addr;
  var $m_jointCount=$this1+8;
  var $0=IHEAP[$m_jointCount];
  var $m_jointCapacity=$this1+12;
  var $1=IHEAP[$m_jointCapacity];
  var $cmp=($0) < ($1);
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$102: do { 
    if (__label__ == 1) {

      ___assert_func(__str25434, 68, ___PRETTY_FUNCTION____ZN8b2Island3AddEP7b2Joint, __str26435);
      ;
    }
  } while(0);

  var $2=$joint_addr;
  var $m_jointCount2=$this1+8;
  var $3=IHEAP[$m_jointCount2];
  var $inc=($3)+1;
  IHEAP[$m_jointCount2]=$inc;
  var $m_joints=$this1+4;
  var $4=IHEAP[$m_joints];
  var $arrayidx=$4+$3;
  IHEAP[$arrayidx]=$2;
  ;
  return;
  return;
}


function __ZN6b2Body7GetNextEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_next=$this1+24;
  var $0=IHEAP[$m_next];
  ;
  return $0;
  return null;
}


function __ZN7b2World5SolveERK10b2TimeStep($this, $step) {
  var __stackBase__  = STACKTOP; STACKTOP += 23;
  var __label__;

  var $this_addr;
  var $step_addr;
  var $island=__stackBase__;
  var $b;
  var $c;
  var $j;
  var $stackSize;
  var $stack;
  var $exn_slot;
  var $ehselector_slot;
  var $seed;
  var $stackCount;
  var $b50;
  var $ce;
  var $contact;
  var $sensorA;
  var $sensorB;
  var $other;
  var $je;
  var $other127;
  var $profile=__stackBase__+13;
  var $i;
  var $b176;
  var $timer=__stackBase__+21;
  var $b196;
  $this_addr=$this;
  $step_addr=$step;
  var $this1=$this_addr;
  var $m_profile=$this1+102552;
  var $solveInit=$m_profile+3;
  FHEAP[$solveInit]=0;
  var $m_profile2=$this1+102552;
  var $solveVelocity=$m_profile2+4;
  FHEAP[$solveVelocity]=0;
  var $m_profile3=$this1+102552;
  var $solvePosition=$m_profile3+5;
  FHEAP[$solvePosition]=0;
  var $m_bodyCount=$this1+102540;
  var $0=IHEAP[$m_bodyCount];
  var $m_contactManager=$this1+102518;
  var $m_contactCount=$m_contactManager+16;
  var $1=IHEAP[$m_contactCount];
  var $m_jointCount=$this1+102541;
  var $2=IHEAP[$m_jointCount];
  var $m_stackAllocator=$this1+17;
  var $m_contactManager4=$this1+102518;
  var $m_contactListener=$m_contactManager4+18;
  var $3=IHEAP[$m_contactListener];
  __ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener($island, $0, $1, $2, $m_stackAllocator, $3);
  var $m_bodyList=$this1+102538;
  var $4=IHEAP[$m_bodyList];
  $b=$4;
  var $tobool20=($4)!=0;
  if ($tobool20) { __label__ = 1;; } else { __label__ = 2;; }
  $for_body$$for_end$2: do { 
    if (__label__ == 1) {
      $for_body$3: while(1) { 

        var $5=$b;
        var $m_flags=$5+1;
        var $6=IHEAP[$m_flags];
        var $conv=($6);
        var $and=($conv) & -2;
        var $conv5=((($and)) & 65535);
        IHEAP[$m_flags]=$conv5;
        var $7=$b;
        var $m_next=$7+24;
        var $8=IHEAP[$m_next];
        $b=$8;
        var $tobool=($8)!=0;
        if (!($tobool)) { __label__ = 2;break $for_body$$for_end$2; }
      }
    }
  } while(0);

  var $m_contactManager6=$this1+102518;
  var $m_contactList=$m_contactManager6+15;
  var $9=IHEAP[$m_contactList];
  $c=$9;
  var $tobool819=($9)!=0;
  if ($tobool819) { __label__ = 3;; } else { __label__ = 4;; }
  $for_body9$$for_end14$6: do { 
    if (__label__ == 3) {
      $for_body9$7: while(1) { 

        var $10=$c;
        var $m_flags10=$10+1;
        var $11=IHEAP[$m_flags10];
        var $and11=($11) & -2;
        IHEAP[$m_flags10]=$and11;
        var $12=$c;
        var $m_next13=$12+3;
        var $13=IHEAP[$m_next13];
        $c=$13;
        var $tobool8=($13)!=0;
        if (!($tobool8)) { __label__ = 4;break $for_body9$$for_end14$6; }
      }
    }
  } while(0);

  var $m_jointList=$this1+102539;
  var $14=IHEAP[$m_jointList];
  $j=$14;
  var $tobool1618=($14)!=0;
  if ($tobool1618) { __label__ = 5;; } else { __label__ = 6;; }
  $for_body17$$for_end20$10: do { 
    if (__label__ == 5) {
      $for_body17$11: while(1) { 

        var $15=$j;
        var $m_islandFlag=$15+15;
        IHEAP[$m_islandFlag]=0;
        var $16=$j;
        var $m_next19=$16+3;
        var $17=IHEAP[$m_next19];
        $j=$17;
        var $tobool16=($17)!=0;
        if (!($tobool16)) { __label__ = 6;break $for_body17$$for_end20$10; }
      }
    }
  } while(0);

  var $m_bodyCount21=$this1+102540;
  var $18=IHEAP[$m_bodyCount21];
  $stackSize=$18;
  var $m_stackAllocator22=$this1+17;
  var $19=$stackSize;
  var $mul=(($19)<<2);
  var $call=__ZN16b2StackAllocator8AllocateEi($m_stackAllocator22, $mul);
  ;

  var $20=$call;
  $stack=$20;
  var $m_bodyList23=$this1+102538;
  var $21=IHEAP[$m_bodyList23];
  $seed=$21;
  var $m_gravity=$this1+102542;
  var $m_allowSleep=$this1+102544;
  var $solveInit161=$profile+3;
  var $m_profile162=$this1+102552;
  var $solveInit163=$m_profile162+3;
  var $solveVelocity164=$profile+4;
  var $m_profile165=$this1+102552;
  var $solveVelocity166=$m_profile165+4;
  var $solvePosition168=$profile+5;
  var $m_profile169=$this1+102552;
  var $solvePosition170=$m_profile169+5;
  var $m_bodyCount173=$island+7;
  var $m_bodies=$island+2;
  var $22 = $21;;
  $for_cond24$15: while(1) { 

    var $22;
    var $tobool25=($22)!=0;
    if (!($tobool25)) { __label__ = 66;break $for_cond24$15; }

    var $23=$seed;
    var $m_flags27=$23+1;
    var $24=IHEAP[$m_flags27];
    var $conv28=($24);
    var $and29=($conv28) & 1;
    var $tobool30=($and29)!=0;
    if ($tobool30) { __label__ = 65;; } else { __label__ = 18;; }
    $for_inc190$$if_end$18: do { 
      if (__label__ == 18) {

        var $27=$seed;
        var $call32=__ZNK6b2Body7IsAwakeEv($27);
        ;

        var $conv33=($call32);
        var $cmp=($conv33)==0;
        if ($cmp) { __label__ = 65;break $for_inc190$$if_end$18; }

        var $28=$seed;
        var $call35=__ZNK6b2Body8IsActiveEv($28);
        ;

        var $conv36=($call35);
        var $cmp37=($conv36)==0;
        if ($cmp37) { __label__ = 65;break $for_inc190$$if_end$18; }

        var $29=$seed;
        var $call41=__ZNK6b2Body7GetTypeEv($29);
        ;

        var $cmp42=($call41)==0;
        if ($cmp42) { __label__ = 65;break $for_inc190$$if_end$18; }

        __ZN8b2Island5ClearEv($island);
        $stackCount=0;
        var $30=$seed;
        var $31=$stackCount;
        var $inc=($31)+1;
        $stackCount=$inc;
        var $32=$stack;
        var $arrayidx=$32+$31;
        IHEAP[$arrayidx]=$30;
        var $33=$seed;
        var $m_flags46=$33+1;
        var $34=IHEAP[$m_flags46];
        var $conv47=($34);
        var $or=($conv47) | 1;
        var $conv48=((($or)) & 65535);
        IHEAP[$m_flags46]=$conv48;
        ;
        $while_cond$26: while(1) { 

          var $35=$stackCount;
          var $cmp49=($35) > 0;
          if (!($cmp49)) { __label__ = 58;break $while_cond$26; }

          var $36=$stackCount;
          var $dec=($36)-1;
          $stackCount=$dec;
          var $37=$stack;
          var $arrayidx51=$37+$dec;
          var $38=IHEAP[$arrayidx51];
          $b50=$38;
          var $39=$b50;
          var $call53=__ZNK6b2Body8IsActiveEv($39);
          ;

          var $conv54=($call53);
          var $cmp55=($conv54)==1;
          if ($cmp55) { __label__ = 29;; } else { __label__ = 28;; }
          $cond_end$$cond_false$30: do { 
            if (__label__ == 28) {

              ___assert_func(__str406, 445, ___PRETTY_FUNCTION____ZN7b2World5SolveERK10b2TimeStep, __str4410);
              ;
            }
          } while(0);

          var $40=$b50;
          __ZN8b2Island3AddEP6b2Body($island, $40);
          ;

          var $41=$b50;
          __ZN6b2Body8SetAwakeEb($41, 1);
          ;

          var $42=$b50;
          var $call60=__ZNK6b2Body7GetTypeEv($42);
          ;

          var $cmp61=($call60)==0;
          if ($cmp61) { __label__ = 25;continue $while_cond$26; }

          var $43=$b50;
          var $m_contactList64=$43+28;
          var $44=IHEAP[$m_contactList64];
          $ce=$44;
          var $45 = $44;;
          $for_cond65$37: while(1) { 

            var $45;
            var $tobool66=($45)!=0;
            if (!($tobool66)) { __label__ = 47;break $for_cond65$37; }

            var $46=$ce;
            var $contact68=$46+1;
            var $47=IHEAP[$contact68];
            $contact=$47;
            var $48=$contact;
            var $m_flags69=$48+1;
            var $49=IHEAP[$m_flags69];
            var $and70=($49) & 1;
            var $tobool71=($and70)!=0;
            if ($tobool71) { __label__ = 46;; } else { __label__ = 36;; }
            $for_inc115$$if_end73$40: do { 
              if (__label__ == 36) {

                var $50=$contact;
                var $call75=__ZNK9b2Contact9IsEnabledEv($50);
                var $conv76=($call75);
                var $cmp77=($conv76)==0;
                if ($cmp77) { __label__ = 46;break $for_inc115$$if_end73$40; }

                var $51=$contact;
                var $call80=__ZNK9b2Contact10IsTouchingEv($51);
                ;

                var $conv81=($call80);
                var $cmp82=($conv81)==0;
                if ($cmp82) { __label__ = 46;break $for_inc115$$if_end73$40; }

                var $52=$contact;
                var $m_fixtureA=$52+12;
                var $53=IHEAP[$m_fixtureA];
                var $m_isSensor=$53+11;
                var $54=IHEAP[$m_isSensor];
                var $tobool85=((($54)) & 1);
                var $frombool=($tobool85);
                $sensorA=$frombool;
                var $55=$contact;
                var $m_fixtureB=$55+13;
                var $56=IHEAP[$m_fixtureB];
                var $m_isSensor86=$56+11;
                var $57=IHEAP[$m_isSensor86];
                var $tobool87=((($57)) & 1);
                var $frombool88=($tobool87);
                $sensorB=$frombool88;
                var $58=$sensorA;
                var $tobool89=((($58)) & 1);
                if ($tobool89) { __label__ = 46;break $for_inc115$$if_end73$40; }

                var $59=$sensorB;
                var $tobool91=((($59)) & 1);
                if ($tobool91) { __label__ = 46;break $for_inc115$$if_end73$40; }

                var $60=$contact;
                __ZN8b2Island3AddEP9b2Contact($island, $60);
                ;

                var $61=$contact;
                var $m_flags95=$61+1;
                var $62=IHEAP[$m_flags95];
                var $or96=($62) | 1;
                IHEAP[$m_flags95]=$or96;
                var $63=$ce;
                var $other97=$63;
                var $64=IHEAP[$other97];
                $other=$64;
                var $65=$other;
                var $m_flags98=$65+1;
                var $66=IHEAP[$m_flags98];
                var $conv99=($66);
                var $and100=($conv99) & 1;
                var $tobool101=($and100)!=0;
                if ($tobool101) { __label__ = 46;break $for_inc115$$if_end73$40; }

                var $67=$stackCount;
                var $68=$stackSize;
                var $cmp104=($67) < ($68);
                if ($cmp104) { __label__ = 45;; } else { __label__ = 44;; }
                $cond_end108$$cond_false106$49: do { 
                  if (__label__ == 44) {

                    ___assert_func(__str406, 495, ___PRETTY_FUNCTION____ZN7b2World5SolveERK10b2TimeStep, __str5411);
                    ;
                  }
                } while(0);

                var $69=$other;
                var $70=$stackCount;
                var $inc109=($70)+1;
                $stackCount=$inc109;
                var $71=$stack;
                var $arrayidx110=$71+$70;
                IHEAP[$arrayidx110]=$69;
                var $72=$other;
                var $m_flags111=$72+1;
                var $73=IHEAP[$m_flags111];
                var $conv112=($73);
                var $or113=($conv112) | 1;
                var $conv114=((($or113)) & 65535);
                IHEAP[$m_flags111]=$conv114;
                ;
              }
            } while(0);

            var $74=$ce;
            var $next=$74+3;
            var $75=IHEAP[$next];
            $ce=$75;
            var $45 = $75;;
          }

          var $76=$b50;
          var $m_jointList117=$76+27;
          var $77=IHEAP[$m_jointList117];
          $je=$77;
          var $78 = $77;;
          $for_cond118$54: while(1) { 

            var $78;
            var $tobool119=($78)!=0;
            if (!($tobool119)) { __label__ = 25;continue $while_cond$26; }

            var $79=$je;
            var $joint=$79+1;
            var $80=IHEAP[$joint];
            var $m_islandFlag121=$80+15;
            var $81=IHEAP[$m_islandFlag121];
            var $tobool122=((($81)) & 1);
            var $conv123=($tobool122);
            var $cmp124=($conv123)==1;
            if ($cmp124) { __label__ = 57;; } else { __label__ = 50;; }
            $for_inc156$$if_end126$57: do { 
              if (__label__ == 50) {

                var $82=$je;
                var $other128=$82;
                var $83=IHEAP[$other128];
                $other127=$83;
                var $84=$other127;
                var $call130=__ZNK6b2Body8IsActiveEv($84);
                ;

                var $conv131=($call130);
                var $cmp132=($conv131)==0;
                if ($cmp132) { __label__ = 57;break $for_inc156$$if_end126$57; }

                var $85=$je;
                var $joint135=$85+1;
                var $86=IHEAP[$joint135];
                __ZN8b2Island3AddEP7b2Joint($island, $86);
                ;

                var $87=$je;
                var $joint137=$87+1;
                var $88=IHEAP[$joint137];
                var $m_islandFlag138=$88+15;
                IHEAP[$m_islandFlag138]=1;
                var $89=$other127;
                var $m_flags139=$89+1;
                var $90=IHEAP[$m_flags139];
                var $conv140=($90);
                var $and141=($conv140) & 1;
                var $tobool142=($and141)!=0;
                if ($tobool142) { __label__ = 57;break $for_inc156$$if_end126$57; }

                var $91=$stackCount;
                var $92=$stackSize;
                var $cmp145=($91) < ($92);
                if ($cmp145) { __label__ = 56;; } else { __label__ = 55;; }
                $cond_end149$$cond_false147$63: do { 
                  if (__label__ == 55) {

                    ___assert_func(__str406, 524, ___PRETTY_FUNCTION____ZN7b2World5SolveERK10b2TimeStep, __str5411);
                    ;
                  }
                } while(0);

                var $93=$other127;
                var $94=$stackCount;
                var $inc150=($94)+1;
                $stackCount=$inc150;
                var $95=$stack;
                var $arrayidx151=$95+$94;
                IHEAP[$arrayidx151]=$93;
                var $96=$other127;
                var $m_flags152=$96+1;
                var $97=IHEAP[$m_flags152];
                var $conv153=($97);
                var $or154=($conv153) | 1;
                var $conv155=((($or154)) & 65535);
                IHEAP[$m_flags152]=$conv155;
                ;
              }
            } while(0);

            var $98=$je;
            var $next157=$98+3;
            var $99=IHEAP[$next157];
            $je=$99;
            var $78 = $99;;
          }
        }

        var $100=$step_addr;
        var $101=IHEAP[$m_allowSleep];
        var $tobool159=((($101)) & 1);
        __ZN8b2Island5SolveEP9b2ProfileRK10b2TimeStepRK6b2Vec2b($island, $profile, $100, $m_gravity, $tobool159);
        ;

        var $102=FHEAP[$solveInit161];
        var $103=FHEAP[$solveInit163];
        var $add=($103)+($102);
        FHEAP[$solveInit163]=$add;
        var $104=FHEAP[$solveVelocity164];
        var $105=FHEAP[$solveVelocity166];
        var $add167=($105)+($104);
        FHEAP[$solveVelocity166]=$add167;
        var $106=FHEAP[$solvePosition168];
        var $107=FHEAP[$solvePosition170];
        var $add171=($107)+($106);
        FHEAP[$solvePosition170]=$add171;
        $i=0;
        ;
        $for_cond172$69: while(1) { 

          var $108=$i;
          var $109=IHEAP[$m_bodyCount173];
          var $cmp174=($108) < ($109);
          if (!($cmp174)) { __label__ = 65;break $for_inc190$$if_end$18; }

          var $110=$i;
          var $111=IHEAP[$m_bodies];
          var $arrayidx177=$111+$110;
          var $112=IHEAP[$arrayidx177];
          $b176=$112;
          var $113=$b176;
          var $call179=__ZNK6b2Body7GetTypeEv($113);
          ;

          var $cmp180=($call179)==0;
          if ($cmp180) { __label__ = 63;; } else { __label__ = 64;; }
          $if_then181$$for_inc187$73: do { 
            if (__label__ == 63) {

              var $114=$b176;
              var $m_flags182=$114+1;
              var $115=IHEAP[$m_flags182];
              var $conv183=($115);
              var $and184=($conv183) & -2;
              var $conv185=((($and184)) & 65535);
              IHEAP[$m_flags182]=$conv185;
              ;
            }
          } while(0);

          var $116=$i;
          var $inc188=($116)+1;
          $i=$inc188;
          ;
        }
      }
    } while(0);

    var $117=$seed;
    var $m_next191=$117+24;
    var $118=IHEAP[$m_next191];
    $seed=$118;
    var $22 = $118;;
  }

  var $m_stackAllocator193=$this1+17;
  var $119=$stack;
  var $120=$119;
  __ZN16b2StackAllocator4FreeEPv($m_stackAllocator193, $120);
  ;

  __ZN7b2TimerC2Ev($timer);
  ;

  var $m_bodyList197=$this1+102538;
  var $121=IHEAP[$m_bodyList197];
  $b196=$121;
  var $122 = $121;;
  $for_cond198$80: while(1) { 

    var $122;
    var $tobool199=($122)!=0;
    if (!($tobool199)) { __label__ = 75;break $for_cond198$80; }

    var $123=$b196;
    var $m_flags201=$123+1;
    var $124=IHEAP[$m_flags201];
    var $conv202=($124);
    var $and203=($conv202) & 1;
    var $cmp204=($and203)==0;
    if ($cmp204) { __label__ = 74;; } else { __label__ = 71;; }
    $for_inc213$$if_end206$83: do { 
      if (__label__ == 71) {

        var $125=$b196;
        var $call208=__ZNK6b2Body7GetTypeEv($125);
        ;

        var $cmp209=($call208)==0;
        if ($cmp209) { __label__ = 74;break $for_inc213$$if_end206$83; }

        var $126=$b196;
        __ZN6b2Body19SynchronizeFixturesEv($126);
        ;
      }
    } while(0);

    var $127=$b196;
    var $call215=__ZN6b2Body7GetNextEv($127);
    $b196=$call215;
    var $122 = $call215;;
  }

  var $m_contactManager217=$this1+102518;
  __ZN16b2ContactManager15FindNewContactsEv($m_contactManager217);
  ;

  var $call220=__ZNK7b2Timer15GetMillisecondsEv($timer);
  ;

  var $m_profile221=$this1+102552;
  var $broadphase=$m_profile221+6;
  FHEAP[$broadphase]=$call220;
  __ZN8b2IslandD2Ev($island);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN7b2World5SolveERK10b2TimeStep["X"]=1;

function __ZN7b2World8SolveTOIERK10b2TimeStep($this, $step) {
  var __stackBase__  = STACKTOP; STACKTOP += 83;
  var __label__;

  var $this_addr;
  var $step_addr;
  var $island=__stackBase__;
  var $b;
  var $c;
  var $minContact;
  var $minAlpha;
  var $c14;
  var $exn_slot;
  var $ehselector_slot;
  var $alpha;
  var $fA;
  var $fB;
  var $bA;
  var $bB;
  var $typeA;
  var $typeB;
  var $activeA;
  var $activeB;
  var $collideA;
  var $collideB;
  var $alpha087;
  var $indexA;
  var $indexB;
  var $input=__stackBase__+13;
  var $output=__stackBase__+46;
  var $beta;
  var $fA153;
  var $fB156;
  var $bA159;
  var $bB162;
  var $backup1=__stackBase__+48;
  var $backup2=__stackBase__+57;
  var $bodies=__stackBase__+66;
  var $i;
  var $body;
  var $ce;
  var $contact;
  var $other;
  var $sensorA;
  var $sensorB;
  var $backup=__stackBase__+68;
  var $subStep=__stackBase__+77;
  var $i313;
  var $body318;
  var $ce329;
  $this_addr=$this;
  $step_addr=$step;
  var $this1=$this_addr;
  var $m_stackAllocator=$this1+17;
  var $m_contactManager=$this1+102518;
  var $m_contactListener=$m_contactManager+18;
  var $0=IHEAP[$m_contactListener];
  __ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener($island, 64, 32, 0, $m_stackAllocator, $0);
  var $m_stepComplete=$this1+102551;
  var $1=IHEAP[$m_stepComplete];
  var $tobool=((($1)) & 1);
  if ($tobool) { __label__ = 2;; } else { __label__ = 1;; }
  $if_then$$for_cond13_preheader$2: do { 
    if (__label__ == 2) {

      var $m_bodyList=$this1+102538;
      var $11=IHEAP[$m_bodyList];
      $b=$11;
      var $tobool211=($11)!=0;
      if ($tobool211) { __label__ = 3;; } else { __label__ = 4;; }
      $for_body$$for_end$4: do { 
        if (__label__ == 3) {
          $for_body$5: while(1) { 

            var $12=$b;
            var $m_flags=$12+1;
            var $13=IHEAP[$m_flags];
            var $conv=($13);
            var $and=($conv) & -2;
            var $conv3=((($and)) & 65535);
            IHEAP[$m_flags]=$conv3;
            var $14=$b;
            var $m_sweep=$14+7;
            var $alpha0=$m_sweep+8;
            FHEAP[$alpha0]=0;
            var $15=$b;
            var $m_next=$15+24;
            var $16=IHEAP[$m_next];
            $b=$16;
            var $tobool2=($16)!=0;
            if (!($tobool2)) { __label__ = 4;break $for_body$$for_end$4; }
          }
        }
      } while(0);

      var $m_contactManager4=$this1+102518;
      var $m_contactList=$m_contactManager4+15;
      var $17=IHEAP[$m_contactList];
      $c=$17;
      var $tobool610=($17)!=0;
      if (!($tobool610)) { __label__ = 1;break $if_then$$for_cond13_preheader$2; }
      $for_body7$8: while(1) { 

        var $18=$c;
        var $m_flags8=$18+1;
        var $19=IHEAP[$m_flags8];
        var $and9=($19) & -34;
        IHEAP[$m_flags8]=$and9;
        var $20=$c;
        var $m_toiCount=$20+32;
        IHEAP[$m_toiCount]=0;
        var $21=$c;
        var $m_toi=$21+33;
        FHEAP[$m_toi]=1;
        var $22=$c;
        var $m_next11=$22+3;
        var $23=IHEAP[$m_next11];
        $c=$23;
        var $tobool6=($23)!=0;
        if (!($tobool6)) { __label__ = 1;break $if_then$$for_cond13_preheader$2; }
      }
    }
  } while(0);

  var $m_contactManager15=$this1+102518;
  var $m_contactList16=$m_contactManager15+15;
  var $proxyA=$input;
  var $proxyB=$input+7;
  var $sweepA=$input+14;
  var $2=$sweepA;
  var $sweepB=$input+23;
  var $3=$sweepB;
  var $tMax=$input+32;
  var $t=$output+1;
  var $state=$output;
  var $4=$backup1;
  var $5=$backup2;
  var $m_contactManager169=$this1+102518;
  var $m_contactListener170=$m_contactManager169+18;
  var $6=$backup1;
  var $7=$backup2;
  var $arrayinit_begin=$bodies;
  var $arrayinit_element=$arrayinit_begin+1;
  var $m_bodyCount=$island+7;
  var $m_bodyCapacity=$island+10;
  var $m_contactCount=$island+9;
  var $m_contactCapacity=$island+11;
  var $8=$backup;
  var $m_contactManager262=$this1+102518;
  var $m_contactListener263=$m_contactManager262+18;
  var $9=$backup;
  var $10=$backup;
  var $dt308=$subStep;
  var $dt309=$subStep;
  var $inv_dt=$subStep+1;
  var $dtRatio=$subStep+2;
  var $positionIterations=$subStep+4;
  var $velocityIterations310=$subStep+3;
  var $warmStarting=$subStep+5;
  var $m_bodyCount315=$island+7;
  var $m_bodies=$island+2;
  var $m_contactManager343=$this1+102518;
  var $m_subStepping=$this1+102550;
  ;
  $for_cond13$11: while(1) { 

    $minContact=0;
    $minAlpha=1;
    var $24=IHEAP[$m_contactList16];
    $c14=$24;
    var $25 = $24;;
    $for_cond17$13: while(1) { 

      var $25;
      var $tobool18=($25)!=0;
      if (!($tobool18)) { __label__ = 62;break $for_cond17$13; }

      var $26=$c14;
      var $call=__ZNK9b2Contact9IsEnabledEv($26);
      var $conv20=($call);
      var $cmp=($conv20)==0;
      if ($cmp) { __label__ = 61;; } else { __label__ = 14;; }
      $for_inc144$$if_end22$16: do { 
        if (__label__ == 14) {

          var $29=$c14;
          var $m_toiCount23=$29+32;
          var $30=IHEAP[$m_toiCount23];
          var $cmp24=($30) > 8;
          if ($cmp24) { __label__ = 61;break $for_inc144$$if_end22$16; }

          $alpha=1;
          var $31=$c14;
          var $m_flags27=$31+1;
          var $32=IHEAP[$m_flags27];
          var $and28=($32) & 32;
          var $tobool29=($and28)!=0;
          var $33=$c14;
          if ($tobool29) { __label__ = 16;; } else { __label__ = 17;; }
          $if_then30$$if_else$19: do { 
            if (__label__ == 16) {

              var $m_toi31=$33+33;
              var $34=FHEAP[$m_toi31];
              $alpha=$34;
              ;
            }
            else if (__label__ == 17) {

              var $call33=__ZN9b2Contact11GetFixtureAEv($33);
              ;

              $fA=$call33;
              var $35=$c14;
              var $call35=__ZN9b2Contact11GetFixtureBEv($35);
              ;

              $fB=$call35;
              var $36=$fA;
              var $call37=__ZNK9b2Fixture8IsSensorEv($36);
              ;

              if ($call37) { __label__ = 61;break $for_inc144$$if_end22$16; }

              var $37=$fB;
              var $call39=__ZNK9b2Fixture8IsSensorEv($37);
              ;

              if ($call39) { __label__ = 61;break $for_inc144$$if_end22$16; }

              var $38=$fA;
              var $call43=__ZN9b2Fixture7GetBodyEv($38);
              ;

              $bA=$call43;
              var $39=$fB;
              var $call45=__ZN9b2Fixture7GetBodyEv($39);
              ;

              $bB=$call45;
              var $40=$bA;
              var $m_type=$40;
              var $41=IHEAP[$m_type];
              $typeA=$41;
              var $42=$bB;
              var $m_type46=$42;
              var $43=IHEAP[$m_type46];
              $typeB=$43;
              var $44=$typeA;
              var $cmp47=($44)==2;
              if ($cmp47) { __label__ = 28;; } else { __label__ = 26;; }
              $cond_end$$lor_lhs_false48$30: do { 
                if (__label__ == 26) {

                  var $45=$typeB;
                  var $cmp49=($45)==2;
                  if ($cmp49) { __label__ = 28;break $cond_end$$lor_lhs_false48$30; }

                  ___assert_func(__str406, 641, ___PRETTY_FUNCTION____ZN7b2World8SolveTOIERK10b2TimeStep, __str6412);
                  ;
                }
              } while(0);

              var $46=$bA;
              var $call52=__ZNK6b2Body7IsAwakeEv($46);
              ;

              if ($call52) { __label__ = 30;; } else { var $48 = 0;__label__ = 31;; }
              $land_rhs$$land_end$35: do { 
                if (__label__ == 30) {

                  var $47=$typeA;
                  var $cmp53=($47)!=0;
                  var $48 = $cmp53;;
                }
              } while(0);

              var $48;
              var $frombool=($48);
              $activeA=$frombool;
              var $49=$bB;
              var $call55=__ZNK6b2Body7IsAwakeEv($49);
              ;

              if ($call55) { __label__ = 33;; } else { var $51 = 0;__label__ = 34;; }
              $land_rhs56$$land_end58$39: do { 
                if (__label__ == 33) {

                  var $50=$typeB;
                  var $cmp57=($50)!=0;
                  var $51 = $cmp57;;
                }
              } while(0);

              var $51;
              var $frombool59=($51);
              $activeB=$frombool59;
              var $52=$activeA;
              var $tobool60=((($52)) & 1);
              var $conv61=($tobool60);
              var $cmp62=($conv61)==0;
              if ($cmp62) { __label__ = 35;; } else { __label__ = 36;; }
              $land_lhs_true$$if_end67$42: do { 
                if (__label__ == 35) {

                  var $53=$activeB;
                  var $tobool63=((($53)) & 1);
                  var $conv64=($tobool63);
                  var $cmp65=($conv64)==0;
                  if ($cmp65) { __label__ = 61;break $for_inc144$$if_end22$16; }
                }
              } while(0);

              var $54=$bA;
              var $call69=__ZNK6b2Body8IsBulletEv($54);
              if ($call69) { var $56 = 1;__label__ = 38;; } else { __label__ = 37;; }
              $lor_end$$lor_rhs$45: do { 
                if (__label__ == 37) {

                  var $55=$typeA;
                  var $cmp70=($55)!=2;
                  var $56 = $cmp70;;
                }
              } while(0);

              var $56;
              var $frombool71=($56);
              $collideA=$frombool71;
              var $57=$bB;
              var $call73=__ZNK6b2Body8IsBulletEv($57);
              if ($call73) { var $59 = 1;__label__ = 40;; } else { __label__ = 39;; }
              $lor_end76$$lor_rhs74$48: do { 
                if (__label__ == 39) {

                  var $58=$typeB;
                  var $cmp75=($58)!=2;
                  var $59 = $cmp75;;
                }
              } while(0);

              var $59;
              var $frombool77=($59);
              $collideB=$frombool77;
              var $60=$collideA;
              var $tobool78=((($60)) & 1);
              var $conv79=($tobool78);
              var $cmp80=($conv79)==0;
              if ($cmp80) { __label__ = 41;; } else { __label__ = 42;; }
              $land_lhs_true81$$if_end86$51: do { 
                if (__label__ == 41) {

                  var $61=$collideB;
                  var $tobool82=((($61)) & 1);
                  var $conv83=($tobool82);
                  var $cmp84=($conv83)==0;
                  if ($cmp84) { __label__ = 61;break $for_inc144$$if_end22$16; }
                }
              } while(0);

              var $62=$bA;
              var $m_sweep88=$62+7;
              var $alpha089=$m_sweep88+8;
              var $63=FHEAP[$alpha089];
              $alpha087=$63;
              var $64=$bA;
              var $m_sweep90=$64+7;
              var $alpha091=$m_sweep90+8;
              var $65=FHEAP[$alpha091];
              var $66=$bB;
              var $m_sweep92=$66+7;
              var $alpha093=$m_sweep92+8;
              var $67=FHEAP[$alpha093];
              var $cmp94=($65) < ($67);
              var $68=$bB;
              var $m_sweep96=$68+7;
              var $alpha097=$m_sweep96+8;
              var $69=FHEAP[$alpha097];
              if ($cmp94) { __label__ = 43;; } else { __label__ = 44;; }
              $if_then95$$if_else100$54: do { 
                if (__label__ == 43) {

                  $alpha087=$69;
                  var $70=$bA;
                  var $m_sweep98=$70+7;
                  var $71=$alpha087;
                  __ZN7b2Sweep7AdvanceEf($m_sweep98, $71);
                  ;
                }
                else if (__label__ == 44) {

                  var $72=$bA;
                  var $m_sweep103=$72+7;
                  var $alpha0104=$m_sweep103+8;
                  var $73=FHEAP[$alpha0104];
                  var $cmp105=($69) < ($73);
                  if (!($cmp105)) { __label__ = 46;break $if_then95$$if_else100$54; }

                  var $74=$bA;
                  var $m_sweep107=$74+7;
                  var $alpha0108=$m_sweep107+8;
                  var $75=FHEAP[$alpha0108];
                  $alpha087=$75;
                  var $76=$bB;
                  var $m_sweep109=$76+7;
                  var $77=$alpha087;
                  __ZN7b2Sweep7AdvanceEf($m_sweep109, $77);
                  ;
                }
              } while(0);

              var $78=$alpha087;
              var $cmp113=($78) < 1;
              if ($cmp113) { __label__ = 48;; } else { __label__ = 47;; }
              $cond_end117$$cond_false115$59: do { 
                if (__label__ == 47) {

                  ___assert_func(__str406, 676, ___PRETTY_FUNCTION____ZN7b2World8SolveTOIERK10b2TimeStep, __str7413);
                  ;
                }
              } while(0);

              var $79=$c14;
              var $call119=__ZNK9b2Contact14GetChildIndexAEv($79);
              ;

              $indexA=$call119;
              var $80=$c14;
              var $call121=__ZNK9b2Contact14GetChildIndexBEv($80);
              ;

              $indexB=$call121;
              __ZN10b2TOIInputC1Ev($input);
              var $81=$fA;
              var $call124=__ZN9b2Fixture8GetShapeEv($81);
              ;

              var $82=$indexA;
              __ZN15b2DistanceProxy3SetEPK7b2Shapei($proxyA, $call124, $82);
              ;

              var $83=$fB;
              var $call127=__ZN9b2Fixture8GetShapeEv($83);
              ;

              var $84=$indexB;
              __ZN15b2DistanceProxy3SetEPK7b2Shapei($proxyB, $call127, $84);
              ;

              var $85=$bA;
              var $m_sweep129=$85+7;
              var $86=$m_sweep129;
              for (var mcpi_s=$86,mcpi_e=$86+9,mcpi_d=$2; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
                IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
              };
              var $87=$bB;
              var $m_sweep130=$87+7;
              var $88=$m_sweep130;
              for (var mcpi_s=$88,mcpi_e=$88+9,mcpi_d=$3; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
                IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
              };
              FHEAP[$tMax]=1;
              __Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput($output, $input);
              ;

              var $89=FHEAP[$t];
              $beta=$89;
              var $90=IHEAP[$state];
              var $cmp132=($90)==3;
              if ($cmp132) { __label__ = 56;; } else { __label__ = 57;; }
              $if_then133$$if_else136$69: do { 
                if (__label__ == 56) {

                  var $91=$alpha087;
                  var $92=$alpha087;
                  var $sub=1-($92);
                  var $93=$beta;
                  var $mul=($sub)*($93);
                  var $add=($91)+($mul);
                  var $call135=__Z5b2MinIfET_S0_S0_($add, 1);
                  $alpha=$call135;
                  ;
                }
                else if (__label__ == 57) {

                  $alpha=1;
                  ;
                }
              } while(0);

              var $94=$alpha;
              var $95=$c14;
              var $m_toi138=$95+33;
              FHEAP[$m_toi138]=$94;
              var $96=$c14;
              var $m_flags139=$96+1;
              var $97=IHEAP[$m_flags139];
              var $or=($97) | 32;
              IHEAP[$m_flags139]=$or;
              ;
            }
          } while(0);

          var $98=$alpha;
          var $99=$minAlpha;
          var $cmp141=($98) < ($99);
          if (!($cmp141)) { __label__ = 61;break $for_inc144$$if_end22$16; }

          var $100=$c14;
          $minContact=$100;
          var $101=$alpha;
          $minAlpha=$101;
          ;
        }
      } while(0);

      var $102=$c14;
      var $m_next145=$102+3;
      var $103=IHEAP[$m_next145];
      $c14=$103;
      var $25 = $103;;
    }

    var $104=$minContact;
    var $cmp147=($104)==0;
    if ($cmp147) { __label__ = 64;break $for_cond13$11; }

    var $105=$minAlpha;
    var $cmp149=0.9999988079071045 < ($105);
    if ($cmp149) { __label__ = 64;break $for_cond13$11; }

    var $106=$minContact;
    var $call155=__ZN9b2Contact11GetFixtureAEv($106);
    ;

    $fA153=$call155;
    var $107=$minContact;
    var $call158=__ZN9b2Contact11GetFixtureBEv($107);
    ;

    $fB156=$call158;
    var $108=$fA153;
    var $call161=__ZN9b2Fixture7GetBodyEv($108);
    ;

    $bA159=$call161;
    var $109=$fB156;
    var $call164=__ZN9b2Fixture7GetBodyEv($109);
    ;

    $bB162=$call164;
    var $110=$bA159;
    var $m_sweep165=$110+7;
    var $111=$m_sweep165;
    for (var mcpi_s=$111,mcpi_e=$111+9,mcpi_d=$4; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
      IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
    };
    var $112=$bB162;
    var $m_sweep166=$112+7;
    var $113=$m_sweep166;
    for (var mcpi_s=$113,mcpi_e=$113+9,mcpi_d=$5; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
      IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
    };
    var $114=$bA159;
    var $115=$minAlpha;
    __ZN6b2Body7AdvanceEf($114, $115);
    ;

    var $116=$bB162;
    var $117=$minAlpha;
    __ZN6b2Body7AdvanceEf($116, $117);
    ;

    var $118=$minContact;
    var $119=IHEAP[$m_contactListener170];
    __ZN9b2Contact6UpdateEP17b2ContactListener($118, $119);
    ;

    var $120=$minContact;
    var $m_flags172=$120+1;
    var $121=IHEAP[$m_flags172];
    var $and173=($121) & -33;
    IHEAP[$m_flags172]=$and173;
    var $122=$minContact;
    var $m_toiCount174=$122+32;
    var $123=IHEAP[$m_toiCount174];
    var $inc=($123)+1;
    IHEAP[$m_toiCount174]=$inc;
    var $124=$minContact;
    var $call176=__ZNK9b2Contact9IsEnabledEv($124);
    var $conv177=($call176);
    var $cmp178=($conv177)==0;
    if ($cmp178) { __label__ = 75;; } else { __label__ = 73;; }
    $if_then184$$lor_lhs_false179$86: do { 
      if (__label__ == 73) {

        var $125=$minContact;
        var $call181=__ZNK9b2Contact10IsTouchingEv($125);
        ;

        var $conv182=($call181);
        var $cmp183=($conv182)==0;
        if ($cmp183) { __label__ = 75;break $if_then184$$lor_lhs_false179$86; }

        var $133=$bA159;
        __ZN6b2Body8SetAwakeEb($133, 1);
        ;

        var $134=$bB162;
        __ZN6b2Body8SetAwakeEb($134, 1);
        ;

        __ZN8b2Island5ClearEv($island);
        var $135=$bA159;
        __ZN8b2Island3AddEP6b2Body($island, $135);
        ;

        var $136=$bB162;
        __ZN8b2Island3AddEP6b2Body($island, $136);
        ;

        var $137=$minContact;
        __ZN8b2Island3AddEP9b2Contact($island, $137);
        ;

        var $138=$bA159;
        var $m_flags197=$138+1;
        var $139=IHEAP[$m_flags197];
        var $conv198=($139);
        var $or199=($conv198) | 1;
        var $conv200=((($or199)) & 65535);
        IHEAP[$m_flags197]=$conv200;
        var $140=$bB162;
        var $m_flags201=$140+1;
        var $141=IHEAP[$m_flags201];
        var $conv202=($141);
        var $or203=($conv202) | 1;
        var $conv204=((($or203)) & 65535);
        IHEAP[$m_flags201]=$conv204;
        var $142=$minContact;
        var $m_flags205=$142+1;
        var $143=IHEAP[$m_flags205];
        var $or206=($143) | 1;
        IHEAP[$m_flags205]=$or206;
        var $144=$bA159;
        IHEAP[$arrayinit_begin]=$144;
        var $145=$bB162;
        IHEAP[$arrayinit_element]=$145;
        $i=0;
        var $146 = 0;;
        $for_cond207$95: while(1) { 

          var $146;
          var $cmp208=($146) < 2;
          if (!($cmp208)) { __label__ = 110;break $for_cond207$95; }

          var $147=$i;
          var $arrayidx=$bodies+$147;
          var $148=IHEAP[$arrayidx];
          $body=$148;
          var $149=$body;
          var $m_type210=$149;
          var $150=IHEAP[$m_type210];
          var $cmp211=($150)==2;
          if ($cmp211) { __label__ = 85;; } else { __label__ = 109;; }
          $if_then212$$for_inc303$98: do { 
            if (__label__ == 85) {

              var $151=$body;
              var $m_contactList213=$151+28;
              var $152=IHEAP[$m_contactList213];
              $ce=$152;
              var $153 = $152;;
              $for_cond214$100: while(1) { 

                var $153;
                var $tobool215=($153)!=0;
                if (!($tobool215)) { __label__ = 109;break $if_then212$$for_inc303$98; }

                var $154=IHEAP[$m_bodyCount];
                var $155=IHEAP[$m_bodyCapacity];
                var $cmp217=($154)==($155);
                if ($cmp217) { __label__ = 109;break $if_then212$$for_inc303$98; }

                var $156=IHEAP[$m_contactCount];
                var $157=IHEAP[$m_contactCapacity];
                var $cmp220=($156)==($157);
                if ($cmp220) { __label__ = 109;break $if_then212$$for_inc303$98; }

                var $158=$ce;
                var $contact223=$158+1;
                var $159=IHEAP[$contact223];
                $contact=$159;
                var $160=$contact;
                var $m_flags224=$160+1;
                var $161=IHEAP[$m_flags224];
                var $and225=($161) & 1;
                var $tobool226=($and225)!=0;
                if ($tobool226) { __label__ = 108;; } else { __label__ = 90;; }
                $for_inc300$$if_end228$105: do { 
                  if (__label__ == 90) {

                    var $162=$ce;
                    var $other229=$162;
                    var $163=IHEAP[$other229];
                    $other=$163;
                    var $164=$other;
                    var $m_type230=$164;
                    var $165=IHEAP[$m_type230];
                    var $cmp231=($165)==2;
                    if ($cmp231) { __label__ = 91;; } else { __label__ = 93;; }
                    $land_lhs_true232$$if_end243$107: do { 
                      if (__label__ == 91) {

                        var $166=$body;
                        var $call234=__ZNK6b2Body8IsBulletEv($166);
                        var $conv235=($call234);
                        var $cmp236=($conv235)==0;
                        if (!($cmp236)) { __label__ = 93;break $land_lhs_true232$$if_end243$107; }

                        var $167=$other;
                        var $call239=__ZNK6b2Body8IsBulletEv($167);
                        var $conv240=($call239);
                        var $cmp241=($conv240)==0;
                        if ($cmp241) { __label__ = 108;break $for_inc300$$if_end228$105; }
                      }
                    } while(0);

                    var $168=$contact;
                    var $m_fixtureA=$168+12;
                    var $169=IHEAP[$m_fixtureA];
                    var $m_isSensor=$169+11;
                    var $170=IHEAP[$m_isSensor];
                    var $tobool244=((($170)) & 1);
                    var $frombool245=($tobool244);
                    $sensorA=$frombool245;
                    var $171=$contact;
                    var $m_fixtureB=$171+13;
                    var $172=IHEAP[$m_fixtureB];
                    var $m_isSensor246=$172+11;
                    var $173=IHEAP[$m_isSensor246];
                    var $tobool247=((($173)) & 1);
                    var $frombool248=($tobool247);
                    $sensorB=$frombool248;
                    var $174=$sensorA;
                    var $tobool249=((($174)) & 1);
                    if ($tobool249) { __label__ = 108;break $for_inc300$$if_end228$105; }

                    var $175=$sensorB;
                    var $tobool251=((($175)) & 1);
                    if ($tobool251) { __label__ = 108;break $for_inc300$$if_end228$105; }

                    var $176=$other;
                    var $m_sweep254=$176+7;
                    var $177=$m_sweep254;
                    for (var mcpi_s=$177,mcpi_e=$177+9,mcpi_d=$8; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
                      IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
                    };
                    var $178=$other;
                    var $m_flags255=$178+1;
                    var $179=IHEAP[$m_flags255];
                    var $conv256=($179);
                    var $and257=($conv256) & 1;
                    var $cmp258=($and257)==0;
                    if ($cmp258) { __label__ = 96;; } else { __label__ = 97;; }
                    $if_then259$$if_end261$113: do { 
                      if (__label__ == 96) {

                        var $180=$other;
                        var $181=$minAlpha;
                        __ZN6b2Body7AdvanceEf($180, $181);
                        ;
                      }
                    } while(0);

                    var $182=$contact;
                    var $183=IHEAP[$m_contactListener263];
                    __ZN9b2Contact6UpdateEP17b2ContactListener($182, $183);
                    ;

                    var $184=$contact;
                    var $call266=__ZNK9b2Contact9IsEnabledEv($184);
                    var $conv267=($call266);
                    var $cmp268=($conv267)==0;
                    if ($cmp268) { __label__ = 99;; } else { __label__ = 100;; }
                    $if_then269$$if_end272$117: do { 
                      if (__label__ == 99) {

                        var $185=$other;
                        var $m_sweep270=$185+7;
                        var $186=$m_sweep270;
                        for (var mcpi_s=$9,mcpi_e=$9+9,mcpi_d=$186; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
                          IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
                        };
                        var $187=$other;
                        __ZN6b2Body20SynchronizeTransformEv($187);
                        ;
                      }
                      else if (__label__ == 100) {

                        var $188=$contact;
                        var $call274=__ZNK9b2Contact10IsTouchingEv($188);
                        ;

                        var $conv275=($call274);
                        var $cmp276=($conv275)==0;
                        if ($cmp276) { __label__ = 102;; } else { __label__ = 103;; }
                        $if_then277$$if_end280$121: do { 
                          if (__label__ == 102) {

                            var $189=$other;
                            var $m_sweep278=$189+7;
                            var $190=$m_sweep278;
                            for (var mcpi_s=$10,mcpi_e=$10+9,mcpi_d=$190; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
                              IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
                            };
                            var $191=$other;
                            __ZN6b2Body20SynchronizeTransformEv($191);
                            ;
                          }
                          else if (__label__ == 103) {

                            var $192=$contact;
                            var $m_flags281=$192+1;
                            var $193=IHEAP[$m_flags281];
                            var $or282=($193) | 1;
                            IHEAP[$m_flags281]=$or282;
                            var $194=$contact;
                            __ZN8b2Island3AddEP9b2Contact($island, $194);
                            ;

                            var $195=$other;
                            var $m_flags284=$195+1;
                            var $196=IHEAP[$m_flags284];
                            var $conv285=($196);
                            var $and286=($conv285) & 1;
                            var $tobool287=($and286)!=0;
                            if ($tobool287) { __label__ = 108;break $for_inc300$$if_end228$105; }

                            var $197=$other;
                            var $m_flags290=$197+1;
                            var $198=IHEAP[$m_flags290];
                            var $conv291=($198);
                            var $or292=($conv291) | 1;
                            var $conv293=((($or292)) & 65535);
                            IHEAP[$m_flags290]=$conv293;
                            var $199=$other;
                            var $m_type294=$199;
                            var $200=IHEAP[$m_type294];
                            var $cmp295=($200)!=0;
                            if ($cmp295) { __label__ = 106;; } else { __label__ = 107;; }
                            $if_then296$$if_end298$126: do { 
                              if (__label__ == 106) {

                                var $201=$other;
                                __ZN6b2Body8SetAwakeEb($201, 1);
                                ;
                              }
                            } while(0);

                            var $202=$other;
                            __ZN8b2Island3AddEP6b2Body($island, $202);
                            ;
                          }
                        } while(0);
                      }
                    } while(0);
                  }
                } while(0);

                var $203=$ce;
                var $next=$203+3;
                var $204=IHEAP[$next];
                $ce=$204;
                var $153 = $204;;
              }
            }
          } while(0);

          var $205=$i;
          var $inc304=($205)+1;
          $i=$inc304;
          var $146 = $inc304;;
        }

        var $206=$minAlpha;
        var $sub306=1-($206);
        var $207=$step_addr;
        var $dt=$207;
        var $208=FHEAP[$dt];
        var $mul307=($sub306)*($208);
        FHEAP[$dt308]=$mul307;
        var $209=FHEAP[$dt309];
        var $div=1/($209);
        FHEAP[$inv_dt]=$div;
        FHEAP[$dtRatio]=1;
        IHEAP[$positionIterations]=20;
        var $210=$step_addr;
        var $velocityIterations=$210+3;
        var $211=IHEAP[$velocityIterations];
        IHEAP[$velocityIterations310]=$211;
        IHEAP[$warmStarting]=0;
        var $212=$bA159;
        var $m_islandIndex=$212+2;
        var $213=IHEAP[$m_islandIndex];
        var $214=$bB162;
        var $m_islandIndex311=$214+2;
        var $215=IHEAP[$m_islandIndex311];
        __ZN8b2Island8SolveTOIERK10b2TimeStepii($island, $subStep, $213, $215);
        ;

        $i313=0;
        ;
        $for_cond314$133: while(1) { 

          var $216=$i313;
          var $217=IHEAP[$m_bodyCount315];
          var $cmp316=($216) < ($217);
          if (!($cmp316)) { __label__ = 118;break $for_cond314$133; }

          var $218=$i313;
          var $219=IHEAP[$m_bodies];
          var $arrayidx319=$219+$218;
          var $220=IHEAP[$arrayidx319];
          $body318=$220;
          var $221=$body318;
          var $m_flags320=$221+1;
          var $222=IHEAP[$m_flags320];
          var $conv321=($222);
          var $and322=($conv321) & -2;
          var $conv323=((($and322)) & 65535);
          IHEAP[$m_flags320]=$conv323;
          var $223=$body318;
          var $m_type324=$223;
          var $224=IHEAP[$m_type324];
          var $cmp325=($224)!=2;
          if ($cmp325) { __label__ = 117;; } else { __label__ = 114;; }
          $for_inc340$$if_end327$136: do { 
            if (__label__ == 114) {

              var $225=$body318;
              __ZN6b2Body19SynchronizeFixturesEv($225);
              ;

              var $226=$body318;
              var $m_contactList330=$226+28;
              var $227=IHEAP[$m_contactList330];
              $ce329=$227;
              var $tobool3323=($227)!=0;
              if (!($tobool3323)) { __label__ = 117;break $for_inc340$$if_end327$136; }
              $for_body333$139: while(1) { 

                var $228=$ce329;
                var $contact334=$228+1;
                var $229=IHEAP[$contact334];
                var $m_flags335=$229+1;
                var $230=IHEAP[$m_flags335];
                var $and336=($230) & -34;
                IHEAP[$m_flags335]=$and336;
                var $231=$ce329;
                var $next338=$231+3;
                var $232=IHEAP[$next338];
                $ce329=$232;
                var $tobool332=($232)!=0;
                if (!($tobool332)) { __label__ = 117;break $for_inc340$$if_end327$136; }
              }
            }
          } while(0);

          var $233=$i313;
          var $inc341=($233)+1;
          $i313=$inc341;
          ;
        }

        __ZN16b2ContactManager15FindNewContactsEv($m_contactManager343);
        ;

        var $234=IHEAP[$m_subStepping];
        var $tobool345=((($234)) & 1);
        if ($tobool345) { __label__ = 120;break $for_cond13$11; } else { __label__ = 6;continue $for_cond13$11; }
      }
    } while(0);

    var $126=$minContact;
    __ZN9b2Contact10SetEnabledEb($126, 0);
    var $127=$bA159;
    var $m_sweep186=$127+7;
    var $128=$m_sweep186;
    for (var mcpi_s=$6,mcpi_e=$6+9,mcpi_d=$128; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
      IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
    };
    var $129=$bB162;
    var $m_sweep187=$129+7;
    var $130=$m_sweep187;
    for (var mcpi_s=$7,mcpi_e=$7+9,mcpi_d=$130; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
      IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
    };
    var $131=$bA159;
    __ZN6b2Body20SynchronizeTransformEv($131);
    ;

    var $132=$bB162;
    __ZN6b2Body20SynchronizeTransformEv($132);
    ;
  }
  $if_then150$$if_then346$146: do { 
    if (__label__ == 64) {

      var $m_stepComplete151=$this1+102551;
      IHEAP[$m_stepComplete151]=1;
      ;
    }
    else if (__label__ == 120) {

      var $m_stepComplete347=$this1+102551;
      IHEAP[$m_stepComplete347]=0;
      ;
    }
  } while(0);

  __ZN8b2IslandD2Ev($island);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN7b2World8SolveTOIERK10b2TimeStep["X"]=1;

function __ZN10b2TOIInputC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN10b2TOIInputC2Ev($this1);
  ;
  return;
  return;
}


function __ZN14b2RayCastInputC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN14b2RayCastInputC2Ev($this1);
  ;
  return;
  return;
}


function __ZNK6b2Body8IsBulletEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_flags=$this1+1;
  var $0=IHEAP[$m_flags];
  var $conv=($0);
  var $and=($conv) & 8;
  var $cmp=($and)==8;
  ;
  return $cmp;
  return null;
}


function __ZN7b2Sweep7AdvanceEf($this, $alpha) {
  var __stackBase__  = STACKTOP; STACKTOP += 6;
  var __label__;

  var $this_addr;
  var $alpha_addr;
  var $beta;
  var $ref_tmp=__stackBase__;
  var $ref_tmp5=__stackBase__+2;
  var $ref_tmp8=__stackBase__+4;
  $this_addr=$this;
  $alpha_addr=$alpha;
  var $this1=$this_addr;
  var $alpha0=$this1+8;
  var $0=FHEAP[$alpha0];
  var $cmp=($0) < 1;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$3: do { 
    if (__label__ == 1) {

      ___assert_func(__str24433, 715, ___PRETTY_FUNCTION____ZN7b2Sweep7AdvanceEf, __str7413);
      ;
    }
  } while(0);

  var $1=$alpha_addr;
  var $alpha02=$this1+8;
  var $2=FHEAP[$alpha02];
  var $sub=($1)-($2);
  var $alpha03=$this1+8;
  var $3=FHEAP[$alpha03];
  var $sub4=1-($3);
  var $div=($sub)/($sub4);
  $beta=$div;
  var $c0=$this1+2;
  var $4=$beta;
  var $sub6=1-($4);
  var $c07=$this1+2;
  __ZmlfRK6b2Vec2($ref_tmp5, $sub6, $c07);
  var $5=$beta;
  var $c=$this1+4;
  __ZmlfRK6b2Vec2($ref_tmp8, $5, $c);
  __ZplRK6b2Vec2S1_($ref_tmp, $ref_tmp5, $ref_tmp8);
  var $6=$c0;
  var $7=$ref_tmp;
  IHEAP[$6]=IHEAP[$7]; FHEAP[$6]=FHEAP[$7]; ; IHEAP[$6+1]=IHEAP[$7+1]; FHEAP[$6+1]=FHEAP[$7+1]; ;
  var $8=$beta;
  var $sub9=1-($8);
  var $a0=$this1+6;
  var $9=FHEAP[$a0];
  var $mul=($sub9)*($9);
  var $10=$beta;
  var $a=$this1+7;
  var $11=FHEAP[$a];
  var $mul10=($10)*($11);
  var $add=($mul)+($mul10);
  var $a011=$this1+6;
  FHEAP[$a011]=$add;
  var $12=$alpha_addr;
  var $alpha012=$this1+8;
  FHEAP[$alpha012]=$12;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN7b2Sweep7AdvanceEf["X"]=1;

function __ZN6b2Body7AdvanceEf($this, $alpha) {
  var __stackBase__  = STACKTOP; STACKTOP += 4;
  var __label__;

  var $this_addr;
  var $alpha_addr;
  var $ref_tmp=__stackBase__;
  var $ref_tmp11=__stackBase__+2;
  $this_addr=$this;
  $alpha_addr=$alpha;
  var $this1=$this_addr;
  var $m_sweep=$this1+7;
  var $0=$alpha_addr;
  __ZN7b2Sweep7AdvanceEf($m_sweep, $0);
  var $m_sweep2=$this1+7;
  var $c=$m_sweep2+4;
  var $m_sweep3=$this1+7;
  var $c0=$m_sweep3+2;
  var $1=$c;
  var $2=$c0;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ;
  var $m_sweep4=$this1+7;
  var $a0=$m_sweep4+6;
  var $3=FHEAP[$a0];
  var $m_sweep5=$this1+7;
  var $a=$m_sweep5+7;
  FHEAP[$a]=$3;
  var $m_xf=$this1+3;
  var $q=$m_xf+2;
  var $m_sweep6=$this1+7;
  var $a7=$m_sweep6+7;
  var $4=FHEAP[$a7];
  __ZN5b2Rot3SetEf($q, $4);
  var $m_xf8=$this1+3;
  var $p=$m_xf8;
  var $m_sweep9=$this1+7;
  var $c10=$m_sweep9+4;
  var $m_xf12=$this1+3;
  var $q13=$m_xf12+2;
  var $m_sweep14=$this1+7;
  var $localCenter=$m_sweep14;
  __Z5b2MulRK5b2RotRK6b2Vec2($ref_tmp11, $q13, $localCenter);
  __ZmiRK6b2Vec2S1_($ref_tmp, $c10, $ref_tmp11);
  var $5=$p;
  var $6=$ref_tmp;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN9b2Contact10SetEnabledEb($this, $flag) {
  ;
  var __label__;

  var $this_addr;
  var $flag_addr;
  $this_addr=$this;
  var $frombool=($flag);
  $flag_addr=$frombool;
  var $this1=$this_addr;
  var $0=$flag_addr;
  var $tobool=((($0)) & 1);
  var $m_flags=$this1+1;
  var $1=IHEAP[$m_flags];
  if ($tobool) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_else$9: do { 
    if (__label__ == 1) {

      var $or=($1) | 4;
      IHEAP[$m_flags]=$or;
      ;
    }
    else if (__label__ == 2) {

      var $and=($1) & -5;
      IHEAP[$m_flags]=$and;
      ;
    }
  } while(0);

  ;
  return;
  return;
}


function __ZNK7b2World9QueryAABBEP15b2QueryCallbackRK6b2AABB($this, $callback, $aabb) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $callback_addr;
  var $aabb_addr;
  var $wrapper=__stackBase__;
  $this_addr=$this;
  $callback_addr=$callback;
  $aabb_addr=$aabb;
  var $this1=$this_addr;
  var $m_contactManager=$this1+102518;
  var $m_broadPhase=$m_contactManager;
  var $broadPhase=$wrapper;
  IHEAP[$broadPhase]=$m_broadPhase;
  var $0=$callback_addr;
  var $callback2=$wrapper+1;
  IHEAP[$callback2]=$0;
  var $m_contactManager3=$this1+102518;
  var $m_broadPhase4=$m_contactManager3;
  var $1=$aabb_addr;
  __ZNK12b2BroadPhase5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($m_broadPhase4, $wrapper, $1);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK12b2BroadPhase5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($this, $callback, $aabb) {
  ;
  var __label__;

  var $this_addr;
  var $callback_addr;
  var $aabb_addr;
  $this_addr=$this;
  $callback_addr=$callback;
  $aabb_addr=$aabb;
  var $this1=$this_addr;
  var $m_tree=$this1;
  var $0=$callback_addr;
  var $1=$aabb_addr;
  __ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($m_tree, $0, $1);
  ;
  return;
  return;
}


function __ZNK7b2World7RayCastEP17b2RayCastCallbackRK6b2Vec2S4_($this, $callback, $point1, $point2) {
  var __stackBase__  = STACKTOP; STACKTOP += 7;
  var __label__;

  var $this_addr;
  var $callback_addr;
  var $point1_addr;
  var $point2_addr;
  var $wrapper=__stackBase__;
  var $input=__stackBase__+2;
  $this_addr=$this;
  $callback_addr=$callback;
  $point1_addr=$point1;
  $point2_addr=$point2;
  var $this1=$this_addr;
  var $m_contactManager=$this1+102518;
  var $m_broadPhase=$m_contactManager;
  var $broadPhase=$wrapper;
  IHEAP[$broadPhase]=$m_broadPhase;
  var $0=$callback_addr;
  var $callback2=$wrapper+1;
  IHEAP[$callback2]=$0;
  __ZN14b2RayCastInputC1Ev($input);
  var $maxFraction=$input+4;
  FHEAP[$maxFraction]=1;
  var $p1=$input;
  var $1=$point1_addr;
  var $2=$p1;
  var $3=$1;
  IHEAP[$2]=IHEAP[$3]; FHEAP[$2]=FHEAP[$3]; ; IHEAP[$2+1]=IHEAP[$3+1]; FHEAP[$2+1]=FHEAP[$3+1]; ;
  var $p2=$input+2;
  var $4=$point2_addr;
  var $5=$p2;
  var $6=$4;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $m_contactManager3=$this1+102518;
  var $m_broadPhase4=$m_contactManager3;
  __ZNK12b2BroadPhase7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput($m_broadPhase4, $wrapper, $input);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK12b2BroadPhase7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput($this, $callback, $input) {
  ;
  var __label__;

  var $this_addr;
  var $callback_addr;
  var $input_addr;
  $this_addr=$this;
  $callback_addr=$callback;
  $input_addr=$input;
  var $this1=$this_addr;
  var $m_tree=$this1;
  var $0=$callback_addr;
  var $1=$input_addr;
  __ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput($m_tree, $0, $1);
  ;
  return;
  return;
}


function __ZN7b2World4StepEfii($this, $dt, $velocityIterations, $positionIterations) {
  var __stackBase__  = STACKTOP; STACKTOP += 14;
  var __label__;

  var $this_addr;
  var $dt_addr;
  var $velocityIterations_addr;
  var $positionIterations_addr;
  var $stepTimer=__stackBase__;
  var $step=__stackBase__+2;
  var $timer=__stackBase__+8;
  var $timer17=__stackBase__+10;
  var $timer26=__stackBase__+12;
  $this_addr=$this;
  $dt_addr=$dt;
  $velocityIterations_addr=$velocityIterations;
  $positionIterations_addr=$positionIterations;
  var $this1=$this_addr;
  __ZN7b2TimerC2Ev($stepTimer);
  var $m_flags=$this1+102517;
  var $0=IHEAP[$m_flags];
  var $and=($0) & 1;
  var $tobool=($and)!=0;
  if ($tobool) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$14: do { 
    if (__label__ == 1) {

      var $m_contactManager=$this1+102518;
      __ZN16b2ContactManager15FindNewContactsEv($m_contactManager);
      var $m_flags2=$this1+102517;
      var $1=IHEAP[$m_flags2];
      var $and3=($1) & -2;
      IHEAP[$m_flags2]=$and3;
      ;
    }
  } while(0);

  var $m_flags4=$this1+102517;
  var $2=IHEAP[$m_flags4];
  var $or=($2) | 2;
  IHEAP[$m_flags4]=$or;
  var $3=$dt_addr;
  var $dt5=$step;
  FHEAP[$dt5]=$3;
  var $4=$velocityIterations_addr;
  var $velocityIterations6=$step+3;
  IHEAP[$velocityIterations6]=$4;
  var $5=$positionIterations_addr;
  var $positionIterations7=$step+4;
  IHEAP[$positionIterations7]=$5;
  var $6=$dt_addr;
  var $cmp=($6) > 0;
  if ($cmp) { __label__ = 3;; } else { __label__ = 4;; }
  $if_then8$$if_else$17: do { 
    if (__label__ == 3) {

      var $7=$dt_addr;
      var $div=1/($7);
      var $inv_dt=$step+1;
      FHEAP[$inv_dt]=$div;
      ;
    }
    else if (__label__ == 4) {

      var $inv_dt9=$step+1;
      FHEAP[$inv_dt9]=0;
      ;
    }
  } while(0);

  var $m_inv_dt0=$this1+102547;
  var $8=FHEAP[$m_inv_dt0];
  var $9=$dt_addr;
  var $mul=($8)*($9);
  var $dtRatio=$step+2;
  FHEAP[$dtRatio]=$mul;
  var $m_warmStarting=$this1+102548;
  var $10=IHEAP[$m_warmStarting];
  var $tobool11=((($10)) & 1);
  var $warmStarting=$step+5;
  var $frombool=($tobool11);
  IHEAP[$warmStarting]=$frombool;
  __ZN7b2TimerC2Ev($timer);
  var $m_contactManager12=$this1+102518;
  __ZN16b2ContactManager7CollideEv($m_contactManager12);
  var $call=__ZNK7b2Timer15GetMillisecondsEv($timer);
  var $m_profile=$this1+102552;
  var $collide=$m_profile+1;
  FHEAP[$collide]=$call;
  var $m_stepComplete=$this1+102551;
  var $11=IHEAP[$m_stepComplete];
  var $tobool13=((($11)) & 1);
  if ($tobool13) { __label__ = 6;; } else { __label__ = 8;; }
  $land_lhs_true$$if_end20$21: do { 
    if (__label__ == 6) {

      var $dt14=$step;
      var $12=FHEAP[$dt14];
      var $cmp15=($12) > 0;
      if (!($cmp15)) { __label__ = 8;break $land_lhs_true$$if_end20$21; }

      __ZN7b2TimerC2Ev($timer17);
      __ZN7b2World5SolveERK10b2TimeStep($this1, $step);
      var $call18=__ZNK7b2Timer15GetMillisecondsEv($timer17);
      var $m_profile19=$this1+102552;
      var $solve=$m_profile19+2;
      FHEAP[$solve]=$call18;
      ;
    }
  } while(0);

  var $m_continuousPhysics=$this1+102549;
  var $13=IHEAP[$m_continuousPhysics];
  var $tobool21=((($13)) & 1);
  if ($tobool21) { __label__ = 9;; } else { __label__ = 11;; }
  $land_lhs_true22$$if_end29$25: do { 
    if (__label__ == 9) {

      var $dt23=$step;
      var $14=FHEAP[$dt23];
      var $cmp24=($14) > 0;
      if (!($cmp24)) { __label__ = 11;break $land_lhs_true22$$if_end29$25; }

      __ZN7b2TimerC2Ev($timer26);
      __ZN7b2World8SolveTOIERK10b2TimeStep($this1, $step);
      var $call27=__ZNK7b2Timer15GetMillisecondsEv($timer26);
      var $m_profile28=$this1+102552;
      var $solveTOI=$m_profile28+7;
      FHEAP[$solveTOI]=$call27;
      ;
    }
  } while(0);

  var $dt30=$step;
  var $15=FHEAP[$dt30];
  var $cmp31=($15) > 0;
  if ($cmp31) { __label__ = 12;; } else { __label__ = 13;; }
  $if_then32$$if_end35$29: do { 
    if (__label__ == 12) {

      var $inv_dt33=$step+1;
      var $16=FHEAP[$inv_dt33];
      var $m_inv_dt034=$this1+102547;
      FHEAP[$m_inv_dt034]=$16;
      ;
    }
  } while(0);

  var $m_flags36=$this1+102517;
  var $17=IHEAP[$m_flags36];
  var $and37=($17) & 4;
  var $tobool38=($and37)!=0;
  if ($tobool38) { __label__ = 14;; } else { __label__ = 15;; }
  $if_then39$$if_end40$32: do { 
    if (__label__ == 14) {

      __ZN7b2World11ClearForcesEv($this1);
      ;
    }
  } while(0);

  var $m_flags41=$this1+102517;
  var $18=IHEAP[$m_flags41];
  var $and42=($18) & -3;
  IHEAP[$m_flags41]=$and42;
  var $call43=__ZNK7b2Timer15GetMillisecondsEv($stepTimer);
  var $m_profile44=$this1+102552;
  var $step45=$m_profile44;
  FHEAP[$step45]=$call43;
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN7b2World4StepEfii["X"]=1;

function __ZN7b2World11ClearForcesEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $body;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_bodyList=$this1+102538;
  var $0=IHEAP[$m_bodyList];
  $body=$0;
  var $tobool1=($0)!=0;
  if ($tobool1) { __label__ = 1;; } else { __label__ = 2;; }
  $for_body$$for_end$36: do { 
    if (__label__ == 1) {
      $for_body$37: while(1) { 

        var $1=$body;
        var $m_force=$1+19;
        __ZN6b2Vec27SetZeroEv($m_force);
        var $2=$body;
        var $m_torque=$2+21;
        FHEAP[$m_torque]=0;
        var $3=$body;
        var $call=__ZN6b2Body7GetNextEv($3);
        $body=$call;
        var $tobool=($call)!=0;
        if (!($tobool)) { __label__ = 2;break $for_body$$for_end$36; }
      }
    }
  } while(0);

  ;
  return;
  return;
}


function __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this, $fixture, $xf, $color) {
  var __stackBase__  = STACKTOP; STACKTOP += 32;
  var __label__;

  var $this_addr;
  var $fixture_addr;
  var $xf_addr;
  var $color_addr;
  var $circle;
  var $center=__stackBase__;
  var $radius;
  var $axis=__stackBase__+2;
  var $ref_tmp=__stackBase__+4;
  var $edge;
  var $v1=__stackBase__+6;
  var $v2=__stackBase__+8;
  var $chain;
  var $count;
  var $vertices;
  var $v110=__stackBase__+10;
  var $i;
  var $v211=__stackBase__+12;
  var $poly;
  var $vertexCount;
  var $vertices22=__stackBase__+14;
  var $i23;
  var $ref_tmp28=__stackBase__+30;
  $this_addr=$this;
  $fixture_addr=$fixture;
  $xf_addr=$xf;
  $color_addr=$color;
  var $this1=$this_addr;
  var $0=$fixture_addr;
  var $call=__ZNK9b2Fixture7GetTypeEv($0);
  if ($call == 0) {
    __label__ = 1;;
  }
  else if ($call == 1) {
    __label__ = 2;;
  }
  else if ($call == 3) {
    __label__ = 3;;
  }
  else if ($call == 2) {
    __label__ = 6;;
  }
  else {
  __label__ = 12;;
  }
  
  $sw_epilog$$sw_bb$$sw_bb3$$sw_bb8$$sw_bb19$46: do { 
    if (__label__ == 1) {

      var $1=$fixture_addr;
      var $call2=__ZN9b2Fixture8GetShapeEv($1);
      var $2=$call2;
      $circle=$2;
      var $3=$xf_addr;
      var $4=$circle;
      var $m_p=$4+3;
      __Z5b2MulRK11b2TransformRK6b2Vec2($center, $3, $m_p);
      var $5=$circle;
      var $6=$5;
      var $m_radius=$6+2;
      var $7=FHEAP[$m_radius];
      $radius=$7;
      var $8=$xf_addr;
      var $q=$8+2;
      __ZN6b2Vec2C1Eff($ref_tmp, 1, 0);
      __Z5b2MulRK5b2RotRK6b2Vec2($axis, $q, $ref_tmp);
      var $m_debugDraw=$this1+102546;
      var $9=IHEAP[$m_debugDraw];
      var $10=$9;
      var $vtable=IHEAP[$10];
      var $vfn=$vtable+5;
      var $11=IHEAP[$vfn];
      var $12=$radius;
      var $13=$color_addr;
      FUNCTION_TABLE[$11]($9, $center, $12, $axis, $13);
      ;
    }
    else if (__label__ == 2) {

      var $14=$fixture_addr;
      var $call4=__ZN9b2Fixture8GetShapeEv($14);
      var $15=$call4;
      $edge=$15;
      var $16=$xf_addr;
      var $17=$edge;
      var $m_vertex1=$17+3;
      __Z5b2MulRK11b2TransformRK6b2Vec2($v1, $16, $m_vertex1);
      var $18=$xf_addr;
      var $19=$edge;
      var $m_vertex2=$19+5;
      __Z5b2MulRK11b2TransformRK6b2Vec2($v2, $18, $m_vertex2);
      var $m_debugDraw5=$this1+102546;
      var $20=IHEAP[$m_debugDraw5];
      var $21=$20;
      var $vtable6=IHEAP[$21];
      var $vfn7=$vtable6+6;
      var $22=IHEAP[$vfn7];
      var $23=$color_addr;
      FUNCTION_TABLE[$22]($20, $v1, $v2, $23);
      ;
    }
    else if (__label__ == 3) {

      var $24=$fixture_addr;
      var $call9=__ZN9b2Fixture8GetShapeEv($24);
      var $25=$call9;
      $chain=$25;
      var $26=$chain;
      var $m_count=$26+4;
      var $27=IHEAP[$m_count];
      $count=$27;
      var $28=$chain;
      var $m_vertices=$28+3;
      var $29=IHEAP[$m_vertices];
      $vertices=$29;
      var $30=$xf_addr;
      var $31=$vertices;
      var $arrayidx=$31;
      __Z5b2MulRK11b2TransformRK6b2Vec2($v110, $30, $arrayidx);
      $i=1;
      var $32=$i;
      var $33=$count;
      var $cmp2=($32) < ($33);
      if (!($cmp2)) { __label__ = 12;break $sw_epilog$$sw_bb$$sw_bb3$$sw_bb8$$sw_bb19$46; }

      var $m_debugDraw13=$this1+102546;
      var $m_debugDraw16=$this1+102546;
      var $34=$v110;
      var $35=$v211;
      ;
      $for_body$51: while(1) { 

        var $36=$xf_addr;
        var $37=$i;
        var $38=$vertices;
        var $arrayidx12=$38+($37<<1);
        __Z5b2MulRK11b2TransformRK6b2Vec2($v211, $36, $arrayidx12);
        var $39=IHEAP[$m_debugDraw13];
        var $40=$39;
        var $vtable14=IHEAP[$40];
        var $vfn15=$vtable14+6;
        var $41=IHEAP[$vfn15];
        var $42=$color_addr;
        FUNCTION_TABLE[$41]($39, $v110, $v211, $42);
        var $43=IHEAP[$m_debugDraw16];
        var $44=$43;
        var $vtable17=IHEAP[$44];
        var $vfn18=$vtable17+4;
        var $45=IHEAP[$vfn18];
        var $46=$color_addr;
        FUNCTION_TABLE[$45]($43, $v110, 0.05000000074505806, $46);
        IHEAP[$34]=IHEAP[$35]; FHEAP[$34]=FHEAP[$35]; ; IHEAP[$34+1]=IHEAP[$35+1]; FHEAP[$34+1]=FHEAP[$35+1]; ;
        var $47=$i;
        var $inc=($47)+1;
        $i=$inc;
        var $48=$i;
        var $49=$count;
        var $cmp=($48) < ($49);
        if (!($cmp)) { __label__ = 12;break $sw_epilog$$sw_bb$$sw_bb3$$sw_bb8$$sw_bb19$46; }
      }
    }
    else if (__label__ == 6) {

      var $50=$fixture_addr;
      var $call20=__ZN9b2Fixture8GetShapeEv($50);
      var $51=$call20;
      $poly=$51;
      var $52=$poly;
      var $m_vertexCount=$52+37;
      var $53=IHEAP[$m_vertexCount];
      $vertexCount=$53;
      var $54=$vertexCount;
      var $cmp21=($54) <= 8;
      if ($cmp21) { __label__ = 8;; } else { __label__ = 7;; }
      $arrayctor_loop$$cond_false$54: do { 
        if (__label__ == 7) {

          ___assert_func(__str406, 1077, ___PRETTY_FUNCTION____ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color, __str8414);
          ;
        }
      } while(0);

      var $array_begin=$vertices22;
      __ZN6b2Vec2C1Ev($array_begin);
      var $arrayctor_next=$array_begin+2;
      __ZN6b2Vec2C1Ev($arrayctor_next);
      var $arrayctor_next_1=$arrayctor_next+2;
      __ZN6b2Vec2C1Ev($arrayctor_next_1);
      var $arrayctor_next_2=$arrayctor_next_1+2;
      __ZN6b2Vec2C1Ev($arrayctor_next_2);
      var $arrayctor_next_3=$arrayctor_next_2+2;
      __ZN6b2Vec2C1Ev($arrayctor_next_3);
      var $arrayctor_next_4=$arrayctor_next_3+2;
      __ZN6b2Vec2C1Ev($arrayctor_next_4);
      var $arrayctor_next_5=$arrayctor_next_4+2;
      __ZN6b2Vec2C1Ev($arrayctor_next_5);
      var $arrayctor_next_6=$arrayctor_next_5+2;
      __ZN6b2Vec2C1Ev($arrayctor_next_6);
      $i23=0;
      var $55=$i23;
      var $56=$vertexCount;
      var $cmp251=($55) < ($56);
      if ($cmp251) { __label__ = 9;; } else { __label__ = 11;; }
      $for_body26_lr_ph$$for_end33$57: do { 
        if (__label__ == 9) {

          var $57=$ref_tmp28;
          ;
          $for_body26$59: while(1) { 

            var $58=$i23;
            var $arrayidx27=$vertices22+($58<<1);
            var $59=$xf_addr;
            var $60=$i23;
            var $61=$poly;
            var $m_vertices29=$61+5;
            var $arrayidx30=$m_vertices29+($60<<1);
            __Z5b2MulRK11b2TransformRK6b2Vec2($ref_tmp28, $59, $arrayidx30);
            var $62=$arrayidx27;
            IHEAP[$62]=IHEAP[$57]; FHEAP[$62]=FHEAP[$57]; ; IHEAP[$62+1]=IHEAP[$57+1]; FHEAP[$62+1]=FHEAP[$57+1]; ;
            var $63=$i23;
            var $inc32=($63)+1;
            $i23=$inc32;
            var $64=$i23;
            var $65=$vertexCount;
            var $cmp25=($64) < ($65);
            if (!($cmp25)) { __label__ = 11;break $for_body26_lr_ph$$for_end33$57; }
          }
        }
      } while(0);

      var $m_debugDraw34=$this1+102546;
      var $66=IHEAP[$m_debugDraw34];
      var $67=$66;
      var $vtable35=IHEAP[$67];
      var $vfn36=$vtable35+3;
      var $68=IHEAP[$vfn36];
      var $arraydecay=$vertices22;
      var $69=$vertexCount;
      var $70=$color_addr;
      FUNCTION_TABLE[$68]($66, $arraydecay, $69, $70);
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color["X"]=1;

function __ZN7b2World9DrawJointEP7b2Joint($this, $joint) {
  var __stackBase__  = STACKTOP; STACKTOP += 15;
  var __label__;

  var $this_addr;
  var $joint_addr;
  var $bodyA;
  var $bodyB;
  var $xf1;
  var $xf2;
  var $x1=__stackBase__;
  var $x2=__stackBase__+2;
  var $p1=__stackBase__+4;
  var $p2=__stackBase__+6;
  var $color=__stackBase__+8;
  var $pulley;
  var $s1=__stackBase__+11;
  var $s2=__stackBase__+13;
  $this_addr=$this;
  $joint_addr=$joint;
  var $this1=$this_addr;
  var $0=$joint_addr;
  var $call=__ZN7b2Joint8GetBodyAEv($0);
  $bodyA=$call;
  var $1=$joint_addr;
  var $call2=__ZN7b2Joint8GetBodyBEv($1);
  $bodyB=$call2;
  var $2=$bodyA;
  var $call3=__ZNK6b2Body12GetTransformEv($2);
  $xf1=$call3;
  var $3=$bodyB;
  var $call4=__ZNK6b2Body12GetTransformEv($3);
  $xf2=$call4;
  var $4=$xf1;
  var $p=$4;
  var $5=$x1;
  var $6=$p;
  IHEAP[$5]=IHEAP[$6]; FHEAP[$5]=FHEAP[$6]; ; IHEAP[$5+1]=IHEAP[$6+1]; FHEAP[$5+1]=FHEAP[$6+1]; ;
  var $7=$xf2;
  var $p5=$7;
  var $8=$x2;
  var $9=$p5;
  IHEAP[$8]=IHEAP[$9]; FHEAP[$8]=FHEAP[$9]; ; IHEAP[$8+1]=IHEAP[$9+1]; FHEAP[$8+1]=FHEAP[$9+1]; ;
  var $10=$joint_addr;
  var $11=$10;
  var $vtable=IHEAP[$11];
  var $vfn=$vtable;
  var $12=IHEAP[$vfn];
  FUNCTION_TABLE[$12]($p1, $10);
  var $13=$joint_addr;
  var $14=$13;
  var $vtable6=IHEAP[$14];
  var $vfn7=$vtable6+1;
  var $15=IHEAP[$vfn7];
  FUNCTION_TABLE[$15]($p2, $13);
  __ZN7b2ColorC1Efff($color, 0.5, 0.800000011920929, 0.800000011920929);
  var $16=$joint_addr;
  var $call8=__ZNK7b2Joint7GetTypeEv($16);
  if ($call8 == 3) {
    __label__ = 1;;
  }
  else if ($call8 == 4) {
    __label__ = 2;;
  }
  else if ($call8 == 5) {
    __label__ = 4;;
  }
  else {
  __label__ = 3;;
  }
  
  $sw_default$$sw_bb$$sw_bb11$$sw_epilog$64: do { 
    if (__label__ == 3) {

      var $m_debugDraw21=$this1+102546;
      var $33=IHEAP[$m_debugDraw21];
      var $34=$33;
      var $vtable22=IHEAP[$34];
      var $vfn23=$vtable22+6;
      var $35=IHEAP[$vfn23];
      FUNCTION_TABLE[$35]($33, $x1, $p1, $color);
      var $m_debugDraw24=$this1+102546;
      var $36=IHEAP[$m_debugDraw24];
      var $37=$36;
      var $vtable25=IHEAP[$37];
      var $vfn26=$vtable25+6;
      var $38=IHEAP[$vfn26];
      FUNCTION_TABLE[$38]($36, $p1, $p2, $color);
      var $m_debugDraw27=$this1+102546;
      var $39=IHEAP[$m_debugDraw27];
      var $40=$39;
      var $vtable28=IHEAP[$40];
      var $vfn29=$vtable28+6;
      var $41=IHEAP[$vfn29];
      FUNCTION_TABLE[$41]($39, $x2, $p2, $color);
      ;
    }
    else if (__label__ == 1) {

      var $m_debugDraw=$this1+102546;
      var $17=IHEAP[$m_debugDraw];
      var $18=$17;
      var $vtable9=IHEAP[$18];
      var $vfn10=$vtable9+6;
      var $19=IHEAP[$vfn10];
      FUNCTION_TABLE[$19]($17, $p1, $p2, $color);
      ;
    }
    else if (__label__ == 2) {

      var $20=$joint_addr;
      var $21=$20;
      $pulley=$21;
      var $22=$pulley;
      __ZNK13b2PulleyJoint16GetGroundAnchorAEv($s1, $22);
      var $23=$pulley;
      __ZNK13b2PulleyJoint16GetGroundAnchorBEv($s2, $23);
      var $m_debugDraw12=$this1+102546;
      var $24=IHEAP[$m_debugDraw12];
      var $25=$24;
      var $vtable13=IHEAP[$25];
      var $vfn14=$vtable13+6;
      var $26=IHEAP[$vfn14];
      FUNCTION_TABLE[$26]($24, $s1, $p1, $color);
      var $m_debugDraw15=$this1+102546;
      var $27=IHEAP[$m_debugDraw15];
      var $28=$27;
      var $vtable16=IHEAP[$28];
      var $vfn17=$vtable16+6;
      var $29=IHEAP[$vfn17];
      FUNCTION_TABLE[$29]($27, $s2, $p2, $color);
      var $m_debugDraw18=$this1+102546;
      var $30=IHEAP[$m_debugDraw18];
      var $31=$30;
      var $vtable19=IHEAP[$31];
      var $vfn20=$vtable19+6;
      var $32=IHEAP[$vfn20];
      FUNCTION_TABLE[$32]($30, $s1, $s2, $color);
      ;
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN7b2World9DrawJointEP7b2Joint["X"]=1;

function __ZN15b2RayCastOutputC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2RayCastOutputC2Ev($this1);
  ;
  return;
  return;
}


function __ZN6b2Body14GetFixtureListEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_fixtureList=$this1+25;
  var $0=IHEAP[$m_fixtureList];
  ;
  return $0;
  return null;
}


function __ZN9b2Fixture7GetNextEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_next=$this1+1;
  var $0=IHEAP[$m_next];
  ;
  return $0;
  return null;
}


function __ZN7b2Joint7GetNextEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_next=$this1+3;
  var $0=IHEAP[$m_next];
  ;
  return $0;
  return null;
}


function __ZNK6b2Body14GetWorldCenterEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_sweep=$this1+7;
  var $c=$m_sweep+4;
  ;
  return $c;
  return null;
}


function __ZNK12b2BroadPhase13GetProxyCountEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_proxyCount=$this1+7;
  var $0=IHEAP[$m_proxyCount];
  ;
  return $0;
  return null;
}


function __ZN7b2World4DumpEv($this) {
  ;
  var __label__;

  var $this_addr;
  var $i;
  var $b;
  var $j;
  var $j11;
  var $j22;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_flags=$this1+102517;
  var $0=IHEAP[$m_flags];
  var $and=($0) & 2;
  var $cmp=($and)==2;
  if ($cmp) { __label__ = 14;; } else { __label__ = 1;; }
  $return$$if_end$70: do { 
    if (__label__ == 1) {

      var $m_gravity=$this1+102542;
      var $x=$m_gravity;
      var $1=FHEAP[$x];
      var $conv=($1);
      var $m_gravity2=$this1+102542;
      var $y=$m_gravity2+1;
      var $2=FHEAP[$y];
      var $conv3=($2);
      __Z5b2LogPKcz(__str9415, allocate([$conv,$conv3], "double", ALLOC_STACK));
      __Z5b2LogPKcz(__str10416, allocate(1, "i32", ALLOC_STACK));
      var $m_bodyCount=$this1+102540;
      var $3=IHEAP[$m_bodyCount];
      __Z5b2LogPKcz(__str11417, allocate([$3], "i32", ALLOC_STACK));
      var $m_jointCount=$this1+102541;
      var $4=IHEAP[$m_jointCount];
      __Z5b2LogPKcz(__str12418, allocate([$4], "i32", ALLOC_STACK));
      $i=0;
      var $m_bodyList=$this1+102538;
      var $5=IHEAP[$m_bodyList];
      $b=$5;
      var $tobool4=($5)!=0;
      if ($tobool4) { __label__ = 2;; } else { __label__ = 3;; }
      $for_body$$for_end$72: do { 
        if (__label__ == 2) {
          $for_body$73: while(1) { 

            var $6=$i;
            var $7=$b;
            var $m_islandIndex=$7+2;
            IHEAP[$m_islandIndex]=$6;
            var $8=$b;
            __ZN6b2Body4DumpEv($8);
            var $9=$i;
            var $inc=($9)+1;
            $i=$inc;
            var $10=$b;
            var $m_next=$10+24;
            var $11=IHEAP[$m_next];
            $b=$11;
            var $tobool=($11)!=0;
            if (!($tobool)) { __label__ = 3;break $for_body$$for_end$72; }
          }
        }
      } while(0);

      $i=0;
      var $m_jointList=$this1+102539;
      var $12=IHEAP[$m_jointList];
      $j=$12;
      var $tobool53=($12)!=0;
      if ($tobool53) { __label__ = 4;; } else { __label__ = 5;; }
      $for_body6$$for_end10$76: do { 
        if (__label__ == 4) {
          $for_body6$77: while(1) { 

            var $13=$i;
            var $14=$j;
            var $m_index=$14+14;
            IHEAP[$m_index]=$13;
            var $15=$i;
            var $inc7=($15)+1;
            $i=$inc7;
            var $16=$j;
            var $m_next9=$16+3;
            var $17=IHEAP[$m_next9];
            $j=$17;
            var $tobool5=($17)!=0;
            if (!($tobool5)) { __label__ = 5;break $for_body6$$for_end10$76; }
          }
        }
      } while(0);

      var $m_jointList12=$this1+102539;
      var $18=IHEAP[$m_jointList12];
      $j11=$18;
      var $tobool142=($18)!=0;
      if ($tobool142) { __label__ = 6;; } else { __label__ = 9;; }
      $for_body15$$for_end21$80: do { 
        if (__label__ == 6) {
          $for_body15$81: while(1) { 

            var $19=$j11;
            var $m_type=$19+1;
            var $20=IHEAP[$m_type];
            var $cmp16=($20)==6;
            if ($cmp16) { __label__ = 8;; } else { __label__ = 7;; }
            $for_inc19$$if_end18$83: do { 
              if (__label__ == 7) {

                __Z5b2LogPKcz(__str13419, allocate(1, "i32", ALLOC_STACK));
                var $21=$j11;
                var $22=$21;
                var $vtable=IHEAP[$22];
                var $vfn=$vtable+4;
                var $23=IHEAP[$vfn];
                FUNCTION_TABLE[$23]($21);
                __Z5b2LogPKcz(__str14420, allocate(1, "i32", ALLOC_STACK));
                ;
              }
            } while(0);

            var $24=$j11;
            var $m_next20=$24+3;
            var $25=IHEAP[$m_next20];
            $j11=$25;
            var $tobool14=($25)!=0;
            if (!($tobool14)) { __label__ = 9;break $for_body15$$for_end21$80; }
          }
        }
      } while(0);

      var $m_jointList23=$this1+102539;
      var $26=IHEAP[$m_jointList23];
      $j22=$26;
      var $tobool251=($26)!=0;
      if ($tobool251) { __label__ = 10;; } else { __label__ = 13;; }
      $for_body26$$for_end35$87: do { 
        if (__label__ == 10) {
          $for_body26$88: while(1) { 

            var $27=$j22;
            var $m_type27=$27+1;
            var $28=IHEAP[$m_type27];
            var $cmp28=($28)!=6;
            if ($cmp28) { __label__ = 12;; } else { __label__ = 11;; }
            $for_inc33$$if_end30$90: do { 
              if (__label__ == 11) {

                __Z5b2LogPKcz(__str13419, allocate(1, "i32", ALLOC_STACK));
                var $29=$j22;
                var $30=$29;
                var $vtable31=IHEAP[$30];
                var $vfn32=$vtable31+4;
                var $31=IHEAP[$vfn32];
                FUNCTION_TABLE[$31]($29);
                __Z5b2LogPKcz(__str14420, allocate(1, "i32", ALLOC_STACK));
                ;
              }
            } while(0);

            var $32=$j22;
            var $m_next34=$32+3;
            var $33=IHEAP[$m_next34];
            $j22=$33;
            var $tobool25=($33)!=0;
            if (!($tobool25)) { __label__ = 13;break $for_body26$$for_end35$87; }
          }
        }
      } while(0);

      __Z5b2LogPKcz(__str15421, allocate(1, "i32", ALLOC_STACK));
      __Z5b2LogPKcz(__str16422, allocate(1, "i32", ALLOC_STACK));
      __Z5b2LogPKcz(__str17423, allocate(1, "i32", ALLOC_STACK));
      __Z5b2LogPKcz(__str18424, allocate(1, "i32", ALLOC_STACK));
      ;
    }
  } while(0);

  ;
  return;
  return;
}
__ZN7b2World4DumpEv["X"]=1;

function __ZNK6b2AABB9GetCenterEv($agg_result, $this) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $ref_tmp=__stackBase__;
  $this_addr=$this;
  var $this1=$this_addr;
  var $lowerBound=$this1;
  var $upperBound=$this1+2;
  __ZplRK6b2Vec2S1_($ref_tmp, $lowerBound, $upperBound);
  __ZmlfRK6b2Vec2($agg_result, 0.5, $ref_tmp);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZNK6b2AABB10GetExtentsEv($agg_result, $this) {
  var __stackBase__  = STACKTOP; STACKTOP += 2;
  var __label__;

  var $this_addr;
  var $ref_tmp=__stackBase__;
  $this_addr=$this;
  var $this1=$this_addr;
  var $upperBound=$this1+2;
  var $lowerBound=$this1;
  __ZmiRK6b2Vec2S1_($ref_tmp, $upperBound, $lowerBound);
  __ZmlfRK6b2Vec2($agg_result, 0.5, $ref_tmp);
  STACKTOP = __stackBase__;
  return;
  return;
}


function __ZN7b2World13DrawDebugDataEv($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 37;
  var __label__;

  var $this_addr;
  var $flags;
  var $b;
  var $xf;
  var $f;
  var $ref_tmp=__stackBase__;
  var $ref_tmp16=__stackBase__+3;
  var $ref_tmp21=__stackBase__+6;
  var $ref_tmp27=__stackBase__+9;
  var $ref_tmp29=__stackBase__+12;
  var $j;
  var $color=__stackBase__+15;
  var $c;
  var $color62=__stackBase__+18;
  var $bp;
  var $b64;
  var $f74;
  var $i;
  var $proxy;
  var $aabb=__stackBase__+21;
  var $vs=__stackBase__+25;
  var $b111;
  var $xf116=__stackBase__+33;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_debugDraw=$this1+102546;
  var $0=IHEAP[$m_debugDraw];
  var $cmp=($0)==0;
  if ($cmp) { __label__ = 34;; } else { __label__ = 1;; }
  $if_end125$$if_end$2: do { 
    if (__label__ == 1) {

      var $m_debugDraw2=$this1+102546;
      var $1=IHEAP[$m_debugDraw2];
      var $call=__ZNK6b2Draw8GetFlagsEv($1);
      $flags=$call;
      var $2=$flags;
      var $and=($2) & 1;
      var $tobool=($and)!=0;
      if ($tobool) { __label__ = 2;; } else { __label__ = 15;; }
      $if_then3$$if_end38$4: do { 
        if (__label__ == 2) {

          var $m_bodyList=$this1+102538;
          var $3=IHEAP[$m_bodyList];
          $b=$3;
          var $tobool411=($3)!=0;
          if (!($tobool411)) { __label__ = 15;break $if_then3$$if_end38$4; }
          $for_body$6: while(1) { 

            var $4=$b;
            var $call5=__ZNK6b2Body12GetTransformEv($4);
            $xf=$call5;
            var $5=$b;
            var $call6=__ZN6b2Body14GetFixtureListEv($5);
            $f=$call6;
            var $tobool89=($call6)!=0;
            var $6=$b;
            if ($tobool89) { var $7 = $6;__label__ = 4;; } else { var $_lcssa8 = $6;__label__ = 14;; }
            $for_body9$$for_inc35$8: do { 
              if (__label__ == 4) {
                $for_body9$9: while(1) { 

                  var $7;
                  var $call10=__ZNK6b2Body8IsActiveEv($7);
                  var $conv=($call10);
                  var $cmp11=($conv)==0;
                  if ($cmp11) { __label__ = 5;; } else { __label__ = 6;; }
                  $if_then12$$if_else$11: do { 
                    if (__label__ == 5) {

                      var $8=$f;
                      var $9=$xf;
                      __ZN7b2ColorC1Efff($ref_tmp, 0.5, 0.5, 0.30000001192092896);
                      __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this1, $8, $9, $ref_tmp);
                      ;
                    }
                    else if (__label__ == 6) {

                      var $10=$b;
                      var $call13=__ZNK6b2Body7GetTypeEv($10);
                      var $cmp14=($call13)==0;
                      if ($cmp14) { __label__ = 7;; } else { __label__ = 8;; }
                      $if_then15$$if_else17$14: do { 
                        if (__label__ == 7) {

                          var $11=$f;
                          var $12=$xf;
                          __ZN7b2ColorC1Efff($ref_tmp16, 0.5, 0.8999999761581421, 0.5);
                          __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this1, $11, $12, $ref_tmp16);
                          ;
                        }
                        else if (__label__ == 8) {

                          var $13=$b;
                          var $call18=__ZNK6b2Body7GetTypeEv($13);
                          var $cmp19=($call18)==1;
                          if ($cmp19) { __label__ = 9;; } else { __label__ = 10;; }
                          $if_then20$$if_else22$17: do { 
                            if (__label__ == 9) {

                              var $14=$f;
                              var $15=$xf;
                              __ZN7b2ColorC1Efff($ref_tmp21, 0.5, 0.5, 0.8999999761581421);
                              __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this1, $14, $15, $ref_tmp21);
                              ;
                            }
                            else if (__label__ == 10) {

                              var $16=$b;
                              var $call23=__ZNK6b2Body7IsAwakeEv($16);
                              var $conv24=($call23);
                              var $cmp25=($conv24)==0;
                              var $17=$f;
                              var $18=$xf;
                              if ($cmp25) { __label__ = 11;; } else { __label__ = 12;; }
                              $if_then26$$if_else28$20: do { 
                                if (__label__ == 11) {

                                  __ZN7b2ColorC1Efff($ref_tmp27, 0.6000000238418579, 0.6000000238418579, 0.6000000238418579);
                                  __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this1, $17, $18, $ref_tmp27);
                                  ;
                                }
                                else if (__label__ == 12) {

                                  __ZN7b2ColorC1Efff($ref_tmp29, 0.8999999761581421, 0.699999988079071, 0.699999988079071);
                                  __ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color($this1, $17, $18, $ref_tmp29);
                                  ;
                                }
                              } while(0);
                            }
                          } while(0);
                        }
                      } while(0);
                    }
                  } while(0);

                  var $19=$f;
                  var $call34=__ZN9b2Fixture7GetNextEv($19);
                  $f=$call34;
                  var $tobool8=($call34)!=0;
                  var $20=$b;
                  if ($tobool8) { var $7 = $20;; } else { var $_lcssa8 = $20;__label__ = 14;break $for_body9$$for_inc35$8; }
                }
              }
            } while(0);

            var $_lcssa8;
            var $call36=__ZN6b2Body7GetNextEv($_lcssa8);
            $b=$call36;
            var $tobool4=($call36)!=0;
            if (!($tobool4)) { __label__ = 15;break $if_then3$$if_end38$4; }
          }
        }
      } while(0);

      var $21=$flags;
      var $and39=($21) & 2;
      var $tobool40=($and39)!=0;
      if ($tobool40) { __label__ = 16;; } else { __label__ = 18;; }
      $if_then41$$if_end48$26: do { 
        if (__label__ == 16) {

          var $m_jointList=$this1+102539;
          var $22=IHEAP[$m_jointList];
          $j=$22;
          var $tobool437=($22)!=0;
          if (!($tobool437)) { __label__ = 18;break $if_then41$$if_end48$26; }
          $for_body44$28: while(1) { 

            var $23=$j;
            __ZN7b2World9DrawJointEP7b2Joint($this1, $23);
            var $24=$j;
            var $call46=__ZN7b2Joint7GetNextEv($24);
            $j=$call46;
            var $tobool43=($call46)!=0;
            if (!($tobool43)) { __label__ = 18;break $if_then41$$if_end48$26; }
          }
        }
      } while(0);

      var $25=$flags;
      var $and49=($25) & 8;
      var $tobool50=($and49)!=0;
      if ($tobool50) { __label__ = 19;; } else { __label__ = 21;; }
      $if_then51$$if_end58$31: do { 
        if (__label__ == 19) {

          __ZN7b2ColorC1Efff($color, 0.30000001192092896, 0.8999999761581421, 0.8999999761581421);
          var $m_contactManager=$this1+102518;
          var $m_contactList=$m_contactManager+15;
          var $26=IHEAP[$m_contactList];
          $c=$26;
          var $tobool536=($26)!=0;
          if (!($tobool536)) { __label__ = 21;break $if_then51$$if_end58$31; }
          $for_inc55$33: while(1) { 

            var $27=$c;
            var $call56=__ZN9b2Contact7GetNextEv($27);
            $c=$call56;
            var $tobool53=($call56)!=0;
            if (!($tobool53)) { __label__ = 21;break $if_then51$$if_end58$31; }
          }
        }
      } while(0);

      var $28=$flags;
      var $and59=($28) & 4;
      var $tobool60=($and59)!=0;
      if ($tobool60) { __label__ = 22;; } else { __label__ = 30;; }
      $if_then61$$if_end107$36: do { 
        if (__label__ == 22) {

          __ZN7b2ColorC1Efff($color62, 0.8999999761581421, 0.30000001192092896, 0.8999999761581421);
          var $m_contactManager63=$this1+102518;
          var $m_broadPhase=$m_contactManager63;
          $bp=$m_broadPhase;
          var $m_bodyList65=$this1+102538;
          var $29=IHEAP[$m_bodyList65];
          $b64=$29;
          var $tobool675=($29)!=0;
          if (!($tobool675)) { __label__ = 30;break $if_then61$$if_end107$36; }

          var $30=$aabb;
          var $array_begin=$vs;
          var $arrayidx=$vs;
          var $lowerBound=$aabb;
          var $x=$lowerBound;
          var $lowerBound83=$aabb;
          var $y=$lowerBound83+1;
          var $arrayidx84=$vs+2;
          var $upperBound=$aabb+2;
          var $x85=$upperBound;
          var $lowerBound86=$aabb;
          var $y87=$lowerBound86+1;
          var $arrayidx88=$vs+4;
          var $upperBound89=$aabb+2;
          var $x90=$upperBound89;
          var $upperBound91=$aabb+2;
          var $y92=$upperBound91+1;
          var $arrayidx93=$vs+6;
          var $lowerBound94=$aabb;
          var $x95=$lowerBound94;
          var $upperBound96=$aabb+2;
          var $y97=$upperBound96+1;
          var $m_debugDraw98=$this1+102546;
          var $arraydecay=$vs;
          ;
          $for_body68$39: while(1) { 

            var $31=$b64;
            var $call69=__ZNK6b2Body8IsActiveEv($31);
            var $conv70=($call69);
            var $cmp71=($conv70)==0;
            if ($cmp71) { __label__ = 29;; } else { __label__ = 25;; }
            $for_inc104$$if_end73$41: do { 
              if (__label__ == 25) {

                var $32=$b64;
                var $call75=__ZN6b2Body14GetFixtureListEv($32);
                $f74=$call75;
                var $tobool774=($call75)!=0;
                if (!($tobool774)) { __label__ = 29;break $for_inc104$$if_end73$41; }
                $for_body78$43: while(1) { 

                  $i=0;
                  var $33=$i;
                  var $34=$f74;
                  var $m_proxyCount2=$34+7;
                  var $35=IHEAP[$m_proxyCount2];
                  var $cmp803=($33) < ($35);
                  var $36=$f74;
                  if ($cmp803) { var $37 = $36;__label__ = 27;; } else { var $_lcssa = $36;__label__ = 28;; }
                  $arrayctor_loop$$for_inc101$45: do { 
                    if (__label__ == 27) {
                      $arrayctor_loop$46: while(1) { 

                        var $37;
                        var $m_proxies=$37+6;
                        var $38=IHEAP[$m_proxies];
                        var $39=$i;
                        var $add_ptr=$38+$39*7;
                        $proxy=$add_ptr;
                        var $40=$bp;
                        var $41=$proxy;
                        var $proxyId=$41+6;
                        var $42=IHEAP[$proxyId];
                        var $call82=__ZNK12b2BroadPhase10GetFatAABBEi($40, $42);
                        var $43=$call82;
                        IHEAP[$30]=IHEAP[$43]; FHEAP[$30]=FHEAP[$43]; ; IHEAP[$30+1]=IHEAP[$43+1]; FHEAP[$30+1]=FHEAP[$43+1]; ; IHEAP[$30+2]=IHEAP[$43+2]; FHEAP[$30+2]=FHEAP[$43+2]; ; IHEAP[$30+3]=IHEAP[$43+3]; FHEAP[$30+3]=FHEAP[$43+3]; ;
                        __ZN6b2Vec2C1Ev($array_begin);
                        var $arrayctor_next=$array_begin+2;
                        __ZN6b2Vec2C1Ev($arrayctor_next);
                        var $arrayctor_next_1=$arrayctor_next+2;
                        __ZN6b2Vec2C1Ev($arrayctor_next_1);
                        var $arrayctor_next_2=$arrayctor_next_1+2;
                        __ZN6b2Vec2C1Ev($arrayctor_next_2);
                        var $44=FHEAP[$x];
                        var $45=FHEAP[$y];
                        __ZN6b2Vec23SetEff($arrayidx, $44, $45);
                        var $46=FHEAP[$x85];
                        var $47=FHEAP[$y87];
                        __ZN6b2Vec23SetEff($arrayidx84, $46, $47);
                        var $48=FHEAP[$x90];
                        var $49=FHEAP[$y92];
                        __ZN6b2Vec23SetEff($arrayidx88, $48, $49);
                        var $50=FHEAP[$x95];
                        var $51=FHEAP[$y97];
                        __ZN6b2Vec23SetEff($arrayidx93, $50, $51);
                        var $52=IHEAP[$m_debugDraw98];
                        var $53=$52;
                        var $vtable=IHEAP[$53];
                        var $vfn=$vtable+2;
                        var $54=IHEAP[$vfn];
                        FUNCTION_TABLE[$54]($52, $arraydecay, 4, $color62);
                        var $55=$i;
                        var $inc=($55)+1;
                        $i=$inc;
                        var $56=$i;
                        var $57=$f74;
                        var $m_proxyCount=$57+7;
                        var $58=IHEAP[$m_proxyCount];
                        var $cmp80=($56) < ($58);
                        var $59=$f74;
                        if ($cmp80) { var $37 = $59;; } else { var $_lcssa = $59;__label__ = 28;break $arrayctor_loop$$for_inc101$45; }
                      }
                    }
                  } while(0);

                  var $_lcssa;
                  var $call102=__ZN9b2Fixture7GetNextEv($_lcssa);
                  $f74=$call102;
                  var $tobool77=($call102)!=0;
                  if (!($tobool77)) { __label__ = 29;break $for_inc104$$if_end73$41; }
                }
              }
            } while(0);

            var $60=$b64;
            var $call105=__ZN6b2Body7GetNextEv($60);
            $b64=$call105;
            var $tobool67=($call105)!=0;
            if (!($tobool67)) { __label__ = 30;break $if_then61$$if_end107$36; }
          }
        }
      } while(0);

      var $61=$flags;
      var $and108=($61) & 16;
      var $tobool109=($and108)!=0;
      if (!($tobool109)) { __label__ = 34;break $if_end125$$if_end$2; }

      var $m_bodyList112=$this1+102538;
      var $62=IHEAP[$m_bodyList112];
      $b111=$62;
      var $tobool1141=($62)!=0;
      if (!($tobool1141)) { __label__ = 34;break $if_end125$$if_end$2; }

      var $63=$xf116;
      var $p=$xf116;
      var $64=$p;
      var $m_debugDraw119=$this1+102546;
      ;
      $for_body115$53: while(1) { 

        var $65=$b111;
        var $call117=__ZNK6b2Body12GetTransformEv($65);
        var $66=$call117;
        IHEAP[$63]=IHEAP[$66]; FHEAP[$63]=FHEAP[$66]; ; IHEAP[$63+1]=IHEAP[$66+1]; FHEAP[$63+1]=FHEAP[$66+1]; ; IHEAP[$63+2]=IHEAP[$66+2]; FHEAP[$63+2]=FHEAP[$66+2]; ; IHEAP[$63+3]=IHEAP[$66+3]; FHEAP[$63+3]=FHEAP[$66+3]; ;
        var $67=$b111;
        var $call118=__ZNK6b2Body14GetWorldCenterEv($67);
        var $68=$call118;
        IHEAP[$64]=IHEAP[$68]; FHEAP[$64]=FHEAP[$68]; ; IHEAP[$64+1]=IHEAP[$68+1]; FHEAP[$64+1]=FHEAP[$68+1]; ;
        var $69=IHEAP[$m_debugDraw119];
        var $70=$69;
        var $vtable120=IHEAP[$70];
        var $vfn121=$vtable120+7;
        var $71=IHEAP[$vfn121];
        FUNCTION_TABLE[$71]($69, $xf116);
        var $72=$b111;
        var $call123=__ZN6b2Body7GetNextEv($72);
        $b111=$call123;
        var $tobool114=($call123)!=0;
        if (!($tobool114)) { __label__ = 34;break $if_end125$$if_end$2; }
      }
    }
  } while(0);

  STACKTOP = __stackBase__;
  return;
  return;
}
__ZN7b2World13DrawDebugDataEv["X"]=1;

function __ZNK12b2BroadPhase10GetFatAABBEi($this, $proxyId) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $m_tree=$this1;
  var $0=$proxyId_addr;
  var $call=__ZNK13b2DynamicTree10GetFatAABBEi($m_tree, $0);
  ;
  return $call;
  return null;
}


function __ZNK7b2World13GetProxyCountEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_contactManager=$this1+102518;
  var $m_broadPhase=$m_contactManager;
  var $call=__ZNK12b2BroadPhase13GetProxyCountEv($m_broadPhase);
  ;
  return $call;
  return null;
}


function __ZNK7b2World13GetTreeHeightEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_contactManager=$this1+102518;
  var $m_broadPhase=$m_contactManager;
  var $call=__ZNK12b2BroadPhase13GetTreeHeightEv($m_broadPhase);
  ;
  return $call;
  return null;
}


function __ZNK12b2BroadPhase13GetTreeHeightEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_tree=$this1;
  var $call=__ZNK13b2DynamicTree9GetHeightEv($m_tree);
  ;
  return $call;
  return null;
}


function __ZNK7b2World14GetTreeBalanceEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_contactManager=$this1+102518;
  var $m_broadPhase=$m_contactManager;
  var $call=__ZNK12b2BroadPhase14GetTreeBalanceEv($m_broadPhase);
  ;
  return $call;
  return null;
}


function __ZNK12b2BroadPhase14GetTreeBalanceEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_tree=$this1;
  var $call=__ZNK13b2DynamicTree13GetMaxBalanceEv($m_tree);
  ;
  return $call;
  return null;
}


function __ZNK7b2World14GetTreeQualityEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_contactManager=$this1+102518;
  var $m_broadPhase=$m_contactManager;
  var $call=__ZNK12b2BroadPhase14GetTreeQualityEv($m_broadPhase);
  ;
  return $call;
  return null;
}


function __ZNK12b2BroadPhase14GetTreeQualityEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_tree=$this1;
  var $call=__ZNK13b2DynamicTree12GetAreaRatioEv($m_tree);
  ;
  return $call;
  return null;
}


function __ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput($this, $callback, $input) {
  var __stackBase__  = STACKTOP; STACKTOP += 304;
  var __label__;

  var $this_addr;
  var $callback_addr;
  var $input_addr;
  var $p1=__stackBase__;
  var $p2=__stackBase__+2;
  var $r=__stackBase__+4;
  var $v=__stackBase__+6;
  var $abs_v=__stackBase__+8;
  var $maxFraction;
  var $segmentAABB=__stackBase__+10;
  var $t=__stackBase__+14;
  var $ref_tmp=__stackBase__+16;
  var $ref_tmp6=__stackBase__+18;
  var $ref_tmp7=__stackBase__+20;
  var $ref_tmp8=__stackBase__+22;
  var $stack=__stackBase__+24;
  var $exn_slot;
  var $ehselector_slot;
  var $nodeId;
  var $node;
  var $c=__stackBase__+283;
  var $h=__stackBase__+285;
  var $separation;
  var $ref_tmp24=__stackBase__+287;
  var $subInput=__stackBase__+289;
  var $value;
  var $cleanup_dest_slot;
  var $t51=__stackBase__+294;
  var $ref_tmp52=__stackBase__+296;
  var $ref_tmp53=__stackBase__+298;
  var $ref_tmp58=__stackBase__+300;
  var $ref_tmp61=__stackBase__+302;
  $this_addr=$this;
  $callback_addr=$callback;
  $input_addr=$input;
  var $this1=$this_addr;
  var $0=$input_addr;
  var $p12=$0;
  var $1=$p1;
  var $2=$p12;
  IHEAP[$1]=IHEAP[$2]; FHEAP[$1]=FHEAP[$2]; ; IHEAP[$1+1]=IHEAP[$2+1]; FHEAP[$1+1]=FHEAP[$2+1]; ;
  var $3=$input_addr;
  var $p23=$3+2;
  var $4=$p2;
  var $5=$p23;
  IHEAP[$4]=IHEAP[$5]; FHEAP[$4]=FHEAP[$5]; ; IHEAP[$4+1]=IHEAP[$5+1]; FHEAP[$4+1]=FHEAP[$5+1]; ;
  __ZmiRK6b2Vec2S1_($r, $p2, $p1);
  var $call=__ZNK6b2Vec213LengthSquaredEv($r);
  var $cmp=($call) > 0;
  if ($cmp) { __label__ = 2;; } else { __label__ = 1;; }
  $cond_end$$cond_false$96: do { 
    if (__label__ == 1) {

      ___assert_func(__str19425, 204, ___PRETTY_FUNCTION____ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput, __str20426);
      ;
    }
  } while(0);

  var $call4=__ZN6b2Vec29NormalizeEv($r);
  __Z7b2CrossfRK6b2Vec2($v, 1, $r);
  __Z5b2AbsRK6b2Vec2($abs_v, $v);
  var $6=$input_addr;
  var $maxFraction5=$6+4;
  var $7=FHEAP[$maxFraction5];
  $maxFraction=$7;
  __ZN6b2AABBC1Ev($segmentAABB);
  var $8=$maxFraction;
  __ZmiRK6b2Vec2S1_($ref_tmp6, $p2, $p1);
  __ZmlfRK6b2Vec2($ref_tmp, $8, $ref_tmp6);
  __ZplRK6b2Vec2S1_($t, $p1, $ref_tmp);
  var $lowerBound=$segmentAABB;
  __Z5b2MinRK6b2Vec2S1_($ref_tmp7, $p1, $t);
  var $9=$lowerBound;
  var $10=$ref_tmp7;
  IHEAP[$9]=IHEAP[$10]; FHEAP[$9]=FHEAP[$10]; ; IHEAP[$9+1]=IHEAP[$10+1]; FHEAP[$9+1]=FHEAP[$10+1]; ;
  var $upperBound=$segmentAABB+2;
  __Z5b2MaxRK6b2Vec2S1_($ref_tmp8, $p1, $t);
  var $11=$upperBound;
  var $12=$ref_tmp8;
  IHEAP[$11]=IHEAP[$12]; FHEAP[$11]=FHEAP[$12]; ; IHEAP[$11+1]=IHEAP[$12+1]; FHEAP[$11+1]=FHEAP[$12+1]; ;
  __ZN15b2GrowableStackIiLi256EEC1Ev($stack);
  var $m_root=$this1;
  __ZN15b2GrowableStackIiLi256EE4PushERKi($stack, $m_root);
  var $m_nodes=$this1+1;
  var $p139=$subInput;
  var $13=$p139;
  var $p241=$subInput+2;
  var $14=$p241;
  var $maxFraction43=$subInput+4;
  var $lowerBound57=$segmentAABB;
  var $15=$lowerBound57;
  var $16=$ref_tmp58;
  var $upperBound60=$segmentAABB+2;
  var $17=$upperBound60;
  var $18=$ref_tmp61;
  ;
  $while_cond$99: while(1) { 

    var $call10=__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack);
    var $cmp11=($call10) > 0;
    if (!($cmp11)) { __label__ = 17;break $while_cond$99; }

    var $call13=__ZN15b2GrowableStackIiLi256EE3PopEv($stack);
    ;

    $nodeId=$call13;
    var $19=$nodeId;
    var $cmp14=($19)==-1;
    if ($cmp14) { __label__ = 3;continue $while_cond$99; }

    var $20=IHEAP[$m_nodes];
    var $21=$nodeId;
    var $add_ptr=$20+$21*9;
    $node=$add_ptr;
    var $22=$node;
    var $aabb=$22;
    var $call16=__Z13b2TestOverlapRK6b2AABBS1_($aabb, $segmentAABB);
    ;

    var $conv=($call16);
    var $cmp17=($conv)==0;
    if ($cmp17) { __label__ = 3;continue $while_cond$99; }

    var $23=$node;
    var $aabb20=$23;
    __ZNK6b2AABB9GetCenterEv($c, $aabb20);
    var $24=$node;
    var $aabb22=$24;
    __ZNK6b2AABB10GetExtentsEv($h, $aabb22);
    __ZmiRK6b2Vec2S1_($ref_tmp24, $p1, $c);
    var $call27=__Z5b2DotRK6b2Vec2S1_($v, $ref_tmp24);
    var $call29=__Z5b2AbsIfET_S0_($call27);
    var $call31=__Z5b2DotRK6b2Vec2S1_($abs_v, $h);
    var $sub=($call29)-($call31);
    $separation=$sub;
    var $25=$separation;
    var $cmp32=($25) > 0;
    if ($cmp32) { __label__ = 3;continue $while_cond$99; }

    var $26=$node;
    var $call36=__ZNK10b2TreeNode6IsLeafEv($26);
    ;

    if ($call36) { __label__ = 11;; } else { __label__ = 16;; }
    $invoke_cont38$$invoke_cont64$108: do { 
      if (__label__ == 11) {

        __ZN14b2RayCastInputC1Ev($subInput);
        var $27=$input_addr;
        var $p140=$27;
        var $28=$p140;
        IHEAP[$13]=IHEAP[$28]; FHEAP[$13]=FHEAP[$28]; ; IHEAP[$13+1]=IHEAP[$28+1]; FHEAP[$13+1]=FHEAP[$28+1]; ;
        var $29=$input_addr;
        var $p242=$29+2;
        var $30=$p242;
        IHEAP[$14]=IHEAP[$30]; FHEAP[$14]=FHEAP[$30]; ; IHEAP[$14+1]=IHEAP[$30+1]; FHEAP[$14+1]=FHEAP[$30+1]; ;
        var $31=$maxFraction;
        FHEAP[$maxFraction43]=$31;
        var $32=$callback_addr;
        var $33=$nodeId;
        var $call45=__ZN21b2WorldRayCastWrapper15RayCastCallbackERK14b2RayCastInputi($32, $subInput, $33);
        ;

        $value=$call45;
        var $34=$value;
        var $cmp46=($34) == 0;
        if ($cmp46) { __label__ = 13;break $while_cond$99; }

        var $35=$value;
        var $cmp49=($35) > 0;
        if (!($cmp49)) { __label__ = 3;continue $while_cond$99; }

        var $36=$value;
        $maxFraction=$36;
        var $37=$maxFraction;
        __ZmiRK6b2Vec2S1_($ref_tmp53, $p2, $p1);
        __ZmlfRK6b2Vec2($ref_tmp52, $37, $ref_tmp53);
        __ZplRK6b2Vec2S1_($t51, $p1, $ref_tmp52);
        __Z5b2MinRK6b2Vec2S1_($ref_tmp58, $p1, $t51);
        IHEAP[$15]=IHEAP[$16]; FHEAP[$15]=FHEAP[$16]; ; IHEAP[$15+1]=IHEAP[$16+1]; FHEAP[$15+1]=FHEAP[$16+1]; ;
        __Z5b2MaxRK6b2Vec2S1_($ref_tmp61, $p1, $t51);
        IHEAP[$17]=IHEAP[$18]; FHEAP[$17]=FHEAP[$18]; ; IHEAP[$17+1]=IHEAP[$18+1]; FHEAP[$17+1]=FHEAP[$18+1]; ;
        ;
      }
      else if (__label__ == 16) {

        var $38=$node;
        var $child1=$38+6;
        __ZN15b2GrowableStackIiLi256EE4PushERKi($stack, $child1);
        var $39=$node;
        var $child2=$39+7;
        __ZN15b2GrowableStackIiLi256EE4PushERKi($stack, $child2);
        ;
      }
    } while(0);
  }
  $while_end$$if_then47$114: do { 
    if (__label__ == 17) {

      $cleanup_dest_slot=0;
      ;
    }
    else if (__label__ == 13) {

      $cleanup_dest_slot=1;
      ;
    }
  } while(0);

  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput["X"]=1;

function __ZN21b2WorldRayCastWrapper15RayCastCallbackERK14b2RayCastInputi($this, $input, $proxyId) {
  var __stackBase__  = STACKTOP; STACKTOP += 9;
  var __label__;

  var $retval;
  var $this_addr;
  var $input_addr;
  var $proxyId_addr;
  var $userData;
  var $proxy;
  var $fixture;
  var $index;
  var $output=__stackBase__;
  var $hit;
  var $fraction;
  var $point=__stackBase__+3;
  var $ref_tmp=__stackBase__+5;
  var $ref_tmp5=__stackBase__+7;
  $this_addr=$this;
  $input_addr=$input;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $broadPhase=$this1;
  var $0=IHEAP[$broadPhase];
  var $1=$proxyId_addr;
  var $call=__ZNK12b2BroadPhase11GetUserDataEi($0, $1);
  $userData=$call;
  var $2=$userData;
  var $3=$2;
  $proxy=$3;
  var $4=$proxy;
  var $fixture2=$4+4;
  var $5=IHEAP[$fixture2];
  $fixture=$5;
  var $6=$proxy;
  var $childIndex=$6+5;
  var $7=IHEAP[$childIndex];
  $index=$7;
  __ZN15b2RayCastOutputC1Ev($output);
  var $8=$fixture;
  var $9=$input_addr;
  var $10=$index;
  var $call3=__ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi($8, $output, $9, $10);
  var $frombool=($call3);
  $hit=$frombool;
  var $11=$hit;
  var $tobool=((($11)) & 1);
  if ($tobool) { __label__ = 1;; } else { __label__ = 2;; }
  $if_then$$if_end$121: do { 
    if (__label__ == 1) {

      var $fraction4=$output+2;
      var $12=FHEAP[$fraction4];
      $fraction=$12;
      var $13=$fraction;
      var $sub=1-($13);
      var $14=$input_addr;
      var $p1=$14;
      __ZmlfRK6b2Vec2($ref_tmp, $sub, $p1);
      var $15=$fraction;
      var $16=$input_addr;
      var $p2=$16+2;
      __ZmlfRK6b2Vec2($ref_tmp5, $15, $p2);
      __ZplRK6b2Vec2S1_($point, $ref_tmp, $ref_tmp5);
      var $callback=$this1+1;
      var $17=IHEAP[$callback];
      var $18=$17;
      var $vtable=IHEAP[$18];
      var $vfn=$vtable+2;
      var $19=IHEAP[$vfn];
      var $20=$fixture;
      var $normal=$output;
      var $21=$fraction;
      var $call6=FUNCTION_TABLE[$19]($17, $20, $point, $normal, $21);
      $retval=$call6;
      ;
    }
    else if (__label__ == 2) {

      var $22=$input_addr;
      var $maxFraction=$22+4;
      var $23=FHEAP[$maxFraction];
      $retval=$23;
      ;
    }
  } while(0);

  var $24=$retval;
  STACKTOP = __stackBase__;
  return $24;
  return null;
}
__ZN21b2WorldRayCastWrapper15RayCastCallbackERK14b2RayCastInputi["X"]=1;

function __ZNK12b2BroadPhase11GetUserDataEi($this, $proxyId) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $m_tree=$this1;
  var $0=$proxyId_addr;
  var $call=__ZNK13b2DynamicTree11GetUserDataEi($m_tree, $0);
  ;
  return $call;
  return null;
}


function __ZN9b2BodyDefC1Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN9b2BodyDefC2Ev($this1);
  ;
  return;
  return;
}


function _main($argc, $argv) {
  ;
  var __label__;

  var $retval;
  var $argc_addr;
  var $argv_addr;
  $retval=0;
  $argc_addr=$argc;
  $argv_addr=$argv;
  __Z5benchv();
  ;
  return 0;
  return null;
}
Module["_main"] = _main;

function __ZN15b2ContactFilterD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  __ZN15b2ContactFilterD1Ev($this1);
  var $0=$this1;
  __ZdlPv($0);
  ;
  return;
  return;
}


function __ZN15b2RayCastOutputC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $normal=$this1;
  __ZN6b2Vec2C1Ev($normal);
  ;
  return;
  return;
}


function __ZN14b2RayCastInputC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $p1=$this1;
  __ZN6b2Vec2C1Ev($p1);
  var $p2=$this1+2;
  __ZN6b2Vec2C1Ev($p2);
  ;
  return;
  return;
}


function __ZN10b2TOIInputC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $proxyA=$this1;
  __ZN15b2DistanceProxyC1Ev($proxyA);
  var $proxyB=$this1+7;
  __ZN15b2DistanceProxyC1Ev($proxyB);
  var $sweepA=$this1+14;
  __ZN7b2SweepC1Ev($sweepA);
  var $sweepB=$this1+23;
  __ZN7b2SweepC1Ev($sweepB);
  ;
  return;
  return;
}


function __ZN16b2ContactManagerD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_broadPhase=$this1;
  __ZN12b2BroadPhaseD2Ev($m_broadPhase);
  ;
  return;
  return;
}


function __ZNK9b2Fixture13GetFilterDataEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $m_filter=$this1+8;
  ;
  return $m_filter;
  return null;
}


function __ZN9b2BodyDefC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $position=$this1+1;
  __ZN6b2Vec2C1Ev($position);
  var $linearVelocity=$this1+4;
  __ZN6b2Vec2C1Ev($linearVelocity);
  var $userData=$this1+14;
  IHEAP[$userData]=0;
  var $position2=$this1+1;
  __ZN6b2Vec23SetEff($position2, 0, 0);
  var $angle=$this1+3;
  FHEAP[$angle]=0;
  var $linearVelocity3=$this1+4;
  __ZN6b2Vec23SetEff($linearVelocity3, 0, 0);
  var $angularVelocity=$this1+6;
  FHEAP[$angularVelocity]=0;
  var $linearDamping=$this1+7;
  FHEAP[$linearDamping]=0;
  var $angularDamping=$this1+8;
  FHEAP[$angularDamping]=0;
  var $allowSleep=$this1+9;
  IHEAP[$allowSleep]=1;
  var $awake=$this1+10;
  IHEAP[$awake]=1;
  var $fixedRotation=$this1+11;
  IHEAP[$fixedRotation]=0;
  var $bullet=$this1+12;
  IHEAP[$bullet]=0;
  var $type=$this1;
  IHEAP[$type]=0;
  var $active=$this1+13;
  IHEAP[$active]=1;
  var $gravityScale=$this1+15;
  FHEAP[$gravityScale]=1;
  ;
  return;
  return;
}


function __ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi($this, $output, $input, $childIndex) {
  ;
  var __label__;

  var $this_addr;
  var $output_addr;
  var $input_addr;
  var $childIndex_addr;
  $this_addr=$this;
  $output_addr=$output;
  $input_addr=$input;
  $childIndex_addr=$childIndex;
  var $this1=$this_addr;
  var $m_shape=$this1+3;
  var $0=IHEAP[$m_shape];
  var $1=$0;
  var $vtable=IHEAP[$1];
  var $vfn=$vtable+5;
  var $2=IHEAP[$vfn];
  var $3=$output_addr;
  var $4=$input_addr;
  var $m_body=$this1+2;
  var $5=IHEAP[$m_body];
  var $call=__ZNK6b2Body12GetTransformEv($5);
  var $6=$childIndex_addr;
  var $call2=FUNCTION_TABLE[$2]($0, $3, $4, $call, $6);
  ;
  return $call2;
  return null;
}


function __ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($this, $callback, $aabb) {
  var __stackBase__  = STACKTOP; STACKTOP += 259;
  var __label__;

  var $this_addr;
  var $callback_addr;
  var $aabb_addr;
  var $stack=__stackBase__;
  var $exn_slot;
  var $ehselector_slot;
  var $nodeId;
  var $node;
  var $proceed;
  var $cleanup_dest_slot;
  $this_addr=$this;
  $callback_addr=$callback;
  $aabb_addr=$aabb;
  var $this1=$this_addr;
  __ZN15b2GrowableStackIiLi256EEC1Ev($stack);
  var $m_root=$this1;
  __ZN15b2GrowableStackIiLi256EE4PushERKi($stack, $m_root);
  var $m_nodes=$this1+1;
  ;
  $while_cond$4: while(1) { 

    var $call=__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack);
    var $cmp=($call) > 0;
    if (!($cmp)) { __label__ = 12;break $while_cond$4; }

    var $call4=__ZN15b2GrowableStackIiLi256EE3PopEv($stack);
    ;

    $nodeId=$call4;
    var $0=$nodeId;
    var $cmp5=($0)==-1;
    if ($cmp5) { __label__ = 1;continue $while_cond$4; }

    var $1=IHEAP[$m_nodes];
    var $2=$nodeId;
    var $add_ptr=$1+$2*9;
    $node=$add_ptr;
    var $3=$node;
    var $aabb6=$3;
    var $4=$aabb_addr;
    var $call8=__Z13b2TestOverlapRK6b2AABBS1_($aabb6, $4);
    ;

    if (!($call8)) { __label__ = 1;continue $while_cond$4; }

    var $5=$node;
    var $call11=__ZNK10b2TreeNode6IsLeafEv($5);
    ;

    if ($call11) { __label__ = 8;; } else { __label__ = 11;; }
    $if_then12$$invoke_cont18$12: do { 
      if (__label__ == 8) {

        var $6=$callback_addr;
        var $7=$nodeId;
        var $call14=__ZN19b2WorldQueryWrapper13QueryCallbackEi($6, $7);
        ;

        var $frombool=($call14);
        $proceed=$frombool;
        var $8=$proceed;
        var $tobool=((($8)) & 1);
        var $conv=($tobool);
        var $cmp15=($conv)==0;
        if ($cmp15) { __label__ = 10;break $while_cond$4; }
      }
      else if (__label__ == 11) {

        var $9=$node;
        var $child1=$9+6;
        __ZN15b2GrowableStackIiLi256EE4PushERKi($stack, $child1);
        var $10=$node;
        var $child2=$10+7;
        __ZN15b2GrowableStackIiLi256EE4PushERKi($stack, $child2);
        ;
      }
    } while(0);
  }
  $while_end$$if_then16$16: do { 
    if (__label__ == 12) {

      $cleanup_dest_slot=0;
      ;
    }
    else if (__label__ == 10) {

      $cleanup_dest_slot=1;
      ;
    }
  } while(0);

  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP = __stackBase__;
  return;
  return;
}
__ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB["X"]=1;

function __ZN19b2WorldQueryWrapper13QueryCallbackEi($this, $proxyId) {
  ;
  var __label__;

  var $this_addr;
  var $proxyId_addr;
  var $proxy;
  $this_addr=$this;
  $proxyId_addr=$proxyId;
  var $this1=$this_addr;
  var $broadPhase=$this1;
  var $0=IHEAP[$broadPhase];
  var $1=$proxyId_addr;
  var $call=__ZNK12b2BroadPhase11GetUserDataEi($0, $1);
  var $2=$call;
  $proxy=$2;
  var $callback=$this1+1;
  var $3=IHEAP[$callback];
  var $4=$3;
  var $vtable=IHEAP[$4];
  var $vfn=$vtable+2;
  var $5=IHEAP[$vfn];
  var $6=$proxy;
  var $fixture=$6+4;
  var $7=IHEAP[$fixture];
  var $call2=FUNCTION_TABLE[$5]($3, $7);
  ;
  return $call2;
  return null;
}


function __ZN15b2ContactFilter13ShouldCollideEP9b2FixtureS1_($this, $fixtureA, $fixtureB) {
  ;
  var __label__;

  var $retval;
  var $this_addr;
  var $fixtureA_addr;
  var $fixtureB_addr;
  var $filterA;
  var $filterB;
  var $collide;
  $this_addr=$this;
  $fixtureA_addr=$fixtureA;
  $fixtureB_addr=$fixtureB;
  var $0=$fixtureA_addr;
  var $call=__ZNK9b2Fixture13GetFilterDataEv($0);
  $filterA=$call;
  var $1=$fixtureB_addr;
  var $call2=__ZNK9b2Fixture13GetFilterDataEv($1);
  $filterB=$call2;
  var $2=$filterA;
  var $groupIndex=$2+2;
  var $3=IHEAP[$groupIndex];
  var $conv=($3);
  var $4=$filterB;
  var $groupIndex3=$4+2;
  var $5=IHEAP[$groupIndex3];
  var $conv4=($5);
  var $cmp=($conv)==($conv4);
  if ($cmp) { __label__ = 1;; } else { __label__ = 3;; }
  $land_lhs_true$$if_end$25: do { 
    if (__label__ == 1) {

      var $6=$filterA;
      var $groupIndex5=$6+2;
      var $7=IHEAP[$groupIndex5];
      var $conv6=($7);
      var $cmp7=($conv6)!=0;
      if (!($cmp7)) { __label__ = 3;break $land_lhs_true$$if_end$25; }

      var $8=$filterA;
      var $groupIndex8=$8+2;
      var $9=IHEAP[$groupIndex8];
      var $conv9=($9);
      var $cmp10=($conv9) > 0;
      $retval=$cmp10;
      __label__ = 6;break $land_lhs_true$$if_end$25;
    }
  } while(0);
  $return$$if_end$28: do { 
    if (__label__ == 3) {

      var $10=$filterA;
      var $maskBits=$10+1;
      var $11=IHEAP[$maskBits];
      var $conv11=($11);
      var $12=$filterB;
      var $categoryBits=$12;
      var $13=IHEAP[$categoryBits];
      var $conv12=($13);
      var $and=($conv12) & ($conv11);
      var $cmp13=($and)!=0;
      if ($cmp13) { __label__ = 4;; } else { var $18 = 0;__label__ = 5;; }
      $land_rhs$$land_end$30: do { 
        if (__label__ == 4) {

          var $14=$filterA;
          var $categoryBits14=$14;
          var $15=IHEAP[$categoryBits14];
          var $conv15=($15);
          var $16=$filterB;
          var $maskBits16=$16+1;
          var $17=IHEAP[$maskBits16];
          var $conv17=($17);
          var $and18=($conv17) & ($conv15);
          var $cmp19=($and18)!=0;
          var $18 = $cmp19;;
        }
      } while(0);

      var $18;
      var $frombool=($18);
      $collide=$frombool;
      var $19=$collide;
      var $tobool=((($19)) & 1);
      $retval=$tobool;
      ;
    }
  } while(0);

  var $20=$retval;
  ;
  return $20;
  return null;
}
__ZN15b2ContactFilter13ShouldCollideEP9b2FixtureS1_["X"]=1;

function __Z5benchv() {
  var __stackBase__  = STACKTOP; STACKTOP += 102913;
  var __label__;

  var $gravity=__stackBase__;
  var $world=__stackBase__+2;
  var $exn_slot;
  var $ehselector_slot;
  var $bd=__stackBase__+102562;
  var $ground;
  var $shape=__stackBase__+102578;
  var $ref_tmp=__stackBase__+102591;
  var $ref_tmp6=__stackBase__+102593;
  var $topBody;
  var $a;
  var $shape13=__stackBase__+102595;
  var $x=__stackBase__+102633;
  var $y=__stackBase__+102635;
  var $deltaX=__stackBase__+102637;
  var $deltaY=__stackBase__+102639;
  var $i;
  var $j;
  var $bd24=__stackBase__+102641;
  var $body;
  var $i37;
  var $times=__stackBase__+102657;
  var $i45;
  var $start;
  var $end;
  var $total;
  var $i63;
  __ZN6b2Vec2C1Eff($gravity, 0, -10);
  __ZN7b2WorldC2ERK6b2Vec2($world, $gravity);
  __ZN7b2World16SetAllowSleepingEb($world, 0);
  ;

  __ZN9b2BodyDefC1Ev($bd);
  var $call=__ZN7b2World10CreateBodyEPK9b2BodyDef($world, $bd);
  ;

  $ground=$call;
  __ZN11b2EdgeShapeC1Ev($shape);
  ;

  __ZN6b2Vec2C1Eff($ref_tmp, -40, 0);
  __ZN6b2Vec2C1Eff($ref_tmp6, 40, 0);
  __ZN11b2EdgeShape3SetERK6b2Vec2S2_($shape, $ref_tmp, $ref_tmp6);
  ;

  var $0=$ground;
  var $1=$shape;
  var $call10=__ZN6b2Body13CreateFixtureEPK7b2Shapef($0, $1, 0);
  ;

  __ZN11b2EdgeShapeD1Ev($shape);
  ;

  $a=0.5;
  __ZN14b2PolygonShapeC1Ev($shape13);
  ;

  var $2=$a;
  var $3=$a;
  __ZN14b2PolygonShape8SetAsBoxEff($shape13, $2, $3);
  ;

  __ZN6b2Vec2C1Eff($x, -7, 0.75);
  __ZN6b2Vec2C1Ev($y);
  __ZN6b2Vec2C1Eff($deltaX, 0.5625, 1);
  __ZN6b2Vec2C1Eff($deltaY, 1.125, 0);
  $i=0;
  var $4=$y;
  var $5=$x;
  var $type=$bd24;
  var $position=$bd24+1;
  var $6=$position;
  var $7=$y;
  var $8=$shape13;
  var $9 = 0;;
  $for_cond$45: while(1) { 

    var $9;
    var $cmp=($9) < 40;
    if (!($cmp)) { __label__ = 24;break $for_cond$45; }

    IHEAP[$4]=IHEAP[$5]; FHEAP[$4]=FHEAP[$5]; ; IHEAP[$4+1]=IHEAP[$5+1]; FHEAP[$4+1]=FHEAP[$5+1]; ;
    var $10=$i;
    $j=$10;
    var $11 = $10;;
    $for_cond21$48: while(1) { 

      var $11;
      var $cmp22=($11) < 40;
      if (!($cmp22)) { __label__ = 23;break $for_cond21$48; }

      __ZN9b2BodyDefC1Ev($bd24);
      IHEAP[$type]=2;
      IHEAP[$6]=IHEAP[$7]; FHEAP[$6]=FHEAP[$7]; ; IHEAP[$6+1]=IHEAP[$7+1]; FHEAP[$6+1]=FHEAP[$7+1]; ;
      var $call27=__ZN7b2World10CreateBodyEPK9b2BodyDef($world, $bd24);
      ;

      $body=$call27;
      var $12=$body;
      var $call29=__ZN6b2Body13CreateFixtureEPK7b2Shapef($12, $8, 5);
      ;

      var $13=$body;
      $topBody=$13;
      __ZN6b2Vec2pLERKS_($y, $deltaY);
      var $14=$j;
      var $inc=($14)+1;
      $j=$inc;
      var $11 = $inc;;
    }

    __ZN6b2Vec2pLERKS_($x, $deltaX);
    var $22=$i;
    var $inc33=($22)+1;
    $i=$inc33;
    var $9 = $inc33;;
  }

  __ZN14b2PolygonShapeD1Ev($shape13);
  ;

  $i37=0;
  var $23 = 0;;
  $for_cond38$56: while(1) { 

    var $23;
    var $cmp39=($23) < 64;
    if (!($cmp39)) { __label__ = 29;break $for_cond38$56; }

    __ZN7b2World4StepEfii($world, 0.01666666753590107, 3, 3);
    ;

    var $24=$i37;
    var $inc43=($24)+1;
    $i37=$inc43;
    var $23 = $inc43;;
  }

  $i45=0;
  var $25 = 0;;
  $for_cond46$61: while(1) { 

    var $25;
    var $cmp47=($25) < 256;
    if (!($cmp47)) { __label__ = 35;break $for_cond46$61; }

    var $call50=_clock();
    ;

    $start=$call50;
    __ZN7b2World4StepEfii($world, 0.01666666753590107, 3, 3);
    ;

    var $call53=_clock();
    ;

    $end=$call53;
    var $26=$end;
    var $27=$start;
    var $sub=($26)-($27);
    var $28=$i45;
    var $arrayidx=$times+$28;
    IHEAP[$arrayidx]=$sub;
    var $29=$end;
    var $30=$start;
    var $sub54=($29)-($30);
    var $conv=($sub54);
    var $div=($conv)/1000;
    var $mul=($div)*1000;
    var $conv55=($mul);
    var $call57=_printf(__str440, allocate([$conv55], "double", ALLOC_STACK));
    var $31=$i45;
    var $inc59=($31)+1;
    $i45=$inc59;
    var $25 = $inc59;;
  }

  var $putchar=_putchar(10);
  $total=0;
  $i63=0;
  ;
  $for_body66$68: while(1) { 

    var $32=$i63;
    var $arrayidx67=$times+$32;
    var $33=IHEAP[$arrayidx67];
    var $34=$total;
    var $add=($34)+($33);
    $total=$add;
    var $35=$i63;
    var $inc69=($35)+1;
    $i63=$inc69;
    var $cmp65=($inc69) < 256;
    if (!($cmp65)) { __label__ = 37;break $for_body66$68; }
  }

  var $36=$total;
  var $conv71=($36);
  var $div72=($conv71)/256;
  var $div73=($div72)/1000;
  var $mul74=($div73)*1000;
  var $conv75=($mul74);
  var $call77=_printf(__str440, allocate([$conv75], "double", ALLOC_STACK));
  __ZN7b2WorldD2Ev($world);
  STACKTOP = __stackBase__;
  return;
  return;
}
__Z5benchv["X"]=1;

  
  function _memset(ptr, value, num) {
      for (var mspi = 0; mspi < num; mspi++) {
  IHEAP[ptr+mspi]=value; FHEAP[ptr+mspi]=value
  }
    }var _llvm_memset_p0i8_i32=_memset;

  function ___assert_func(filename, line, func, condition) {
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [Pointer_stringify(filename), line, Pointer_stringify(func)];
    }

  
  function _memcpy(dest, src, num, idunno) {
      for (var mcpi_s=src,mcpi_e=src+num,mcpi_d=dest; mcpi_s<mcpi_e; mcpi_s++, mcpi_d++) {
    IHEAP[mcpi_d] = IHEAP[mcpi_s]; FHEAP[mcpi_d] = FHEAP[mcpi_s];
  };
    }var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  var _sinf=Math.sin;

  var _cosf=Math.cos;

  function ___gxx_personality_v0() {
    }
var __ZSt9terminatev; // stub for __ZSt9terminatev

  
  function _free(){}var __ZdlPv=_free;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  var _sqrtf=Math.sqrt;

  function _llvm_lifetime_start() {}

  function _llvm_lifetime_end() {}

  
  function _atexit(func, arg) {
      __ATEXIT__.push({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;

  var _expf=Math.exp;

  var _atan2f=Math.atan2;

  function _malloc(bytes) {
      return Runtime.staticAlloc(bytes || 1); // accept 0 as an input because libc implementations tend to
    }

var _llvm_va_start; // stub for _llvm_va_start

  
  
  
  
  
  var ERRNO_CODES={E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTRECOVERABLE:131,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOVERFLOW:75,EOWNERDEAD:130,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18};
  
  function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      if (!___setErrNo.ret) ___setErrNo.ret = allocate([0], 'i32', ALLOC_STATIC);
      IHEAP[___setErrNo.ret]=value
      return value;
    }
  
  var _stdin=0;
  
  var _stdout=0;
  
  var _stderr=0;
  
  var __impure_ptr=0;var FS={currentPath:"/",nextInode:2,streams:[null],ignorePermissions:true,absolutePath:function (relative, base) {
        if (typeof relative !== 'string') return null;
        if (base === undefined) base = FS.currentPath;
        if (relative && relative[0] == '/') base = '';
        var full = base + '/' + relative;
        var parts = full.split('/').reverse();
        var absolute = [''];
        while (parts.length) {
          var part = parts.pop();
          if (part == '' || part == '.') {
            // Nothing.
          } else if (part == '..') {
            if (absolute.length > 1) absolute.pop();
          } else {
            absolute.push(part);
          }
        }
        return absolute.length == 1 ? '/' : absolute.join('/');
      },analyzePath:function (path, dontResolveLastLink, linksVisited) {
        var ret = {
          isRoot: false,
          exists: false,
          error: 0,
          name: null,
          path: null,
          object: null,
          parentExists: false,
          parentPath: null,
          parentObject: null
        };
        path = FS.absolutePath(path);
        if (path == '/') {
          ret.isRoot = true;
          ret.exists = ret.parentExists = true;
          ret.name = '/';
          ret.path = ret.parentPath = '/';
          ret.object = ret.parentObject = FS.root;
        } else if (path !== null) {
          linksVisited = linksVisited || 0;
          path = path.slice(1).split('/');
          var current = FS.root;
          var traversed = [''];
          while (path.length) {
            if (path.length == 1 && current.isFolder) {
              ret.parentExists = true;
              ret.parentPath = traversed.length == 1 ? '/' : traversed.join('/');
              ret.parentObject = current;
              ret.name = path[0];
            }
            var target = path.shift();
            if (!current.isFolder) {
              ret.error = ERRNO_CODES.ENOTDIR;
              break;
            } else if (!current.read) {
              ret.error = ERRNO_CODES.EACCES;
              break;
            } else if (!current.contents.hasOwnProperty(target)) {
              ret.error = ERRNO_CODES.ENOENT;
              break;
            }
            current = current.contents[target];
            if (current.link && !(dontResolveLastLink && path.length == 0)) {
              if (linksVisited > 40) { // Usual Linux SYMLOOP_MAX.
                ret.error = ERRNO_CODES.ELOOP;
                break;
              }
              var link = FS.absolutePath(current.link, traversed.join('/'));
              return FS.analyzePath([link].concat(path).join('/'),
                                    dontResolveLastLink, linksVisited + 1);
            }
            traversed.push(target);
            if (path.length == 0) {
              ret.exists = true;
              ret.path = traversed.join('/');
              ret.object = current;
            }
          }
          return ret;
        }
        return ret;
      },findObject:function (path, dontResolveLastLink) {
        FS.ensureRoot();
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },createObject:function (parent, name, properties, canRead, canWrite) {
        if (!parent) parent = '/';
        if (typeof parent === 'string') parent = FS.findObject(parent);
  
        if (!parent) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent path must exist.');
        }
        if (!parent.isFolder) {
          ___setErrNo(ERRNO_CODES.ENOTDIR);
          throw new Error('Parent must be a folder.');
        }
        if (!parent.write && !FS.ignorePermissions) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent folder must be writeable.');
        }
        if (!name || name == '.' || name == '..') {
          ___setErrNo(ERRNO_CODES.ENOENT);
          throw new Error('Name must not be empty.');
        }
        if (parent.contents.hasOwnProperty(name)) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          throw new Error("Can't overwrite object.");
        }
  
        parent.contents[name] = {
          read: canRead === undefined ? true : canRead,
          write: canWrite === undefined ? false : canWrite,
          timestamp: Date.now(),
          inodeNumber: FS.nextInode++
        };
        for (var key in properties) {
          if (properties.hasOwnProperty(key)) {
            parent.contents[name][key] = properties[key];
          }
        }
  
        return parent.contents[name];
      },createFolder:function (parent, name, canRead, canWrite) {
        var properties = {isFolder: true, isDevice: false, contents: {}};
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createPath:function (parent, path, canRead, canWrite) {
        var current = FS.findObject(parent);
        if (current === null) throw new Error('Invalid parent.');
        path = path.split('/').reverse();
        while (path.length) {
          var part = path.pop();
          if (!part) continue;
          if (!current.contents.hasOwnProperty(part)) {
            FS.createFolder(current, part, canRead, canWrite);
          }
          current = current.contents[part];
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        properties.isFolder = false;
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createDataFile:function (parent, name, data, canRead, canWrite) {
        if (typeof data === 'string') {
          var dataArray = [];
          for (var i = 0; i < data.length; i++) dataArray.push(data.charCodeAt(i));
          data = dataArray;
        }
        var properties = {isDevice: false, contents: data};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        var properties = {isDevice: false, url: url};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var properties = {isDevice: false, link: target};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createDevice:function (parent, name, input, output) {
        if (!(input || output)) {
          throw new Error('A device must have at least one callback defined.');
        }
        var ops = {isDevice: true, input: input, output: output};
        return FS.createFile(parent, name, ops, Boolean(input), Boolean(output));
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          // Browser.
          // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
          var xhr = new XMLHttpRequest();
          xhr.open('GET', obj.url, false);
  
          // Some hints to the browser that we want binary data.
          if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
          if (xhr.overrideMimeType) {
            xhr.overrideMimeType('text/plain; charset=x-user-defined');
          }
  
          xhr.send(null);
          if (xhr.status != 200 && xhr.status != 0) success = false;
          if (xhr.response !== undefined) {
            obj.contents = new Uint8Array(xhr.response || []);
          } else {
            obj.contents = intArrayFromString(xhr.responseText || '', true);
          }
        } else if (typeof read !== 'undefined') {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(read(obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },ensureRoot:function () {
        if (FS.root) return;
        // The main file system tree. All the contents are inside this.
        FS.root = {
          read: true,
          write: false,
          isFolder: true,
          isDevice: false,
          timestamp: Date.now(),
          inodeNumber: 1,
          contents: {}
        };
      },init:function (input, output, error) {
        // Make sure we initialize only once.
        if (FS.init.initialized) return;
        FS.init.initialized = true;
  
        FS.ensureRoot();
  
        // Default handlers.
        if (!input) input = function() {
          if (!input.cache || !input.cache.length) {
            var result;
            if (typeof window != 'undefined' &&
                typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
            }
            if (!result) result = '';
            input.cache = intArrayFromString(result + '\n', true);
          }
          return input.cache.shift();
        };
        if (!output) output = function(val) {
          if (val === null || val === '\n'.charCodeAt(0)) {
            output.printer(output.buffer.join(''));
            output.buffer = [];
          } else {
            output.buffer.push(String.fromCharCode(val));
          }
        };
        if (!output.printer) output.printer = function(msg) {
          if (console && console.log) {
            console.log(msg);
          } else {
            print(msg);
          }
        }
        if (!output.buffer) output.buffer = [];
        if (!error) error = output;
  
        // Create the temporary folder.
        FS.createFolder('/', 'tmp', true, true);
  
        // Create the I/O devices.
        var devFolder = FS.createFolder('/', 'dev', true, false);
        var stdin = FS.createDevice(devFolder, 'stdin', input);
        var stdout = FS.createDevice(devFolder, 'stdout', null, output);
        var stderr = FS.createDevice(devFolder, 'stderr', null, error);
        FS.createDevice(devFolder, 'tty', input, output);
  
        // Create default streams.
        FS.streams[1] = {
          path: '/dev/stdin',
          object: stdin,
          position: 0,
          isRead: true,
          isWrite: false,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[2] = {
          path: '/dev/stdout',
          object: stdout,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[3] = {
          path: '/dev/stderr',
          object: stderr,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        _stdin = allocate([1], 'void*', ALLOC_STATIC);
        _stdout = allocate([2], 'void*', ALLOC_STATIC);
        _stderr = allocate([3], 'void*', ALLOC_STATIC);
  
        // Newlib initialization
        FS.streams[_stdin] = FS.streams[1];
        FS.streams[_stdout] = FS.streams[2];
        FS.streams[_stderr] = FS.streams[3];
        __impure_ptr = allocate([ allocate(
          [0, _stdin, _stdout, _stderr],
          'void*', ALLOC_STATIC) ], 'void*', ALLOC_STATIC);
      },quit:function () {
        if (!FS.init.initialized) return;
        // Flush any partially-printed lines in stdout and stderr
        if (FS.streams[2].object.output.buffer.length > 0) FS.streams[2].object.output('\n'.charCodeAt(0));
        if (FS.streams[3].object.output.buffer.length > 0) FS.streams[3].object.output('\n'.charCodeAt(0));
      }};
  
  
  
  
  
  
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var contents = stream.object.contents;
        while (contents.length < offset) contents.push(0);
        for (var i = 0; i < nbyte; i++) {
          contents[offset + i] = IHEAPU[buf+i];
        }
        stream.object.timestamp = Date.now();
        return i;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        if (stream.object.isDevice) {
          if (stream.object.output) {
            for (var i = 0; i < nbyte; i++) {
              try {
                stream.object.output(IHEAP[buf+i]);
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
            }
            stream.object.timestamp = Date.now();
            return i;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var bytesWritten = _pwrite(fildes, buf, nbyte, stream.position);
          if (bytesWritten != -1) stream.position += bytesWritten;
          return bytesWritten;
        }
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return -1;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  
  function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      var getNextArg = function(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'float' || type === 'double') {
          ret = FHEAP[varargs+argIndex];
        } else {
          ret = IHEAP[varargs+argIndex];
        }
        argIndex += Runtime.getNativeFieldSize(type);
        return Number(ret);
      };
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = IHEAP[textIndex];
        if (curr === 0) break;
        next = IHEAP[textIndex+1];
        if (curr == '%'.charCodeAt(0)) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          flagsLoop: while (1) {
            switch (next) {
              case '+'.charCodeAt(0):
                flagAlwaysSigned = true;
                break;
              case '-'.charCodeAt(0):
                flagLeftAlign = true;
                break;
              case '#'.charCodeAt(0):
                flagAlternative = true;
                break;
              case '0'.charCodeAt(0):
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              default:
                break flagsLoop;
            }
            textIndex++;
            next = IHEAP[textIndex+1];
          }
  
          // Handle width.
          var width = 0;
          if (next == '*'.charCodeAt(0)) {
            width = getNextArg('i32');
            textIndex++;
            next = IHEAP[textIndex+1];
          } else {
            while (next >= '0'.charCodeAt(0) && next <= '9'.charCodeAt(0)) {
              width = width * 10 + (next - '0'.charCodeAt(0));
              textIndex++;
              next = IHEAP[textIndex+1];
            }
          }
  
          // Handle precision.
          var precisionSet = false;
          if (next == '.'.charCodeAt(0)) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = IHEAP[textIndex+1];
            if (next == '*'.charCodeAt(0)) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = IHEAP[textIndex+1];
                if (precisionChr < '0'.charCodeAt(0) ||
                    precisionChr > '9'.charCodeAt(0)) break;
                precision = precision * 10 + (precisionChr - '0'.charCodeAt(0));
                textIndex++;
              }
            }
            next = IHEAP[textIndex+1];
          } else {
            var precision = 6; // Standard default.
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = IHEAP[textIndex+2];
              if (nextNext == 'h'.charCodeAt(0)) {
                textIndex++;
                argSize = 1; // char
              } else {
                argSize = 2; // short
              }
              break;
            case 'l':
              var nextNext = IHEAP[textIndex+2];
              if (nextNext == 'l'.charCodeAt(0)) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = IHEAP[textIndex+1];
  
          // Handle type specifier.
          if (['d', 'i', 'u', 'o', 'x', 'X', 'p'].indexOf(String.fromCharCode(next)) != -1) {
            // Integer.
            var signed = next == 'd'.charCodeAt(0) || next == 'i'.charCodeAt(0);
            argSize = argSize || 4;
            var currArg = getNextArg('i' + (argSize * 8));
            // Truncate to requested size.
            if (argSize <= 4) {
              var limit = Math.pow(256, argSize) - 1;
              currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
            }
            // Format the number.
            var currAbsArg = Math.abs(currArg);
            var argText;
            var prefix = '';
            if (next == 'd'.charCodeAt(0) || next == 'i'.charCodeAt(0)) {
              argText = reSign(currArg, 8 * argSize, 1).toString(10);
            } else if (next == 'u'.charCodeAt(0)) {
              argText = unSign(currArg, 8 * argSize, 1).toString(10);
              currArg = Math.abs(currArg);
            } else if (next == 'o'.charCodeAt(0)) {
              argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
            } else if (next == 'x'.charCodeAt(0) || next == 'X'.charCodeAt(0)) {
              prefix = flagAlternative ? '0x' : '';
              if (currArg < 0) {
                // Represent negative numbers in hex as 2's complement.
                currArg = -currArg;
                argText = (currAbsArg - 1).toString(16);
                var buffer = [];
                for (var i = 0; i < argText.length; i++) {
                  buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                }
                argText = buffer.join('');
                while (argText.length < argSize * 2) argText = 'f' + argText;
              } else {
                argText = currAbsArg.toString(16);
              }
              if (next == 'X'.charCodeAt(0)) {
                prefix = prefix.toUpperCase();
                argText = argText.toUpperCase();
              }
            } else if (next == 'p'.charCodeAt(0)) {
              if (currAbsArg === 0) {
                argText = '(nil)';
              } else {
                prefix = '0x';
                argText = currAbsArg.toString(16);
              }
            }
            if (precisionSet) {
              while (argText.length < precision) {
                argText = '0' + argText;
              }
            }
  
            // Add sign if needed
            if (flagAlwaysSigned) {
              if (currArg < 0) {
                prefix = '-' + prefix;
              } else {
                prefix = '+' + prefix;
              }
            }
  
            // Add padding.
            while (prefix.length + argText.length < width) {
              if (flagLeftAlign) {
                argText += ' ';
              } else {
                if (flagZeroPad) {
                  argText = '0' + argText;
                } else {
                  prefix = ' ' + prefix;
                }
              }
            }
  
            // Insert the result into the buffer.
            argText = prefix + argText;
            argText.split('').forEach(function(chr) {
              ret.push(chr.charCodeAt(0));
            });
          } else if (['f', 'F', 'e', 'E', 'g', 'G'].indexOf(String.fromCharCode(next)) != -1) {
            // Float.
            var currArg = getNextArg(argSize === 4 ? 'float' : 'double');
            var argText;
  
            if (isNaN(currArg)) {
              argText = 'nan';
              flagZeroPad = false;
            } else if (!isFinite(currArg)) {
              argText = (currArg < 0 ? '-' : '') + 'inf';
              flagZeroPad = false;
            } else {
              var isGeneral = false;
              var effectivePrecision = Math.min(precision, 20);
  
              // Convert g/G to f/F or e/E, as per:
              // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
              if (next == 'g'.charCodeAt(0) || next == 'G'.charCodeAt(0)) {
                isGeneral = true;
                precision = precision || 1;
                var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                if (precision > exponent && exponent >= -4) {
                  next = ((next == 'g'.charCodeAt(0)) ? 'f' : 'F').charCodeAt(0);
                  precision -= exponent + 1;
                } else {
                  next = ((next == 'g'.charCodeAt(0)) ? 'e' : 'E').charCodeAt(0);
                  precision--;
                }
                effectivePrecision = Math.min(precision, 20);
              }
  
              if (next == 'e'.charCodeAt(0) || next == 'E'.charCodeAt(0)) {
                argText = currArg.toExponential(effectivePrecision);
                // Make sure the exponent has at least 2 digits.
                if (/[eE][-+]\d$/.test(argText)) {
                  argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                }
              } else if (next == 'f'.charCodeAt(0) || next == 'F'.charCodeAt(0)) {
                argText = currArg.toFixed(effectivePrecision);
              }
  
              var parts = argText.split('e');
              if (isGeneral && !flagAlternative) {
                // Discard trailing zeros and periods.
                while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                       (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                  parts[0] = parts[0].slice(0, -1);
                }
              } else {
                // Make sure we have a period in alternative mode.
                if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                // Zero pad until required precision.
                while (precision > effectivePrecision++) parts[0] += '0';
              }
              argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
              // Capitalize 'E' if needed.
              if (next == 'E'.charCodeAt(0)) argText = argText.toUpperCase();
  
              // Add sign.
              if (flagAlwaysSigned && currArg >= 0) {
                argText = '+' + argText;
              }
            }
  
            // Add padding.
            while (argText.length < width) {
              if (flagLeftAlign) {
                argText += ' ';
              } else {
                if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                  argText = argText[0] + '0' + argText.slice(1);
                } else {
                  argText = (flagZeroPad ? '0' : ' ') + argText;
                }
              }
            }
  
            // Adjust case.
            if (next < 'a'.charCodeAt(0)) argText = argText.toUpperCase();
  
            // Insert the result into the buffer.
            argText.split('').forEach(function(chr) {
              ret.push(chr.charCodeAt(0));
            });
          } else if (next == 's'.charCodeAt(0)) {
            // String.
            var arg = getNextArg('i8*');
            var copiedString;
            if (arg) {
              copiedString = String_copy(arg);
              if (precisionSet && copiedString.length > precision) {
                copiedString = copiedString.slice(0, precision);
              }
            } else {
              copiedString = intArrayFromString('(null)', true);
            }
            if (!flagLeftAlign) {
              while (copiedString.length < width--) {
                ret.push(' '.charCodeAt(0));
              }
            }
            ret = ret.concat(copiedString);
            if (flagLeftAlign) {
              while (copiedString.length < width--) {
                ret.push(' '.charCodeAt(0));
              }
            }
          } else if (next == 'c'.charCodeAt(0)) {
            // Character.
            if (flagLeftAlign) ret.push(getNextArg('i8'));
            while (--width > 0) {
              ret.push(' '.charCodeAt(0));
            }
            if (!flagLeftAlign) ret.push(getNextArg('i8'));
          } else if (next == 'n'.charCodeAt(0)) {
            // Write the length written so far to the next parameter.
            var ptr = getNextArg('i32*');
            IHEAP[ptr]=ret.length
          } else if (next == '%'.charCodeAt(0)) {
            // Literal percent sign.
            ret.push(curr);
          } else {
            // Unknown specifiers remain untouched.
            for (var i = startTextIndex; i < textIndex + 2; i++) {
              ret.push(IHEAP[i]);
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = IHEAP[_stdout];
      return _fprintf(stdout, format, varargs);
    }
  var _vprintf=_printf;

  function _llvm_va_end() {}

  var _floorf=Math.floor;

  function _gettimeofday(ptr) {
      // %struct.timeval = type { i32, i32 }
      var indexes = Runtime.calculateStructAlignment({ fields: ['i32', 'i32'] });
      var now = Date.now();
      IHEAP[ptr+indexes[0]]=Math.floor(now/1000) // seconds
      IHEAP[ptr+indexes[1]]=Math.floor((now-1000*Math.floor(now/1000))*1000) // microseconds
      return 0;
    }

  function _clock() {
      if (_clock.start === undefined) _clock.start = Date.now();
      return Math.floor((Date.now() - _clock.start) * (1000/1000));
    }


  
  function _memmove(dest, src, num, idunno) {
      // not optimized!
      if (num === 0) return; // will confuse malloc if 0
      var tmp = _malloc(num);
      _memcpy(tmp, src, num);
      _memcpy(dest, tmp, num);
      _free(tmp);
    }
  var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  
  
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      IHEAP[_fputc.ret]=chr
      var ret = _write(stream, _fputc.ret, 1);
      if (ret == -1) {
        if (stream in FS.streams) FS.streams[stream].error = true;
        return -1;
      } else {
        return chr;
      }
    }
  function _putchar(c) {
      // int putchar(int c);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/putchar.html
      return _fputc(c, IHEAP[_stdout]);
    }



FS.init(); __ATEXIT__.push({ func: function() { FS.quit() } });
___setErrNo(0);
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);

// === Auto-generated postamble setup entry stuff ===

Module.callMain = function callMain(args) {
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 1-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_STATIC) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_STATIC));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_STATIC);

  return _main(argc, argv, 0);
}


var __ZN16b2BlockAllocator12s_blockSizesE;
var __ZN16b2BlockAllocator17s_blockSizeLookupE;
var __ZN16b2BlockAllocator28s_blockSizeLookupInitializedE;
var __str;
var ___PRETTY_FUNCTION____ZN16b2BlockAllocatorC2Ev;
var __str1;
var ___PRETTY_FUNCTION____ZN16b2BlockAllocator8AllocateEi;
var __str2;
var __str3;
var __str4;
var ___PRETTY_FUNCTION____ZN16b2BlockAllocator4FreeEPvi;
var __str5;
var ___PRETTY_FUNCTION____ZN6b2BodyC2EPK9b2BodyDefP7b2World;
var __str16;
var __str27;
var __str38;
var __str49;
var __str510;
var __str6;
var ___PRETTY_FUNCTION____ZN6b2Body7SetTypeE10b2BodyType;
var __str7;
var ___PRETTY_FUNCTION____ZN6b2Body13CreateFixtureEPK12b2FixtureDef;
var ___PRETTY_FUNCTION____ZN6b2Body14DestroyFixtureEP9b2Fixture;
var __str8;
var __str9;
var __str10;
var ___PRETTY_FUNCTION____ZN6b2Body13ResetMassDataEv;
var __str11;
var __str12;
var ___PRETTY_FUNCTION____ZN6b2Body11SetMassDataEPK10b2MassData;
var ___PRETTY_FUNCTION____ZN6b2Body12SetTransformERK6b2Vec2f;
var ___PRETTY_FUNCTION____ZN6b2Body9SetActiveEb;
var __str14;
var __str15;
var __str1611;
var __str17;
var __str18;
var __str19;
var __str20;
var __str21;
var __str22;
var __str23;
var __str24;
var __str25;
var __str26;
var __str2712;
var __str28;
var __str30;
var __str31;
var __ZTV23b2ChainAndCircleContact;
var __str33;
var ___PRETTY_FUNCTION____ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i;
var __ZTVN10__cxxabiv120__si_class_type_infoE;
var __ZTS23b2ChainAndCircleContact;
var __ZTVN10__cxxabiv117__class_type_infoE;
var __ZTS9b2Contact;
var __ZTI9b2Contact;
var __ZTI23b2ChainAndCircleContact;
var __ZTV7b2Shape;
var __ZTS7b2Shape;
var __ZTI7b2Shape;
var __ZTV24b2ChainAndPolygonContact;
var __str36;
var ___PRETTY_FUNCTION____ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i;
var __str137;
var __ZTS24b2ChainAndPolygonContact;
var __ZTI24b2ChainAndPolygonContact;
var __ZTV12b2ChainShape;
var __str39;
var ___PRETTY_FUNCTION____ZN12b2ChainShape10CreateLoopEPK6b2Vec2i;
var __str140;
var ___PRETTY_FUNCTION____ZN12b2ChainShape11CreateChainEPK6b2Vec2i;
var __str342;
var ___PRETTY_FUNCTION____ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei;
var __str443;
var ___PRETTY_FUNCTION____ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi;
var __str544;
var ___PRETTY_FUNCTION____ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi;
var __ZTS12b2ChainShape;
var __ZTI12b2ChainShape;
var __ZTV15b2CircleContact;
var __str47;
var ___PRETTY_FUNCTION____ZN15b2CircleContactC2EP9b2FixtureS1_;
var __str148;
var __ZTS15b2CircleContact;
var __ZTI15b2CircleContact;
var __ZTV13b2CircleShape;
var __ZTS13b2CircleShape;
var __ZTI13b2CircleShape;
var __str52;
var ___PRETTY_FUNCTION____Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_;
var __str153;
var __str58;
var ___PRETTY_FUNCTION____ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_;
var __str159;
var ___PRETTY_FUNCTION____ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_;
var __ZN9b2Contact11s_registersE;
var __ZN9b2Contact13s_initializedE;
var __str62;
var ___PRETTY_FUNCTION____ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_;
var __str163;
var __str264;
var ___PRETTY_FUNCTION____ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator;
var ___PRETTY_FUNCTION____ZN9b2Contact7DestroyEPS_P16b2BlockAllocator;
var __str365;
var __str466;
var __ZTV9b2Contact;
var _b2_defaultFilter;
var ___dso_handle;
var _b2_defaultListener;
var ___PRETTY_FUNCTION____ZNK13b2DynamicTree11GetUserDataEi;
var __str371;
var ___PRETTY_FUNCTION____ZN15b2GrowableStackIiLi256EE3PopEv;
var __str472;
var ___PRETTY_FUNCTION____ZNK13b2DynamicTree10GetFatAABBEi;
var __ZTV17b2ContactListener;
var __ZTS17b2ContactListener;
var __ZTI17b2ContactListener;

__globalConstructor__ = function() {
  __GLOBAL__I_a();
}

var __str77;
var ___PRETTY_FUNCTION____ZN15b2ContactSolverC2EP18b2ContactSolverDef;
var __str178;
var ___PRETTY_FUNCTION____ZN15b2ContactSolver29InitializeVelocityConstraintsEv;
var __str279;
var ___PRETTY_FUNCTION____ZN15b2ContactSolver24SolveVelocityConstraintsEv;
var __str380;
var __str481;
var ___PRETTY_FUNCTION____ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i;
var __str582;
var _b2_gjkCalls;
var _b2_gjkIters;
var _b2_gjkMaxIters;
var __str83;
var ___PRETTY_FUNCTION____ZN15b2DistanceProxy3SetEPK7b2Shapei;
var __str184;
var ___PRETTY_FUNCTION____Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput;
var ___PRETTY_FUNCTION____ZNK9b2Simplex9GetMetricEv;
var ___PRETTY_FUNCTION____ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_;
var __str386;
var ___PRETTY_FUNCTION____ZNK15b2DistanceProxy9GetVertexEi;
var __str487;
var ___PRETTY_FUNCTION____ZNK9b2Simplex18GetSearchDirectionEv;
var ___PRETTY_FUNCTION____ZNK9b2Simplex15GetClosestPointEv;
var ___PRETTY_FUNCTION____ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_;
var __str588;
var __ZTV15b2DistanceJoint;
var __str93;
var __str699;
var __ZTS15b2DistanceJoint;
var __ZTS7b2Joint;
var __ZTI7b2Joint;
var __ZTI15b2DistanceJoint;
var __ZTV6b2Draw;
var __ZTS6b2Draw;
var __ZTI6b2Draw;
var __str103;
var ___PRETTY_FUNCTION____ZN13b2DynamicTree12AllocateNodeEv;
var __str1104;
var ___PRETTY_FUNCTION____ZN13b2DynamicTree8FreeNodeEi;
var __str2105;
var __str3106;
var ___PRETTY_FUNCTION____ZN13b2DynamicTree12DestroyProxyEi;
var __str4107;
var __str5108;
var ___PRETTY_FUNCTION____ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2;
var ___PRETTY_FUNCTION____ZN13b2DynamicTree10InsertLeafEi;
var __str6109;
var __str7110;
var ___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi;
var __str8111;
var __str9112;
var __str10113;
var __str11114;
var __str12115;
var __str13116;
var __str14117;
var __str15118;
var __str16119;
var ___PRETTY_FUNCTION____ZNK13b2DynamicTree13ComputeHeightEi;
var ___PRETTY_FUNCTION____ZNK13b2DynamicTree17ValidateStructureEi;
var __str17120;
var __str18121;
var __str19122;
var __str20123;
var __str21124;
var __str22125;
var __str23126;
var __str24127;
var ___PRETTY_FUNCTION____ZNK13b2DynamicTree15ValidateMetricsEi;
var __str25128;
var __str26129;
var __str27130;
var ___PRETTY_FUNCTION____ZNK13b2DynamicTree8ValidateEv;
var __str28131;
var __str29132;
var __str30133;
var ___PRETTY_FUNCTION____ZNK13b2DynamicTree13GetMaxBalanceEv;
var __str31134;
var __ZTV22b2EdgeAndCircleContact;
var __str145;
var ___PRETTY_FUNCTION____ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_;
var __ZTS22b2EdgeAndCircleContact;
var __ZTI22b2EdgeAndCircleContact;
var __ZTV23b2EdgeAndPolygonContact;
var __str152;
var ___PRETTY_FUNCTION____ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_;
var __str1153;
var __ZTS23b2EdgeAndPolygonContact;
var __ZTI23b2EdgeAndPolygonContact;
var __ZTV11b2EdgeShape;
var __ZTS11b2EdgeShape;
var __ZTI11b2EdgeShape;
var __str164;
var ___PRETTY_FUNCTION____ZN9b2Fixture7DestroyEP16b2BlockAllocator;
var __str1165;
var ___PRETTY_FUNCTION____ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform;
var __str3167;
var __str4168;
var __str5169;
var __str6170;
var __str7171;
var __str8172;
var __str9173;
var __str10174;
var __str11175;
var __str12176;
var __str13177;
var __str14178;
var __str15179;
var __str16180;
var __str17181;
var __str18182;
var __str19183;
var __str20184;
var __str21185;
var __str22186;
var __str23187;
var __str24188;
var __str25189;
var __str26190;
var __str27191;
var __str28192;
var __str29193;
var __str30194;
var __str31195;
var __str32196;
var __str33197;
var __ZTV15b2FrictionJoint;
var __str214;
var ___PRETTY_FUNCTION____ZN15b2FrictionJoint11SetMaxForceEf;
var __str1215;
var ___PRETTY_FUNCTION____ZN15b2FrictionJoint12SetMaxTorqueEf;
var __str2216;
var __str3217;
var __str9223;
var __str10224;
var __ZTS15b2FrictionJoint;
var __ZTI15b2FrictionJoint;
var __ZTV11b2GearJoint;
var __str226;
var ___PRETTY_FUNCTION____ZN11b2GearJointC2EPK14b2GearJointDef;
var __str1227;
var __str2228;
var ___PRETTY_FUNCTION____ZN11b2GearJoint8SetRatioEf;
var __str3229;
var __str4230;
var __str8234;
var __str9235;
var __ZTS11b2GearJoint;
var __ZTI11b2GearJoint;
var __str239;
var ___PRETTY_FUNCTION____ZN8b2Island8SolveTOIERK10b2TimeStepii;
var __str1240;
var __str2241;
var __str242;
var ___PRETTY_FUNCTION____ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator;
var ___PRETTY_FUNCTION____ZN7b2Joint7DestroyEPS_P16b2BlockAllocator;
var __ZTV7b2Joint;
var ___PRETTY_FUNCTION____ZN7b2JointC2EPK10b2JointDef;
var __str2244;
var __str3245;
var _b2Vec2_zero;
var __ZTV12b2MouseJoint;
var __str253;
var ___PRETTY_FUNCTION____ZN12b2MouseJointC2EPK15b2MouseJointDef;
var __str1254;
var __str2255;
var __str3256;
var __str4257;
var ___PRETTY_FUNCTION____ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData;
var __str5258;
var __ZTS12b2MouseJoint;
var __ZTI12b2MouseJoint;
var __str6259;
var __ZTV25b2PolygonAndCircleContact;
var __str262;
var ___PRETTY_FUNCTION____ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_;
var __str2264;
var __ZTS25b2PolygonAndCircleContact;
var __ZTI25b2PolygonAndCircleContact;
var __ZTV16b2PolygonContact;
var __str269;
var ___PRETTY_FUNCTION____ZN16b2PolygonContactC2EP9b2FixtureS1_;
var __str1270;
var __str2271;
var __ZTS16b2PolygonContact;
var __ZTI16b2PolygonContact;
var __str276;
var ___PRETTY_FUNCTION____ZN14b2PolygonShape3SetEPK6b2Vec2i;
var __str1277;
var __str2278;
var ___PRETTY_FUNCTION____ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi;
var __str3279;
var ___PRETTY_FUNCTION____ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf;
var __str4280;
var __str5281;
var __ZTV14b2PolygonShape;
var __ZTS14b2PolygonShape;
var __ZTI14b2PolygonShape;
var ___PRETTY_FUNCTION____ZL15ComputeCentroidPK6b2Vec2i;
var __str6282;
var __ZTV16b2PrismaticJoint;
var __str283;
var ___PRETTY_FUNCTION____ZN16b2PrismaticJoint9SetLimitsEff;
var __str2285;
var __str11294;
var __str12295;
var __str15298;
var __ZTS16b2PrismaticJoint;
var __ZTI16b2PrismaticJoint;
var __str302;
var ___PRETTY_FUNCTION____ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f;
var __str1303;
var __ZTV13b2PulleyJoint;
var ___PRETTY_FUNCTION____ZN13b2PulleyJointC2EPK16b2PulleyJointDef;
var __str2304;
var __str3305;
var __str7309;
var __str8310;
var __str11313;
var __str12314;
var __str13315;
var __ZTS13b2PulleyJoint;
var __ZTI13b2PulleyJoint;
var __ZTV15b2RevoluteJoint;
var __str319;
var ___PRETTY_FUNCTION____ZN15b2RevoluteJoint9SetLimitsEff;
var __str1320;
var __str2321;
var __str9328;
var __str10329;
var __str11330;
var __ZTS15b2RevoluteJoint;
var __ZTI15b2RevoluteJoint;
var __str337;
var ___PRETTY_FUNCTION____ZN6b2Rope10InitializeEPK9b2RopeDef;
var __str1338;
var __ZTV11b2RopeJoint;
var __str339;
var __str6345;
var __ZTS11b2RopeJoint;
var __ZTI11b2RopeJoint;
var _b2_version;
var __str355;
var ___PRETTY_FUNCTION____ZN16b2StackAllocatorD2Ev;
var __str1356;
var __str2357;
var ___PRETTY_FUNCTION____ZN16b2StackAllocator8AllocateEi;
var __str3358;
var ___PRETTY_FUNCTION____ZN16b2StackAllocator4FreeEPv;
var __str4359;
var __str5360;
var _b2_toiCalls;
var _b2_toiIters;
var _b2_toiMaxIters;
var _b2_toiRootIters;
var _b2_toiMaxRootIters;
var __str366;
var ___PRETTY_FUNCTION____Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput;
var __str1367;
var ___PRETTY_FUNCTION____ZNK20b2SeparationFunction8EvaluateEiif;
var __str2368;
var ___PRETTY_FUNCTION____ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f;
var ___PRETTY_FUNCTION____ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f;
var __str5372;
var __ZTV11b2WeldJoint;
var __str379;
var __str6385;
var __ZTS11b2WeldJoint;
var __ZTI11b2WeldJoint;
var __ZTV12b2WheelJoint;
var __str391;
var __str1392;
var __str2393;
var __str3394;
var __str4395;
var __str5396;
var __str6397;
var __str7398;
var __str8399;
var __str9400;
var __str10401;
var __str11402;
var __str12403;
var __ZTS12b2WheelJoint;
var __ZTI12b2WheelJoint;
var __str406;
var ___PRETTY_FUNCTION____ZN7b2World10CreateBodyEPK9b2BodyDef;
var __str1407;
var ___PRETTY_FUNCTION____ZN7b2World11DestroyBodyEP6b2Body;
var __str2408;
var ___PRETTY_FUNCTION____ZN7b2World11CreateJointEPK10b2JointDef;
var ___PRETTY_FUNCTION____ZN7b2World12DestroyJointEP7b2Joint;
var __str3409;
var ___PRETTY_FUNCTION____ZN7b2World5SolveERK10b2TimeStep;
var __str4410;
var __str5411;
var ___PRETTY_FUNCTION____ZN7b2World8SolveTOIERK10b2TimeStep;
var __str6412;
var __str7413;
var ___PRETTY_FUNCTION____ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color;
var __str8414;
var __str9415;
var __str10416;
var __str11417;
var __str12418;
var __str13419;
var __str14420;
var __str15421;
var __str16422;
var __str17423;
var __str18424;
var __str19425;
var ___PRETTY_FUNCTION____ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput;
var __str20426;
var __str24433;
var ___PRETTY_FUNCTION____ZN7b2Sweep7AdvanceEf;
var __str25434;
var ___PRETTY_FUNCTION____ZN8b2Island3AddEP7b2Joint;
var __str26435;
var ___PRETTY_FUNCTION____ZN8b2Island3AddEP9b2Contact;
var __str27436;
var ___PRETTY_FUNCTION____ZN8b2Island3AddEP6b2Body;
var __str28437;
var __ZTV15b2ContactFilter;
var __ZTS15b2ContactFilter;
var __ZTI15b2ContactFilter;
var __str440;
var __ZN16b2BlockAllocatorC1Ev;
var __ZN16b2BlockAllocatorD1Ev;
var __ZN6b2BodyC1EPK9b2BodyDefP7b2World;
var __ZN6b2BodyD1Ev;
var __ZN12b2BroadPhaseC1Ev;
var __ZN12b2BroadPhaseD1Ev;
var __ZN23b2ChainAndCircleContactC1EP9b2FixtureiS1_i;
var __ZN24b2ChainAndPolygonContactC1EP9b2FixtureiS1_i;
var __ZN12b2ChainShapeD1Ev;
var __ZN15b2CircleContactC1EP9b2FixtureS1_;
var __ZN16b2ContactManagerC1Ev;
var __ZN15b2ContactSolverC1EP18b2ContactSolverDef;
var __ZN15b2ContactSolverD1Ev;
var __ZN15b2DistanceJointC1EPK18b2DistanceJointDef;
var __ZN13b2DynamicTreeC1Ev;
var __ZN13b2DynamicTreeD1Ev;
var __ZN22b2EdgeAndCircleContactC1EP9b2FixtureS1_;
var __ZN23b2EdgeAndPolygonContactC1EP9b2FixtureS1_;
var __ZN9b2FixtureC1Ev;
var __ZN15b2FrictionJointC1EPK18b2FrictionJointDef;
var __ZN11b2GearJointC1EPK14b2GearJointDef;
var __ZN8b2IslandC1EiiiP16b2StackAllocatorP17b2ContactListener;
var __ZN8b2IslandD1Ev;
var __ZN12b2MouseJointC1EPK15b2MouseJointDef;
var __ZN25b2PolygonAndCircleContactC1EP9b2FixtureS1_;
var __ZN16b2PolygonContactC1EP9b2FixtureS1_;
var __ZN16b2PrismaticJointC1EPK19b2PrismaticJointDef;
var __ZN13b2PulleyJointC1EPK16b2PulleyJointDef;
var __ZN15b2RevoluteJointC1EPK18b2RevoluteJointDef;
var __ZN6b2RopeC1Ev;
var __ZN6b2RopeD1Ev;
var __ZN11b2RopeJointC1EPK14b2RopeJointDef;
var __ZN16b2StackAllocatorC1Ev;
var __ZN16b2StackAllocatorD1Ev;
var __ZN7b2TimerC1Ev;
var __ZN11b2WeldJointC1EPK14b2WeldJointDef;
var __ZN12b2WheelJointC1EPK15b2WheelJointDef;
var __ZN7b2WorldC1ERK6b2Vec2;
var __ZN7b2WorldD1Ev;
__ZN16b2BlockAllocator12s_blockSizesE=allocate([16, 32, 64, 96, 128, 160, 192, 224, 256, 320, 384, 448, 512, 640], "i32", ALLOC_STATIC);
__ZN16b2BlockAllocator17s_blockSizeLookupE=allocate(641, "i8", ALLOC_STATIC);
__ZN16b2BlockAllocator28s_blockSizeLookupInitializedE=allocate(1, "i8", ALLOC_STATIC);
__str=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,109,109,111,110,47,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN16b2BlockAllocatorC2Ev=allocate([98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,58,58,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,40,41,0] /* b2BlockAllocator::b2 */, "i8", ALLOC_STATIC);
__str1=allocate([106,32,60,32,98,50,95,98,108,111,99,107,83,105,122,101,115,0] /* j < b2_blockSizes\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN16b2BlockAllocator8AllocateEi=allocate([118,111,105,100,32,42,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,58,58,65,108,108,111,99,97,116,101,40,105,110,116,51,50,41,0] /* void _b2BlockAllocat */, "i8", ALLOC_STATIC);
__str2=allocate([48,32,60,32,115,105,122,101,0] /* 0 < size\00 */, "i8", ALLOC_STATIC);
__str3=allocate([48,32,60,61,32,105,110,100,101,120,32,38,38,32,105,110,100,101,120,32,60,32,98,50,95,98,108,111,99,107,83,105,122,101,115,0] /* 0 <= index && index  */, "i8", ALLOC_STATIC);
__str4=allocate([98,108,111,99,107,67,111,117,110,116,32,42,32,98,108,111,99,107,83,105,122,101,32,60,61,32,98,50,95,99,104,117,110,107,83,105,122,101,0] /* blockCount _ blockSi */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN16b2BlockAllocator4FreeEPvi=allocate([118,111,105,100,32,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,58,58,70,114,101,101,40,118,111,105,100,32,42,44,32,105,110,116,51,50,41,0] /* void b2BlockAllocato */, "i8", ALLOC_STATIC);
__str5=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,98,50,66,111,100,121,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN6b2BodyC2EPK9b2BodyDefP7b2World=allocate([98,50,66,111,100,121,58,58,98,50,66,111,100,121,40,99,111,110,115,116,32,98,50,66,111,100,121,68,101,102,32,42,44,32,98,50,87,111,114,108,100,32,42,41,0] /* b2Body::b2Body(const */, "i8", ALLOC_STATIC);
__str16=allocate([98,100,45,62,112,111,115,105,116,105,111,110,46,73,115,86,97,108,105,100,40,41,0] /* bd->position.IsValid */, "i8", ALLOC_STATIC);
__str27=allocate([98,100,45,62,108,105,110,101,97,114,86,101,108,111,99,105,116,121,46,73,115,86,97,108,105,100,40,41,0] /* bd->linearVelocity.I */, "i8", ALLOC_STATIC);
__str38=allocate([98,50,73,115,86,97,108,105,100,40,98,100,45,62,97,110,103,108,101,41,0] /* b2IsValid(bd->angle) */, "i8", ALLOC_STATIC);
__str49=allocate([98,50,73,115,86,97,108,105,100,40,98,100,45,62,97,110,103,117,108,97,114,86,101,108,111,99,105,116,121,41,0] /* b2IsValid(bd->angula */, "i8", ALLOC_STATIC);
__str510=allocate([98,50,73,115,86,97,108,105,100,40,98,100,45,62,97,110,103,117,108,97,114,68,97,109,112,105,110,103,41,32,38,38,32,98,100,45,62,97,110,103,117,108,97,114,68,97,109,112,105,110,103,32,62,61,32,48,46,48,102,0] /* b2IsValid(bd->angula */, "i8", ALLOC_STATIC);
__str6=allocate([98,50,73,115,86,97,108,105,100,40,98,100,45,62,108,105,110,101,97,114,68,97,109,112,105,110,103,41,32,38,38,32,98,100,45,62,108,105,110,101,97,114,68,97,109,112,105,110,103,32,62,61,32,48,46,48,102,0] /* b2IsValid(bd->linear */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN6b2Body7SetTypeE10b2BodyType=allocate([118,111,105,100,32,98,50,66,111,100,121,58,58,83,101,116,84,121,112,101,40,98,50,66,111,100,121,84,121,112,101,41,0] /* void b2Body::SetType */, "i8", ALLOC_STATIC);
__str7=allocate([109,95,119,111,114,108,100,45,62,73,115,76,111,99,107,101,100,40,41,32,61,61,32,102,97,108,115,101,0] /* m_world->IsLocked()  */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN6b2Body13CreateFixtureEPK12b2FixtureDef=allocate([98,50,70,105,120,116,117,114,101,32,42,98,50,66,111,100,121,58,58,67,114,101,97,116,101,70,105,120,116,117,114,101,40,99,111,110,115,116,32,98,50,70,105,120,116,117,114,101,68,101,102,32,42,41,0] /* b2Fixture _b2Body::C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN6b2Body14DestroyFixtureEP9b2Fixture=allocate([118,111,105,100,32,98,50,66,111,100,121,58,58,68,101,115,116,114,111,121,70,105,120,116,117,114,101,40,98,50,70,105,120,116,117,114,101,32,42,41,0] /* void b2Body::Destroy */, "i8", ALLOC_STATIC);
__str8=allocate([102,105,120,116,117,114,101,45,62,109,95,98,111,100,121,32,61,61,32,116,104,105,115,0] /* fixture->m_body == t */, "i8", ALLOC_STATIC);
__str9=allocate([109,95,102,105,120,116,117,114,101,67,111,117,110,116,32,62,32,48,0] /* m_fixtureCount > 0\0 */, "i8", ALLOC_STATIC);
__str10=allocate([102,111,117,110,100,0] /* found\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN6b2Body13ResetMassDataEv=allocate([118,111,105,100,32,98,50,66,111,100,121,58,58,82,101,115,101,116,77,97,115,115,68,97,116,97,40,41,0] /* void b2Body::ResetMa */, "i8", ALLOC_STATIC);
__str11=allocate([109,95,116,121,112,101,32,61,61,32,98,50,95,100,121,110,97,109,105,99,66,111,100,121,0] /* m_type == b2_dynamic */, "i8", ALLOC_STATIC);
__str12=allocate([109,95,73,32,62,32,48,46,48,102,0] /* m_I > 0.0f\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN6b2Body11SetMassDataEPK10b2MassData=allocate([118,111,105,100,32,98,50,66,111,100,121,58,58,83,101,116,77,97,115,115,68,97,116,97,40,99,111,110,115,116,32,98,50,77,97,115,115,68,97,116,97,32,42,41,0] /* void b2Body::SetMass */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN6b2Body12SetTransformERK6b2Vec2f=allocate([118,111,105,100,32,98,50,66,111,100,121,58,58,83,101,116,84,114,97,110,115,102,111,114,109,40,99,111,110,115,116,32,98,50,86,101,99,50,32,38,44,32,102,108,111,97,116,51,50,41,0] /* void b2Body::SetTran */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN6b2Body9SetActiveEb=allocate([118,111,105,100,32,98,50,66,111,100,121,58,58,83,101,116,65,99,116,105,118,101,40,98,111,111,108,41,0] /* void b2Body::SetActi */, "i8", ALLOC_STATIC);
__str14=allocate([32,32,98,50,66,111,100,121,68,101,102,32,98,100,59,10,0] /*   b2BodyDef bd;\0A\0 */, "i8", ALLOC_STATIC);
__str15=allocate([32,32,98,100,46,116,121,112,101,32,61,32,98,50,66,111,100,121,84,121,112,101,40,37,100,41,59,10,0] /*   bd.type = b2BodyTy */, "i8", ALLOC_STATIC);
__str1611=allocate([32,32,98,100,46,112,111,115,105,116,105,111,110,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*   bd.position.Set(%. */, "i8", ALLOC_STATIC);
__str17=allocate([32,32,98,100,46,97,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   bd.angle = %.15lef */, "i8", ALLOC_STATIC);
__str18=allocate([32,32,98,100,46,108,105,110,101,97,114,86,101,108,111,99,105,116,121,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*   bd.linearVelocity. */, "i8", ALLOC_STATIC);
__str19=allocate([32,32,98,100,46,97,110,103,117,108,97,114,86,101,108,111,99,105,116,121,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   bd.angularVelocity */, "i8", ALLOC_STATIC);
__str20=allocate([32,32,98,100,46,108,105,110,101,97,114,68,97,109,112,105,110,103,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   bd.linearDamping = */, "i8", ALLOC_STATIC);
__str21=allocate([32,32,98,100,46,97,110,103,117,108,97,114,68,97,109,112,105,110,103,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   bd.angularDamping  */, "i8", ALLOC_STATIC);
__str22=allocate([32,32,98,100,46,97,108,108,111,119,83,108,101,101,112,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*   bd.allowSleep = bo */, "i8", ALLOC_STATIC);
__str23=allocate([32,32,98,100,46,97,119,97,107,101,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*   bd.awake = bool(%d */, "i8", ALLOC_STATIC);
__str24=allocate([32,32,98,100,46,102,105,120,101,100,82,111,116,97,116,105,111,110,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*   bd.fixedRotation = */, "i8", ALLOC_STATIC);
__str25=allocate([32,32,98,100,46,98,117,108,108,101,116,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*   bd.bullet = bool(% */, "i8", ALLOC_STATIC);
__str26=allocate([32,32,98,100,46,97,99,116,105,118,101,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*   bd.active = bool(% */, "i8", ALLOC_STATIC);
__str2712=allocate([32,32,98,100,46,103,114,97,118,105,116,121,83,99,97,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   bd.gravityScale =  */, "i8", ALLOC_STATIC);
__str28=allocate([32,32,98,111,100,105,101,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,66,111,100,121,40,38,98,100,41,59,10,0] /*   bodies[%d] = m_wor */, "i8", ALLOC_STATIC);
__str30=allocate([32,32,123,10,0] /*   {\0A\00 */, "i8", ALLOC_STATIC);
__str31=allocate([32,32,125,10,0] /*   }\0A\00 */, "i8", ALLOC_STATIC);
__ZTV23b2ChainAndCircleContact=allocate([0, 0, 36, 38, 40], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str33=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,67,104,97,105,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i=allocate([98,50,67,104,97,105,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,58,58,98,50,67,104,97,105,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,40,98,50,70,105,120,116,117,114,101,32,42,44,32,105,110,116,51,50,44,32,98,50,70,105,120,116,117,114,101,32,42,44,32,105,110,116,51,50,41,0] /* b2ChainAndCircleCont */, "i8", ALLOC_STATIC);
__ZTS23b2ChainAndCircleContact=allocate([50,51,98,50,67,104,97,105,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0] /* 23b2ChainAndCircleCo */, "i8", ALLOC_STATIC);
__ZTS9b2Contact=allocate([57,98,50,67,111,110,116,97,99,116,0] /* 9b2Contact\00 */, "i8", ALLOC_STATIC);
__ZTI9b2Contact=allocate(2, "i8*", ALLOC_STATIC);
__ZTI23b2ChainAndCircleContact=allocate(3, "i8*", ALLOC_STATIC);
__ZTV7b2Shape=allocate([0, 0, 42, 44, 46, 46, 46, 46, 46, 46], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__ZTS7b2Shape=allocate([55,98,50,83,104,97,112,101,0] /* 7b2Shape\00 */, "i8", ALLOC_STATIC);
__ZTI7b2Shape=allocate(2, "i8*", ALLOC_STATIC);
__ZTV24b2ChainAndPolygonContact=allocate([0, 0, 48, 50, 52], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str36=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,67,104,97,105,110,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i=allocate([98,50,67,104,97,105,110,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,58,58,98,50,67,104,97,105,110,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,40,98,50,70,105,120,116,117,114,101,32,42,44,32,105,110,116,51,50,44,32,98,50,70,105,120,116,117,114,101,32,42,44,32,105,110,116,51,50,41,0] /* b2ChainAndPolygonCon */, "i8", ALLOC_STATIC);
__str137=allocate([109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,99,104,97,105,110,0] /* m_fixtureA->GetType( */, "i8", ALLOC_STATIC);
__ZTS24b2ChainAndPolygonContact=allocate([50,52,98,50,67,104,97,105,110,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0] /* 24b2ChainAndPolygonC */, "i8", ALLOC_STATIC);
__ZTI24b2ChainAndPolygonContact=allocate(3, "i8*", ALLOC_STATIC);
__ZTV12b2ChainShape=allocate([0, 0, 54, 56, 58, 60, 62, 64, 66, 68], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str39=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,83,104,97,112,101,115,47,98,50,67,104,97,105,110,83,104,97,112,101,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN12b2ChainShape10CreateLoopEPK6b2Vec2i=allocate([118,111,105,100,32,98,50,67,104,97,105,110,83,104,97,112,101,58,58,67,114,101,97,116,101,76,111,111,112,40,99,111,110,115,116,32,98,50,86,101,99,50,32,42,44,32,105,110,116,51,50,41,0] /* void b2ChainShape::C */, "i8", ALLOC_STATIC);
__str140=allocate([109,95,118,101,114,116,105,99,101,115,32,61,61,32,95,95,110,117,108,108,32,38,38,32,109,95,99,111,117,110,116,32,61,61,32,48,0] /* m_vertices == __null */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN12b2ChainShape11CreateChainEPK6b2Vec2i=allocate([118,111,105,100,32,98,50,67,104,97,105,110,83,104,97,112,101,58,58,67,114,101,97,116,101,67,104,97,105,110,40,99,111,110,115,116,32,98,50,86,101,99,50,32,42,44,32,105,110,116,51,50,41,0] /* void b2ChainShape::C */, "i8", ALLOC_STATIC);
__str342=allocate([99,111,117,110,116,32,62,61,32,50,0] /* count >= 2\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei=allocate([118,111,105,100,32,98,50,67,104,97,105,110,83,104,97,112,101,58,58,71,101,116,67,104,105,108,100,69,100,103,101,40,98,50,69,100,103,101,83,104,97,112,101,32,42,44,32,105,110,116,51,50,41,32,99,111,110,115,116,0] /* void b2ChainShape::G */, "i8", ALLOC_STATIC);
__str443=allocate([48,32,60,61,32,105,110,100,101,120,32,38,38,32,105,110,100,101,120,32,60,32,109,95,99,111,117,110,116,32,45,32,49,0] /* 0 <= index && index  */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi=allocate([118,105,114,116,117,97,108,32,98,111,111,108,32,98,50,67,104,97,105,110,83,104,97,112,101,58,58,82,97,121,67,97,115,116,40,98,50,82,97,121,67,97,115,116,79,117,116,112,117,116,32,42,44,32,99,111,110,115,116,32,98,50,82,97,121,67,97,115,116,73,110,112,117,116,32,38,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,44,32,105,110,116,51,50,41,32,99,111,110,115,116,0] /* virtual bool b2Chain */, "i8", ALLOC_STATIC);
__str544=allocate([99,104,105,108,100,73,110,100,101,120,32,60,32,109,95,99,111,117,110,116,0] /* childIndex < m_count */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi=allocate([118,105,114,116,117,97,108,32,118,111,105,100,32,98,50,67,104,97,105,110,83,104,97,112,101,58,58,67,111,109,112,117,116,101,65,65,66,66,40,98,50,65,65,66,66,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,44,32,105,110,116,51,50,41,32,99,111,110,115,116,0] /* virtual void b2Chain */, "i8", ALLOC_STATIC);
__ZTS12b2ChainShape=allocate([49,50,98,50,67,104,97,105,110,83,104,97,112,101,0] /* 12b2ChainShape\00 */, "i8", ALLOC_STATIC);
__ZTI12b2ChainShape=allocate(3, "i8*", ALLOC_STATIC);
__ZTV15b2CircleContact=allocate([0, 0, 70, 72, 74], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str47=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,67,105,114,99,108,101,67,111,110,116,97,99,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN15b2CircleContactC2EP9b2FixtureS1_=allocate([98,50,67,105,114,99,108,101,67,111,110,116,97,99,116,58,58,98,50,67,105,114,99,108,101,67,111,110,116,97,99,116,40,98,50,70,105,120,116,117,114,101,32,42,44,32,98,50,70,105,120,116,117,114,101,32,42,41,0] /* b2CircleContact::b2C */, "i8", ALLOC_STATIC);
__str148=allocate([109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,99,105,114,99,108,101,0] /* m_fixtureA->GetType( */, "i8", ALLOC_STATIC);
__ZTS15b2CircleContact=allocate([49,53,98,50,67,105,114,99,108,101,67,111,110,116,97,99,116,0] /* 15b2CircleContact\00 */, "i8", ALLOC_STATIC);
__ZTI15b2CircleContact=allocate(3, "i8*", ALLOC_STATIC);
__ZTV13b2CircleShape=allocate([0, 0, 76, 78, 80, 82, 84, 86, 88, 90], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__ZTS13b2CircleShape=allocate([49,51,98,50,67,105,114,99,108,101,83,104,97,112,101,0] /* 13b2CircleShape\00 */, "i8", ALLOC_STATIC);
__ZTI13b2CircleShape=allocate(3, "i8*", ALLOC_STATIC);
__str52=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,67,111,108,108,105,100,101,69,100,103,101,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_=allocate([118,111,105,100,32,98,50,67,111,108,108,105,100,101,69,100,103,101,65,110,100,67,105,114,99,108,101,40,98,50,77,97,110,105,102,111,108,100,32,42,44,32,99,111,110,115,116,32,98,50,69,100,103,101,83,104,97,112,101,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,44,32,99,111,110,115,116,32,98,50,67,105,114,99,108,101,83,104,97,112,101,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,41,0] /* void b2CollideEdgeAn */, "i8", ALLOC_STATIC);
__str153=allocate([100,101,110,32,62,32,48,46,48,102,0] /* den > 0.0f\00 */, "i8", ALLOC_STATIC);
__str58=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,67,111,108,108,105,100,101,80,111,108,121,103,111,110,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_=allocate([118,111,105,100,32,98,50,70,105,110,100,73,110,99,105,100,101,110,116,69,100,103,101,40,98,50,67,108,105,112,86,101,114,116,101,120,32,42,44,32,99,111,110,115,116,32,98,50,80,111,108,121,103,111,110,83,104,97,112,101,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,44,32,105,110,116,51,50,44,32,99,111,110,115,116,32,98,50,80,111,108,121,103,111,110,83,104,97,112,101,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,41,0] /* void b2FindIncidentE */, "i8", ALLOC_STATIC);
__str159=allocate([48,32,60,61,32,101,100,103,101,49,32,38,38,32,101,100,103,101,49,32,60,32,112,111,108,121,49,45,62,109,95,118,101,114,116,101,120,67,111,117,110,116,0] /* 0 <= edge1 && edge1  */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_=allocate([102,108,111,97,116,51,50,32,98,50,69,100,103,101,83,101,112,97,114,97,116,105,111,110,40,99,111,110,115,116,32,98,50,80,111,108,121,103,111,110,83,104,97,112,101,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,44,32,105,110,116,51,50,44,32,99,111,110,115,116,32,98,50,80,111,108,121,103,111,110,83,104,97,112,101,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,41,0] /* float32 b2EdgeSepara */, "i8", ALLOC_STATIC);
__ZN9b2Contact11s_registersE=allocate(48, ["%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8","%class.b2Contact.26* (%class.b2Fixture.19*, i32, %class.b2Fixture.19*, i32, %class.b2BlockAllocator*)*","void (%class.b2Contact.26*, %class.b2BlockAllocator*)*","i8"], ALLOC_STATIC);
__ZN9b2Contact13s_initializedE=allocate(1, "i8", ALLOC_STATIC);
__str62=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,67,111,110,116,97,99,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_=allocate([115,116,97,116,105,99,32,118,111,105,100,32,98,50,67,111,110,116,97,99,116,58,58,65,100,100,84,121,112,101,40,98,50,67,111,110,116,97,99,116,67,114,101,97,116,101,70,99,110,32,42,44,32,98,50,67,111,110,116,97,99,116,68,101,115,116,114,111,121,70,99,110,32,42,44,32,98,50,83,104,97,112,101,58,58,84,121,112,101,44,32,98,50,83,104,97,112,101,58,58,84,121,112,101,41,0] /* static void b2Contac */, "i8", ALLOC_STATIC);
__str163=allocate([48,32,60,61,32,116,121,112,101,49,32,38,38,32,116,121,112,101,49,32,60,32,98,50,83,104,97,112,101,58,58,101,95,116,121,112,101,67,111,117,110,116,0] /* 0 <= type1 && type1  */, "i8", ALLOC_STATIC);
__str264=allocate([48,32,60,61,32,116,121,112,101,50,32,38,38,32,116,121,112,101,50,32,60,32,98,50,83,104,97,112,101,58,58,101,95,116,121,112,101,67,111,117,110,116,0] /* 0 <= type2 && type2  */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator=allocate([115,116,97,116,105,99,32,98,50,67,111,110,116,97,99,116,32,42,98,50,67,111,110,116,97,99,116,58,58,67,114,101,97,116,101,40,98,50,70,105,120,116,117,114,101,32,42,44,32,105,110,116,51,50,44,32,98,50,70,105,120,116,117,114,101,32,42,44,32,105,110,116,51,50,44,32,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,32,42,41,0] /* static b2Contact _b2 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN9b2Contact7DestroyEPS_P16b2BlockAllocator=allocate([115,116,97,116,105,99,32,118,111,105,100,32,98,50,67,111,110,116,97,99,116,58,58,68,101,115,116,114,111,121,40,98,50,67,111,110,116,97,99,116,32,42,44,32,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,32,42,41,0] /* static void b2Contac */, "i8", ALLOC_STATIC);
__str365=allocate([115,95,105,110,105,116,105,97,108,105,122,101,100,32,61,61,32,116,114,117,101,0] /* s_initialized == tru */, "i8", ALLOC_STATIC);
__str466=allocate([48,32,60,61,32,116,121,112,101,65,32,38,38,32,116,121,112,101,66,32,60,32,98,50,83,104,97,112,101,58,58,101,95,116,121,112,101,67,111,117,110,116,0] /* 0 <= typeA && typeB  */, "i8", ALLOC_STATIC);
__ZTV9b2Contact=allocate([0, 0, 46, 92, 94], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
_b2_defaultFilter=allocate(1, "i32 (...)**", ALLOC_STATIC);
_b2_defaultListener=allocate(1, "i32 (...)**", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK13b2DynamicTree11GetUserDataEi=allocate([118,111,105,100,32,42,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,71,101,116,85,115,101,114,68,97,116,97,40,105,110,116,51,50,41,32,99,111,110,115,116,0] /* void _b2DynamicTree: */, "i8", ALLOC_STATIC);
__str371=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,109,109,111,110,47,98,50,71,114,111,119,97,98,108,101,83,116,97,99,107,46,104,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN15b2GrowableStackIiLi256EE3PopEv=allocate([105,110,116,32,98,50,71,114,111,119,97,98,108,101,83,116,97,99,107,60,105,110,116,44,32,50,53,54,62,58,58,80,111,112,40,41,0] /* int b2GrowableStack< */, "i8", ALLOC_STATIC);
__str472=allocate([109,95,99,111,117,110,116,32,62,32,48,0] /* m_count > 0\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK13b2DynamicTree10GetFatAABBEi=allocate([99,111,110,115,116,32,98,50,65,65,66,66,32,38,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,71,101,116,70,97,116,65,65,66,66,40,105,110,116,51,50,41,32,99,111,110,115,116,0] /* const b2AABB &b2Dyna */, "i8", ALLOC_STATIC);
__ZTV17b2ContactListener=allocate([0, 0, 32, 96, 98, 100, 102, 104], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__ZTS17b2ContactListener=allocate([49,55,98,50,67,111,110,116,97,99,116,76,105,115,116,101,110,101,114,0] /* 17b2ContactListener\ */, "i8", ALLOC_STATIC);
__ZTI17b2ContactListener=allocate(2, "i8*", ALLOC_STATIC);
__str77=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,67,111,110,116,97,99,116,83,111,108,118,101,114,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN15b2ContactSolverC2EP18b2ContactSolverDef=allocate([98,50,67,111,110,116,97,99,116,83,111,108,118,101,114,58,58,98,50,67,111,110,116,97,99,116,83,111,108,118,101,114,40,98,50,67,111,110,116,97,99,116,83,111,108,118,101,114,68,101,102,32,42,41,0] /* b2ContactSolver::b2C */, "i8", ALLOC_STATIC);
__str178=allocate([112,111,105,110,116,67,111,117,110,116,32,62,32,48,0] /* pointCount > 0\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN15b2ContactSolver29InitializeVelocityConstraintsEv=allocate([118,111,105,100,32,98,50,67,111,110,116,97,99,116,83,111,108,118,101,114,58,58,73,110,105,116,105,97,108,105,122,101,86,101,108,111,99,105,116,121,67,111,110,115,116,114,97,105,110,116,115,40,41,0] /* void b2ContactSolver */, "i8", ALLOC_STATIC);
__str279=allocate([109,97,110,105,102,111,108,100,45,62,112,111,105,110,116,67,111,117,110,116,32,62,32,48,0] /* manifold->pointCount */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN15b2ContactSolver24SolveVelocityConstraintsEv=allocate([118,111,105,100,32,98,50,67,111,110,116,97,99,116,83,111,108,118,101,114,58,58,83,111,108,118,101,86,101,108,111,99,105,116,121,67,111,110,115,116,114,97,105,110,116,115,40,41,0] /* void b2ContactSolver */, "i8", ALLOC_STATIC);
__str380=allocate([112,111,105,110,116,67,111,117,110,116,32,61,61,32,49,32,124,124,32,112,111,105,110,116,67,111,117,110,116,32,61,61,32,50,0] /* pointCount == 1 || p */, "i8", ALLOC_STATIC);
__str481=allocate([97,46,120,32,62,61,32,48,46,48,102,32,38,38,32,97,46,121,32,62,61,32,48,46,48,102,0] /* a.x >= 0.0f && a.y > */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i=allocate([118,111,105,100,32,98,50,80,111,115,105,116,105,111,110,83,111,108,118,101,114,77,97,110,105,102,111,108,100,58,58,73,110,105,116,105,97,108,105,122,101,40,98,50,67,111,110,116,97,99,116,80,111,115,105,116,105,111,110,67,111,110,115,116,114,97,105,110,116,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,44,32,105,110,116,51,50,41,0] /* void b2PositionSolve */, "i8", ALLOC_STATIC);
__str582=allocate([112,99,45,62,112,111,105,110,116,67,111,117,110,116,32,62,32,48,0] /* pc->pointCount > 0\0 */, "i8", ALLOC_STATIC);
_b2_gjkCalls=allocate(1, "i32", ALLOC_STATIC);
_b2_gjkIters=allocate(1, "i32", ALLOC_STATIC);
_b2_gjkMaxIters=allocate(1, "i32", ALLOC_STATIC);
__str83=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,68,105,115,116,97,110,99,101,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN15b2DistanceProxy3SetEPK7b2Shapei=allocate([118,111,105,100,32,98,50,68,105,115,116,97,110,99,101,80,114,111,120,121,58,58,83,101,116,40,99,111,110,115,116,32,98,50,83,104,97,112,101,32,42,44,32,105,110,116,51,50,41,0] /* void b2DistanceProxy */, "i8", ALLOC_STATIC);
__str184=allocate([48,32,60,61,32,105,110,100,101,120,32,38,38,32,105,110,100,101,120,32,60,32,99,104,97,105,110,45,62,109,95,99,111,117,110,116,0] /* 0 <= index && index  */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput=allocate([118,111,105,100,32,98,50,68,105,115,116,97,110,99,101,40,98,50,68,105,115,116,97,110,99,101,79,117,116,112,117,116,32,42,44,32,98,50,83,105,109,112,108,101,120,67,97,99,104,101,32,42,44,32,99,111,110,115,116,32,98,50,68,105,115,116,97,110,99,101,73,110,112,117,116,32,42,41,0] /* void b2Distance(b2Di */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK9b2Simplex9GetMetricEv=allocate([102,108,111,97,116,51,50,32,98,50,83,105,109,112,108,101,120,58,58,71,101,116,77,101,116,114,105,99,40,41,32,99,111,110,115,116,0] /* float32 b2Simplex::G */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_=allocate([118,111,105,100,32,98,50,83,105,109,112,108,101,120,58,58,71,101,116,87,105,116,110,101,115,115,80,111,105,110,116,115,40,98,50,86,101,99,50,32,42,44,32,98,50,86,101,99,50,32,42,41,32,99,111,110,115,116,0] /* void b2Simplex::GetW */, "i8", ALLOC_STATIC);
__str386=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,68,105,115,116,97,110,99,101,46,104,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK15b2DistanceProxy9GetVertexEi=allocate([99,111,110,115,116,32,98,50,86,101,99,50,32,38,98,50,68,105,115,116,97,110,99,101,80,114,111,120,121,58,58,71,101,116,86,101,114,116,101,120,40,105,110,116,51,50,41,32,99,111,110,115,116,0] /* const b2Vec2 &b2Dist */, "i8", ALLOC_STATIC);
__str487=allocate([48,32,60,61,32,105,110,100,101,120,32,38,38,32,105,110,100,101,120,32,60,32,109,95,99,111,117,110,116,0] /* 0 <= index && index  */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK9b2Simplex18GetSearchDirectionEv=allocate([98,50,86,101,99,50,32,98,50,83,105,109,112,108,101,120,58,58,71,101,116,83,101,97,114,99,104,68,105,114,101,99,116,105,111,110,40,41,32,99,111,110,115,116,0] /* b2Vec2 b2Simplex::Ge */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK9b2Simplex15GetClosestPointEv=allocate([98,50,86,101,99,50,32,98,50,83,105,109,112,108,101,120,58,58,71,101,116,67,108,111,115,101,115,116,80,111,105,110,116,40,41,32,99,111,110,115,116,0] /* b2Vec2 b2Simplex::Ge */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_=allocate([118,111,105,100,32,98,50,83,105,109,112,108,101,120,58,58,82,101,97,100,67,97,99,104,101,40,99,111,110,115,116,32,98,50,83,105,109,112,108,101,120,67,97,99,104,101,32,42,44,32,99,111,110,115,116,32,98,50,68,105,115,116,97,110,99,101,80,114,111,120,121,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,44,32,99,111,110,115,116,32,98,50,68,105,115,116,97,110,99,101,80,114,111,120,121,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,41,0] /* void b2Simplex::Read */, "i8", ALLOC_STATIC);
__str588=allocate([99,97,99,104,101,45,62,99,111,117,110,116,32,60,61,32,51,0] /* cache->count <= 3\00 */, "i8", ALLOC_STATIC);
__ZTV15b2DistanceJoint=allocate([0, 0, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str93=allocate([32,32,98,50,68,105,115,116,97,110,99,101,74,111,105,110,116,68,101,102,32,106,100,59,10,0] /*   b2DistanceJointDef */, "i8", ALLOC_STATIC);
__str699=allocate([32,32,106,100,46,108,101,110,103,116,104,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.length = %.15le */, "i8", ALLOC_STATIC);
__ZTS15b2DistanceJoint=allocate([49,53,98,50,68,105,115,116,97,110,99,101,74,111,105,110,116,0] /* 15b2DistanceJoint\00 */, "i8", ALLOC_STATIC);
__ZTS7b2Joint=allocate([55,98,50,74,111,105,110,116,0] /* 7b2Joint\00 */, "i8", ALLOC_STATIC);
__ZTI7b2Joint=allocate(2, "i8*", ALLOC_STATIC);
__ZTI15b2DistanceJoint=allocate(3, "i8*", ALLOC_STATIC);
__ZTV6b2Draw=allocate([0, 0, 126, 128, 46, 46, 46, 46, 46, 46], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__ZTS6b2Draw=allocate([54,98,50,68,114,97,119,0] /* 6b2Draw\00 */, "i8", ALLOC_STATIC);
__ZTI6b2Draw=allocate(2, "i8*", ALLOC_STATIC);
__str103=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,68,121,110,97,109,105,99,84,114,101,101,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN13b2DynamicTree12AllocateNodeEv=allocate([105,110,116,51,50,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,65,108,108,111,99,97,116,101,78,111,100,101,40,41,0] /* int32 b2DynamicTree: */, "i8", ALLOC_STATIC);
__str1104=allocate([109,95,110,111,100,101,67,111,117,110,116,32,61,61,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* m_nodeCount == m_nod */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN13b2DynamicTree8FreeNodeEi=allocate([118,111,105,100,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,70,114,101,101,78,111,100,101,40,105,110,116,51,50,41,0] /* void b2DynamicTree:: */, "i8", ALLOC_STATIC);
__str2105=allocate([48,32,60,61,32,110,111,100,101,73,100,32,38,38,32,110,111,100,101,73,100,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= nodeId && nodeI */, "i8", ALLOC_STATIC);
__str3106=allocate([48,32,60,32,109,95,110,111,100,101,67,111,117,110,116,0] /* 0 < m_nodeCount\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN13b2DynamicTree12DestroyProxyEi=allocate([118,111,105,100,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,68,101,115,116,114,111,121,80,114,111,120,121,40,105,110,116,51,50,41,0] /* void b2DynamicTree:: */, "i8", ALLOC_STATIC);
__str4107=allocate([48,32,60,61,32,112,114,111,120,121,73,100,32,38,38,32,112,114,111,120,121,73,100,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= proxyId && prox */, "i8", ALLOC_STATIC);
__str5108=allocate([109,95,110,111,100,101,115,91,112,114,111,120,121,73,100,93,46,73,115,76,101,97,102,40,41,0] /* m_nodes[proxyId].IsL */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2=allocate([98,111,111,108,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,77,111,118,101,80,114,111,120,121,40,105,110,116,51,50,44,32,99,111,110,115,116,32,98,50,65,65,66,66,32,38,44,32,99,111,110,115,116,32,98,50,86,101,99,50,32,38,41,0] /* bool b2DynamicTree:: */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN13b2DynamicTree10InsertLeafEi=allocate([118,111,105,100,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,73,110,115,101,114,116,76,101,97,102,40,105,110,116,51,50,41,0] /* void b2DynamicTree:: */, "i8", ALLOC_STATIC);
__str6109=allocate([99,104,105,108,100,49,32,33,61,32,40,45,49,41,0] /* child1 != (-1)\00 */, "i8", ALLOC_STATIC);
__str7110=allocate([99,104,105,108,100,50,32,33,61,32,40,45,49,41,0] /* child2 != (-1)\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN13b2DynamicTree7BalanceEi=allocate([105,110,116,51,50,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,66,97,108,97,110,99,101,40,105,110,116,51,50,41,0] /* int32 b2DynamicTree: */, "i8", ALLOC_STATIC);
__str8111=allocate([105,65,32,33,61,32,40,45,49,41,0] /* iA != (-1)\00 */, "i8", ALLOC_STATIC);
__str9112=allocate([48,32,60,61,32,105,66,32,38,38,32,105,66,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= iB && iB < m_no */, "i8", ALLOC_STATIC);
__str10113=allocate([48,32,60,61,32,105,67,32,38,38,32,105,67,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= iC && iC < m_no */, "i8", ALLOC_STATIC);
__str11114=allocate([48,32,60,61,32,105,70,32,38,38,32,105,70,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= iF && iF < m_no */, "i8", ALLOC_STATIC);
__str12115=allocate([48,32,60,61,32,105,71,32,38,38,32,105,71,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= iG && iG < m_no */, "i8", ALLOC_STATIC);
__str13116=allocate([109,95,110,111,100,101,115,91,67,45,62,112,97,114,101,110,116,93,46,99,104,105,108,100,50,32,61,61,32,105,65,0] /* m_nodes[C->parent].c */, "i8", ALLOC_STATIC);
__str14117=allocate([48,32,60,61,32,105,68,32,38,38,32,105,68,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= iD && iD < m_no */, "i8", ALLOC_STATIC);
__str15118=allocate([48,32,60,61,32,105,69,32,38,38,32,105,69,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= iE && iE < m_no */, "i8", ALLOC_STATIC);
__str16119=allocate([109,95,110,111,100,101,115,91,66,45,62,112,97,114,101,110,116,93,46,99,104,105,108,100,50,32,61,61,32,105,65,0] /* m_nodes[B->parent].c */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK13b2DynamicTree13ComputeHeightEi=allocate([105,110,116,51,50,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,67,111,109,112,117,116,101,72,101,105,103,104,116,40,105,110,116,51,50,41,32,99,111,110,115,116,0] /* int32 b2DynamicTree: */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK13b2DynamicTree17ValidateStructureEi=allocate([118,111,105,100,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,86,97,108,105,100,97,116,101,83,116,114,117,99,116,117,114,101,40,105,110,116,51,50,41,32,99,111,110,115,116,0] /* void b2DynamicTree:: */, "i8", ALLOC_STATIC);
__str17120=allocate([109,95,110,111,100,101,115,91,105,110,100,101,120,93,46,112,97,114,101,110,116,32,61,61,32,40,45,49,41,0] /* m_nodes[index].paren */, "i8", ALLOC_STATIC);
__str18121=allocate([99,104,105,108,100,49,32,61,61,32,40,45,49,41,0] /* child1 == (-1)\00 */, "i8", ALLOC_STATIC);
__str19122=allocate([99,104,105,108,100,50,32,61,61,32,40,45,49,41,0] /* child2 == (-1)\00 */, "i8", ALLOC_STATIC);
__str20123=allocate([110,111,100,101,45,62,104,101,105,103,104,116,32,61,61,32,48,0] /* node->height == 0\00 */, "i8", ALLOC_STATIC);
__str21124=allocate([48,32,60,61,32,99,104,105,108,100,49,32,38,38,32,99,104,105,108,100,49,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= child1 && child */, "i8", ALLOC_STATIC);
__str22125=allocate([48,32,60,61,32,99,104,105,108,100,50,32,38,38,32,99,104,105,108,100,50,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= child2 && child */, "i8", ALLOC_STATIC);
__str23126=allocate([109,95,110,111,100,101,115,91,99,104,105,108,100,49,93,46,112,97,114,101,110,116,32,61,61,32,105,110,100,101,120,0] /* m_nodes[child1].pare */, "i8", ALLOC_STATIC);
__str24127=allocate([109,95,110,111,100,101,115,91,99,104,105,108,100,50,93,46,112,97,114,101,110,116,32,61,61,32,105,110,100,101,120,0] /* m_nodes[child2].pare */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK13b2DynamicTree15ValidateMetricsEi=allocate([118,111,105,100,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,86,97,108,105,100,97,116,101,77,101,116,114,105,99,115,40,105,110,116,51,50,41,32,99,111,110,115,116,0] /* void b2DynamicTree:: */, "i8", ALLOC_STATIC);
__str25128=allocate([110,111,100,101,45,62,104,101,105,103,104,116,32,61,61,32,104,101,105,103,104,116,0] /* node->height == heig */, "i8", ALLOC_STATIC);
__str26129=allocate([97,97,98,98,46,108,111,119,101,114,66,111,117,110,100,32,61,61,32,110,111,100,101,45,62,97,97,98,98,46,108,111,119,101,114,66,111,117,110,100,0] /* aabb.lowerBound == n */, "i8", ALLOC_STATIC);
__str27130=allocate([97,97,98,98,46,117,112,112,101,114,66,111,117,110,100,32,61,61,32,110,111,100,101,45,62,97,97,98,98,46,117,112,112,101,114,66,111,117,110,100,0] /* aabb.upperBound == n */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK13b2DynamicTree8ValidateEv=allocate([118,111,105,100,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,86,97,108,105,100,97,116,101,40,41,32,99,111,110,115,116,0] /* void b2DynamicTree:: */, "i8", ALLOC_STATIC);
__str28131=allocate([48,32,60,61,32,102,114,101,101,73,110,100,101,120,32,38,38,32,102,114,101,101,73,110,100,101,120,32,60,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* 0 <= freeIndex && fr */, "i8", ALLOC_STATIC);
__str29132=allocate([71,101,116,72,101,105,103,104,116,40,41,32,61,61,32,67,111,109,112,117,116,101,72,101,105,103,104,116,40,41,0] /* GetHeight() == Compu */, "i8", ALLOC_STATIC);
__str30133=allocate([109,95,110,111,100,101,67,111,117,110,116,32,43,32,102,114,101,101,67,111,117,110,116,32,61,61,32,109,95,110,111,100,101,67,97,112,97,99,105,116,121,0] /* m_nodeCount + freeCo */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK13b2DynamicTree13GetMaxBalanceEv=allocate([105,110,116,51,50,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,71,101,116,77,97,120,66,97,108,97,110,99,101,40,41,32,99,111,110,115,116,0] /* int32 b2DynamicTree: */, "i8", ALLOC_STATIC);
__str31134=allocate([110,111,100,101,45,62,73,115,76,101,97,102,40,41,32,61,61,32,102,97,108,115,101,0] /* node->IsLeaf() == fa */, "i8", ALLOC_STATIC);
__ZTV22b2EdgeAndCircleContact=allocate([0, 0, 130, 132, 134], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str145=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,69,100,103,101,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_=allocate([98,50,69,100,103,101,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,58,58,98,50,69,100,103,101,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,40,98,50,70,105,120,116,117,114,101,32,42,44,32,98,50,70,105,120,116,117,114,101,32,42,41,0] /* b2EdgeAndCircleConta */, "i8", ALLOC_STATIC);
__ZTS22b2EdgeAndCircleContact=allocate([50,50,98,50,69,100,103,101,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0] /* 22b2EdgeAndCircleCon */, "i8", ALLOC_STATIC);
__ZTI22b2EdgeAndCircleContact=allocate(3, "i8*", ALLOC_STATIC);
__ZTV23b2EdgeAndPolygonContact=allocate([0, 0, 136, 138, 140], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str152=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,69,100,103,101,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_=allocate([98,50,69,100,103,101,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,58,58,98,50,69,100,103,101,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,40,98,50,70,105,120,116,117,114,101,32,42,44,32,98,50,70,105,120,116,117,114,101,32,42,41,0] /* b2EdgeAndPolygonCont */, "i8", ALLOC_STATIC);
__str1153=allocate([109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,101,100,103,101,0] /* m_fixtureA->GetType( */, "i8", ALLOC_STATIC);
__ZTS23b2EdgeAndPolygonContact=allocate([50,51,98,50,69,100,103,101,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0] /* 23b2EdgeAndPolygonCo */, "i8", ALLOC_STATIC);
__ZTI23b2EdgeAndPolygonContact=allocate(3, "i8*", ALLOC_STATIC);
__ZTV11b2EdgeShape=allocate([0, 0, 142, 144, 146, 148, 150, 152, 154, 156], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__ZTS11b2EdgeShape=allocate([49,49,98,50,69,100,103,101,83,104,97,112,101,0] /* 11b2EdgeShape\00 */, "i8", ALLOC_STATIC);
__ZTI11b2EdgeShape=allocate(3, "i8*", ALLOC_STATIC);
__str164=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,98,50,70,105,120,116,117,114,101,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN9b2Fixture7DestroyEP16b2BlockAllocator=allocate([118,111,105,100,32,98,50,70,105,120,116,117,114,101,58,58,68,101,115,116,114,111,121,40,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,32,42,41,0] /* void b2Fixture::Dest */, "i8", ALLOC_STATIC);
__str1165=allocate([109,95,112,114,111,120,121,67,111,117,110,116,32,61,61,32,48,0] /* m_proxyCount == 0\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform=allocate([118,111,105,100,32,98,50,70,105,120,116,117,114,101,58,58,67,114,101,97,116,101,80,114,111,120,105,101,115,40,98,50,66,114,111,97,100,80,104,97,115,101,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,41,0] /* void b2Fixture::Crea */, "i8", ALLOC_STATIC);
__str3167=allocate([32,32,32,32,98,50,70,105,120,116,117,114,101,68,101,102,32,102,100,59,10,0] /*     b2FixtureDef fd; */, "i8", ALLOC_STATIC);
__str4168=allocate([32,32,32,32,102,100,46,102,114,105,99,116,105,111,110,32,61,32,37,46,49,53,108,101,102,59,10,0] /*     fd.friction = %. */, "i8", ALLOC_STATIC);
__str5169=allocate([32,32,32,32,102,100,46,114,101,115,116,105,116,117,116,105,111,110,32,61,32,37,46,49,53,108,101,102,59,10,0] /*     fd.restitution = */, "i8", ALLOC_STATIC);
__str6170=allocate([32,32,32,32,102,100,46,100,101,110,115,105,116,121,32,61,32,37,46,49,53,108,101,102,59,10,0] /*     fd.density = %.1 */, "i8", ALLOC_STATIC);
__str7171=allocate([32,32,32,32,102,100,46,105,115,83,101,110,115,111,114,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*     fd.isSensor = bo */, "i8", ALLOC_STATIC);
__str8172=allocate([32,32,32,32,102,100,46,102,105,108,116,101,114,46,99,97,116,101,103,111,114,121,66,105,116,115,32,61,32,117,105,110,116,49,54,40,37,100,41,59,10,0] /*     fd.filter.catego */, "i8", ALLOC_STATIC);
__str9173=allocate([32,32,32,32,102,100,46,102,105,108,116,101,114,46,109,97,115,107,66,105,116,115,32,61,32,117,105,110,116,49,54,40,37,100,41,59,10,0] /*     fd.filter.maskBi */, "i8", ALLOC_STATIC);
__str10174=allocate([32,32,32,32,102,100,46,102,105,108,116,101,114,46,103,114,111,117,112,73,110,100,101,120,32,61,32,105,110,116,49,54,40,37,100,41,59,10,0] /*     fd.filter.groupI */, "i8", ALLOC_STATIC);
__str11175=allocate([32,32,32,32,98,50,67,105,114,99,108,101,83,104,97,112,101,32,115,104,97,112,101,59,10,0] /*     b2CircleShape sh */, "i8", ALLOC_STATIC);
__str12176=allocate([32,32,32,32,115,104,97,112,101,46,109,95,114,97,100,105,117,115,32,61,32,37,46,49,53,108,101,102,59,10,0] /*     shape.m_radius = */, "i8", ALLOC_STATIC);
__str13177=allocate([32,32,32,32,115,104,97,112,101,46,109,95,112,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*     shape.m_p.Set(%. */, "i8", ALLOC_STATIC);
__str14178=allocate([32,32,32,32,98,50,69,100,103,101,83,104,97,112,101,32,115,104,97,112,101,59,10,0] /*     b2EdgeShape shap */, "i8", ALLOC_STATIC);
__str15179=allocate([32,32,32,32,115,104,97,112,101,46,109,95,118,101,114,116,101,120,48,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*     shape.m_vertex0. */, "i8", ALLOC_STATIC);
__str16180=allocate([32,32,32,32,115,104,97,112,101,46,109,95,118,101,114,116,101,120,49,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*     shape.m_vertex1. */, "i8", ALLOC_STATIC);
__str17181=allocate([32,32,32,32,115,104,97,112,101,46,109,95,118,101,114,116,101,120,50,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*     shape.m_vertex2. */, "i8", ALLOC_STATIC);
__str18182=allocate([32,32,32,32,115,104,97,112,101,46,109,95,118,101,114,116,101,120,51,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*     shape.m_vertex3. */, "i8", ALLOC_STATIC);
__str19183=allocate([32,32,32,32,115,104,97,112,101,46,109,95,104,97,115,86,101,114,116,101,120,48,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*     shape.m_hasVerte */, "i8", ALLOC_STATIC);
__str20184=allocate([32,32,32,32,115,104,97,112,101,46,109,95,104,97,115,86,101,114,116,101,120,51,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*     shape.m_hasVerte */, "i8", ALLOC_STATIC);
__str21185=allocate([32,32,32,32,98,50,80,111,108,121,103,111,110,83,104,97,112,101,32,115,104,97,112,101,59,10,0] /*     b2PolygonShape s */, "i8", ALLOC_STATIC);
__str22186=allocate([32,32,32,32,98,50,86,101,99,50,32,118,115,91,37,100,93,59,10,0] /*     b2Vec2 vs[%d];\0 */, "i8", ALLOC_STATIC);
__str23187=allocate([32,32,32,32,118,115,91,37,100,93,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*     vs[%d].Set(%.15l */, "i8", ALLOC_STATIC);
__str24188=allocate([32,32,32,32,115,104,97,112,101,46,83,101,116,40,118,115,44,32,37,100,41,59,10,0] /*     shape.Set(vs, %d */, "i8", ALLOC_STATIC);
__str25189=allocate([32,32,32,32,98,50,67,104,97,105,110,83,104,97,112,101,32,115,104,97,112,101,59,10,0] /*     b2ChainShape sha */, "i8", ALLOC_STATIC);
__str26190=allocate([32,32,32,32,115,104,97,112,101,46,67,114,101,97,116,101,67,104,97,105,110,40,118,115,44,32,37,100,41,59,10,0] /*     shape.CreateChai */, "i8", ALLOC_STATIC);
__str27191=allocate([32,32,32,32,115,104,97,112,101,46,109,95,112,114,101,118,86,101,114,116,101,120,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*     shape.m_prevVert */, "i8", ALLOC_STATIC);
__str28192=allocate([32,32,32,32,115,104,97,112,101,46,109,95,110,101,120,116,86,101,114,116,101,120,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*     shape.m_nextVert */, "i8", ALLOC_STATIC);
__str29193=allocate([32,32,32,32,115,104,97,112,101,46,109,95,104,97,115,80,114,101,118,86,101,114,116,101,120,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*     shape.m_hasPrevV */, "i8", ALLOC_STATIC);
__str30194=allocate([32,32,32,32,115,104,97,112,101,46,109,95,104,97,115,78,101,120,116,86,101,114,116,101,120,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*     shape.m_hasNextV */, "i8", ALLOC_STATIC);
__str31195=allocate([10,0] /* \0A\00 */, "i8", ALLOC_STATIC);
__str32196=allocate([32,32,32,32,102,100,46,115,104,97,112,101,32,61,32,38,115,104,97,112,101,59,10,0] /*     fd.shape = &shap */, "i8", ALLOC_STATIC);
__str33197=allocate([32,32,32,32,98,111,100,105,101,115,91,37,100,93,45,62,67,114,101,97,116,101,70,105,120,116,117,114,101,40,38,102,100,41,59,10,0] /*     bodies[%d]->Crea */, "i8", ALLOC_STATIC);
__ZTV15b2FrictionJoint=allocate([0, 0, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str214=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,70,114,105,99,116,105,111,110,74,111,105,110,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN15b2FrictionJoint11SetMaxForceEf=allocate([118,111,105,100,32,98,50,70,114,105,99,116,105,111,110,74,111,105,110,116,58,58,83,101,116,77,97,120,70,111,114,99,101,40,102,108,111,97,116,51,50,41,0] /* void b2FrictionJoint */, "i8", ALLOC_STATIC);
__str1215=allocate([98,50,73,115,86,97,108,105,100,40,102,111,114,99,101,41,32,38,38,32,102,111,114,99,101,32,62,61,32,48,46,48,102,0] /* b2IsValid(force) &&  */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN15b2FrictionJoint12SetMaxTorqueEf=allocate([118,111,105,100,32,98,50,70,114,105,99,116,105,111,110,74,111,105,110,116,58,58,83,101,116,77,97,120,84,111,114,113,117,101,40,102,108,111,97,116,51,50,41,0] /* void b2FrictionJoint */, "i8", ALLOC_STATIC);
__str2216=allocate([98,50,73,115,86,97,108,105,100,40,116,111,114,113,117,101,41,32,38,38,32,116,111,114,113,117,101,32,62,61,32,48,46,48,102,0] /* b2IsValid(torque) && */, "i8", ALLOC_STATIC);
__str3217=allocate([32,32,98,50,70,114,105,99,116,105,111,110,74,111,105,110,116,68,101,102,32,106,100,59,10,0] /*   b2FrictionJointDef */, "i8", ALLOC_STATIC);
__str9223=allocate([32,32,106,100,46,109,97,120,70,111,114,99,101,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.maxForce = %.15 */, "i8", ALLOC_STATIC);
__str10224=allocate([32,32,106,100,46,109,97,120,84,111,114,113,117,101,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.maxTorque = %.1 */, "i8", ALLOC_STATIC);
__ZTS15b2FrictionJoint=allocate([49,53,98,50,70,114,105,99,116,105,111,110,74,111,105,110,116,0] /* 15b2FrictionJoint\00 */, "i8", ALLOC_STATIC);
__ZTI15b2FrictionJoint=allocate(3, "i8*", ALLOC_STATIC);
__ZTV11b2GearJoint=allocate([0, 0, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str226=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,71,101,97,114,74,111,105,110,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN11b2GearJointC2EPK14b2GearJointDef=allocate([98,50,71,101,97,114,74,111,105,110,116,58,58,98,50,71,101,97,114,74,111,105,110,116,40,99,111,110,115,116,32,98,50,71,101,97,114,74,111,105,110,116,68,101,102,32,42,41,0] /* b2GearJoint::b2GearJ */, "i8", ALLOC_STATIC);
__str1227=allocate([109,95,116,121,112,101,65,32,61,61,32,101,95,114,101,118,111,108,117,116,101,74,111,105,110,116,32,124,124,32,109,95,116,121,112,101,65,32,61,61,32,101,95,112,114,105,115,109,97,116,105,99,74,111,105,110,116,0] /* m_typeA == e_revolut */, "i8", ALLOC_STATIC);
__str2228=allocate([109,95,116,121,112,101,66,32,61,61,32,101,95,114,101,118,111,108,117,116,101,74,111,105,110,116,32,124,124,32,109,95,116,121,112,101,66,32,61,61,32,101,95,112,114,105,115,109,97,116,105,99,74,111,105,110,116,0] /* m_typeB == e_revolut */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN11b2GearJoint8SetRatioEf=allocate([118,111,105,100,32,98,50,71,101,97,114,74,111,105,110,116,58,58,83,101,116,82,97,116,105,111,40,102,108,111,97,116,51,50,41,0] /* void b2GearJoint::Se */, "i8", ALLOC_STATIC);
__str3229=allocate([98,50,73,115,86,97,108,105,100,40,114,97,116,105,111,41,0] /* b2IsValid(ratio)\00 */, "i8", ALLOC_STATIC);
__str4230=allocate([32,32,98,50,71,101,97,114,74,111,105,110,116,68,101,102,32,106,100,59,10,0] /*   b2GearJointDef jd; */, "i8", ALLOC_STATIC);
__str8234=allocate([32,32,106,100,46,106,111,105,110,116,49,32,61,32,106,111,105,110,116,115,91,37,100,93,59,10,0] /*   jd.joint1 = joints */, "i8", ALLOC_STATIC);
__str9235=allocate([32,32,106,100,46,106,111,105,110,116,50,32,61,32,106,111,105,110,116,115,91,37,100,93,59,10,0] /*   jd.joint2 = joints */, "i8", ALLOC_STATIC);
__ZTS11b2GearJoint=allocate([49,49,98,50,71,101,97,114,74,111,105,110,116,0] /* 11b2GearJoint\00 */, "i8", ALLOC_STATIC);
__ZTI11b2GearJoint=allocate(3, "i8*", ALLOC_STATIC);
__str239=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,98,50,73,115,108,97,110,100,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN8b2Island8SolveTOIERK10b2TimeStepii=allocate([118,111,105,100,32,98,50,73,115,108,97,110,100,58,58,83,111,108,118,101,84,79,73,40,99,111,110,115,116,32,98,50,84,105,109,101,83,116,101,112,32,38,44,32,105,110,116,51,50,44,32,105,110,116,51,50,41,0] /* void b2Island::Solve */, "i8", ALLOC_STATIC);
__str1240=allocate([116,111,105,73,110,100,101,120,65,32,60,32,109,95,98,111,100,121,67,111,117,110,116,0] /* toiIndexA < m_bodyCo */, "i8", ALLOC_STATIC);
__str2241=allocate([116,111,105,73,110,100,101,120,66,32,60,32,109,95,98,111,100,121,67,111,117,110,116,0] /* toiIndexB < m_bodyCo */, "i8", ALLOC_STATIC);
__str242=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,74,111,105,110,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator=allocate([115,116,97,116,105,99,32,98,50,74,111,105,110,116,32,42,98,50,74,111,105,110,116,58,58,67,114,101,97,116,101,40,99,111,110,115,116,32,98,50,74,111,105,110,116,68,101,102,32,42,44,32,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,32,42,41,0] /* static b2Joint _b2Jo */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2Joint7DestroyEPS_P16b2BlockAllocator=allocate([115,116,97,116,105,99,32,118,111,105,100,32,98,50,74,111,105,110,116,58,58,68,101,115,116,114,111,121,40,98,50,74,111,105,110,116,32,42,44,32,98,50,66,108,111,99,107,65,108,108,111,99,97,116,111,114,32,42,41,0] /* static void b2Joint: */, "i8", ALLOC_STATIC);
__ZTV7b2Joint=allocate([0, 0, 46, 46, 46, 46, 198, 200, 202, 46, 46, 46], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2JointC2EPK10b2JointDef=allocate([98,50,74,111,105,110,116,58,58,98,50,74,111,105,110,116,40,99,111,110,115,116,32,98,50,74,111,105,110,116,68,101,102,32,42,41,0] /* b2Joint::b2Joint(con */, "i8", ALLOC_STATIC);
__str2244=allocate([100,101,102,45,62,98,111,100,121,65,32,33,61,32,100,101,102,45,62,98,111,100,121,66,0] /* def->bodyA != def->b */, "i8", ALLOC_STATIC);
__str3245=allocate([47,47,32,68,117,109,112,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,105,115,32,106,111,105,110,116,32,116,121,112,101,46,10,0] /* // Dump is not suppo */, "i8", ALLOC_STATIC);
_b2Vec2_zero=allocate(2, "float", ALLOC_STATIC);
__ZTV12b2MouseJoint=allocate([0, 0, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str253=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,77,111,117,115,101,74,111,105,110,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN12b2MouseJointC2EPK15b2MouseJointDef=allocate([98,50,77,111,117,115,101,74,111,105,110,116,58,58,98,50,77,111,117,115,101,74,111,105,110,116,40,99,111,110,115,116,32,98,50,77,111,117,115,101,74,111,105,110,116,68,101,102,32,42,41,0] /* b2MouseJoint::b2Mous */, "i8", ALLOC_STATIC);
__str1254=allocate([100,101,102,45,62,116,97,114,103,101,116,46,73,115,86,97,108,105,100,40,41,0] /* def->target.IsValid( */, "i8", ALLOC_STATIC);
__str2255=allocate([98,50,73,115,86,97,108,105,100,40,100,101,102,45,62,109,97,120,70,111,114,99,101,41,32,38,38,32,100,101,102,45,62,109,97,120,70,111,114,99,101,32,62,61,32,48,46,48,102,0] /* b2IsValid(def->maxFo */, "i8", ALLOC_STATIC);
__str3256=allocate([98,50,73,115,86,97,108,105,100,40,100,101,102,45,62,102,114,101,113,117,101,110,99,121,72,122,41,32,38,38,32,100,101,102,45,62,102,114,101,113,117,101,110,99,121,72,122,32,62,61,32,48,46,48,102,0] /* b2IsValid(def->frequ */, "i8", ALLOC_STATIC);
__str4257=allocate([98,50,73,115,86,97,108,105,100,40,100,101,102,45,62,100,97,109,112,105,110,103,82,97,116,105,111,41,32,38,38,32,100,101,102,45,62,100,97,109,112,105,110,103,82,97,116,105,111,32,62,61,32,48,46,48,102,0] /* b2IsValid(def->dampi */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData=allocate([118,105,114,116,117,97,108,32,118,111,105,100,32,98,50,77,111,117,115,101,74,111,105,110,116,58,58,73,110,105,116,86,101,108,111,99,105,116,121,67,111,110,115,116,114,97,105,110,116,115,40,99,111,110,115,116,32,98,50,83,111,108,118,101,114,68,97,116,97,32,38,41,0] /* virtual void b2Mouse */, "i8", ALLOC_STATIC);
__str5258=allocate([100,32,43,32,104,32,42,32,107,32,62,32,49,46,49,57,50,48,57,50,57,48,69,45,48,55,70,0] /* d + h _ k > 1.192092 */, "i8", ALLOC_STATIC);
__ZTS12b2MouseJoint=allocate([49,50,98,50,77,111,117,115,101,74,111,105,110,116,0] /* 12b2MouseJoint\00 */, "i8", ALLOC_STATIC);
__ZTI12b2MouseJoint=allocate(3, "i8*", ALLOC_STATIC);
__str6259=allocate([77,111,117,115,101,32,106,111,105,110,116,32,100,117,109,112,105,110,103,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46,10,0] /* Mouse joint dumping  */, "i8", ALLOC_STATIC);
__ZTV25b2PolygonAndCircleContact=allocate([0, 0, 224, 226, 228], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str262=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,80,111,108,121,103,111,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_=allocate([98,50,80,111,108,121,103,111,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,58,58,98,50,80,111,108,121,103,111,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,40,98,50,70,105,120,116,117,114,101,32,42,44,32,98,50,70,105,120,116,117,114,101,32,42,41,0] /* b2PolygonAndCircleCo */, "i8", ALLOC_STATIC);
__str2264=allocate([109,95,102,105,120,116,117,114,101,66,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,99,105,114,99,108,101,0] /* m_fixtureB->GetType( */, "i8", ALLOC_STATIC);
__ZTS25b2PolygonAndCircleContact=allocate([50,53,98,50,80,111,108,121,103,111,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0] /* 25b2PolygonAndCircle */, "i8", ALLOC_STATIC);
__ZTI25b2PolygonAndCircleContact=allocate(3, "i8*", ALLOC_STATIC);
__ZTV16b2PolygonContact=allocate([0, 0, 230, 232, 234], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str269=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,67,111,110,116,97,99,116,115,47,98,50,80,111,108,121,103,111,110,67,111,110,116,97,99,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN16b2PolygonContactC2EP9b2FixtureS1_=allocate([98,50,80,111,108,121,103,111,110,67,111,110,116,97,99,116,58,58,98,50,80,111,108,121,103,111,110,67,111,110,116,97,99,116,40,98,50,70,105,120,116,117,114,101,32,42,44,32,98,50,70,105,120,116,117,114,101,32,42,41,0] /* b2PolygonContact::b2 */, "i8", ALLOC_STATIC);
__str1270=allocate([109,95,102,105,120,116,117,114,101,65,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,112,111,108,121,103,111,110,0] /* m_fixtureA->GetType( */, "i8", ALLOC_STATIC);
__str2271=allocate([109,95,102,105,120,116,117,114,101,66,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,98,50,83,104,97,112,101,58,58,101,95,112,111,108,121,103,111,110,0] /* m_fixtureB->GetType( */, "i8", ALLOC_STATIC);
__ZTS16b2PolygonContact=allocate([49,54,98,50,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0] /* 16b2PolygonContact\0 */, "i8", ALLOC_STATIC);
__ZTI16b2PolygonContact=allocate(3, "i8*", ALLOC_STATIC);
__str276=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,83,104,97,112,101,115,47,98,50,80,111,108,121,103,111,110,83,104,97,112,101,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN14b2PolygonShape3SetEPK6b2Vec2i=allocate([118,111,105,100,32,98,50,80,111,108,121,103,111,110,83,104,97,112,101,58,58,83,101,116,40,99,111,110,115,116,32,98,50,86,101,99,50,32,42,44,32,105,110,116,51,50,41,0] /* void b2PolygonShape: */, "i8", ALLOC_STATIC);
__str1277=allocate([51,32,60,61,32,99,111,117,110,116,32,38,38,32,99,111,117,110,116,32,60,61,32,56,0] /* 3 <= count && count  */, "i8", ALLOC_STATIC);
__str2278=allocate([101,100,103,101,46,76,101,110,103,116,104,83,113,117,97,114,101,100,40,41,32,62,32,49,46,49,57,50,48,57,50,57,48,69,45,48,55,70,32,42,32,49,46,49,57,50,48,57,50,57,48,69,45,48,55,70,0] /* edge.LengthSquared() */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi=allocate([118,105,114,116,117,97,108,32,98,111,111,108,32,98,50,80,111,108,121,103,111,110,83,104,97,112,101,58,58,82,97,121,67,97,115,116,40,98,50,82,97,121,67,97,115,116,79,117,116,112,117,116,32,42,44,32,99,111,110,115,116,32,98,50,82,97,121,67,97,115,116,73,110,112,117,116,32,38,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,44,32,105,110,116,51,50,41,32,99,111,110,115,116,0] /* virtual bool b2Polyg */, "i8", ALLOC_STATIC);
__str3279=allocate([48,46,48,102,32,60,61,32,108,111,119,101,114,32,38,38,32,108,111,119,101,114,32,60,61,32,105,110,112,117,116,46,109,97,120,70,114,97,99,116,105,111,110,0] /* 0.0f <= lower && low */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf=allocate([118,105,114,116,117,97,108,32,118,111,105,100,32,98,50,80,111,108,121,103,111,110,83,104,97,112,101,58,58,67,111,109,112,117,116,101,77,97,115,115,40,98,50,77,97,115,115,68,97,116,97,32,42,44,32,102,108,111,97,116,51,50,41,32,99,111,110,115,116,0] /* virtual void b2Polyg */, "i8", ALLOC_STATIC);
__str4280=allocate([109,95,118,101,114,116,101,120,67,111,117,110,116,32,62,61,32,51,0] /* m_vertexCount >= 3\0 */, "i8", ALLOC_STATIC);
__str5281=allocate([97,114,101,97,32,62,32,49,46,49,57,50,48,57,50,57,48,69,45,48,55,70,0] /* area > 1.19209290E-0 */, "i8", ALLOC_STATIC);
__ZTV14b2PolygonShape=allocate([0, 0, 236, 238, 240, 242, 244, 246, 248, 250], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__ZTS14b2PolygonShape=allocate([49,52,98,50,80,111,108,121,103,111,110,83,104,97,112,101,0] /* 14b2PolygonShape\00 */, "i8", ALLOC_STATIC);
__ZTI14b2PolygonShape=allocate(3, "i8*", ALLOC_STATIC);
___PRETTY_FUNCTION____ZL15ComputeCentroidPK6b2Vec2i=allocate([98,50,86,101,99,50,32,67,111,109,112,117,116,101,67,101,110,116,114,111,105,100,40,99,111,110,115,116,32,98,50,86,101,99,50,32,42,44,32,105,110,116,51,50,41,0] /* b2Vec2 ComputeCentro */, "i8", ALLOC_STATIC);
__str6282=allocate([99,111,117,110,116,32,62,61,32,51,0] /* count >= 3\00 */, "i8", ALLOC_STATIC);
__ZTV16b2PrismaticJoint=allocate([0, 0, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str283=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,80,114,105,115,109,97,116,105,99,74,111,105,110,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN16b2PrismaticJoint9SetLimitsEff=allocate([118,111,105,100,32,98,50,80,114,105,115,109,97,116,105,99,74,111,105,110,116,58,58,83,101,116,76,105,109,105,116,115,40,102,108,111,97,116,51,50,44,32,102,108,111,97,116,51,50,41,0] /* void b2PrismaticJoin */, "i8", ALLOC_STATIC);
__str2285=allocate([32,32,98,50,80,114,105,115,109,97,116,105,99,74,111,105,110,116,68,101,102,32,106,100,59,10,0] /*   b2PrismaticJointDe */, "i8", ALLOC_STATIC);
__str11294=allocate([32,32,106,100,46,108,111,119,101,114,84,114,97,110,115,108,97,116,105,111,110,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.lowerTranslatio */, "i8", ALLOC_STATIC);
__str12295=allocate([32,32,106,100,46,117,112,112,101,114,84,114,97,110,115,108,97,116,105,111,110,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.upperTranslatio */, "i8", ALLOC_STATIC);
__str15298=allocate([32,32,106,100,46,109,97,120,77,111,116,111,114,70,111,114,99,101,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.maxMotorForce = */, "i8", ALLOC_STATIC);
__ZTS16b2PrismaticJoint=allocate([49,54,98,50,80,114,105,115,109,97,116,105,99,74,111,105,110,116,0] /* 16b2PrismaticJoint\0 */, "i8", ALLOC_STATIC);
__ZTI16b2PrismaticJoint=allocate(3, "i8*", ALLOC_STATIC);
__str302=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,80,117,108,108,101,121,74,111,105,110,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f=allocate([118,111,105,100,32,98,50,80,117,108,108,101,121,74,111,105,110,116,68,101,102,58,58,73,110,105,116,105,97,108,105,122,101,40,98,50,66,111,100,121,32,42,44,32,98,50,66,111,100,121,32,42,44,32,99,111,110,115,116,32,98,50,86,101,99,50,32,38,44,32,99,111,110,115,116,32,98,50,86,101,99,50,32,38,44,32,99,111,110,115,116,32,98,50,86,101,99,50,32,38,44,32,99,111,110,115,116,32,98,50,86,101,99,50,32,38,44,32,102,108,111,97,116,51,50,41,0] /* void b2PulleyJointDe */, "i8", ALLOC_STATIC);
__str1303=allocate([114,97,116,105,111,32,62,32,49,46,49,57,50,48,57,50,57,48,69,45,48,55,70,0] /* ratio > 1.19209290E- */, "i8", ALLOC_STATIC);
__ZTV13b2PulleyJoint=allocate([0, 0, 272, 274, 276, 278, 280, 282, 284, 286, 288, 290], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN13b2PulleyJointC2EPK16b2PulleyJointDef=allocate([98,50,80,117,108,108,101,121,74,111,105,110,116,58,58,98,50,80,117,108,108,101,121,74,111,105,110,116,40,99,111,110,115,116,32,98,50,80,117,108,108,101,121,74,111,105,110,116,68,101,102,32,42,41,0] /* b2PulleyJoint::b2Pul */, "i8", ALLOC_STATIC);
__str2304=allocate([100,101,102,45,62,114,97,116,105,111,32,33,61,32,48,46,48,102,0] /* def->ratio != 0.0f\0 */, "i8", ALLOC_STATIC);
__str3305=allocate([32,32,98,50,80,117,108,108,101,121,74,111,105,110,116,68,101,102,32,106,100,59,10,0] /*   b2PulleyJointDef j */, "i8", ALLOC_STATIC);
__str7309=allocate([32,32,106,100,46,103,114,111,117,110,100,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*   jd.groundAnchorA.S */, "i8", ALLOC_STATIC);
__str8310=allocate([32,32,106,100,46,103,114,111,117,110,100,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*   jd.groundAnchorB.S */, "i8", ALLOC_STATIC);
__str11313=allocate([32,32,106,100,46,108,101,110,103,116,104,65,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.lengthA = %.15l */, "i8", ALLOC_STATIC);
__str12314=allocate([32,32,106,100,46,108,101,110,103,116,104,66,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.lengthB = %.15l */, "i8", ALLOC_STATIC);
__str13315=allocate([32,32,106,100,46,114,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.ratio = %.15lef */, "i8", ALLOC_STATIC);
__ZTS13b2PulleyJoint=allocate([49,51,98,50,80,117,108,108,101,121,74,111,105,110,116,0] /* 13b2PulleyJoint\00 */, "i8", ALLOC_STATIC);
__ZTI13b2PulleyJoint=allocate(3, "i8*", ALLOC_STATIC);
__ZTV15b2RevoluteJoint=allocate([0, 0, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str319=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,74,111,105,110,116,115,47,98,50,82,101,118,111,108,117,116,101,74,111,105,110,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN15b2RevoluteJoint9SetLimitsEff=allocate([118,111,105,100,32,98,50,82,101,118,111,108,117,116,101,74,111,105,110,116,58,58,83,101,116,76,105,109,105,116,115,40,102,108,111,97,116,51,50,44,32,102,108,111,97,116,51,50,41,0] /* void b2RevoluteJoint */, "i8", ALLOC_STATIC);
__str1320=allocate([108,111,119,101,114,32,60,61,32,117,112,112,101,114,0] /* lower <= upper\00 */, "i8", ALLOC_STATIC);
__str2321=allocate([32,32,98,50,82,101,118,111,108,117,116,101,74,111,105,110,116,68,101,102,32,106,100,59,10,0] /*   b2RevoluteJointDef */, "i8", ALLOC_STATIC);
__str9328=allocate([32,32,106,100,46,101,110,97,98,108,101,76,105,109,105,116,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*   jd.enableLimit = b */, "i8", ALLOC_STATIC);
__str10329=allocate([32,32,106,100,46,108,111,119,101,114,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.lowerAngle = %. */, "i8", ALLOC_STATIC);
__str11330=allocate([32,32,106,100,46,117,112,112,101,114,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.upperAngle = %. */, "i8", ALLOC_STATIC);
__ZTS15b2RevoluteJoint=allocate([49,53,98,50,82,101,118,111,108,117,116,101,74,111,105,110,116,0] /* 15b2RevoluteJoint\00 */, "i8", ALLOC_STATIC);
__ZTI15b2RevoluteJoint=allocate(3, "i8*", ALLOC_STATIC);
__str337=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,82,111,112,101,47,98,50,82,111,112,101,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/R */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN6b2Rope10InitializeEPK9b2RopeDef=allocate([118,111,105,100,32,98,50,82,111,112,101,58,58,73,110,105,116,105,97,108,105,122,101,40,99,111,110,115,116,32,98,50,82,111,112,101,68,101,102,32,42,41,0] /* void b2Rope::Initial */, "i8", ALLOC_STATIC);
__str1338=allocate([100,101,102,45,62,99,111,117,110,116,32,62,61,32,51,0] /* def->count >= 3\00 */, "i8", ALLOC_STATIC);
__ZTV11b2RopeJoint=allocate([0, 0, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str339=allocate([32,32,98,50,82,111,112,101,74,111,105,110,116,68,101,102,32,106,100,59,10,0] /*   b2RopeJointDef jd; */, "i8", ALLOC_STATIC);
__str6345=allocate([32,32,106,100,46,109,97,120,76,101,110,103,116,104,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.maxLength = %.1 */, "i8", ALLOC_STATIC);
__ZTS11b2RopeJoint=allocate([49,49,98,50,82,111,112,101,74,111,105,110,116,0] /* 11b2RopeJoint\00 */, "i8", ALLOC_STATIC);
__ZTI11b2RopeJoint=allocate(3, "i8*", ALLOC_STATIC);
_b2_version=allocate([2, 2, 1], "i32", ALLOC_STATIC);
__str355=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,109,109,111,110,47,98,50,83,116,97,99,107,65,108,108,111,99,97,116,111,114,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN16b2StackAllocatorD2Ev=allocate([98,50,83,116,97,99,107,65,108,108,111,99,97,116,111,114,58,58,126,98,50,83,116,97,99,107,65,108,108,111,99,97,116,111,114,40,41,0] /* b2StackAllocator::~b */, "i8", ALLOC_STATIC);
__str1356=allocate([109,95,105,110,100,101,120,32,61,61,32,48,0] /* m_index == 0\00 */, "i8", ALLOC_STATIC);
__str2357=allocate([109,95,101,110,116,114,121,67,111,117,110,116,32,61,61,32,48,0] /* m_entryCount == 0\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN16b2StackAllocator8AllocateEi=allocate([118,111,105,100,32,42,98,50,83,116,97,99,107,65,108,108,111,99,97,116,111,114,58,58,65,108,108,111,99,97,116,101,40,105,110,116,51,50,41,0] /* void _b2StackAllocat */, "i8", ALLOC_STATIC);
__str3358=allocate([109,95,101,110,116,114,121,67,111,117,110,116,32,60,32,98,50,95,109,97,120,83,116,97,99,107,69,110,116,114,105,101,115,0] /* m_entryCount < b2_ma */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN16b2StackAllocator4FreeEPv=allocate([118,111,105,100,32,98,50,83,116,97,99,107,65,108,108,111,99,97,116,111,114,58,58,70,114,101,101,40,118,111,105,100,32,42,41,0] /* void b2StackAllocato */, "i8", ALLOC_STATIC);
__str4359=allocate([109,95,101,110,116,114,121,67,111,117,110,116,32,62,32,48,0] /* m_entryCount > 0\00 */, "i8", ALLOC_STATIC);
__str5360=allocate([112,32,61,61,32,101,110,116,114,121,45,62,100,97,116,97,0] /* p == entry->data\00 */, "i8", ALLOC_STATIC);
_b2_toiCalls=allocate(1, "i32", ALLOC_STATIC);
_b2_toiIters=allocate(1, "i32", ALLOC_STATIC);
_b2_toiMaxIters=allocate(1, "i32", ALLOC_STATIC);
_b2_toiRootIters=allocate(1, "i32", ALLOC_STATIC);
_b2_toiMaxRootIters=allocate(1, "i32", ALLOC_STATIC);
__str366=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,84,105,109,101,79,102,73,109,112,97,99,116,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput=allocate([118,111,105,100,32,98,50,84,105,109,101,79,102,73,109,112,97,99,116,40,98,50,84,79,73,79,117,116,112,117,116,32,42,44,32,99,111,110,115,116,32,98,50,84,79,73,73,110,112,117,116,32,42,41,0] /* void b2TimeOfImpact( */, "i8", ALLOC_STATIC);
__str1367=allocate([116,97,114,103,101,116,32,62,32,116,111,108,101,114,97,110,99,101,0] /* target > tolerance\0 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK20b2SeparationFunction8EvaluateEiif=allocate([102,108,111,97,116,51,50,32,98,50,83,101,112,97,114,97,116,105,111,110,70,117,110,99,116,105,111,110,58,58,69,118,97,108,117,97,116,101,40,105,110,116,51,50,44,32,105,110,116,51,50,44,32,102,108,111,97,116,51,50,41,32,99,111,110,115,116,0] /* float32 b2Separation */, "i8", ALLOC_STATIC);
__str2368=allocate([102,97,108,115,101,0] /* false\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f=allocate([102,108,111,97,116,51,50,32,98,50,83,101,112,97,114,97,116,105,111,110,70,117,110,99,116,105,111,110,58,58,70,105,110,100,77,105,110,83,101,112,97,114,97,116,105,111,110,40,105,110,116,51,50,32,42,44,32,105,110,116,51,50,32,42,44,32,102,108,111,97,116,51,50,41,32,99,111,110,115,116,0] /* float32 b2Separation */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f=allocate([102,108,111,97,116,51,50,32,98,50,83,101,112,97,114,97,116,105,111,110,70,117,110,99,116,105,111,110,58,58,73,110,105,116,105,97,108,105,122,101,40,99,111,110,115,116,32,98,50,83,105,109,112,108,101,120,67,97,99,104,101,32,42,44,32,99,111,110,115,116,32,98,50,68,105,115,116,97,110,99,101,80,114,111,120,121,32,42,44,32,99,111,110,115,116,32,98,50,83,119,101,101,112,32,38,44,32,99,111,110,115,116,32,98,50,68,105,115,116,97,110,99,101,80,114,111,120,121,32,42,44,32,99,111,110,115,116,32,98,50,83,119,101,101,112,32,38,44,32,102,108,111,97,116,51,50,41,0] /* float32 b2Separation */, "i8", ALLOC_STATIC);
__str5372=allocate([48,32,60,32,99,111,117,110,116,32,38,38,32,99,111,117,110,116,32,60,32,51,0] /* 0 < count && count < */, "i8", ALLOC_STATIC);
__ZTV11b2WeldJoint=allocate([0, 0, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str379=allocate([32,32,98,50,87,101,108,100,74,111,105,110,116,68,101,102,32,106,100,59,10,0] /*   b2WeldJointDef jd; */, "i8", ALLOC_STATIC);
__str6385=allocate([32,32,106,100,46,114,101,102,101,114,101,110,99,101,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.referenceAngle  */, "i8", ALLOC_STATIC);
__ZTS11b2WeldJoint=allocate([49,49,98,50,87,101,108,100,74,111,105,110,116,0] /* 11b2WeldJoint\00 */, "i8", ALLOC_STATIC);
__ZTI11b2WeldJoint=allocate(3, "i8*", ALLOC_STATIC);
__ZTV12b2WheelJoint=allocate([0, 0, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__str391=allocate([32,32,98,50,87,104,101,101,108,74,111,105,110,116,68,101,102,32,106,100,59,10,0] /*   b2WheelJointDef jd */, "i8", ALLOC_STATIC);
__str1392=allocate([32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0] /*   jd.bodyA = bodies[ */, "i8", ALLOC_STATIC);
__str2393=allocate([32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0] /*   jd.bodyB = bodies[ */, "i8", ALLOC_STATIC);
__str3394=allocate([32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*   jd.collideConnecte */, "i8", ALLOC_STATIC);
__str4395=allocate([32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*   jd.localAnchorA.Se */, "i8", ALLOC_STATIC);
__str5396=allocate([32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*   jd.localAnchorB.Se */, "i8", ALLOC_STATIC);
__str6397=allocate([32,32,106,100,46,108,111,99,97,108,65,120,105,115,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /*   jd.localAxisA.Set( */, "i8", ALLOC_STATIC);
__str7398=allocate([32,32,106,100,46,101,110,97,98,108,101,77,111,116,111,114,32,61,32,98,111,111,108,40,37,100,41,59,10,0] /*   jd.enableMotor = b */, "i8", ALLOC_STATIC);
__str8399=allocate([32,32,106,100,46,109,111,116,111,114,83,112,101,101,100,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.motorSpeed = %. */, "i8", ALLOC_STATIC);
__str9400=allocate([32,32,106,100,46,109,97,120,77,111,116,111,114,84,111,114,113,117,101,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.maxMotorTorque  */, "i8", ALLOC_STATIC);
__str10401=allocate([32,32,106,100,46,102,114,101,113,117,101,110,99,121,72,122,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.frequencyHz = % */, "i8", ALLOC_STATIC);
__str11402=allocate([32,32,106,100,46,100,97,109,112,105,110,103,82,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0] /*   jd.dampingRatio =  */, "i8", ALLOC_STATIC);
__str12403=allocate([32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0] /*   joints[%d] = m_wor */, "i8", ALLOC_STATIC);
__ZTS12b2WheelJoint=allocate([49,50,98,50,87,104,101,101,108,74,111,105,110,116,0] /* 12b2WheelJoint\00 */, "i8", ALLOC_STATIC);
__ZTI12b2WheelJoint=allocate(3, "i8*", ALLOC_STATIC);
__str406=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,98,50,87,111,114,108,100,46,99,112,112,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2World10CreateBodyEPK9b2BodyDef=allocate([98,50,66,111,100,121,32,42,98,50,87,111,114,108,100,58,58,67,114,101,97,116,101,66,111,100,121,40,99,111,110,115,116,32,98,50,66,111,100,121,68,101,102,32,42,41,0] /* b2Body _b2World::Cre */, "i8", ALLOC_STATIC);
__str1407=allocate([73,115,76,111,99,107,101,100,40,41,32,61,61,32,102,97,108,115,101,0] /* IsLocked() == false\ */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2World11DestroyBodyEP6b2Body=allocate([118,111,105,100,32,98,50,87,111,114,108,100,58,58,68,101,115,116,114,111,121,66,111,100,121,40,98,50,66,111,100,121,32,42,41,0] /* void b2World::Destro */, "i8", ALLOC_STATIC);
__str2408=allocate([109,95,98,111,100,121,67,111,117,110,116,32,62,32,48,0] /* m_bodyCount > 0\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2World11CreateJointEPK10b2JointDef=allocate([98,50,74,111,105,110,116,32,42,98,50,87,111,114,108,100,58,58,67,114,101,97,116,101,74,111,105,110,116,40,99,111,110,115,116,32,98,50,74,111,105,110,116,68,101,102,32,42,41,0] /* b2Joint _b2World::Cr */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2World12DestroyJointEP7b2Joint=allocate([118,111,105,100,32,98,50,87,111,114,108,100,58,58,68,101,115,116,114,111,121,74,111,105,110,116,40,98,50,74,111,105,110,116,32,42,41,0] /* void b2World::Destro */, "i8", ALLOC_STATIC);
__str3409=allocate([109,95,106,111,105,110,116,67,111,117,110,116,32,62,32,48,0] /* m_jointCount > 0\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2World5SolveERK10b2TimeStep=allocate([118,111,105,100,32,98,50,87,111,114,108,100,58,58,83,111,108,118,101,40,99,111,110,115,116,32,98,50,84,105,109,101,83,116,101,112,32,38,41,0] /* void b2World::Solve( */, "i8", ALLOC_STATIC);
__str4410=allocate([98,45,62,73,115,65,99,116,105,118,101,40,41,32,61,61,32,116,114,117,101,0] /* b->IsActive() == tru */, "i8", ALLOC_STATIC);
__str5411=allocate([115,116,97,99,107,67,111,117,110,116,32,60,32,115,116,97,99,107,83,105,122,101,0] /* stackCount < stackSi */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2World8SolveTOIERK10b2TimeStep=allocate([118,111,105,100,32,98,50,87,111,114,108,100,58,58,83,111,108,118,101,84,79,73,40,99,111,110,115,116,32,98,50,84,105,109,101,83,116,101,112,32,38,41,0] /* void b2World::SolveT */, "i8", ALLOC_STATIC);
__str6412=allocate([116,121,112,101,65,32,61,61,32,98,50,95,100,121,110,97,109,105,99,66,111,100,121,32,124,124,32,116,121,112,101,66,32,61,61,32,98,50,95,100,121,110,97,109,105,99,66,111,100,121,0] /* typeA == b2_dynamicB */, "i8", ALLOC_STATIC);
__str7413=allocate([97,108,112,104,97,48,32,60,32,49,46,48,102,0] /* alpha0 < 1.0f\00 */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color=allocate([118,111,105,100,32,98,50,87,111,114,108,100,58,58,68,114,97,119,83,104,97,112,101,40,98,50,70,105,120,116,117,114,101,32,42,44,32,99,111,110,115,116,32,98,50,84,114,97,110,115,102,111,114,109,32,38,44,32,99,111,110,115,116,32,98,50,67,111,108,111,114,32,38,41,0] /* void b2World::DrawSh */, "i8", ALLOC_STATIC);
__str8414=allocate([118,101,114,116,101,120,67,111,117,110,116,32,60,61,32,56,0] /* vertexCount <= 8\00 */, "i8", ALLOC_STATIC);
__str9415=allocate([98,50,86,101,99,50,32,103,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0] /* b2Vec2 g(%.15lef, %. */, "i8", ALLOC_STATIC);
__str10416=allocate([109,95,119,111,114,108,100,45,62,83,101,116,71,114,97,118,105,116,121,40,103,41,59,10,0] /* m_world->SetGravity( */, "i8", ALLOC_STATIC);
__str11417=allocate([98,50,66,111,100,121,42,42,32,98,111,100,105,101,115,32,61,32,40,98,50,66,111,100,121,42,42,41,98,50,65,108,108,111,99,40,37,100,32,42,32,115,105,122,101,111,102,40,98,50,66,111,100,121,42,41,41,59,10,0] /* b2Body__ bodies = (b */, "i8", ALLOC_STATIC);
__str12418=allocate([98,50,74,111,105,110,116,42,42,32,106,111,105,110,116,115,32,61,32,40,98,50,74,111,105,110,116,42,42,41,98,50,65,108,108,111,99,40,37,100,32,42,32,115,105,122,101,111,102,40,98,50,74,111,105,110,116,42,41,41,59,10,0] /* b2Joint__ joints = ( */, "i8", ALLOC_STATIC);
__str13419=allocate([123,10,0] /* {\0A\00 */, "i8", ALLOC_STATIC);
__str14420=allocate([125,10,0] /* }\0A\00 */, "i8", ALLOC_STATIC);
__str15421=allocate([98,50,70,114,101,101,40,106,111,105,110,116,115,41,59,10,0] /* b2Free(joints);\0A\0 */, "i8", ALLOC_STATIC);
__str16422=allocate([98,50,70,114,101,101,40,98,111,100,105,101,115,41,59,10,0] /* b2Free(bodies);\0A\0 */, "i8", ALLOC_STATIC);
__str17423=allocate([106,111,105,110,116,115,32,61,32,78,85,76,76,59,10,0] /* joints = NULL;\0A\00 */, "i8", ALLOC_STATIC);
__str18424=allocate([98,111,100,105,101,115,32,61,32,78,85,76,76,59,10,0] /* bodies = NULL;\0A\00 */, "i8", ALLOC_STATIC);
__str19425=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,108,108,105,115,105,111,110,47,98,50,68,121,110,97,109,105,99,84,114,101,101,46,104,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput=allocate([118,111,105,100,32,98,50,68,121,110,97,109,105,99,84,114,101,101,58,58,82,97,121,67,97,115,116,40,98,50,87,111,114,108,100,82,97,121,67,97,115,116,87,114,97,112,112,101,114,32,42,44,32,99,111,110,115,116,32,98,50,82,97,121,67,97,115,116,73,110,112,117,116,32,38,41,32,99,111,110,115,116,0] /* void b2DynamicTree:: */, "i8", ALLOC_STATIC);
__str20426=allocate([114,46,76,101,110,103,116,104,83,113,117,97,114,101,100,40,41,32,62,32,48,46,48,102,0] /* r.LengthSquared() >  */, "i8", ALLOC_STATIC);
__str24433=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,67,111,109,109,111,110,47,98,50,77,97,116,104,46,104,0] /* Box2D_v2.2.1/Box2D/C */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN7b2Sweep7AdvanceEf=allocate([118,111,105,100,32,98,50,83,119,101,101,112,58,58,65,100,118,97,110,99,101,40,102,108,111,97,116,51,50,41,0] /* void b2Sweep::Advanc */, "i8", ALLOC_STATIC);
__str25434=allocate([66,111,120,50,68,95,118,50,46,50,46,49,47,66,111,120,50,68,47,68,121,110,97,109,105,99,115,47,98,50,73,115,108,97,110,100,46,104,0] /* Box2D_v2.2.1/Box2D/D */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN8b2Island3AddEP7b2Joint=allocate([118,111,105,100,32,98,50,73,115,108,97,110,100,58,58,65,100,100,40,98,50,74,111,105,110,116,32,42,41,0] /* void b2Island::Add(b */, "i8", ALLOC_STATIC);
__str26435=allocate([109,95,106,111,105,110,116,67,111,117,110,116,32,60,32,109,95,106,111,105,110,116,67,97,112,97,99,105,116,121,0] /* m_jointCount < m_joi */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN8b2Island3AddEP9b2Contact=allocate([118,111,105,100,32,98,50,73,115,108,97,110,100,58,58,65,100,100,40,98,50,67,111,110,116,97,99,116,32,42,41,0] /* void b2Island::Add(b */, "i8", ALLOC_STATIC);
__str27436=allocate([109,95,99,111,110,116,97,99,116,67,111,117,110,116,32,60,32,109,95,99,111,110,116,97,99,116,67,97,112,97,99,105,116,121,0] /* m_contactCount < m_c */, "i8", ALLOC_STATIC);
___PRETTY_FUNCTION____ZN8b2Island3AddEP6b2Body=allocate([118,111,105,100,32,98,50,73,115,108,97,110,100,58,58,65,100,100,40,98,50,66,111,100,121,32,42,41,0] /* void b2Island::Add(b */, "i8", ALLOC_STATIC);
__str28437=allocate([109,95,98,111,100,121,67,111,117,110,116,32,60,32,109,95,98,111,100,121,67,97,112,97,99,105,116,121,0] /* m_bodyCount < m_body */, "i8", ALLOC_STATIC);
__ZTV15b2ContactFilter=allocate([0, 0, 30, 372, 374], "i8*", ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
__ZTS15b2ContactFilter=allocate([49,53,98,50,67,111,110,116,97,99,116,70,105,108,116,101,114,0] /* 15b2ContactFilter\00 */, "i8", ALLOC_STATIC);
__ZTI15b2ContactFilter=allocate(2, "i8*", ALLOC_STATIC);
__str440=allocate([37,102,10,0] /* %f\0A\00 */, "i8", ALLOC_STATIC);
IHEAP[__ZTV23b2ChainAndCircleContact+1]=(__ZTI23b2ChainAndCircleContact)
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([2,0], ["i8*",0], ALLOC_STATIC);
__ZTVN10__cxxabiv117__class_type_infoE=allocate([1,0], ["i8*",0], ALLOC_STATIC);
IHEAP[__ZTI9b2Contact]=(__ZTVN10__cxxabiv117__class_type_infoE+2)
IHEAP[__ZTI9b2Contact+1]=__ZTS9b2Contact
IHEAP[__ZTI23b2ChainAndCircleContact]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI23b2ChainAndCircleContact+1]=__ZTS23b2ChainAndCircleContact
IHEAP[__ZTI23b2ChainAndCircleContact+2]=(__ZTI9b2Contact)
IHEAP[__ZTV7b2Shape+1]=(__ZTI7b2Shape)
IHEAP[__ZTI7b2Shape]=(__ZTVN10__cxxabiv117__class_type_infoE+2)
IHEAP[__ZTI7b2Shape+1]=__ZTS7b2Shape
IHEAP[__ZTV24b2ChainAndPolygonContact+1]=(__ZTI24b2ChainAndPolygonContact)
IHEAP[__ZTI24b2ChainAndPolygonContact]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI24b2ChainAndPolygonContact+1]=__ZTS24b2ChainAndPolygonContact
IHEAP[__ZTI24b2ChainAndPolygonContact+2]=(__ZTI9b2Contact)
IHEAP[__ZTV12b2ChainShape+1]=(__ZTI12b2ChainShape)
IHEAP[__ZTI12b2ChainShape]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI12b2ChainShape+1]=__ZTS12b2ChainShape
IHEAP[__ZTI12b2ChainShape+2]=(__ZTI7b2Shape)
IHEAP[__ZTV15b2CircleContact+1]=(__ZTI15b2CircleContact)
IHEAP[__ZTI15b2CircleContact]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI15b2CircleContact+1]=__ZTS15b2CircleContact
IHEAP[__ZTI15b2CircleContact+2]=(__ZTI9b2Contact)
IHEAP[__ZTV13b2CircleShape+1]=(__ZTI13b2CircleShape)
IHEAP[__ZTI13b2CircleShape]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI13b2CircleShape+1]=__ZTS13b2CircleShape
IHEAP[__ZTI13b2CircleShape+2]=(__ZTI7b2Shape)
IHEAP[__ZTV9b2Contact+1]=(__ZTI9b2Contact)
IHEAP[__ZTV17b2ContactListener+1]=(__ZTI17b2ContactListener)
IHEAP[__ZTI17b2ContactListener]=(__ZTVN10__cxxabiv117__class_type_infoE+2)
IHEAP[__ZTI17b2ContactListener+1]=__ZTS17b2ContactListener
IHEAP[__ZTV15b2DistanceJoint+1]=(__ZTI15b2DistanceJoint)
IHEAP[__ZTI7b2Joint]=(__ZTVN10__cxxabiv117__class_type_infoE+2)
IHEAP[__ZTI7b2Joint+1]=__ZTS7b2Joint
IHEAP[__ZTI15b2DistanceJoint]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI15b2DistanceJoint+1]=__ZTS15b2DistanceJoint
IHEAP[__ZTI15b2DistanceJoint+2]=(__ZTI7b2Joint)
IHEAP[__ZTV6b2Draw+1]=(__ZTI6b2Draw)
IHEAP[__ZTI6b2Draw]=(__ZTVN10__cxxabiv117__class_type_infoE+2)
IHEAP[__ZTI6b2Draw+1]=__ZTS6b2Draw
IHEAP[__ZTV22b2EdgeAndCircleContact+1]=(__ZTI22b2EdgeAndCircleContact)
IHEAP[__ZTI22b2EdgeAndCircleContact]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI22b2EdgeAndCircleContact+1]=__ZTS22b2EdgeAndCircleContact
IHEAP[__ZTI22b2EdgeAndCircleContact+2]=(__ZTI9b2Contact)
IHEAP[__ZTV23b2EdgeAndPolygonContact+1]=(__ZTI23b2EdgeAndPolygonContact)
IHEAP[__ZTI23b2EdgeAndPolygonContact]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI23b2EdgeAndPolygonContact+1]=__ZTS23b2EdgeAndPolygonContact
IHEAP[__ZTI23b2EdgeAndPolygonContact+2]=(__ZTI9b2Contact)
IHEAP[__ZTV11b2EdgeShape+1]=(__ZTI11b2EdgeShape)
IHEAP[__ZTI11b2EdgeShape]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI11b2EdgeShape+1]=__ZTS11b2EdgeShape
IHEAP[__ZTI11b2EdgeShape+2]=(__ZTI7b2Shape)
IHEAP[__ZTV15b2FrictionJoint+1]=(__ZTI15b2FrictionJoint)
IHEAP[__ZTI15b2FrictionJoint]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI15b2FrictionJoint+1]=__ZTS15b2FrictionJoint
IHEAP[__ZTI15b2FrictionJoint+2]=(__ZTI7b2Joint)
IHEAP[__ZTV11b2GearJoint+1]=(__ZTI11b2GearJoint)
IHEAP[__ZTI11b2GearJoint]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI11b2GearJoint+1]=__ZTS11b2GearJoint
IHEAP[__ZTI11b2GearJoint+2]=(__ZTI7b2Joint)
IHEAP[__ZTV7b2Joint+1]=(__ZTI7b2Joint)
IHEAP[__ZTV12b2MouseJoint+1]=(__ZTI12b2MouseJoint)
IHEAP[__ZTI12b2MouseJoint]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI12b2MouseJoint+1]=__ZTS12b2MouseJoint
IHEAP[__ZTI12b2MouseJoint+2]=(__ZTI7b2Joint)
IHEAP[__ZTV25b2PolygonAndCircleContact+1]=(__ZTI25b2PolygonAndCircleContact)
IHEAP[__ZTI25b2PolygonAndCircleContact]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI25b2PolygonAndCircleContact+1]=__ZTS25b2PolygonAndCircleContact
IHEAP[__ZTI25b2PolygonAndCircleContact+2]=(__ZTI9b2Contact)
IHEAP[__ZTV16b2PolygonContact+1]=(__ZTI16b2PolygonContact)
IHEAP[__ZTI16b2PolygonContact]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI16b2PolygonContact+1]=__ZTS16b2PolygonContact
IHEAP[__ZTI16b2PolygonContact+2]=(__ZTI9b2Contact)
IHEAP[__ZTV14b2PolygonShape+1]=(__ZTI14b2PolygonShape)
IHEAP[__ZTI14b2PolygonShape]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI14b2PolygonShape+1]=__ZTS14b2PolygonShape
IHEAP[__ZTI14b2PolygonShape+2]=(__ZTI7b2Shape)
IHEAP[__ZTV16b2PrismaticJoint+1]=(__ZTI16b2PrismaticJoint)
IHEAP[__ZTI16b2PrismaticJoint]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI16b2PrismaticJoint+1]=__ZTS16b2PrismaticJoint
IHEAP[__ZTI16b2PrismaticJoint+2]=(__ZTI7b2Joint)
IHEAP[__ZTV13b2PulleyJoint+1]=(__ZTI13b2PulleyJoint)
IHEAP[__ZTI13b2PulleyJoint]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI13b2PulleyJoint+1]=__ZTS13b2PulleyJoint
IHEAP[__ZTI13b2PulleyJoint+2]=(__ZTI7b2Joint)
IHEAP[__ZTV15b2RevoluteJoint+1]=(__ZTI15b2RevoluteJoint)
IHEAP[__ZTI15b2RevoluteJoint]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI15b2RevoluteJoint+1]=__ZTS15b2RevoluteJoint
IHEAP[__ZTI15b2RevoluteJoint+2]=(__ZTI7b2Joint)
IHEAP[__ZTV11b2RopeJoint+1]=(__ZTI11b2RopeJoint)
IHEAP[__ZTI11b2RopeJoint]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI11b2RopeJoint+1]=__ZTS11b2RopeJoint
IHEAP[__ZTI11b2RopeJoint+2]=(__ZTI7b2Joint)
IHEAP[__ZTV11b2WeldJoint+1]=(__ZTI11b2WeldJoint)
IHEAP[__ZTI11b2WeldJoint]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI11b2WeldJoint+1]=__ZTS11b2WeldJoint
IHEAP[__ZTI11b2WeldJoint+2]=(__ZTI7b2Joint)
IHEAP[__ZTV12b2WheelJoint+1]=(__ZTI12b2WheelJoint)
IHEAP[__ZTI12b2WheelJoint]=(__ZTVN10__cxxabiv120__si_class_type_infoE+2)
IHEAP[__ZTI12b2WheelJoint+1]=__ZTS12b2WheelJoint
IHEAP[__ZTI12b2WheelJoint+2]=(__ZTI7b2Joint)
IHEAP[__ZTV15b2ContactFilter+1]=(__ZTI15b2ContactFilter)
IHEAP[__ZTI15b2ContactFilter]=(__ZTVN10__cxxabiv117__class_type_infoE+2)
IHEAP[__ZTI15b2ContactFilter+1]=__ZTS15b2ContactFilter
__ZN16b2BlockAllocatorC1Ev = 376;
__ZN16b2BlockAllocatorD1Ev = 378;
__ZN6b2BodyC1EPK9b2BodyDefP7b2World = 380;
__ZN6b2BodyD1Ev = 382;
__ZN12b2BroadPhaseC1Ev = 384;
__ZN12b2BroadPhaseD1Ev = 386;
__ZN23b2ChainAndCircleContactC1EP9b2FixtureiS1_i = 388;
__ZN24b2ChainAndPolygonContactC1EP9b2FixtureiS1_i = 390;
__ZN12b2ChainShapeD1Ev = 54;
__ZN15b2CircleContactC1EP9b2FixtureS1_ = 392;
__ZN16b2ContactManagerC1Ev = 394;
__ZN15b2ContactSolverC1EP18b2ContactSolverDef = 396;
__ZN15b2ContactSolverD1Ev = 398;
__ZN15b2DistanceJointC1EPK18b2DistanceJointDef = 400;
__ZN13b2DynamicTreeC1Ev = 402;
__ZN13b2DynamicTreeD1Ev = 404;
__ZN22b2EdgeAndCircleContactC1EP9b2FixtureS1_ = 406;
__ZN23b2EdgeAndPolygonContactC1EP9b2FixtureS1_ = 408;
__ZN9b2FixtureC1Ev = 410;
__ZN15b2FrictionJointC1EPK18b2FrictionJointDef = 412;
__ZN11b2GearJointC1EPK14b2GearJointDef = 414;
__ZN8b2IslandC1EiiiP16b2StackAllocatorP17b2ContactListener = 416;
__ZN8b2IslandD1Ev = 418;
__ZN12b2MouseJointC1EPK15b2MouseJointDef = 420;
__ZN25b2PolygonAndCircleContactC1EP9b2FixtureS1_ = 422;
__ZN16b2PolygonContactC1EP9b2FixtureS1_ = 424;
__ZN16b2PrismaticJointC1EPK19b2PrismaticJointDef = 426;
__ZN13b2PulleyJointC1EPK16b2PulleyJointDef = 428;
__ZN15b2RevoluteJointC1EPK18b2RevoluteJointDef = 430;
__ZN6b2RopeC1Ev = 432;
__ZN6b2RopeD1Ev = 434;
__ZN11b2RopeJointC1EPK14b2RopeJointDef = 436;
__ZN16b2StackAllocatorC1Ev = 438;
__ZN16b2StackAllocatorD1Ev = 440;
__ZN7b2TimerC1Ev = 442;
__ZN11b2WeldJointC1EPK14b2WeldJointDef = 444;
__ZN12b2WheelJointC1EPK15b2WheelJointDef = 446;
__ZN7b2WorldC1ERK6b2Vec2 = 448;
__ZN7b2WorldD1Ev = 450;
FUNCTION_TABLE = [0,0,__ZN15b2CircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,0,__ZN15b2CircleContact7DestroyEP9b2ContactP16b2BlockAllocator,0,__ZN25b2PolygonAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,0,__ZN25b2PolygonAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator,0,__ZN16b2PolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,0,__ZN16b2PolygonContact7DestroyEP9b2ContactP16b2BlockAllocator,0,__ZN22b2EdgeAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,0,__ZN22b2EdgeAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator,0,__ZN23b2EdgeAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,0,__ZN23b2EdgeAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator,0,__ZN23b2ChainAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,0,__ZN23b2ChainAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator,0,__ZN24b2ChainAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,0,__ZN24b2ChainAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator,0,__ZN15b2ContactFilterD1Ev,0,__ZN17b2ContactListenerD1Ev,0,__Z14b2PairLessThanRK6b2PairS1_,0,__ZN23b2ChainAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,0,__ZN23b2ChainAndCircleContactD1Ev,0,__ZN23b2ChainAndCircleContactD0Ev,0,__ZN7b2ShapeD1Ev,0,__ZN7b2ShapeD0Ev,0,___cxa_pure_virtual,0,__ZN24b2ChainAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,0,__ZN24b2ChainAndPolygonContactD1Ev,0,__ZN24b2ChainAndPolygonContactD0Ev,0,__ZN12b2ChainShapeD2Ev,0,__ZN12b2ChainShapeD0Ev,0,__ZNK12b2ChainShape5CloneEP16b2BlockAllocator,0,__ZNK12b2ChainShape13GetChildCountEv,0,__ZNK12b2ChainShape9TestPointERK11b2TransformRK6b2Vec2,0,__ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,0,__ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi,0,__ZNK12b2ChainShape11ComputeMassEP10b2MassDataf,0,__ZN15b2CircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,0,__ZN15b2CircleContactD1Ev,0,__ZN15b2CircleContactD0Ev,0,__ZN13b2CircleShapeD1Ev,0,__ZN13b2CircleShapeD0Ev,0,__ZNK13b2CircleShape5CloneEP16b2BlockAllocator,0,__ZNK13b2CircleShape13GetChildCountEv,0,__ZNK13b2CircleShape9TestPointERK11b2TransformRK6b2Vec2,0,__ZNK13b2CircleShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,0,__ZNK13b2CircleShape11ComputeAABBEP6b2AABBRK11b2Transformi,0,__ZNK13b2CircleShape11ComputeMassEP10b2MassDataf,0,__ZN9b2ContactD1Ev,0,__ZN9b2ContactD0Ev,0,__ZN17b2ContactListenerD0Ev,0,__ZN17b2ContactListener12BeginContactEP9b2Contact,0,__ZN17b2ContactListener10EndContactEP9b2Contact,0,__ZN17b2ContactListener8PreSolveEP9b2ContactPK10b2Manifold,0,__ZN17b2ContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse,0,__ZNK15b2DistanceJoint10GetAnchorAEv,0,__ZNK15b2DistanceJoint10GetAnchorBEv,0,__ZNK15b2DistanceJoint16GetReactionForceEf,0,__ZNK15b2DistanceJoint17GetReactionTorqueEf,0,__ZN15b2DistanceJoint4DumpEv,0,__ZN15b2DistanceJointD1Ev,0,__ZN15b2DistanceJointD0Ev,0,__ZN15b2DistanceJoint23InitVelocityConstraintsERK12b2SolverData,0,__ZN15b2DistanceJoint24SolveVelocityConstraintsERK12b2SolverData,0,__ZN15b2DistanceJoint24SolvePositionConstraintsERK12b2SolverData,0,__ZN6b2DrawD1Ev,0,__ZN6b2DrawD0Ev,0,__ZN22b2EdgeAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,0,__ZN22b2EdgeAndCircleContactD1Ev,0,__ZN22b2EdgeAndCircleContactD0Ev,0,__ZN23b2EdgeAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,0,__ZN23b2EdgeAndPolygonContactD1Ev,0,__ZN23b2EdgeAndPolygonContactD0Ev,0,__ZN11b2EdgeShapeD1Ev,0,__ZN11b2EdgeShapeD0Ev,0,__ZNK11b2EdgeShape5CloneEP16b2BlockAllocator,0,__ZNK11b2EdgeShape13GetChildCountEv,0,__ZNK11b2EdgeShape9TestPointERK11b2TransformRK6b2Vec2,0,__ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,0,__ZNK11b2EdgeShape11ComputeAABBEP6b2AABBRK11b2Transformi,0,__ZNK11b2EdgeShape11ComputeMassEP10b2MassDataf,0,__ZNK15b2FrictionJoint10GetAnchorAEv,0,__ZNK15b2FrictionJoint10GetAnchorBEv,0,__ZNK15b2FrictionJoint16GetReactionForceEf,0,__ZNK15b2FrictionJoint17GetReactionTorqueEf,0,__ZN15b2FrictionJoint4DumpEv,0,__ZN15b2FrictionJointD1Ev,0,__ZN15b2FrictionJointD0Ev,0,__ZN15b2FrictionJoint23InitVelocityConstraintsERK12b2SolverData,0,__ZN15b2FrictionJoint24SolveVelocityConstraintsERK12b2SolverData,0,__ZN15b2FrictionJoint24SolvePositionConstraintsERK12b2SolverData,0,__ZNK11b2GearJoint10GetAnchorAEv,0,__ZNK11b2GearJoint10GetAnchorBEv,0,__ZNK11b2GearJoint16GetReactionForceEf,0,__ZNK11b2GearJoint17GetReactionTorqueEf,0,__ZN11b2GearJoint4DumpEv,0,__ZN11b2GearJointD1Ev,0,__ZN11b2GearJointD0Ev,0,__ZN11b2GearJoint23InitVelocityConstraintsERK12b2SolverData,0,__ZN11b2GearJoint24SolveVelocityConstraintsERK12b2SolverData,0,__ZN11b2GearJoint24SolvePositionConstraintsERK12b2SolverData,0,__ZN7b2Joint4DumpEv,0,__ZN7b2JointD1Ev,0,__ZN7b2JointD0Ev,0,__ZNK12b2MouseJoint10GetAnchorAEv,0,__ZNK12b2MouseJoint10GetAnchorBEv,0,__ZNK12b2MouseJoint16GetReactionForceEf,0,__ZNK12b2MouseJoint17GetReactionTorqueEf,0,__ZN12b2MouseJoint4DumpEv,0,__ZN12b2MouseJointD1Ev,0,__ZN12b2MouseJointD0Ev,0,__ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData,0,__ZN12b2MouseJoint24SolveVelocityConstraintsERK12b2SolverData,0,__ZN12b2MouseJoint24SolvePositionConstraintsERK12b2SolverData,0,__ZN25b2PolygonAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,0,__ZN25b2PolygonAndCircleContactD1Ev,0,__ZN25b2PolygonAndCircleContactD0Ev,0,__ZN16b2PolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,0,__ZN16b2PolygonContactD1Ev,0,__ZN16b2PolygonContactD0Ev,0,__ZN14b2PolygonShapeD1Ev,0,__ZN14b2PolygonShapeD0Ev,0,__ZNK14b2PolygonShape5CloneEP16b2BlockAllocator,0,__ZNK14b2PolygonShape13GetChildCountEv,0,__ZNK14b2PolygonShape9TestPointERK11b2TransformRK6b2Vec2,0,__ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,0,__ZNK14b2PolygonShape11ComputeAABBEP6b2AABBRK11b2Transformi,0,__ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf,0,__ZNK16b2PrismaticJoint10GetAnchorAEv,0,__ZNK16b2PrismaticJoint10GetAnchorBEv,0,__ZNK16b2PrismaticJoint16GetReactionForceEf,0,__ZNK16b2PrismaticJoint17GetReactionTorqueEf,0,__ZN16b2PrismaticJoint4DumpEv,0,__ZN16b2PrismaticJointD1Ev,0,__ZN16b2PrismaticJointD0Ev,0,__ZN16b2PrismaticJoint23InitVelocityConstraintsERK12b2SolverData,0,__ZN16b2PrismaticJoint24SolveVelocityConstraintsERK12b2SolverData,0,__ZN16b2PrismaticJoint24SolvePositionConstraintsERK12b2SolverData,0,__ZNK13b2PulleyJoint10GetAnchorAEv,0,__ZNK13b2PulleyJoint10GetAnchorBEv,0,__ZNK13b2PulleyJoint16GetReactionForceEf,0,__ZNK13b2PulleyJoint17GetReactionTorqueEf,0,__ZN13b2PulleyJoint4DumpEv,0,__ZN13b2PulleyJointD1Ev,0,__ZN13b2PulleyJointD0Ev,0,__ZN13b2PulleyJoint23InitVelocityConstraintsERK12b2SolverData,0,__ZN13b2PulleyJoint24SolveVelocityConstraintsERK12b2SolverData,0,__ZN13b2PulleyJoint24SolvePositionConstraintsERK12b2SolverData,0,__ZNK15b2RevoluteJoint10GetAnchorAEv,0,__ZNK15b2RevoluteJoint10GetAnchorBEv,0,__ZNK15b2RevoluteJoint16GetReactionForceEf,0,__ZNK15b2RevoluteJoint17GetReactionTorqueEf,0,__ZN15b2RevoluteJoint4DumpEv,0,__ZN15b2RevoluteJointD1Ev,0,__ZN15b2RevoluteJointD0Ev,0,__ZN15b2RevoluteJoint23InitVelocityConstraintsERK12b2SolverData,0,__ZN15b2RevoluteJoint24SolveVelocityConstraintsERK12b2SolverData,0,__ZN15b2RevoluteJoint24SolvePositionConstraintsERK12b2SolverData,0,__ZNK11b2RopeJoint10GetAnchorAEv,0,__ZNK11b2RopeJoint10GetAnchorBEv,0,__ZNK11b2RopeJoint16GetReactionForceEf,0,__ZNK11b2RopeJoint17GetReactionTorqueEf,0,__ZN11b2RopeJoint4DumpEv,0,__ZN11b2RopeJointD1Ev,0,__ZN11b2RopeJointD0Ev,0,__ZN11b2RopeJoint23InitVelocityConstraintsERK12b2SolverData,0,__ZN11b2RopeJoint24SolveVelocityConstraintsERK12b2SolverData,0,__ZN11b2RopeJoint24SolvePositionConstraintsERK12b2SolverData,0,__ZNK11b2WeldJoint10GetAnchorAEv,0,__ZNK11b2WeldJoint10GetAnchorBEv,0,__ZNK11b2WeldJoint16GetReactionForceEf,0,__ZNK11b2WeldJoint17GetReactionTorqueEf,0,__ZN11b2WeldJoint4DumpEv,0,__ZN11b2WeldJointD1Ev,0,__ZN11b2WeldJointD0Ev,0,__ZN11b2WeldJoint23InitVelocityConstraintsERK12b2SolverData,0,__ZN11b2WeldJoint24SolveVelocityConstraintsERK12b2SolverData,0,__ZN11b2WeldJoint24SolvePositionConstraintsERK12b2SolverData,0,__ZNK12b2WheelJoint10GetAnchorAEv,0,__ZNK12b2WheelJoint10GetAnchorBEv,0,__ZNK12b2WheelJoint16GetReactionForceEf,0,__ZNK12b2WheelJoint17GetReactionTorqueEf,0,__ZN12b2WheelJoint4DumpEv,0,__ZN12b2WheelJointD1Ev,0,__ZN12b2WheelJointD0Ev,0,__ZN12b2WheelJoint23InitVelocityConstraintsERK12b2SolverData,0,__ZN12b2WheelJoint24SolveVelocityConstraintsERK12b2SolverData,0,__ZN12b2WheelJoint24SolvePositionConstraintsERK12b2SolverData,0,__ZN15b2ContactFilterD0Ev,0,__ZN15b2ContactFilter13ShouldCollideEP9b2FixtureS1_,0,__ZN16b2BlockAllocatorC2Ev,0,__ZN16b2BlockAllocatorD2Ev,0,__ZN6b2BodyC2EPK9b2BodyDefP7b2World,0,__ZN6b2BodyD2Ev,0,__ZN12b2BroadPhaseC2Ev,0,__ZN12b2BroadPhaseD2Ev,0,__ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i,0,__ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i,0,__ZN15b2CircleContactC2EP9b2FixtureS1_,0,__ZN16b2ContactManagerC2Ev,0,__ZN15b2ContactSolverC2EP18b2ContactSolverDef,0,__ZN15b2ContactSolverD2Ev,0,__ZN15b2DistanceJointC2EPK18b2DistanceJointDef,0,__ZN13b2DynamicTreeC2Ev,0,__ZN13b2DynamicTreeD2Ev,0,__ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_,0,__ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_,0,__ZN9b2FixtureC2Ev,0,__ZN15b2FrictionJointC2EPK18b2FrictionJointDef,0,__ZN11b2GearJointC2EPK14b2GearJointDef,0,__ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener,0,__ZN8b2IslandD2Ev,0,__ZN12b2MouseJointC2EPK15b2MouseJointDef,0,__ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_,0,__ZN16b2PolygonContactC2EP9b2FixtureS1_,0,__ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef,0,__ZN13b2PulleyJointC2EPK16b2PulleyJointDef,0,__ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef,0,__ZN6b2RopeC2Ev,0,__ZN6b2RopeD2Ev,0,__ZN11b2RopeJointC2EPK14b2RopeJointDef,0,__ZN16b2StackAllocatorC2Ev,0,__ZN16b2StackAllocatorD2Ev,0,__ZN7b2TimerC2Ev,0,__ZN11b2WeldJointC2EPK14b2WeldJointDef,0,__ZN12b2WheelJointC2EPK15b2WheelJointDef,0,__ZN7b2WorldC2ERK6b2Vec2,0,__ZN7b2WorldD2Ev,0]; Module["FUNCTION_TABLE"] = FUNCTION_TABLE;


function run(args) {
  args = args || Module['arguments'];

  __globalConstructor__();

  var ret = null;
  if (Module['_main']) {
    ret = Module.callMain(args);
    __shutdownRuntime__();
  }
  return ret;
}
Module['run'] = run;

// {{PRE_RUN_ADDITIONS}}

// In a hackish way, we disable permissions until now, so setup code works, but enable them for runtime so compile code works with permissions
try {
  FS.ignorePermissions = false;
} catch(e){}


if (!Module['noInitialRun']) {
  var ret = run();
}

// {{POST_RUN_ADDITIONS}}





  // {{MODULE_ADDITIONS}}


// EMSCRIPTEN_GENERATED_FUNCTIONS: ["__ZN6b2BodyD2Ev","__ZN11b2TransformC1Ev","__ZN7b2SweepC1Ev","__ZN6b2Vec2C1Ev","__Z9b2IsValidf","__ZN16b2BlockAllocatorD2Ev","__ZN16b2BlockAllocator4FreeEPvi","__ZN16b2BlockAllocator5ClearEv","__ZN6b2Vec27SetZeroEv","__ZN16b2BlockAllocatorC2Ev","__ZN16b2BlockAllocator8AllocateEi","__ZN6b2BodyC2EPK9b2BodyDefP7b2World","__ZNK6b2Vec27IsValidEv","__ZN5b2Rot3SetEf","__ZN12b2FixtureDefC1Ev","__ZN10b2MassDataC1Ev","__ZNK7b2World8IsLockedEv","__ZN6b2Body19SynchronizeFixturesEv","__ZN6b2Body8SetAwakeEb","__ZN9b2Contact11GetFixtureAEv","__ZN9b2Contact11GetFixtureBEv","__ZNK9b2Fixture11GetMassDataEP10b2MassData","__ZN6b2Vec2pLERKS_","__ZmlfRK6b2Vec2","__ZN6b2Vec2mLEf","__Z5b2DotRK6b2Vec2S1_","__Z5b2MulRK11b2TransformRK6b2Vec2","__Z7b2CrossfRK6b2Vec2","__ZN6b2Body7SetTypeE10b2BodyType","__ZN6b2Body13ResetMassDataEv","__ZN6b2Body13CreateFixtureEPK12b2FixtureDef","__ZN6b2Body13CreateFixtureEPK7b2Shapef","__ZN6b2Body14DestroyFixtureEP9b2Fixture","__ZN6b2Vec2C2Ev","__ZN5b2RotC2Ev","__ZN6b2Vec2C1Eff","__ZN8b2FilterC1Ev","__ZN5b2RotC1Ev","__ZN12b2BroadPhase10TouchProxyEi","__ZmiRK6b2Vec2S1_","__ZNK6b2Body13ShouldCollideEPKS_","__Z5b2MulRK5b2RotRK6b2Vec2","__ZNK6b2Body8IsActiveEv","__ZN6b2Body4DumpEv","__ZN6b2Vec2C2Eff","__ZN10b2MassDataC2Ev","__ZN12b2FixtureDefC2Ev","__ZN8b2FilterC2Ev","__ZN7b2SweepC2Ev","__ZN11b2TransformC2Ev","__ZN12b2BroadPhaseD2Ev","__ZN12b2BroadPhase12DestroyProxyEi","__ZN12b2BroadPhase12UnBufferMoveEi","__ZN6b2Body11SetMassDataEPK10b2MassData","__ZN6b2Body12SetTransformERK6b2Vec2f","__ZN6b2Body9SetActiveEb","__ZN12b2BroadPhaseC2Ev","__ZN12b2BroadPhase11CreateProxyERK6b2AABBPv","__ZN12b2BroadPhase10BufferMoveEi","__ZN12b2BroadPhase9MoveProxyEiRK6b2AABBRK6b2Vec2","__ZN9b2ContactD2Ev","__ZN7b2ShapeD2Ev","__ZN11b2EdgeShapeC1Ev","__ZN11b2EdgeShapeD1Ev","__ZN23b2ChainAndCircleContactD1Ev","__ZN7b2ShapeD1Ev","__ZN24b2ChainAndPolygonContactD1Ev","__ZN12b2ChainShapeC1Ev","__Z5b2MinIiET_S0_S0_","__Z5b2MaxIiET_S0_S0_","__ZN23b2ChainAndCircleContactD0Ev","__ZN23b2ChainAndCircleContactD2Ev","__ZN11b2EdgeShapeD2Ev","__ZN7b2ShapeC2Ev","__ZN7b2ShapeD0Ev","__ZN24b2ChainAndPolygonContactD0Ev","__ZN24b2ChainAndPolygonContactD2Ev","__ZN12b2ChainShapeD0Ev","__ZN23b2ChainAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator","__ZN9b2Fixture8GetShapeEv","__ZN11b2EdgeShapeC2Ev","__ZNK7b2Shape7GetTypeEv","__ZN24b2ChainAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator","__ZN12b2ChainShapeD2Ev","__ZN12b2ChainShape13SetPrevVertexERK6b2Vec2","__ZN12b2ChainShape13SetNextVertexERK6b2Vec2","__ZNK12b2ChainShape13GetChildCountEv","__ZN12b2BroadPhase13QueryCallbackEi","__ZN23b2ChainAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator","__ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i","__ZNK9b2Fixture7GetTypeEv","__ZN23b2ChainAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_","__ZN24b2ChainAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator","__ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i","__ZN24b2ChainAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_","__ZN12b2ChainShape10CreateLoopEPK6b2Vec2i","__ZN12b2ChainShape11CreateChainEPK6b2Vec2i","__ZNK12b2ChainShape5CloneEP16b2BlockAllocator","__ZNK12b2ChainShape9TestPointERK11b2TransformRK6b2Vec2","__ZNK13b2CircleShape13GetChildCountEv","__ZN15b2CircleContactD1Ev","__ZN13b2CircleShapeC1Ev","__ZN13b2CircleShapeD1Ev","__Z5b2MaxIfET_S0_S0_","__Z5b2MinIfET_S0_S0_","__ZN15b2CircleContactD0Ev","__ZN15b2CircleContactD2Ev","__ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei","__ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi","__ZNK12b2ChainShape11ComputeMassEP10b2MassDataf","__ZN12b2ChainShapeC2Ev","__ZN15b2CircleContact7DestroyEP9b2ContactP16b2BlockAllocator","__ZplRK6b2Vec2S1_","__ZNK13b2CircleShape11ComputeAABBEP6b2AABBRK11b2Transformi","__ZN6b2Vec23SetEff","__ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi","__Z5b2MinRK6b2Vec2S1_","__Z5b2MaxRK6b2Vec2S1_","__ZN15b2CircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator","__ZN15b2CircleContactC2EP9b2FixtureS1_","__ZN15b2CircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_","__ZNK13b2CircleShape5CloneEP16b2BlockAllocator","__ZN13b2CircleShapeaSERKS_","__ZNK13b2CircleShape9TestPointERK11b2TransformRK6b2Vec2","__ZNK13b2CircleShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi","__ZN6b2Vec29NormalizeEv","__ZNK13b2CircleShape11ComputeMassEP10b2MassDataf","__ZN13b2CircleShapeD0Ev","__ZN13b2CircleShapeD2Ev","__ZN7b2ShapeaSERKS_","__ZN13b2CircleShapeC2Ev","__Z6b2MulTRK11b2TransformRK6b2Vec2","__ZNK6b2Vec26LengthEv","__Z16b2CollideCirclesP10b2ManifoldPK13b2CircleShapeRK11b2TransformS3_S6_","__Z25b2CollidePolygonAndCircleP10b2ManifoldPK14b2PolygonShapeRK11b2TransformPK13b2CircleShapeS6_","__Z17b2DistanceSquaredRK6b2Vec2S1_","__Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_","__ZN12b2EPCollider7CollideEP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS7_","__ZN12b2ClipVertexC1Ev","__ZN15b2ReferenceFaceC1Ev","__Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_","__ZN12b2EPColliderC1Ev","__ZN13b2TempPolygonC1Ev","__Z6b2MulTRK11b2TransformS1_","__Z7b2CrossRK6b2Vec2S1_","__ZNK6b2Vec2ngEv","__ZN12b2EPColliderC2Ev","__ZN13b2TempPolygonC2Ev","__ZN15b2ReferenceFaceC2Ev","__ZN12b2ClipVertexC2Ev","__Z6b2MulTRK5b2RotS1_","__Z6b2MulTRK5b2RotRK6b2Vec2","__ZN12b2EPCollider21ComputeEdgeSeparationEv","__ZN12b2EPCollider24ComputePolygonSeparationEv","__Z17b2CollidePolygonsP10b2ManifoldPK14b2PolygonShapeRK11b2TransformS3_S6_","__Z7b2CrossRK6b2Vec2f","__ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_","__ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_","__ZL16b2EdgeSeparationPK14b2PolygonShapeRK11b2TransformiS1_S4_","__ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f","__ZN9b2Contact19InitializeRegistersEv","__Z6b2SwapIfEvRT_S1_","__ZN15b2DistanceInputC1Ev","__ZN16b2DistanceOutputC1Ev","__ZN15b2DistanceProxyC1Ev","__Z5b2AbsIfET_S0_","__Z16b2GetPointStatesP12b2PointStateS0_PK10b2ManifoldS3_","__ZN6b2Vec2clEi","__ZNK6b2Vec2clEi","__Z13b2TestOverlapPK7b2ShapeiS1_iRK11b2TransformS4_","__ZN16b2DistanceOutputC2Ev","__ZN15b2DistanceInputC2Ev","__ZN15b2DistanceProxyC2Ev","__ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_","__ZNK6b2AABB7RayCastEP15b2RayCastOutputRK14b2RayCastInput","__Z5b2AbsRK6b2Vec2","__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi","__ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator","__ZN9b2Contact7DestroyEPS_P16b2BlockAllocator","__ZN10b2ManifoldC1Ev","__ZN9b2ContactD1Ev","__ZN15b2ManifoldPointC1Ev","__ZN15b2ContactFilterC1Ev","__ZN15b2ContactFilterD1Ev","__ZN17b2ContactListenerC1Ev","__ZN17b2ContactListenerD1Ev","__Z16b2MixRestitutionff","__ZN9b2ContactD0Ev","__ZN9b2Fixture7GetBodyEv","__ZNK9b2Fixture8IsSensorEv","__ZNK6b2Body12GetTransformEv","__ZN10b2ManifoldC2Ev","__ZN15b2ManifoldPointC2Ev","__ZN16b2ContactManagerC2Ev","__ZNK9b2Contact10IsTouchingEv","__ZN9b2ContactC2EP9b2FixtureiS1_i","__Z13b2MixFrictionff","__ZN9b2Contact6UpdateEP17b2ContactListener","___cxx_global_var_init","___cxx_global_var_init1","__ZN16b2ContactManager7DestroyEP9b2Contact","__ZNK9b2Contact14GetChildIndexAEv","__ZNK9b2Contact14GetChildIndexBEv","__ZN9b2Contact7GetNextEv","__ZNK6b2Body7IsAwakeEv","__ZN16b2ContactManager15FindNewContactsEv","__ZN6b2Body14GetContactListEv","__ZNK13b2DynamicTree10GetFatAABBEi","__Z14b2PairLessThanRK6b2PairS1_","__ZN16b2ContactManager7CollideEv","__ZNK12b2BroadPhase11TestOverlapEii","__ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_","__ZN16b2ContactManager7AddPairEPvS0_","__ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB","__ZNK13b2DynamicTree11GetUserDataEi","__ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_","__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_","__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_","__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_","__ZNSt3__118__insertion_sort_3IRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_","__ZN17b2ContactListenerD2Ev","__ZN17b2ContactListener12BeginContactEP9b2Contact","__ZN17b2ContactListener10EndContactEP9b2Contact","__ZN17b2ContactListener8PreSolveEP9b2ContactPK10b2Manifold","__ZN17b2ContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse","__ZN15b2ContactFilterD2Ev","__GLOBAL__I_a","__ZN15b2GrowableStackIiLi256EEC1Ev","__ZN15b2GrowableStackIiLi256EED1Ev","__ZN17b2ContactListenerC2Ev","__ZN17b2ContactListenerD0Ev","__ZN15b2ContactFilterC2Ev","__ZN15b2GrowableStackIiLi256EE8GetCountEv","__ZN15b2GrowableStackIiLi256EE3PopEv","__Z13b2TestOverlapRK6b2AABBS1_","__ZNK10b2TreeNode6IsLeafEv","__ZN15b2GrowableStackIiLi256EED2Ev","__ZN15b2GrowableStackIiLi256EEC2Ev","__ZN9b2Contact11GetManifoldEv","__ZN7b2Mat227SetZeroEv","__ZN15b2ContactSolverD2Ev","__ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_","__ZN15b2GrowableStackIiLi256EE4PushERKi","__ZN15b2ContactSolverC2EP18b2ContactSolverDef","__ZN15b2WorldManifoldC1Ev","__ZNK7b2Mat2210GetInverseEv","__ZN6b2Vec2mIERKS_","__ZN15b2ContactSolver29InitializeVelocityConstraintsEv","__ZN15b2ContactSolver9WarmStartEv","__Z5b2MulRK7b2Mat22RK6b2Vec2","__ZN15b2ContactSolver24SolveVelocityConstraintsEv","__Z7b2ClampIfET_S0_S0_S0_","__ZN15b2ContactSolver13StoreImpulsesEv","__ZN24b2PositionSolverManifoldC1Ev","__ZN7b2Mat22C1Ev","__ZN24b2PositionSolverManifoldC2Ev","__ZN7b2Mat22C2Ev","__ZN15b2WorldManifoldC2Ev","__ZN15b2ContactSolver24SolvePositionConstraintsEv","__ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i","__ZN15b2ContactSolver27SolveTOIPositionConstraintsEii","__ZN9b2SimplexC1Ev","__ZN15b2DistanceProxy3SetEPK7b2Shapei","__ZN9b2Simplex6Solve2Ev","__ZN9b2Simplex6Solve3Ev","__Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput","__ZN7b2JointD2Ev","__ZN15b2SimplexVertexC1Ev","__ZNK9b2Simplex15GetClosestPointEv","__ZNK6b2Vec213LengthSquaredEv","__ZNK15b2DistanceProxy9GetVertexEi","__ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_","__ZN9b2SimplexC2Ev","__ZN15b2SimplexVertexC2Ev","__ZNK6b2Body13GetLocalPointERK6b2Vec2","__ZN15b2DistanceJointC2EPK18b2DistanceJointDef","__ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_","__ZNK9b2Simplex18GetSearchDirectionEv","__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2","__Z10b2DistanceRK6b2Vec2S1_","__ZNK9b2Simplex10WriteCacheEP14b2SimplexCache","__ZNK9b2Simplex9GetMetricEv","__ZN18b2DistanceJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_","__ZNK15b2DistanceJoint17GetReactionTorqueEf","__ZN5b2RotC1Ef","__ZN15b2DistanceJointD1Ev","__ZN15b2DistanceJointD0Ev","__ZN15b2DistanceJointD2Ev","__ZNK15b2DistanceJoint10GetAnchorAEv","__ZNK6b2Body13GetWorldPointERK6b2Vec2","__ZNK15b2DistanceJoint10GetAnchorBEv","__ZNK15b2DistanceJoint16GetReactionForceEf","__ZN15b2DistanceJoint4DumpEv","__ZN6b2DrawC2Ev","__ZN6b2Draw8SetFlagsEj","__ZNK6b2Draw8GetFlagsEv","__ZN15b2DistanceJoint23InitVelocityConstraintsERK12b2SolverData","__ZN15b2DistanceJoint24SolveVelocityConstraintsERK12b2SolverData","__ZN15b2DistanceJoint24SolvePositionConstraintsERK12b2SolverData","__ZN5b2RotC2Ef","__ZN6b2DrawD2Ev","__ZN6b2DrawD1Ev","__ZN6b2DrawD0Ev","__ZN6b2Draw11AppendFlagsEj","__ZN6b2Draw10ClearFlagsEj","__ZN13b2DynamicTreeD2Ev","__ZN13b2DynamicTree8FreeNodeEi","__ZN13b2DynamicTreeC2Ev","__ZN13b2DynamicTree12AllocateNodeEv","__ZN13b2DynamicTree11CreateProxyERK6b2AABBPv","__ZN13b2DynamicTree10InsertLeafEi","__ZN13b2DynamicTree12DestroyProxyEi","__ZN6b2AABBC1Ev","__ZNK6b2AABB8ContainsERKS_","__ZNK6b2AABB12GetPerimeterEv","__ZN6b2AABB7CombineERKS_S1_","__ZN13b2DynamicTree10RemoveLeafEi","__ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2","__ZNK13b2DynamicTree9GetHeightEv","__ZN13b2DynamicTree7BalanceEi","__ZNK13b2DynamicTree12GetAreaRatioEv","__ZNK13b2DynamicTree13ComputeHeightEi","__ZNK13b2DynamicTree13ComputeHeightEv","__ZNK13b2DynamicTree17ValidateStructureEi","__ZN22b2EdgeAndCircleContactD1Ev","__ZN23b2EdgeAndPolygonContactD1Ev","__Z5b2AbsIiET_S0_","__ZN22b2EdgeAndCircleContactD0Ev","__ZN22b2EdgeAndCircleContactD2Ev","__ZN23b2EdgeAndPolygonContactD0Ev","__ZN23b2EdgeAndPolygonContactD2Ev","__ZeqRK6b2Vec2S1_","__ZN6b2AABBC2Ev","__ZN22b2EdgeAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator","__ZN23b2EdgeAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator","__ZNK13b2DynamicTree15ValidateMetricsEi","__ZNK13b2DynamicTree8ValidateEv","__ZNK13b2DynamicTree13GetMaxBalanceEv","__ZN13b2DynamicTree15RebuildBottomUpEv","__ZN22b2EdgeAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator","__ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_","__ZN22b2EdgeAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_","__ZN23b2EdgeAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator","__ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_","__ZN23b2EdgeAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_","__ZNK11b2EdgeShape13GetChildCountEv","__ZNK11b2EdgeShape9TestPointERK11b2TransformRK6b2Vec2","__ZN11b2EdgeShapeD0Ev","__ZN11b2EdgeShape3SetERK6b2Vec2S2_","__ZNK11b2EdgeShape11ComputeAABBEP6b2AABBRK11b2Transformi","__ZNK11b2EdgeShape11ComputeMassEP10b2MassDataf","__ZN9b2FixtureC2Ev","__ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase","__ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_","__ZN9b2Fixture13SetFilterDataERK8b2Filter","__ZN9b2Contact16FlagForFilteringEv","__ZN6b2Body8GetWorldEv","__ZNK11b2EdgeShape5CloneEP16b2BlockAllocator","__ZN11b2EdgeShapeaSERKS_","__ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi","__ZN9b2Fixture6CreateEP16b2BlockAllocatorP6b2BodyPK12b2FixtureDef","__ZN9b2Fixture7DestroyEP16b2BlockAllocator","__ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform","__ZN9b2Fixture8RefilterEv","__ZN9b2Fixture9SetSensorEb","__ZN9b2Fixture4DumpEi","__ZN18b2FrictionJointDef10InitializeEP6b2BodyS1_RK6b2Vec2","__ZN15b2FrictionJointC2EPK18b2FrictionJointDef","__ZN15b2FrictionJoint23InitVelocityConstraintsERK12b2SolverData","__ZN15b2FrictionJoint24SolvePositionConstraintsERK12b2SolverData","__ZN15b2FrictionJointD1Ev","__ZN15b2FrictionJointD0Ev","__ZN15b2FrictionJointD2Ev","__ZNK15b2FrictionJoint10GetAnchorAEv","__ZNK15b2FrictionJoint10GetAnchorBEv","__ZNK15b2FrictionJoint16GetReactionForceEf","__ZNK15b2FrictionJoint17GetReactionTorqueEf","__ZNK15b2FrictionJoint11GetMaxForceEv","__ZNK15b2FrictionJoint12GetMaxTorqueEv","__ZN15b2FrictionJoint4DumpEv","__ZNK7b2Joint7GetTypeEv","__ZN7b2Joint8GetBodyAEv","__ZN7b2Joint8GetBodyBEv","__ZN15b2FrictionJoint24SolveVelocityConstraintsERK12b2SolverData","__ZN15b2FrictionJoint11SetMaxForceEf","__ZN15b2FrictionJoint12SetMaxTorqueEf","__ZN11b2GearJointC2EPK14b2GearJointDef","__ZN11b2GearJoint23InitVelocityConstraintsERK12b2SolverData","__ZN11b2GearJoint24SolveVelocityConstraintsERK12b2SolverData","__ZN11b2GearJointD1Ev","__ZN11b2GearJointD0Ev","__ZN11b2GearJointD2Ev","__ZNK11b2GearJoint10GetAnchorAEv","__ZNK11b2GearJoint10GetAnchorBEv","__ZNK11b2GearJoint16GetReactionForceEf","__ZNK11b2GearJoint17GetReactionTorqueEf","__ZNK11b2GearJoint8GetRatioEv","__ZN11b2GearJoint4DumpEv","__ZN8b2IslandD2Ev","__ZN11b2GearJoint24SolvePositionConstraintsERK12b2SolverData","__ZN11b2GearJoint8SetRatioEf","__ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener","__ZN6b2Body20SynchronizeTransformEv","__ZN8b2Island6ReportEPK27b2ContactVelocityConstraint","__ZNK6b2Body7GetTypeEv","__ZN8b2Island5SolveEP9b2ProfileRK10b2TimeStepRK6b2Vec2b","__ZN7b2Joint4DumpEv","__ZN7b2JointD1Ev","__ZN7b2JointD0Ev","__ZN7b2Joint7DestroyEPS_P16b2BlockAllocator","__ZN7b2JointC2EPK10b2JointDef","__ZN8b2Island8SolveTOIERK10b2TimeStepii","__ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator","__ZNK7b2Joint8IsActiveEv","__ZN6b2Vec3C2Ev","__ZN6b2Vec3C1Ev","__ZN6b2Vec3C1Efff","__Z5b2DotRK6b2Vec3S1_","__Z7b2CrossRK6b2Vec3S1_","__ZNK7b2Mat337Solve22ERK6b2Vec2","__ZNK7b2Mat3312GetInverse22EPS_","__ZN6b2Vec3C2Efff","__ZNK12b2MouseJoint9GetTargetEv","__ZN12b2MouseJoint11SetMaxForceEf","__ZNK12b2MouseJoint11GetMaxForceEv","__ZN12b2MouseJoint12SetFrequencyEf","__ZNK12b2MouseJoint12GetFrequencyEv","__ZN12b2MouseJoint15SetDampingRatioEf","__ZNK12b2MouseJoint15GetDampingRatioEv","__ZNK7b2Mat337Solve33ERK6b2Vec3","__ZNK7b2Mat3315GetSymInverse33EPS_","__ZN12b2MouseJointC2EPK15b2MouseJointDef","__ZN12b2MouseJoint9SetTargetERK6b2Vec2","__ZN12b2MouseJoint24SolvePositionConstraintsERK12b2SolverData","__ZN12b2MouseJoint4DumpEv","__ZN12b2MouseJointD1Ev","__ZN25b2PolygonAndCircleContactD1Ev","__ZN16b2PolygonContactD1Ev","__ZN14b2PolygonShapeC1Ev","__ZNK12b2MouseJoint17GetReactionTorqueEf","__ZN12b2MouseJointD0Ev","__ZN12b2MouseJointD2Ev","__ZN25b2PolygonAndCircleContactD0Ev","__ZN25b2PolygonAndCircleContactD2Ev","__ZN16b2PolygonContactD0Ev","__ZN16b2PolygonContactD2Ev","__ZNK6b2Body7GetMassEv","__ZNK12b2MouseJoint10GetAnchorAEv","__ZNK12b2MouseJoint10GetAnchorBEv","__ZNK12b2MouseJoint16GetReactionForceEf","__ZN25b2PolygonAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator","__ZN16b2PolygonContact7DestroyEP9b2ContactP16b2BlockAllocator","__ZN14b2PolygonShape8SetAsBoxEff","__ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData","__ZN12b2MouseJoint24SolveVelocityConstraintsERK12b2SolverData","__ZN25b2PolygonAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator","__ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_","__ZN25b2PolygonAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_","__ZN16b2PolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator","__ZN16b2PolygonContactC2EP9b2FixtureS1_","__ZN16b2PolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_","__ZNK14b2PolygonShape5CloneEP16b2BlockAllocator","__ZN14b2PolygonShapeaSERKS_","__ZNK14b2PolygonShape13GetChildCountEv","__ZN14b2PolygonShapeD1Ev","__ZN14b2PolygonShapeD0Ev","__ZN14b2PolygonShapeD2Ev","__ZN14b2PolygonShape8SetAsBoxEffRK6b2Vec2f","__ZNK14b2PolygonShape11ComputeAABBEP6b2AABBRK11b2Transformi","__ZN14b2PolygonShape3SetEPK6b2Vec2i","__ZL15ComputeCentroidPK6b2Vec2i","__ZNK14b2PolygonShape9TestPointERK11b2TransformRK6b2Vec2","__ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi","__ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf","__ZN7b2Mat33C1Ev","__ZN14b2PolygonShapeC2Ev","__ZNK6b2Body14GetLocalVectorERK6b2Vec2","__ZNK6b2Body8GetAngleEv","__ZN6b2Vec37SetZeroEv","__ZN6b2Vec33SetEfff","__ZN6b2Vec3mLEf","__ZN19b2PrismaticJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_","__ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef","__ZN16b2PrismaticJoint23InitVelocityConstraintsERK12b2SolverData","__ZNK6b2Vec3ngEv","__ZN6b2Vec3pLERKS_","__ZmiRK6b2Vec3S1_","__Z7b2Mul22RK7b2Mat33RK6b2Vec2","__ZN16b2PrismaticJoint24SolveVelocityConstraintsERK12b2SolverData","__ZNK7b2Mat225SolveERK6b2Vec2","__ZNK16b2PrismaticJoint10GetAnchorAEv","__ZNK16b2PrismaticJoint10GetAnchorBEv","__ZNK16b2PrismaticJoint16GetReactionForceEf","__ZNK16b2PrismaticJoint17GetReactionTorqueEf","__ZNK6b2Body14GetWorldVectorERK6b2Vec2","__ZNK16b2PrismaticJoint14IsLimitEnabledEv","__ZN16b2PrismaticJoint11EnableLimitEb","__ZNK16b2PrismaticJoint13GetLowerLimitEv","__ZNK16b2PrismaticJoint13GetUpperLimitEv","__ZN16b2PrismaticJoint9SetLimitsEff","__ZNK16b2PrismaticJoint14IsMotorEnabledEv","__ZN16b2PrismaticJoint11EnableMotorEb","__ZN16b2PrismaticJoint13SetMotorSpeedEf","__ZN16b2PrismaticJoint16SetMaxMotorForceEf","__ZN16b2PrismaticJoint24SolvePositionConstraintsERK12b2SolverData","__ZNK16b2PrismaticJoint19GetJointTranslationEv","__ZNK16b2PrismaticJoint13GetJointSpeedEv","__ZN16b2PrismaticJointD1Ev","__ZN16b2PrismaticJointD0Ev","__ZN16b2PrismaticJointD2Ev","__ZNK16b2PrismaticJoint13GetMotorForceEf","__ZN16b2PrismaticJoint4DumpEv","__ZN7b2Mat33C2Ev","__ZN13b2PulleyJointC2EPK16b2PulleyJointDef","__ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f","__ZN13b2PulleyJoint23InitVelocityConstraintsERK12b2SolverData","__ZN13b2PulleyJoint24SolveVelocityConstraintsERK12b2SolverData","__ZNK13b2PulleyJoint17GetReactionTorqueEf","__ZN13b2PulleyJointD1Ev","__ZN13b2PulleyJointD0Ev","__ZN13b2PulleyJointD2Ev","__ZNK13b2PulleyJoint10GetAnchorAEv","__ZNK13b2PulleyJoint10GetAnchorBEv","__ZNK13b2PulleyJoint16GetReactionForceEf","__ZNK13b2PulleyJoint16GetGroundAnchorAEv","__ZNK13b2PulleyJoint16GetGroundAnchorBEv","__ZNK13b2PulleyJoint8GetRatioEv","__ZN13b2PulleyJoint4DumpEv","__ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef","__ZN13b2PulleyJoint24SolvePositionConstraintsERK12b2SolverData","__ZNK13b2PulleyJoint10GetLengthAEv","__ZNK13b2PulleyJoint10GetLengthBEv","__ZN18b2RevoluteJointDef10InitializeEP6b2BodyS1_RK6b2Vec2","__ZN15b2RevoluteJoint23InitVelocityConstraintsERK12b2SolverData","__ZNK15b2RevoluteJoint10GetAnchorAEv","__ZNK15b2RevoluteJoint10GetAnchorBEv","__ZNK15b2RevoluteJoint16GetReactionForceEf","__ZNK15b2RevoluteJoint17GetReactionTorqueEf","__ZNK15b2RevoluteJoint13GetJointAngleEv","__ZNK15b2RevoluteJoint13GetJointSpeedEv","__ZN15b2RevoluteJoint24SolveVelocityConstraintsERK12b2SolverData","__ZN15b2RevoluteJoint24SolvePositionConstraintsERK12b2SolverData","__ZN15b2RevoluteJointD1Ev","__ZN15b2RevoluteJointD0Ev","__ZN15b2RevoluteJointD2Ev","__ZNK15b2RevoluteJoint14IsMotorEnabledEv","__ZN15b2RevoluteJoint11EnableMotorEb","__ZNK15b2RevoluteJoint14GetMotorTorqueEf","__ZN15b2RevoluteJoint13SetMotorSpeedEf","__ZN15b2RevoluteJoint17SetMaxMotorTorqueEf","__ZNK15b2RevoluteJoint14IsLimitEnabledEv","__ZN15b2RevoluteJoint11EnableLimitEb","__ZNK15b2RevoluteJoint13GetLowerLimitEv","__ZNK15b2RevoluteJoint13GetUpperLimitEv","__ZN15b2RevoluteJoint9SetLimitsEff","__ZN15b2RevoluteJoint4DumpEv","__ZN6b2RopeC2Ev","__ZN6b2RopeD2Ev","__ZN6b2Rope10InitializeEPK9b2RopeDef","__ZN6b2Rope4StepEfi","__ZN6b2Rope7SolveC2Ev","__ZN7b2ColorC1Efff","__ZN6b2Rope8SetAngleEf","__ZNK6b2Vec24SkewEv","__ZNK6b2Rope4DrawEP6b2Draw","__ZN7b2ColorC2Efff","__ZN11b2RopeJointC2EPK14b2RopeJointDef","__ZN6b2Rope7SolveC3Ev","__ZN11b2RopeJoint23InitVelocityConstraintsERK12b2SolverData","__ZNK11b2RopeJoint17GetReactionTorqueEf","__ZN11b2RopeJointD1Ev","__Z6b2FreePv","__ZN11b2RopeJointD0Ev","__ZN11b2RopeJointD2Ev","__ZNK11b2RopeJoint10GetAnchorAEv","__ZNK11b2RopeJoint10GetAnchorBEv","__ZNK11b2RopeJoint16GetReactionForceEf","__ZNK11b2RopeJoint12GetMaxLengthEv","__ZNK11b2RopeJoint13GetLimitStateEv","__ZN11b2RopeJoint4DumpEv","__ZN16b2StackAllocatorC2Ev","__ZN16b2StackAllocatorD2Ev","__ZN16b2StackAllocator4FreeEPv","__ZNK16b2StackAllocator16GetMaxAllocationEv","__ZN11b2RopeJoint24SolveVelocityConstraintsERK12b2SolverData","__ZN11b2RopeJoint24SolvePositionConstraintsERK12b2SolverData","__Z7b2Alloci","__Z5b2LogPKcz","__ZN16b2StackAllocator8AllocateEi","__ZN20b2SeparationFunctionC1Ev","__ZNK7b2Sweep12GetTransformEP11b2Transformf","__Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput","__ZN7b2Sweep9NormalizeEv","__ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f","__ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f","__ZN7b2TimerC2Ev","__ZN20b2SeparationFunctionC2Ev","__ZN11b2WeldJointC2EPK14b2WeldJointDef","__ZNK20b2SeparationFunction8EvaluateEiif","__ZN7b2Timer5ResetEv","__ZNK7b2Timer15GetMillisecondsEv","__ZN14b2WeldJointDef10InitializeEP6b2BodyS1_RK6b2Vec2","__ZN11b2WeldJoint23InitVelocityConstraintsERK12b2SolverData","__ZN11b2WeldJointD1Ev","__ZN11b2WeldJointD0Ev","__ZN11b2WeldJointD2Ev","__Z5b2MulRK7b2Mat33RK6b2Vec3","__ZNK11b2WeldJoint10GetAnchorAEv","__ZNK11b2WeldJoint10GetAnchorBEv","__ZNK11b2WeldJoint16GetReactionForceEf","__ZNK11b2WeldJoint17GetReactionTorqueEf","__ZN11b2WeldJoint4DumpEv","__ZplRK6b2Vec3S1_","__ZmlfRK6b2Vec3","__ZN15b2WheelJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_","__ZN11b2WeldJoint24SolveVelocityConstraintsERK12b2SolverData","__ZN11b2WeldJoint24SolvePositionConstraintsERK12b2SolverData","__ZN12b2WheelJointC2EPK15b2WheelJointDef","__ZN12b2WheelJoint23InitVelocityConstraintsERK12b2SolverData","__ZN12b2WheelJoint24SolveVelocityConstraintsERK12b2SolverData","__ZN12b2WheelJointD1Ev","__ZN16b2ContactManagerD1Ev","__ZN12b2WheelJointD0Ev","__ZN12b2WheelJointD2Ev","__ZNK12b2WheelJoint10GetAnchorAEv","__ZNK12b2WheelJoint10GetAnchorBEv","__ZNK12b2WheelJoint16GetReactionForceEf","__ZNK12b2WheelJoint17GetReactionTorqueEf","__ZNK12b2WheelJoint13GetJointSpeedEv","__ZNK12b2WheelJoint14IsMotorEnabledEv","__ZN12b2WheelJoint11EnableMotorEb","__ZN12b2WheelJoint13SetMotorSpeedEf","__ZN12b2WheelJoint17SetMaxMotorTorqueEf","__ZNK12b2WheelJoint14GetMotorTorqueEf","__ZN12b2WheelJoint4DumpEv","__ZN7b2WorldC2ERK6b2Vec2","__ZN7b2WorldD2Ev","__ZN7b2World22SetDestructionListenerEP21b2DestructionListener","__ZN7b2World16SetContactFilterEP15b2ContactFilter","__ZN7b2World18SetContactListenerEP17b2ContactListener","__ZN7b2World12SetDebugDrawEP6b2Draw","__ZN12b2WheelJoint24SolvePositionConstraintsERK12b2SolverData","__ZNK12b2WheelJoint19GetJointTranslationEv","__ZN7b2World10CreateBodyEPK9b2BodyDef","__ZN7b2World16SetAllowSleepingEb","__ZN7b2World11DestroyBodyEP6b2Body","__ZN7b2World12DestroyJointEP7b2Joint","__ZN7b2World11CreateJointEPK10b2JointDef","__ZN8b2Island5ClearEv","__ZN8b2Island3AddEP6b2Body","__ZNK9b2Contact9IsEnabledEv","__ZN8b2Island3AddEP9b2Contact","__ZN8b2Island3AddEP7b2Joint","__ZN6b2Body7GetNextEv","__ZN7b2World5SolveERK10b2TimeStep","__ZN7b2World8SolveTOIERK10b2TimeStep","__ZN10b2TOIInputC1Ev","__ZN14b2RayCastInputC1Ev","__ZNK6b2Body8IsBulletEv","__ZN7b2Sweep7AdvanceEf","__ZN6b2Body7AdvanceEf","__ZN9b2Contact10SetEnabledEb","__ZNK7b2World9QueryAABBEP15b2QueryCallbackRK6b2AABB","__ZNK12b2BroadPhase5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB","__ZNK7b2World7RayCastEP17b2RayCastCallbackRK6b2Vec2S4_","__ZNK12b2BroadPhase7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput","__ZN7b2World4StepEfii","__ZN7b2World11ClearForcesEv","__ZN7b2World9DrawShapeEP9b2FixtureRK11b2TransformRK7b2Color","__ZN7b2World9DrawJointEP7b2Joint","__ZN15b2RayCastOutputC1Ev","__ZN6b2Body14GetFixtureListEv","__ZN9b2Fixture7GetNextEv","__ZN7b2Joint7GetNextEv","__ZNK6b2Body14GetWorldCenterEv","__ZNK12b2BroadPhase13GetProxyCountEv","__ZN7b2World4DumpEv","__ZNK6b2AABB9GetCenterEv","__ZNK6b2AABB10GetExtentsEv","__ZN7b2World13DrawDebugDataEv","__ZNK12b2BroadPhase10GetFatAABBEi","__ZNK7b2World13GetProxyCountEv","__ZNK7b2World13GetTreeHeightEv","__ZNK12b2BroadPhase13GetTreeHeightEv","__ZNK7b2World14GetTreeBalanceEv","__ZNK12b2BroadPhase14GetTreeBalanceEv","__ZNK7b2World14GetTreeQualityEv","__ZNK12b2BroadPhase14GetTreeQualityEv","__ZNK13b2DynamicTree7RayCastI21b2WorldRayCastWrapperEEvPT_RK14b2RayCastInput","__ZN21b2WorldRayCastWrapper15RayCastCallbackERK14b2RayCastInputi","__ZNK12b2BroadPhase11GetUserDataEi","__ZN9b2BodyDefC1Ev","_main","__ZN15b2ContactFilterD0Ev","__ZN15b2RayCastOutputC2Ev","__ZN14b2RayCastInputC2Ev","__ZN10b2TOIInputC2Ev","__ZN16b2ContactManagerD2Ev","__ZNK9b2Fixture13GetFilterDataEv","__ZN9b2BodyDefC2Ev","__ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi","__ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB","__ZN19b2WorldQueryWrapper13QueryCallbackEi","__ZN15b2ContactFilter13ShouldCollideEP9b2FixtureS1_","__Z5benchv"]

